//
// Generated by JTB 1.3.2
//

package jplasma.syntaxtree;

/**
 * Grammar production:
 * nodeToken -> "async"
 * nodeToken1 -> "("
 * identifier -> Identifier()
 * nodeToken2 -> ")"
 * block -> Block()
 */
public class AsyncStatement implements Node {
   public NodeToken nodeToken;
   public NodeToken nodeToken1;
   public Identifier identifier;
   public NodeToken nodeToken2;
   public Block block;

   public AsyncStatement(NodeToken n0, NodeToken n1, Identifier n2, NodeToken n3, Block n4) {
      nodeToken = n0;
      nodeToken1 = n1;
      identifier = n2;
      nodeToken2 = n3;
      block = n4;
   }

   public AsyncStatement(Identifier n0, Block n1) {
      nodeToken = new NodeToken("async");
      nodeToken1 = new NodeToken("(");
      identifier = n0;
      nodeToken2 = new NodeToken(")");
      block = n1;
   }

   public void accept(jplasma.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(jplasma.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(jplasma.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(jplasma.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

