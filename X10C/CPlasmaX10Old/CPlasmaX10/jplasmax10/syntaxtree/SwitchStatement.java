//
// Generated by JTB 1.3.2
//

package jplasmax10.syntaxtree;

/**
 * Grammar production:
 * nodeToken -> "switch"
 * nodeToken1 -> "("
 * identifier -> Identifier()
 * nodeToken2 -> ")"
 * nodeToken3 -> "{"
 * nodeListOptional -> ( SwitchEntry() )*
 * nodeToken4 -> "}"
 */
public class SwitchStatement implements Node {
   public NodeToken nodeToken;
   public NodeToken nodeToken1;
   public Identifier identifier;
   public NodeToken nodeToken2;
   public NodeToken nodeToken3;
   public NodeListOptional nodeListOptional;
   public NodeToken nodeToken4;

   public SwitchStatement(NodeToken n0, NodeToken n1, Identifier n2, NodeToken n3, NodeToken n4, NodeListOptional n5, NodeToken n6) {
      nodeToken = n0;
      nodeToken1 = n1;
      identifier = n2;
      nodeToken2 = n3;
      nodeToken3 = n4;
      nodeListOptional = n5;
      nodeToken4 = n6;
   }

   public SwitchStatement(Identifier n0, NodeListOptional n1) {
      nodeToken = new NodeToken("switch");
      nodeToken1 = new NodeToken("(");
      identifier = n0;
      nodeToken2 = new NodeToken(")");
      nodeToken3 = new NodeToken("{");
      nodeListOptional = n1;
      nodeToken4 = new NodeToken("}");
   }

   public void accept(jplasmax10.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(jplasmax10.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(jplasmax10.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(jplasmax10.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

