//
// Generated by JTB 1.3.2
//

package uplasmax10.syntaxtree;

/**
 * Grammar production:
 * nodeToken -> "("
 * typeAnnotation -> TypeAnnotation()
 * nodeToken1 -> ")"
 * nodeToken2 -> "("
 * expression -> Expression()
 * nodeToken3 -> ")"
 */
public class TypeAnnotatedExpression implements Node {
   public NodeToken nodeToken;
   public TypeAnnotation typeAnnotation;
   public NodeToken nodeToken1;
   public NodeToken nodeToken2;
   public Expression expression;
   public NodeToken nodeToken3;

   public TypeAnnotatedExpression(NodeToken n0, TypeAnnotation n1, NodeToken n2, NodeToken n3, Expression n4, NodeToken n5) {
      nodeToken = n0;
      typeAnnotation = n1;
      nodeToken1 = n2;
      nodeToken2 = n3;
      expression = n4;
      nodeToken3 = n5;
   }

   public TypeAnnotatedExpression(TypeAnnotation n0, Expression n1) {
      nodeToken = new NodeToken("(");
      typeAnnotation = n0;
      nodeToken1 = new NodeToken(")");
      nodeToken2 = new NodeToken("(");
      expression = n1;
      nodeToken3 = new NodeToken(")");
   }

   public void accept(uplasmax10.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(uplasmax10.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(uplasmax10.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(uplasmax10.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

