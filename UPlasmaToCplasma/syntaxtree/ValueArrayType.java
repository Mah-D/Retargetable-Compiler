//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * nonArrayType -> NonArrayType()
 * nodeToken -> "value"
 * nodeToken1 -> "["
 * nodeToken2 -> ":"
 * rankEquation -> RankEquation()
 * nodeToken3 -> "]"
 */
public class ValueArrayType implements Node {
   public NonArrayType nonArrayType;
   public NodeToken nodeToken;
   public NodeToken nodeToken1;
   public NodeToken nodeToken2;
   public RankEquation rankEquation;
   public NodeToken nodeToken3;

   public ValueArrayType(NonArrayType n0, NodeToken n1, NodeToken n2, NodeToken n3, RankEquation n4, NodeToken n5) {
      nonArrayType = n0;
      nodeToken = n1;
      nodeToken1 = n2;
      nodeToken2 = n3;
      rankEquation = n4;
      nodeToken3 = n5;
   }

   public ValueArrayType(NonArrayType n0, RankEquation n1) {
      nonArrayType = n0;
      nodeToken = new NodeToken("value");
      nodeToken1 = new NodeToken("[");
      nodeToken2 = new NodeToken(":");
      rankEquation = n1;
      nodeToken3 = new NodeToken("]");
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

