 public class RunMain { public static void main ( String [ ] args ) { Program . runMain ( ) ; } }
 class Program { public static final double _PoissonSolver_PI4I = Program . _PoissonSolver_PI4I_init ( ) ; public static final double _PoissonSolver_SQT2I = Program . _PoissonSolver_SQT2I_init ( ) ; public static final double _PoissonSolver_SQT2PI = Program . _PoissonSolver_SQT2PI_init ( ) ; public static final int _PoissonSolver_GREENS_IDX = Program . _PoissonSolver_GREENS_IDX_init ( ) ; public static final int _PoissonSolver_SHAPE_IDX = Program . _PoissonSolver_SHAPE_IDX_init ( ) ; public static final int _PoissonSolver_ELECX_IDX = Program . _PoissonSolver_ELECX_IDX_init ( ) ; public static final int _PoissonSolver_ELECY_IDX = Program . _PoissonSolver_ELECY_IDX_init ( ) ; public static final double _PoissonSolver_AR = Program . _PoissonSolver_AR_init ( ) ; public static final boolean _X10Util_DEBUG = Program . _X10Util_DEBUG_init ( ) ; public static final boolean _X10Util_ENABLE_CHECKS = Program . _X10Util_ENABLE_CHECKS_init ( ) ; public static final double _X10Util_ERROR = Program . _X10Util_ERROR_init ( ) ; public static final int _LinearESOpenPIC2D_NUMBER_OF_XBITS = Program . _LinearESOpenPIC2D_NUMBER_OF_XBITS_init ( ) ; public static final int _LinearESOpenPIC2D_NUMBER_OF_YBITS = Program . _LinearESOpenPIC2D_NUMBER_OF_YBITS_init ( ) ; public static final int _LinearESOpenPIC2D_PARTICLE_XDENSITY = Program . _LinearESOpenPIC2D_PARTICLE_XDENSITY_init ( ) ; public static final int _LinearESOpenPIC2D_PARTICLE_YDENSITY = Program . _LinearESOpenPIC2D_PARTICLE_YDENSITY_init ( ) ; public static final double _LinearESOpenPIC2D_DELTA_TIME = Program . _LinearESOpenPIC2D_DELTA_TIME_init ( ) ; public static final double _LinearESOpenPIC2D_ELECTRON_CHARGE = Program . _LinearESOpenPIC2D_ELECTRON_CHARGE_init ( ) ; public static final double _LinearESOpenPIC2D_THERMAL_XVELOCITY = Program . _LinearESOpenPIC2D_THERMAL_XVELOCITY_init ( ) ; public static final double _LinearESOpenPIC2D_THERMAL_YVELOCITY = Program . _LinearESOpenPIC2D_THERMAL_YVELOCITY_init ( ) ; public static final int _LinearESOpenPIC2D_BOUNDARY_CONDITION = Program . _LinearESOpenPIC2D_BOUNDARY_CONDITION_init ( ) ; public static final int _LinearESOpenPIC2D_TIME_STEPS = Program . _LinearESOpenPIC2D_TIME_STEPS_init ( ) ; public static final int _LinearESOpenPIC2D_SORT_TIME = Program . _LinearESOpenPIC2D_SORT_TIME_init ( ) ; public static final double _LinearESOpenPIC2D_IMBALANCE = Program . _LinearESOpenPIC2D_IMBALANCE_init ( ) ; public static final int _Timer_max_counters = Program . _Timer_max_counters_init ( ) ; public static final int _LinearESOpenPIC2D_XLENGTH = Program . _LinearESOpenPIC2D_XLENGTH_init ( ) ; public static final int _LinearESOpenPIC2D_YLENGTH = Program . _LinearESOpenPIC2D_YLENGTH_init ( ) ; public static final int _LinearESOpenPIC2D_NPARTICLES = Program . _LinearESOpenPIC2D_NPARTICLES_init ( ) ; public static final int _LinearESOpenPIC2D_MOVE_FIELD_TO_DIST_MAX_ROWS = Program . _LinearESOpenPIC2D_MOVE_FIELD_TO_DIST_MAX_ROWS_init ( ) ; public static final int _LinearESOpenPIC2D_MOVE_PARTICLES_MAX = Program . _LinearESOpenPIC2D_MOVE_PARTICLES_MAX_init ( ) ; public static final int _LinearESOpenPIC2D_MOVE_PARTICLES_MAX_BUFFER = Program . _LinearESOpenPIC2D_MOVE_PARTICLES_MAX_BUFFER_init ( ) ; public static double _PoissonSolver_PI4I_init ( ) { final double X10_TEMP1 = ( 0.5 ) ; final double X10_TEMP2 = ( 6.28318530717959 ) ; final double X10_TEMP4 = ( X10_TEMP1 / X10_TEMP2 ) ; return X10_TEMP4 ; }
 public static double _PoissonSolver_SQT2I_init ( ) { final double X10_TEMP2 = ( 0.707106781186548 ) ; return X10_TEMP2 ; }
 public static double _PoissonSolver_SQT2PI_init ( ) { final double X10_TEMP2 = ( 0.797884560802865 ) ; return X10_TEMP2 ; }
 public static int _PoissonSolver_GREENS_IDX_init ( ) { final int X10_TEMP2 = ( 0 ) ; return X10_TEMP2 ; }
 public static int _PoissonSolver_SHAPE_IDX_init ( ) { final int X10_TEMP2 = ( 1 ) ; return X10_TEMP2 ; }
 public static int _PoissonSolver_ELECX_IDX_init ( ) { final int X10_TEMP2 = ( 2 ) ; return X10_TEMP2 ; }
 public static int _PoissonSolver_ELECY_IDX_init ( ) { final int X10_TEMP2 = ( 3 ) ; return X10_TEMP2 ; }
 public static double _PoissonSolver_AR_init ( ) { final double X10_TEMP2 = ( 0.912871 ) ; return X10_TEMP2 ; }
 public static ComplexRefArray2 PoissonSolver_makeForceArray ( final PoissonSolver X10_TEMP0 ) { final int X10_TEMP7 = ( 0 ) ; final int X10_TEMP2 = ( 2 ) ; final int X10_TEMP3 = ( X10_TEMP0 . y ) ; final int X10_TEMP4 = ( X10_TEMP2 * X10_TEMP3 ) ; final int X10_TEMP5 = ( 1 ) ; final int X10_TEMP8 = ( X10_TEMP4 - X10_TEMP5 ) ; final int X10_TEMP13 = ( 0 ) ; final int X10_TEMP10 = ( X10_TEMP0 . x ) ; final int X10_TEMP11 = ( 1 ) ; final int X10_TEMP14 = ( X10_TEMP10 - X10_TEMP11 ) ; final Region2 X10_TEMP16 = Program . createNewRegion2RR ( X10_TEMP7 , X10_TEMP8 , X10_TEMP13 , X10_TEMP14 ) ; final Dist2 dResult = Program . X10Util_distBlockStar1 ( X10_TEMP16 ) ; final Region2 RX10_TEMP0 = dResult . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP6 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dResult , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T1 utmp1 = new T1(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread1(utmp1); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP16 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final ComplexStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final ComplexRefArray2 RX10_TEMP19 = new ComplexRefArray2 ( dResult , RX10_TEMP16 ) ; final ComplexRefArray2 X10_TEMP19 = RX10_TEMP19 ; return X10_TEMP19 ; }
 public static double PoissonSolver_getForceCharge ( final PoissonSolver X10_TEMP0 , final ComplexRefArray2 q , final ComplexRefArray2 forceX , final ComplexRefArray2 forceY ) { final int X10_TEMP5 = ( 0 ) ; final int X10_TEMP2 = ( X10_TEMP0 . x ) ; final int X10_TEMP3 = ( 1 ) ; final int X10_TEMP6 = ( X10_TEMP2 - X10_TEMP3 ) ; final int X10_TEMP13 = ( 0 ) ; final int X10_TEMP8 = ( 2 ) ; final int X10_TEMP9 = ( X10_TEMP0 . y ) ; final int X10_TEMP10 = ( X10_TEMP8 * X10_TEMP9 ) ; final int X10_TEMP11 = ( 1 ) ; final int X10_TEMP14 = ( X10_TEMP10 - X10_TEMP11 ) ; final Region2 X10_TEMP16 = Program . createNewRegion2RR ( X10_TEMP5 , X10_TEMP6 , X10_TEMP13 , X10_TEMP14 ) ; final Dist2 dForce = Program . X10Util_distBlockStar1 ( X10_TEMP16 ) ; final Region2 RX10_TEMP0 = dForce . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP6 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dForce , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T2 utmp2 = new T2(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread2(utmp2); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP16 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final ComplexStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final ComplexRefArray2 RX10_TEMP19 = new ComplexRefArray2 ( dForce , RX10_TEMP16 ) ; final ComplexRefArray2 fxfft = RX10_TEMP19 ; final Region2 RX10_TEMP20 = dForce . dReg ; final int RX10_TEMP21 = 0 ; final int RX10_TEMP22 = 1 ; int RX10_TEMP23 = place.MAX_PLACES ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP22 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; final dist ( : rank==1 ) RX10_TEMP25 = [ 0 : RX10_TEMP23 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP26 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP25 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP27 : RX10_TEMP24 ) { final place RX10_TEMP28 = here ; final int RX10_TEMP29 = RX10_TEMP27 [0] ; final place RX10_TEMP30 = place.places ( RX10_TEMP29 ) ; final int RX10_TEMP31 = Program . getDistLocalCount2 ( dForce , RX10_TEMP29 ) ; final int RX10_TEMP32 = RX10_TEMP31 - RX10_TEMP22 ; 
 final T3 utmp3 = new T3(RX10_TEMP32, RX10_TEMP28, RX10_TEMP27, RX10_TEMP26);
 async (RX10_TEMP30) {Program.thread3(utmp3); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP36 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP24 ] ( point ( : rank==1 ) RX10_TEMP38 ) { final ComplexStub RX10_TEMP37 = RX10_TEMP26 [ RX10_TEMP38 ] ; return RX10_TEMP37 ; }
 ) ; final ComplexRefArray2 RX10_TEMP39 = new ComplexRefArray2 ( dForce , RX10_TEMP36 ) ; final ComplexRefArray2 fyfft = RX10_TEMP39 ; final FourierTransform2D X10_TEMP20 = ( X10_TEMP0 . fft ) ; final ComplexRefArray2 qfft = Program . FourierTransform2D_inverseTransformC ( X10_TEMP20 , q ) ; final double we = ( Program . PoissonSolver_solveForceCharge ( X10_TEMP0 , qfft , fxfft , fyfft ) ) ; final FourierTransform2D X10_TEMP27 = ( X10_TEMP0 . fft ) ; final ComplexRefArray2 fx = Program . FourierTransform2D_transformC ( X10_TEMP27 , fxfft ) ; final FourierTransform2D X10_TEMP30 = ( X10_TEMP0 . fft ) ; final ComplexRefArray2 fy = Program . FourierTransform2D_transformC ( X10_TEMP30 , fyfft ) ; finish { final Dist2 RX10_TEMP41 = forceX . distValue ; final Region2 RX10_TEMP42 = RX10_TEMP41 . dReg ; final int RX10_TEMP45 = 1 ; int RX10_TEMP43 = RX10_TEMP42 . regSize ; RX10_TEMP43 = RX10_TEMP43 - RX10_TEMP45 ; final region ( : rank==1 ) RX10_TEMP44 = [ 0 : RX10_TEMP43 ] ; for ( point ( : rank==1 ) RX10_TEMP40 : RX10_TEMP44 ) { final int RX10_TEMP46 = RX10_TEMP40 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP42 , RX10_TEMP46 ) ; final Dist2 RX10_TEMP47 = forceX . distValue ; final Dist2 X10_TEMP34 = RX10_TEMP47 ; final Region2 RX10_TEMP48 = X10_TEMP34 . dReg ; final int RX10_TEMP49 = Program . searchPointInRegion2 ( RX10_TEMP48 , pt ) ; final int RX10_TEMP50 = 0 ; final boolean RX10_TEMP51 = RX10_TEMP49 < RX10_TEMP50 ; if ( RX10_TEMP51 ) { final String RX10_TEMP52 = "Point pt not found in the distribution X10_TEMP34." ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final place RX10_TEMP53 = Program . getPlaceFromDist2 ( X10_TEMP34 , RX10_TEMP49 ) ; final place X10_TEMP35 = RX10_TEMP53 ; 
 final T4 utmp4 = new T4(pt, fy, fx, forceY, forceX);
 async (X10_TEMP35) {Program.thread4(utmp4); }
 }
 }
 return we ; }
 public static double PoissonSolver_solveForceCharge ( final PoissonSolver X10_TEMP0 , final ComplexRefArray2 q , final ComplexRefArray2 forceX , final ComplexRefArray2 forceY ) { final Dist1 X10_TEMP1 = Program . getUniqueDist ( ) ; final Dist1 dUnique = X10_TEMP1 ; final Region1 RX10_TEMP0 = dUnique . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T5 utmp5 = new T5(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread5(utmp5); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP17 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final doubleStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final doubleRefArray1 RX10_TEMP20 = new doubleRefArray1 ( dUnique , RX10_TEMP17 ) ; final doubleRefArray1 energy = RX10_TEMP20 ; final Dist1 X10_TEMP7 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP22 = X10_TEMP7 . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; finish { final Dist1 X10_TEMP8 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP27 = X10_TEMP8 . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , pl ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point pl not found in the distribution X10_TEMP8." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( X10_TEMP8 , RX10_TEMP28 ) ; final place X10_TEMP11 = RX10_TEMP32 ; 
 final T6 utmp6 = new T6(pl, energy, forceY, forceX, q, X10_TEMP0);
 async (X10_TEMP11) {Program.thread6(utmp6); }
 }
 }
 final double X10_TEMP655 = ( 4.0 ) ; final int X10_TEMP656 = ( X10_TEMP0 . x ) ; final double X10_TEMP657 = ( X10_TEMP655 * X10_TEMP656 ) ; final int X10_TEMP658 = ( X10_TEMP0 . y ) ; final double X10_TEMP659 = ( X10_TEMP657 * X10_TEMP658 ) ; final double X10_TEMP660 = ( Program . doublerefArraySum1 ( energy ) ) ; final double X10_TEMP662 = ( X10_TEMP659 * X10_TEMP660 ) ; return X10_TEMP662 ; }
 public static double PoissonSolver_expIntNL ( final PoissonSolver X10_TEMP0 , final double x ) { final double X10_TEMP1 = ( 0.57721566 ) ; final int X10_TEMP2 = 0 ; final double a0 = ( X10_TEMP2 - X10_TEMP1 ) ; final double a1 = ( 0.99999193 ) ; final double X10_TEMP5 = ( 0.24991055 ) ; final int X10_TEMP6 = 0 ; final double a2 = ( X10_TEMP6 - X10_TEMP5 ) ; final double a3 = ( 0.05519968 ) ; final double X10_TEMP9 = ( 0.00976004 ) ; final int X10_TEMP10 = 0 ; final double a4 = ( X10_TEMP10 - X10_TEMP9 ) ; final double a5 = ( 0.00107857 ) ; final double b1 = ( 8.5733287401 ) ; final double b2 = ( 18.0590169730 ) ; final double b3 = ( 8.6347608925 ) ; final double b4 = ( 0.2677737343 ) ; final double c1 = ( 9.5733223454 ) ; final double c2 = ( 25.6329561486 ) ; final double c3 = ( 21.0996530827 ) ; final double c4 = ( 3.9584969228 ) ; final double X10_TEMP21 = ( 1.0 ) ; final boolean X10_TEMP23 = x < X10_TEMP21 ; if ( X10_TEMP23 ) { final double X10_TEMP24 = ( x * a5 ) ; final double X10_TEMP26 = ( a4 + X10_TEMP24 ) ; final double X10_TEMP27 = ( x * X10_TEMP26 ) ; final double X10_TEMP29 = ( a3 + X10_TEMP27 ) ; final double X10_TEMP30 = ( x * X10_TEMP29 ) ; final double X10_TEMP32 = ( a2 + X10_TEMP30 ) ; final double X10_TEMP33 = ( x * X10_TEMP32 ) ; final double X10_TEMP35 = ( a1 + X10_TEMP33 ) ; final double X10_TEMP36 = ( x * X10_TEMP35 ) ; final double X10_TEMP38 = ( a0 + X10_TEMP36 ) ; return X10_TEMP38 ; }
 else { final double X10_TEMP39 = ( 50.0 ) ; final boolean X10_TEMP41 = x < X10_TEMP39 ; if ( X10_TEMP41 ) { final double X10_TEMP75 = ( Math . log ( x ) ) ; final int X10_TEMP43 = 0 ; final double X10_TEMP45 = ( X10_TEMP43 - x ) ; final double X10_TEMP46 = ( Math . exp ( X10_TEMP45 ) ) ; final double X10_TEMP48 = ( X10_TEMP46 / x ) ; final double X10_TEMP50 = ( b1 + x ) ; final double X10_TEMP51 = ( x * X10_TEMP50 ) ; final double X10_TEMP53 = ( b2 + X10_TEMP51 ) ; final double X10_TEMP54 = ( x * X10_TEMP53 ) ; final double X10_TEMP56 = ( b3 + X10_TEMP54 ) ; final double X10_TEMP57 = ( x * X10_TEMP56 ) ; final double X10_TEMP59 = ( b4 + X10_TEMP57 ) ; final double X10_TEMP61 = ( c1 + x ) ; final double X10_TEMP62 = ( x * X10_TEMP61 ) ; final double X10_TEMP64 = ( c2 + X10_TEMP62 ) ; final double X10_TEMP65 = ( x * X10_TEMP64 ) ; final double X10_TEMP67 = ( c3 + X10_TEMP65 ) ; final double X10_TEMP68 = ( x * X10_TEMP67 ) ; final double X10_TEMP70 = ( c4 + X10_TEMP68 ) ; final double X10_TEMP72 = ( X10_TEMP59 / X10_TEMP70 ) ; final double X10_TEMP74 = ( X10_TEMP48 * X10_TEMP72 ) ; final double X10_TEMP77 = ( X10_TEMP75 + X10_TEMP74 ) ; return X10_TEMP77 ; }
 else { final double X10_TEMP80 = ( Math . log ( x ) ) ; return X10_TEMP80 ; }
 }
 }
 public static String PoissonSolver_toString ( final PoissonSolver X10_TEMP0 ) { final String X10_TEMP1 = ( "PoisonSolver: xbits = " ) ; final int X10_TEMP2 = ( X10_TEMP0 . xBits ) ; final String X10_TEMP3 = ( X10_TEMP1 + X10_TEMP2 ) ; final String X10_TEMP4 = ( " ybits = " ) ; final String X10_TEMP5 = ( X10_TEMP3 + X10_TEMP4 ) ; final int X10_TEMP6 = ( X10_TEMP0 . yBits ) ; final String X10_TEMP8 = ( X10_TEMP5 + X10_TEMP6 ) ; return X10_TEMP8 ; }
 public static void runMain ( ) { Timer tmr = ( new Timer ( ) ) ; int count = ( 0 ) ; finish { Program . Timer_start ( tmr , count ) ; }
 finish { final LinearESOpenPIC2D X10_TEMP4 = ( new LinearESOpenPIC2D ( ) ) ; Program . LinearESOpenPIC2D_run ( X10_TEMP4 ) ; }
 Program . Timer_stop ( tmr , count ) ; final String X10_TEMP7 = ( "Wall-clock time for plasma: " ) ; final double X10_TEMP8 = ( Program . Timer_readTimer ( tmr , count ) ) ; final String X10_TEMP9 = ( X10_TEMP7 + X10_TEMP8 ) ; final String X10_TEMP10 = ( " secs" ) ; final String X10_TEMP12 = ( X10_TEMP9 + X10_TEMP10 ) ; System.out.println ( X10_TEMP12 ) ; }
 public static double Complex_getReal ( final Complex X10_TEMP0 ) { final double X10_TEMP2 = ( X10_TEMP0 . real ) ; return X10_TEMP2 ; }
 public static double Complex_getImag ( final Complex X10_TEMP0 ) { final double X10_TEMP2 = ( X10_TEMP0 . imag ) ; return X10_TEMP2 ; }
 public static Complex Complex_add ( final Complex X10_TEMP0 , final Complex n ) { final double X10_TEMP1 = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double X10_TEMP2 = ( Program . Complex_getReal ( n ) ) ; double X10_TEMP7 = ( X10_TEMP1 + X10_TEMP2 ) ; final double X10_TEMP4 = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final double X10_TEMP5 = ( Program . Complex_getImag ( n ) ) ; double X10_TEMP8 = ( X10_TEMP4 + X10_TEMP5 ) ; final Complex X10_TEMP10 = ( new Complex ( X10_TEMP7 , X10_TEMP8 ) ) ; return X10_TEMP10 ; }
 public static Complex Complex_sub ( final Complex X10_TEMP0 , final Complex n ) { final double X10_TEMP1 = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double X10_TEMP2 = ( Program . Complex_getReal ( n ) ) ; double X10_TEMP7 = ( X10_TEMP1 - X10_TEMP2 ) ; final double X10_TEMP4 = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final double X10_TEMP5 = ( Program . Complex_getImag ( n ) ) ; double X10_TEMP8 = ( X10_TEMP4 - X10_TEMP5 ) ; final Complex X10_TEMP10 = ( new Complex ( X10_TEMP7 , X10_TEMP8 ) ) ; return X10_TEMP10 ; }
 public static Complex Complex_mult ( final Complex X10_TEMP0 , final Complex n ) { final double a = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double b = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final double c = ( Program . Complex_getReal ( n ) ) ; final double d = ( Program . Complex_getImag ( n ) ) ; final double X10_TEMP5 = ( a * c ) ; final double X10_TEMP6 = ( b * d ) ; double X10_TEMP11 = ( X10_TEMP5 - X10_TEMP6 ) ; final double X10_TEMP8 = ( a * d ) ; final double X10_TEMP9 = ( b * c ) ; double X10_TEMP12 = ( X10_TEMP8 + X10_TEMP9 ) ; final Complex X10_TEMP14 = ( new Complex ( X10_TEMP11 , X10_TEMP12 ) ) ; return X10_TEMP14 ; }
 public static Complex Complex_multS ( final Complex X10_TEMP0 , final double r ) { final double X10_TEMP1 = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; double X10_TEMP5 = ( r * X10_TEMP1 ) ; final double X10_TEMP3 = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; double X10_TEMP6 = ( r * X10_TEMP3 ) ; final Complex X10_TEMP8 = ( new Complex ( X10_TEMP5 , X10_TEMP6 ) ) ; return X10_TEMP8 ; }
 public static Complex Complex_getConjg ( final Complex X10_TEMP0 ) { double X10_TEMP5 = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double X10_TEMP2 = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final int X10_TEMP3 = 0 ; double X10_TEMP6 = ( X10_TEMP3 - X10_TEMP2 ) ; final Complex X10_TEMP8 = ( new Complex ( X10_TEMP5 , X10_TEMP6 ) ) ; return X10_TEMP8 ; }
 public static double Complex_multConjg ( final Complex X10_TEMP0 ) { final double a = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double b = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final double X10_TEMP3 = ( a * a ) ; final double X10_TEMP4 = ( b * b ) ; final double X10_TEMP6 = ( X10_TEMP3 + X10_TEMP4 ) ; return X10_TEMP6 ; }
 public static boolean Complex_complexEquals ( final Complex X10_TEMP0 , final Complex c ) { final double X10_TEMP1 = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double X10_TEMP2 = ( Program . Complex_getReal ( c ) ) ; final double X10_TEMP4 = ( X10_TEMP1 - X10_TEMP2 ) ; final double X10_TEMP5 = ( Math . abs ( X10_TEMP4 ) ) ; final boolean X10_TEMP7 = ( X10_TEMP5 < _X10Util_ERROR ) ; final double X10_TEMP8 = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final double X10_TEMP9 = ( Program . Complex_getImag ( c ) ) ; final double X10_TEMP11 = ( X10_TEMP8 - X10_TEMP9 ) ; final double X10_TEMP12 = ( Math . abs ( X10_TEMP11 ) ) ; final boolean X10_TEMP14 = ( X10_TEMP12 < _X10Util_ERROR ) ; final boolean X10_TEMP16 = ( X10_TEMP7 && X10_TEMP14 ) ; return X10_TEMP16 ; }
 public static String Complex_toString ( final Complex X10_TEMP0 ) { final double r = ( Program . Complex_getReal ( X10_TEMP0 ) ) ; final double i = ( Program . Complex_getImag ( X10_TEMP0 ) ) ; final String X10_TEMP3 = ( "(" ) ; final String X10_TEMP4 = ( X10_TEMP3 + r ) ; final String X10_TEMP5 = ( "," ) ; final String X10_TEMP6 = ( X10_TEMP4 + X10_TEMP5 ) ; final String X10_TEMP7 = ( X10_TEMP6 + i ) ; final String X10_TEMP8 = ( ")" ) ; final String X10_TEMP10 = ( X10_TEMP7 + X10_TEMP8 ) ; return X10_TEMP10 ; }
 public static double Random_nextNormal ( final Random X10_TEMP0 ) { double ret = ( 0.0 ) ; final int X10_TEMP2 = ( X10_TEMP0 . flag ) ; final int X10_TEMP3 = ( 0 ) ; final boolean X10_TEMP5 = X10_TEMP2 != X10_TEMP3 ; if ( X10_TEMP5 ) { final double X10_TEMP7 = ( X10_TEMP0 . r0 ) ; ret = ( X10_TEMP7 ) ; final double X10_TEMP9 = ( 0.0 ) ; final double X10_TEMP10 = ( X10_TEMP9 ) ; X10_TEMP0 . r0 = ( X10_TEMP10 ) ; final int X10_TEMP12 = ( 0 ) ; final int X10_TEMP13 = ( X10_TEMP12 ) ; X10_TEMP0 . flag = ( X10_TEMP13 ) ; }
 else { int isc = ( 65536 ) ; double asc = ( isc ) ; double bsc = ( asc * asc ) ; final int X10_TEMP20 = ( X10_TEMP0 . r1 ) ; final int X10_TEMP17 = ( X10_TEMP0 . r1 ) ; final int X10_TEMP19 = ( X10_TEMP17 / isc ) ; final int X10_TEMP21 = ( X10_TEMP19 * isc ) ; int i1 = ( X10_TEMP20 - X10_TEMP21 ) ; final double X10_TEMP23 = ( X10_TEMP0 . h1l ) ; final int X10_TEMP24 = ( X10_TEMP0 . r1 ) ; final double X10_TEMP27 = ( X10_TEMP23 * X10_TEMP24 ) ; final double X10_TEMP25 = ( X10_TEMP0 . h1u ) ; final double X10_TEMP26 = ( asc * X10_TEMP25 ) ; final double X10_TEMP28 = ( X10_TEMP26 * i1 ) ; double r3 = ( X10_TEMP27 + X10_TEMP28 ) ; final double X10_TEMP31 = ( r3 / bsc ) ; final int X10_TEMP33 = ( ( int ) X10_TEMP31 ) ; i1 = ( X10_TEMP33 ) ; final double X10_TEMP35 = ( i1 * bsc ) ; final double X10_TEMP37 = ( r3 - X10_TEMP35 ) ; r3 = ( X10_TEMP37 ) ; final double X10_TEMP38 = ( 0.5 ) ; final double X10_TEMP40 = ( X10_TEMP38 * bsc ) ; bsc = ( X10_TEMP40 ) ; final int X10_TEMP41 = ( X10_TEMP0 . r2 ) ; final int X10_TEMP43 = ( X10_TEMP41 / isc ) ; i1 = ( X10_TEMP43 ) ; final int X10_TEMP44 = ( X10_TEMP0 . r2 ) ; final int X10_TEMP45 = ( i1 * isc ) ; final int X10_TEMP47 = ( X10_TEMP44 - X10_TEMP45 ) ; isc = ( X10_TEMP47 ) ; final double X10_TEMP48 = ( X10_TEMP0 . h1l ) ; final int X10_TEMP49 = ( X10_TEMP0 . r2 ) ; final double X10_TEMP52 = ( X10_TEMP48 * X10_TEMP49 ) ; final double X10_TEMP50 = ( X10_TEMP0 . h1u ) ; final double X10_TEMP51 = ( asc * X10_TEMP50 ) ; final double X10_TEMP53 = ( X10_TEMP51 * isc ) ; final double X10_TEMP55 = ( X10_TEMP52 + X10_TEMP53 ) ; final double X10_TEMP56 = ( X10_TEMP55 ) ; X10_TEMP0 . r0 = ( X10_TEMP56 ) ; final double X10_TEMP57 = ( 1.0 ) ; final double X10_TEMP59 = ( X10_TEMP57 / bsc ) ; asc = ( X10_TEMP59 ) ; final double X10_TEMP60 = ( X10_TEMP0 . r0 ) ; final double X10_TEMP62 = ( X10_TEMP60 * asc ) ; final int X10_TEMP64 = ( ( int ) X10_TEMP62 ) ; isc = ( X10_TEMP64 ) ; final double X10_TEMP65 = ( X10_TEMP0 . r0 ) ; final double X10_TEMP66 = ( isc * bsc ) ; final double X10_TEMP68 = ( X10_TEMP65 - X10_TEMP66 ) ; final int X10_TEMP70 = ( ( int ) X10_TEMP68 ) ; final int X10_TEMP71 = ( X10_TEMP70 ) ; X10_TEMP0 . r2 = ( X10_TEMP71 ) ; final double X10_TEMP75 = ( r3 + isc ) ; final double X10_TEMP72 = ( 2.0 ) ; final double X10_TEMP73 = ( X10_TEMP0 . h1u ) ; final double X10_TEMP74 = ( X10_TEMP72 * X10_TEMP73 ) ; final double X10_TEMP76 = ( X10_TEMP74 * i1 ) ; final double X10_TEMP78 = ( X10_TEMP75 + X10_TEMP76 ) ; r3 = ( X10_TEMP78 ) ; final double X10_TEMP80 = ( r3 * asc ) ; final int X10_TEMP82 = ( ( int ) X10_TEMP80 ) ; isc = ( X10_TEMP82 ) ; final double X10_TEMP83 = ( isc * bsc ) ; final double X10_TEMP85 = ( r3 - X10_TEMP83 ) ; final int X10_TEMP87 = ( ( int ) X10_TEMP85 ) ; final int X10_TEMP88 = ( X10_TEMP87 ) ; X10_TEMP0 . r1 = ( X10_TEMP88 ) ; final double X10_TEMP89 = ( 2.0 ) ; final int X10_TEMP90 = 0 ; final double X10_TEMP98 = ( X10_TEMP90 - X10_TEMP89 ) ; final int X10_TEMP92 = ( X10_TEMP0 . r1 ) ; final double X10_TEMP91 = ( X10_TEMP0 . r2 ) ; final double X10_TEMP93 = ( X10_TEMP91 * asc ) ; final double X10_TEMP95 = ( X10_TEMP92 + X10_TEMP93 ) ; final double X10_TEMP97 = ( X10_TEMP95 * asc ) ; final double X10_TEMP99 = ( Math . log ( X10_TEMP97 ) ) ; final double X10_TEMP101 = ( X10_TEMP98 * X10_TEMP99 ) ; double temp = ( Math . sqrt ( X10_TEMP101 ) ) ; final int X10_TEMP104 = ( 65536 ) ; isc = ( X10_TEMP104 ) ; asc = ( isc ) ; final double X10_TEMP107 = ( asc * asc ) ; bsc = ( X10_TEMP107 ) ; final int X10_TEMP111 = ( X10_TEMP0 . r4 ) ; final int X10_TEMP108 = ( X10_TEMP0 . r4 ) ; final int X10_TEMP110 = ( X10_TEMP108 / isc ) ; final int X10_TEMP112 = ( X10_TEMP110 * isc ) ; final int X10_TEMP114 = ( X10_TEMP111 - X10_TEMP112 ) ; i1 = ( X10_TEMP114 ) ; final double X10_TEMP115 = ( X10_TEMP0 . h2l ) ; final int X10_TEMP116 = ( X10_TEMP0 . r4 ) ; final double X10_TEMP119 = ( X10_TEMP115 * X10_TEMP116 ) ; final double X10_TEMP117 = ( X10_TEMP0 . h1u ) ; final double X10_TEMP118 = ( asc * X10_TEMP117 ) ; final double X10_TEMP120 = ( X10_TEMP118 * i1 ) ; final double X10_TEMP122 = ( X10_TEMP119 + X10_TEMP120 ) ; r3 = ( X10_TEMP122 ) ; final double X10_TEMP124 = ( r3 / bsc ) ; final int X10_TEMP126 = ( ( int ) X10_TEMP124 ) ; i1 = ( X10_TEMP126 ) ; final double X10_TEMP128 = ( i1 * bsc ) ; final double X10_TEMP130 = ( r3 - X10_TEMP128 ) ; r3 = ( X10_TEMP130 ) ; final double X10_TEMP131 = ( 0.5 ) ; final double X10_TEMP133 = ( X10_TEMP131 * bsc ) ; bsc = ( X10_TEMP133 ) ; final int X10_TEMP134 = ( X10_TEMP0 . r5 ) ; final int X10_TEMP136 = ( X10_TEMP134 / isc ) ; i1 = ( X10_TEMP136 ) ; final int X10_TEMP137 = ( X10_TEMP0 . r5 ) ; final int X10_TEMP138 = ( i1 * isc ) ; final int X10_TEMP140 = ( X10_TEMP137 - X10_TEMP138 ) ; isc = ( X10_TEMP140 ) ; final double X10_TEMP141 = ( X10_TEMP0 . h2l ) ; final int X10_TEMP142 = ( X10_TEMP0 . r5 ) ; final double X10_TEMP145 = ( X10_TEMP141 * X10_TEMP142 ) ; final double X10_TEMP143 = ( X10_TEMP0 . h1u ) ; final double X10_TEMP144 = ( asc * X10_TEMP143 ) ; final double X10_TEMP146 = ( X10_TEMP144 * isc ) ; final double X10_TEMP148 = ( X10_TEMP145 + X10_TEMP146 ) ; final double X10_TEMP149 = ( X10_TEMP148 ) ; X10_TEMP0 . r0 = ( X10_TEMP149 ) ; final double X10_TEMP150 = ( 1.0 ) ; final double X10_TEMP152 = ( X10_TEMP150 / bsc ) ; asc = ( X10_TEMP152 ) ; final double X10_TEMP153 = ( X10_TEMP0 . r0 ) ; final double X10_TEMP155 = ( X10_TEMP153 * asc ) ; final int X10_TEMP157 = ( ( int ) X10_TEMP155 ) ; isc = ( X10_TEMP157 ) ; final double X10_TEMP158 = ( X10_TEMP0 . r0 ) ; final double X10_TEMP159 = ( isc * bsc ) ; final double X10_TEMP161 = ( X10_TEMP158 - X10_TEMP159 ) ; final int X10_TEMP163 = ( ( int ) X10_TEMP161 ) ; final int X10_TEMP164 = ( X10_TEMP163 ) ; X10_TEMP0 . r5 = ( X10_TEMP164 ) ; final double X10_TEMP165 = ( 2.0 ) ; final double X10_TEMP166 = ( X10_TEMP0 . h1u ) ; final double X10_TEMP167 = ( X10_TEMP165 * X10_TEMP166 ) ; final double X10_TEMP168 = ( X10_TEMP167 * i1 ) ; final double X10_TEMP170 = ( isc + X10_TEMP168 ) ; final double X10_TEMP172 = ( r3 + X10_TEMP170 ) ; r3 = ( X10_TEMP172 ) ; final double X10_TEMP174 = ( r3 * asc ) ; final int X10_TEMP176 = ( ( int ) X10_TEMP174 ) ; isc = ( X10_TEMP176 ) ; final double X10_TEMP177 = ( isc * bsc ) ; final double X10_TEMP179 = ( r3 - X10_TEMP177 ) ; final int X10_TEMP181 = ( ( int ) X10_TEMP179 ) ; final int X10_TEMP182 = ( X10_TEMP181 ) ; X10_TEMP0 . r4 = ( X10_TEMP182 ) ; final double X10_TEMP190 = ( 6.28318530717959 ) ; final int X10_TEMP184 = ( X10_TEMP0 . r4 ) ; final double X10_TEMP183 = ( X10_TEMP0 . r5 ) ; final double X10_TEMP185 = ( X10_TEMP183 * asc ) ; final double X10_TEMP187 = ( X10_TEMP184 + X10_TEMP185 ) ; final double X10_TEMP189 = ( X10_TEMP187 * asc ) ; final double X10_TEMP192 = ( X10_TEMP190 * X10_TEMP189 ) ; final double X10_TEMP193 = ( X10_TEMP192 ) ; X10_TEMP0 . r0 = ( X10_TEMP193 ) ; final double X10_TEMP195 = ( X10_TEMP0 . r0 ) ; final double X10_TEMP196 = ( Math . sin ( X10_TEMP195 ) ) ; final double X10_TEMP198 = ( temp * X10_TEMP196 ) ; ret = ( X10_TEMP198 ) ; final double X10_TEMP200 = ( X10_TEMP0 . r0 ) ; final double X10_TEMP201 = ( Math . cos ( X10_TEMP200 ) ) ; final double X10_TEMP203 = ( temp * X10_TEMP201 ) ; final double X10_TEMP204 = ( X10_TEMP203 ) ; X10_TEMP0 . r0 = ( X10_TEMP204 ) ; final int X10_TEMP206 = ( 1 ) ; final int X10_TEMP207 = ( X10_TEMP206 ) ; X10_TEMP0 . flag = ( X10_TEMP207 ) ; }
 return ret ; }
 public static boolean _X10Util_DEBUG_init ( ) { final boolean X10_TEMP2 = ( true ) ; return X10_TEMP2 ; }
 public static boolean _X10Util_ENABLE_CHECKS_init ( ) { final boolean X10_TEMP2 = ( true ) ; return X10_TEMP2 ; }
 public static double _X10Util_ERROR_init ( ) { final double X10_TEMP2 = ( 1.0e-13 ) ; return X10_TEMP2 ; }
 public static double X10Util_maxDouble ( final double d1 , final double d2 ) { final boolean X10_TEMP2 = ( d1 >= d2 ) ; final boolean X10_TEMP3 = X10_TEMP2 ; double X10_TEMP6 = d2 ; if ( X10_TEMP3 ) { X10_TEMP6 = d1 ; }
 final double X10_TEMP7 = X10_TEMP6 ; return X10_TEMP7 ; }
 public static double X10Util_minDouble ( final double d1 , final double d2 ) { final boolean X10_TEMP2 = ( d1 >= d2 ) ; final boolean X10_TEMP3 = X10_TEMP2 ; double X10_TEMP6 = d1 ; if ( X10_TEMP3 ) { X10_TEMP6 = d2 ; }
 final double X10_TEMP7 = X10_TEMP6 ; return X10_TEMP7 ; }
 public static int X10Util_maxInt ( final int i1 , final int i2 ) { final boolean X10_TEMP2 = ( i1 >= i2 ) ; final boolean X10_TEMP3 = X10_TEMP2 ; int X10_TEMP6 = i2 ; if ( X10_TEMP3 ) { X10_TEMP6 = i1 ; }
 final int X10_TEMP7 = X10_TEMP6 ; return X10_TEMP7 ; }
 public static int X10Util_minInt ( final int i1 , final int i2 ) { final boolean X10_TEMP2 = ( i1 >= i2 ) ; final boolean X10_TEMP3 = X10_TEMP2 ; int X10_TEMP6 = i1 ; if ( X10_TEMP3 ) { X10_TEMP6 = i2 ; }
 final int X10_TEMP7 = X10_TEMP6 ; return X10_TEMP7 ; }
 public static Region2 X10Util_prependRegionRank2D ( final Region1 r1 , final Region1 r2 ) { final Region2 X10_TEMP4 = Program . X10Util_extendRegionRank2D ( r1 , r2 ) ; return X10_TEMP4 ; }
 public static Region3 X10Util_prependRegionRank3D ( final Region1 r1 , final Region2 r2 ) { final int X10_TEMP4 = ( 0 ) ; final Region1 X10_TEMP6 = Program . X10Util_getRank2D ( r2 , X10_TEMP4 ) ; final int X10_TEMP9 = ( 1 ) ; final Region1 X10_TEMP11 = Program . X10Util_getRank2D ( r2 , X10_TEMP9 ) ; final Region3 X10_TEMP13 = Program . createNewRegion3AAA ( r1 , X10_TEMP6 , X10_TEMP11 ) ; return X10_TEMP13 ; }
 public static Region2 X10Util_extendRegionRank2D ( final Region1 r1 , final Region1 r2 ) { final Region2 X10_TEMP4 = Program . createNewRegion2AA ( r1 , r2 ) ; return X10_TEMP4 ; }
 public static Region3 X10Util_extendRegionRank3D ( final Region2 r1 , final Region1 r2 ) { final int X10_TEMP3 = ( 0 ) ; final Region1 X10_TEMP5 = Program . X10Util_getRank2D ( r1 , X10_TEMP3 ) ; final int X10_TEMP8 = ( 1 ) ; final Region1 X10_TEMP10 = Program . X10Util_getRank2D ( r1 , X10_TEMP8 ) ; final Region3 X10_TEMP13 = Program . createNewRegion3AAA ( X10_TEMP5 , X10_TEMP10 , r2 ) ; return X10_TEMP13 ; }
 public static Dist2 X10Util_prependDistRank2D ( final Region1 r1 , final Dist1 d2 ) { final int X10_TEMP1 = 0 ; final int X10_TEMP2 = 1 ; final int X10_TEMP3 = X10_TEMP1 - X10_TEMP2 ; final Region2 X10_TEMP4 = Program . createNewRegion2RR ( X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 ) ; final place X10_TEMP5 = ( here ) ; final Dist2 X10_TEMP7 = Program . getPlaceDist2 ( X10_TEMP4 , X10_TEMP5 ) ; Dist2 dResult = X10_TEMP7 ; final Dist1 X10_TEMP10 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP10 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP11 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP11." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP11 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final Dist1 X10_TEMP15 = Program . restrictDist1 ( d2 , p ) ; final Region1 RX10_TEMP12 = X10_TEMP15 . dReg ; final Region1 X10_TEMP16 = RX10_TEMP12 ; final Region1 rLocal = X10_TEMP16 ; final Region2 X10_TEMP20 = Program . X10Util_prependRegionRank2D ( r1 , rLocal ) ; final Dist2 X10_TEMP22 = Program . getPlaceDist2 ( X10_TEMP20 , p ) ; final Dist2 X10_TEMP24 = Program . unionDist2 ( dResult , X10_TEMP22 ) ; dResult = ( X10_TEMP24 ) ; }
 return dResult ; }
 public static Dist3 X10Util_prependDistRank3D ( final Region1 r1 , final Dist2 d2 ) { final int X10_TEMP1 = 0 ; final int X10_TEMP2 = 1 ; final int X10_TEMP3 = X10_TEMP1 - X10_TEMP2 ; final Region3 X10_TEMP4 = Program . createNewRegion3RRR ( X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 ) ; final place X10_TEMP5 = ( here ) ; final Dist3 X10_TEMP7 = Program . getPlaceDist3 ( X10_TEMP4 , X10_TEMP5 ) ; Dist3 dResult = X10_TEMP7 ; final Dist1 X10_TEMP10 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP10 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP11 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP11." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP11 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final Dist2 X10_TEMP15 = Program . restrictDist2 ( d2 , p ) ; final Region2 RX10_TEMP12 = X10_TEMP15 . dReg ; final Region2 X10_TEMP16 = RX10_TEMP12 ; final Region2 rLocal = X10_TEMP16 ; final Region3 X10_TEMP20 = Program . X10Util_prependRegionRank3D ( r1 , rLocal ) ; final Dist3 X10_TEMP22 = Program . getPlaceDist3 ( X10_TEMP20 , p ) ; final Dist3 X10_TEMP24 = Program . unionDist3 ( dResult , X10_TEMP22 ) ; dResult = ( X10_TEMP24 ) ; }
 return dResult ; }
 public static Dist2 X10Util_extendDistRank2D ( final Dist1 d1 , final Region1 r2 ) { final int X10_TEMP1 = 0 ; final int X10_TEMP2 = 1 ; final int X10_TEMP3 = X10_TEMP1 - X10_TEMP2 ; final Region2 X10_TEMP4 = Program . createNewRegion2RR ( X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 ) ; final place X10_TEMP5 = ( here ) ; final Dist2 X10_TEMP7 = Program . getPlaceDist2 ( X10_TEMP4 , X10_TEMP5 ) ; Dist2 dResult = X10_TEMP7 ; final Dist1 X10_TEMP10 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP10 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP11 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP11." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP11 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final Dist1 X10_TEMP15 = Program . restrictDist1 ( d1 , p ) ; final Region1 RX10_TEMP12 = X10_TEMP15 . dReg ; final Region1 X10_TEMP16 = RX10_TEMP12 ; final Region1 rLocal = X10_TEMP16 ; final Region2 X10_TEMP20 = Program . X10Util_extendRegionRank2D ( rLocal , r2 ) ; final Dist2 X10_TEMP22 = Program . getPlaceDist2 ( X10_TEMP20 , p ) ; final Dist2 X10_TEMP24 = Program . unionDist2 ( dResult , X10_TEMP22 ) ; dResult = ( X10_TEMP24 ) ; }
 return dResult ; }
 public static Dist3 X10Util_extendDistRank3D ( final Dist2 d1 , final Region1 r2 ) { final int X10_TEMP1 = 0 ; final int X10_TEMP2 = 1 ; final int X10_TEMP3 = X10_TEMP1 - X10_TEMP2 ; final Region3 X10_TEMP4 = Program . createNewRegion3RRR ( X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 ) ; final place X10_TEMP5 = ( here ) ; final Dist3 X10_TEMP7 = Program . getPlaceDist3 ( X10_TEMP4 , X10_TEMP5 ) ; Dist3 dResult = X10_TEMP7 ; final Dist1 X10_TEMP10 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP10 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP11 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP11." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP11 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final Dist2 X10_TEMP15 = Program . restrictDist2 ( d1 , p ) ; final Region2 RX10_TEMP12 = X10_TEMP15 . dReg ; final Region2 X10_TEMP16 = RX10_TEMP12 ; final Region2 rLocal = X10_TEMP16 ; final Region3 X10_TEMP20 = Program . X10Util_extendRegionRank3D ( rLocal , r2 ) ; final Dist3 X10_TEMP22 = Program . getPlaceDist3 ( X10_TEMP20 , p ) ; final Dist3 X10_TEMP24 = Program . unionDist3 ( dResult , X10_TEMP22 ) ; dResult = ( X10_TEMP24 ) ; }
 return dResult ; }
 public static Dist1 X10Util_distBlock ( final Region1 r ) { final int RX10_TEMP0 = r . regSize ; final int RX10_TEMP1 = 0 ; final boolean RX10_TEMP2 = RX10_TEMP0 <= RX10_TEMP1 ; if ( RX10_TEMP2 ) { final String RX10_TEMP3 = "Operation low() not defined on empty region r" ; throw new RuntimeException ( RX10_TEMP3 ) ; }
 final int X10_TEMP1 = ( Program . regionLow ( r ) ) ; final int X10_TEMP2 = ( 0 ) ; final boolean X10_TEMP4 = X10_TEMP1 != X10_TEMP2 ; if ( X10_TEMP4 ) { final String X10_TEMP6 = ( "distBlock only applies to rails" ) ; throw new RuntimeException ( X10_TEMP6 ) ; }
 final int RX10_TEMP4 = r . regSize ; final int RX10_TEMP5 = 0 ; final boolean RX10_TEMP6 = RX10_TEMP4 <= RX10_TEMP5 ; if ( RX10_TEMP6 ) { final String RX10_TEMP7 = "Operation high() not defined on empty region r" ; throw new RuntimeException ( RX10_TEMP7 ) ; }
 final int X10_TEMP9 = ( Program . regionHigh ( r ) ) ; final int X10_TEMP7 = ( r . regSize ) ; final int X10_TEMP8 = ( 1 ) ; final int X10_TEMP10 = ( X10_TEMP7 - X10_TEMP8 ) ; final boolean X10_TEMP12 = X10_TEMP9 != X10_TEMP10 ; if ( X10_TEMP12 ) { final String X10_TEMP14 = ( "distblock only applies to rails" ) ; throw new RuntimeException ( X10_TEMP14 ) ; }
 final int X10_TEMP15 = ( r . regSize ) ; final int X10_TEMP16 = ( place.MAX_PLACES ) ; int blockSize = ( X10_TEMP15 / X10_TEMP16 ) ; final int X10_TEMP18 = 0 ; final int X10_TEMP19 = 1 ; final int X10_TEMP20 = X10_TEMP18 - X10_TEMP19 ; final Region1 X10_TEMP21 = Program . createNewRegion1R ( X10_TEMP18 , X10_TEMP20 ) ; final place X10_TEMP22 = ( here ) ; final Dist1 X10_TEMP24 = Program . getPlaceDist1 ( X10_TEMP21 , X10_TEMP22 ) ; Dist1 dResult = X10_TEMP24 ; final Dist1 X10_TEMP27 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP9 = X10_TEMP27 . dReg ; final int RX10_TEMP12 = 1 ; int RX10_TEMP10 = RX10_TEMP9 . regSize ; RX10_TEMP10 = RX10_TEMP10 - RX10_TEMP12 ; final region ( : rank==1 ) RX10_TEMP11 = [ 0 : RX10_TEMP10 ] ; for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP11 ) { final int RX10_TEMP13 = RX10_TEMP8 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP9 , RX10_TEMP13 ) ; final Dist1 X10_TEMP28 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP14 = X10_TEMP28 . dReg ; final int RX10_TEMP15 = Program . searchPointInRegion1 ( RX10_TEMP14 , pl ) ; final int RX10_TEMP16 = 0 ; final boolean RX10_TEMP17 = RX10_TEMP15 < RX10_TEMP16 ; if ( RX10_TEMP17 ) { final String RX10_TEMP18 = "Point pl not found in the distribution X10_TEMP28." ; throw new RuntimeException ( RX10_TEMP18 ) ; }
 final place RX10_TEMP19 = Program . getPlaceFromDist1 ( X10_TEMP28 , RX10_TEMP15 ) ; final place p = ( RX10_TEMP19 ) ; final int X10_TEMP32 = ( pl . f0 ) ; final int X10_TEMP43 = ( X10_TEMP32 * blockSize ) ; final int X10_TEMP35 = ( pl . f0 ) ; final int X10_TEMP36 = ( 1 ) ; final int X10_TEMP38 = ( X10_TEMP35 + X10_TEMP36 ) ; final int X10_TEMP40 = ( X10_TEMP38 * blockSize ) ; final int X10_TEMP41 = ( 1 ) ; final int X10_TEMP44 = ( X10_TEMP40 - X10_TEMP41 ) ; final Region1 X10_TEMP45 = Program . createNewRegion1R ( X10_TEMP43 , X10_TEMP44 ) ; final Dist1 X10_TEMP47 = Program . getPlaceDist1 ( X10_TEMP45 , p ) ; Dist1 ext = X10_TEMP47 ; final Dist1 X10_TEMP50 = Program . unionDist1 ( dResult , ext ) ; dResult = ( X10_TEMP50 ) ; }
 final int X10_TEMP52 = ( r . regSize ) ; final int X10_TEMP51 = ( place.MAX_PLACES ) ; final int X10_TEMP53 = ( blockSize * X10_TEMP51 ) ; int diff = ( X10_TEMP52 - X10_TEMP53 ) ; final int X10_TEMP55 = ( place.MAX_PLACES ) ; final int X10_TEMP56 = ( blockSize * X10_TEMP55 ) ; final int X10_TEMP57 = ( r . regSize ) ; final boolean X10_TEMP59 = X10_TEMP56 != X10_TEMP57 ; if ( X10_TEMP59 ) { final int X10_TEMP60 = ( place.MAX_PLACES ) ; final int X10_TEMP61 = ( 1 ) ; final int X10_TEMP63 = ( X10_TEMP60 - X10_TEMP61 ) ; place l = ( place.places ( X10_TEMP63 ) ) ; final int X10_TEMP65 = ( r . regSize ) ; final int X10_TEMP70 = ( X10_TEMP65 - diff ) ; final int X10_TEMP67 = ( r . regSize ) ; final int X10_TEMP68 = ( 1 ) ; final int X10_TEMP71 = ( X10_TEMP67 - X10_TEMP68 ) ; final Region1 X10_TEMP72 = Program . createNewRegion1R ( X10_TEMP70 , X10_TEMP71 ) ; final Dist1 X10_TEMP74 = Program . getPlaceDist1 ( X10_TEMP72 , l ) ; Dist1 ext = X10_TEMP74 ; final Dist1 X10_TEMP77 = Program . unionDist1 ( dResult , ext ) ; dResult = ( X10_TEMP77 ) ; }
 return dResult ; }
 public static Dist2 X10Util_distBlockStar1 ( final Region2 r ) { final int X10_TEMP3 = ( 0 ) ; final Region1 r1 = Program . X10Util_getRank2D ( r , X10_TEMP3 ) ; final Dist1 d1 = Program . X10Util_distBlock ( r1 ) ; final int X10_TEMP10 = ( 1 ) ; final Region1 X10_TEMP12 = Program . X10Util_getRank2D ( r , X10_TEMP10 ) ; final Dist2 X10_TEMP14 = Program . X10Util_extendDistRank2D ( d1 , X10_TEMP12 ) ; return X10_TEMP14 ; }
 public static Dist2 X10Util_distBlockStar2 ( final Region1 r1 , final Region1 r2 ) { final Region2 X10_TEMP4 = Program . createNewRegion2AA ( r1 , r2 ) ; final Dist2 X10_TEMP6 = Program . X10Util_distBlockStar1 ( X10_TEMP4 ) ; return X10_TEMP6 ; }
 public static Dist2 X10Util_distStarBlock1 ( final Region2 r ) { final int X10_TEMP3 = ( 1 ) ; final Region1 r2 = Program . X10Util_getRank2D ( r , X10_TEMP3 ) ; final Dist1 d2 = Program . X10Util_distBlock ( r2 ) ; final int X10_TEMP9 = ( 0 ) ; final Region1 X10_TEMP12 = Program . X10Util_getRank2D ( r , X10_TEMP9 ) ; final Dist2 X10_TEMP14 = Program . X10Util_prependDistRank2D ( X10_TEMP12 , d2 ) ; return X10_TEMP14 ; }
 public static Dist2 X10Util_distStarBlock2 ( final Region1 r1 , final Region1 r2 ) { final Region2 X10_TEMP4 = Program . createNewRegion2AA ( r1 , r2 ) ; final Dist2 X10_TEMP6 = Program . X10Util_distStarBlock1 ( X10_TEMP4 ) ; return X10_TEMP6 ; }
 public static boolean X10Util_isDistBlockStar ( final Dist2 d ) { if ( _X10Util_ENABLE_CHECKS ) { final Region2 RX10_TEMP0 = d . dReg ; final Region2 rd = RX10_TEMP0 ; final int X10_TEMP5 = ( 0 ) ; final Region1 r1 = Program . X10Util_getRank2D ( rd , X10_TEMP5 ) ; final int X10_TEMP9 = ( 1 ) ; final Region1 r2 = Program . X10Util_getRank2D ( rd , X10_TEMP9 ) ; final Dist1 X10_TEMP12 = Program . getBlockDist1 ( r1 ) ; final Dist1 dRef = X10_TEMP12 ; final Dist1 X10_TEMP15 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP2 = X10_TEMP15 . dReg ; final int RX10_TEMP5 = 1 ; int RX10_TEMP3 = RX10_TEMP2 . regSize ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; for ( point ( : rank==1 ) RX10_TEMP1 : RX10_TEMP4 ) { final int RX10_TEMP6 = RX10_TEMP1 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP2 , RX10_TEMP6 ) ; final Dist1 X10_TEMP16 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP7 = X10_TEMP16 . dReg ; final int RX10_TEMP8 = Program . searchPointInRegion1 ( RX10_TEMP7 , pl ) ; final int RX10_TEMP9 = 0 ; final boolean RX10_TEMP10 = RX10_TEMP8 < RX10_TEMP9 ; if ( RX10_TEMP10 ) { final String RX10_TEMP11 = "Point pl not found in the distribution X10_TEMP16." ; throw new RuntimeException ( RX10_TEMP11 ) ; }
 final place RX10_TEMP12 = Program . getPlaceFromDist1 ( X10_TEMP16 , RX10_TEMP8 ) ; final place p = ( RX10_TEMP12 ) ; final Dist2 X10_TEMP20 = Program . restrictDist2 ( d , p ) ; final Region2 RX10_TEMP13 = X10_TEMP20 . dReg ; final Region2 X10_TEMP21 = RX10_TEMP13 ; final Region2 rLocal = X10_TEMP21 ; final Dist1 X10_TEMP24 = Program . restrictDist1 ( dRef , p ) ; final Region1 RX10_TEMP14 = X10_TEMP24 . dReg ; final Region1 X10_TEMP25 = RX10_TEMP14 ; final Region1 rRefLocal = X10_TEMP25 ; final int X10_TEMP29 = ( 0 ) ; final Region1 X10_TEMP31 = Program . X10Util_getRank2D ( rLocal , X10_TEMP29 ) ; final int X10_TEMP34 = 0 ; final boolean X10_TEMP35 = false ; final int X10_TEMP32 = X10_TEMP31 . regSize ; final int X10_TEMP33 = rRefLocal . regSize ; boolean X10_TEMP36 = X10_TEMP32 == X10_TEMP33 ; if ( X10_TEMP36 ) { final Region1 X10_TEMP37 = Program . createNewRegion1R ( X10_TEMP34 , X10_TEMP34 ) ; final place X10_TEMP38 = here ; final Dist1 X10_TEMP39 = Program . getPlaceDist1 ( X10_TEMP37 , X10_TEMP38 ) ; final Region1 RX10_TEMP15 = X10_TEMP39 . dReg ; final int RX10_TEMP16 = 0 ; final int RX10_TEMP17 = 1 ; int RX10_TEMP18 = place.MAX_PLACES ; RX10_TEMP18 = RX10_TEMP18 - RX10_TEMP17 ; final region ( : rank==1 ) RX10_TEMP19 = [ 0 : RX10_TEMP18 ] ; final dist ( : rank==1 ) RX10_TEMP20 = [ 0 : RX10_TEMP18 ] -> here ; final booleanStub [ : rank==1 ] RX10_TEMP21 = ( booleanStub [ : rank==1 ] ) ( new booleanStub [ RX10_TEMP20 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP22 : RX10_TEMP19 ) { final place RX10_TEMP23 = here ; final int RX10_TEMP24 = RX10_TEMP22 [0] ; final place RX10_TEMP25 = place.places ( RX10_TEMP24 ) ; final int RX10_TEMP26 = Program . getDistLocalCount1 ( X10_TEMP39 , RX10_TEMP24 ) ; final int RX10_TEMP27 = RX10_TEMP26 - RX10_TEMP17 ; 
 final T7 utmp7 = new T7(RX10_TEMP27, RX10_TEMP23, RX10_TEMP22, RX10_TEMP21);
 async (RX10_TEMP25) {Program.thread7(utmp7); }
 }
 }
 final booleanStub value [ : rank==1 ] RX10_TEMP32 = ( booleanStub value [ : rank==1 ] ) ( new booleanStub value [ RX10_TEMP19 ] ( point ( : rank==1 ) RX10_TEMP34 ) { final booleanStub RX10_TEMP33 = RX10_TEMP21 [ RX10_TEMP34 ] ; return RX10_TEMP33 ; }
 ) ; final booleanRefArray1 RX10_TEMP35 = new booleanRefArray1 ( X10_TEMP39 , RX10_TEMP32 ) ; final booleanRefArray1 X10_TEMP40 = RX10_TEMP35 ; finish { final int RX10_TEMP39 = 1 ; int RX10_TEMP37 = X10_TEMP31 . regSize ; RX10_TEMP37 = RX10_TEMP37 - RX10_TEMP39 ; final region ( : rank==1 ) RX10_TEMP38 = [ 0 : RX10_TEMP37 ] ; for ( point ( : rank==1 ) RX10_TEMP36 : RX10_TEMP38 ) { final int RX10_TEMP40 = RX10_TEMP36 [0] ; final Point1 X10_TEMP43 = Program . regionOrdinalPoint1 ( X10_TEMP31 , RX10_TEMP40 ) ; 
 final T8 utmp8 = new T8(X10_TEMP43, X10_TEMP40, X10_TEMP35, X10_TEMP34, rRefLocal);
 async (X10_TEMP38) {Program.thread8(utmp8); }
 }
 }
 final Point1 RX10_TEMP53 = new Point1 ( X10_TEMP34 ) ; final Dist1 RX10_TEMP54 = X10_TEMP40 . distValue ; final Region1 RX10_TEMP55 = RX10_TEMP54 . dReg ; final int RX10_TEMP56 = Program . searchPointInRegion1 ( RX10_TEMP55 , RX10_TEMP53 ) ; final int RX10_TEMP57 = 0 ; final boolean RX10_TEMP58 = RX10_TEMP56 < RX10_TEMP57 ; if ( RX10_TEMP58 ) { String RX10_TEMP59 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 final place RX10_TEMP60 = Program . getPlaceFromDist1 ( RX10_TEMP54 , RX10_TEMP56 ) ; final place RX10_TEMP62 = here ; final boolean RX10_TEMP63 = RX10_TEMP60 != RX10_TEMP62 ; if ( RX10_TEMP63 ) { String RX10_TEMP61 = "Bad place access for array X10_TEMP40" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final boolean RX10_TEMP64 = Program . getRefArrayValue1boolean ( X10_TEMP40 , RX10_TEMP56 ) ; X10_TEMP36 = RX10_TEMP64 ; }
 final boolean X10_TEMP45 = X10_TEMP36 ; final boolean X10_TEMP47 = ( X10_TEMP45 ) ; final boolean X10_TEMP49 = ! X10_TEMP47 ; if ( X10_TEMP49 ) { final boolean X10_TEMP51 = ( false ) ; return X10_TEMP51 ; }
 else { final int X10_TEMP54 = ( 1 ) ; final Region1 X10_TEMP56 = Program . X10Util_getRank2D ( rLocal , X10_TEMP54 ) ; final int X10_TEMP59 = 0 ; final boolean X10_TEMP60 = false ; final int X10_TEMP57 = X10_TEMP56 . regSize ; final int X10_TEMP58 = r2 . regSize ; boolean X10_TEMP61 = X10_TEMP57 == X10_TEMP58 ; if ( X10_TEMP61 ) { final Region1 X10_TEMP62 = Program . createNewRegion1R ( X10_TEMP59 , X10_TEMP59 ) ; final place X10_TEMP63 = here ; final Dist1 X10_TEMP64 = Program . getPlaceDist1 ( X10_TEMP62 , X10_TEMP63 ) ; final Region1 RX10_TEMP65 = X10_TEMP64 . dReg ; final int RX10_TEMP66 = 0 ; final int RX10_TEMP67 = 1 ; int RX10_TEMP68 = place.MAX_PLACES ; RX10_TEMP68 = RX10_TEMP68 - RX10_TEMP67 ; final region ( : rank==1 ) RX10_TEMP69 = [ 0 : RX10_TEMP68 ] ; final dist ( : rank==1 ) RX10_TEMP70 = [ 0 : RX10_TEMP68 ] -> here ; final booleanStub [ : rank==1 ] RX10_TEMP71 = ( booleanStub [ : rank==1 ] ) ( new booleanStub [ RX10_TEMP70 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP72 : RX10_TEMP69 ) { final place RX10_TEMP73 = here ; final int RX10_TEMP74 = RX10_TEMP72 [0] ; final place RX10_TEMP75 = place.places ( RX10_TEMP74 ) ; final int RX10_TEMP76 = Program . getDistLocalCount1 ( X10_TEMP64 , RX10_TEMP74 ) ; final int RX10_TEMP77 = RX10_TEMP76 - RX10_TEMP67 ; 
 final T9 utmp9 = new T9(RX10_TEMP77, RX10_TEMP73, RX10_TEMP72, RX10_TEMP71);
 async (RX10_TEMP75) {Program.thread9(utmp9); }
 }
 }
 final booleanStub value [ : rank==1 ] RX10_TEMP82 = ( booleanStub value [ : rank==1 ] ) ( new booleanStub value [ RX10_TEMP69 ] ( point ( : rank==1 ) RX10_TEMP84 ) { final booleanStub RX10_TEMP83 = RX10_TEMP71 [ RX10_TEMP84 ] ; return RX10_TEMP83 ; }
 ) ; final booleanRefArray1 RX10_TEMP85 = new booleanRefArray1 ( X10_TEMP64 , RX10_TEMP82 ) ; final booleanRefArray1 X10_TEMP65 = RX10_TEMP85 ; finish { final int RX10_TEMP89 = 1 ; int RX10_TEMP87 = X10_TEMP56 . regSize ; RX10_TEMP87 = RX10_TEMP87 - RX10_TEMP89 ; final region ( : rank==1 ) RX10_TEMP88 = [ 0 : RX10_TEMP87 ] ; for ( point ( : rank==1 ) RX10_TEMP86 : RX10_TEMP88 ) { final int RX10_TEMP90 = RX10_TEMP86 [0] ; final Point1 X10_TEMP68 = Program . regionOrdinalPoint1 ( X10_TEMP56 , RX10_TEMP90 ) ; 
 final T10 utmp10 = new T10(X10_TEMP68, X10_TEMP65, X10_TEMP60, X10_TEMP59, r2);
 async (X10_TEMP63) {Program.thread10(utmp10); }
 }
 }
 final Point1 RX10_TEMP103 = new Point1 ( X10_TEMP59 ) ; final Dist1 RX10_TEMP104 = X10_TEMP65 . distValue ; final Region1 RX10_TEMP105 = RX10_TEMP104 . dReg ; final int RX10_TEMP106 = Program . searchPointInRegion1 ( RX10_TEMP105 , RX10_TEMP103 ) ; final int RX10_TEMP107 = 0 ; final boolean RX10_TEMP108 = RX10_TEMP106 < RX10_TEMP107 ; if ( RX10_TEMP108 ) { String RX10_TEMP109 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP109 ) ; }
 final place RX10_TEMP110 = Program . getPlaceFromDist1 ( RX10_TEMP104 , RX10_TEMP106 ) ; final place RX10_TEMP112 = here ; final boolean RX10_TEMP113 = RX10_TEMP110 != RX10_TEMP112 ; if ( RX10_TEMP113 ) { String RX10_TEMP111 = "Bad place access for array X10_TEMP65" ; throw new RuntimeException ( RX10_TEMP111 ) ; }
 final boolean RX10_TEMP114 = Program . getRefArrayValue1boolean ( X10_TEMP65 , RX10_TEMP106 ) ; X10_TEMP61 = RX10_TEMP114 ; }
 final boolean X10_TEMP70 = X10_TEMP61 ; final boolean X10_TEMP72 = ( X10_TEMP70 ) ; final boolean X10_TEMP74 = ! X10_TEMP72 ; if ( X10_TEMP74 ) { final int X10_TEMP75 = ( rRefLocal . regSize ) ; final int X10_TEMP76 = ( 0 ) ; final boolean X10_TEMP78 = X10_TEMP75 > X10_TEMP76 ; if ( X10_TEMP78 ) { final boolean X10_TEMP80 = ( false ) ; return X10_TEMP80 ; }
 }
 }
 }
 }
 final boolean X10_TEMP82 = ( true ) ; return X10_TEMP82 ; }
 public static boolean X10Util_isDistStarBlock ( final Dist2 d ) { if ( _X10Util_ENABLE_CHECKS ) { final Region2 RX10_TEMP0 = d . dReg ; final Region2 rd = RX10_TEMP0 ; final int X10_TEMP5 = ( 0 ) ; final Region1 r1 = Program . X10Util_getRank2D ( rd , X10_TEMP5 ) ; final int X10_TEMP9 = ( 1 ) ; final Region1 r2 = Program . X10Util_getRank2D ( rd , X10_TEMP9 ) ; final Dist1 X10_TEMP12 = Program . getBlockDist1 ( r2 ) ; final Dist1 dRef = X10_TEMP12 ; final Dist1 X10_TEMP15 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP2 = X10_TEMP15 . dReg ; final int RX10_TEMP5 = 1 ; int RX10_TEMP3 = RX10_TEMP2 . regSize ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; for ( point ( : rank==1 ) RX10_TEMP1 : RX10_TEMP4 ) { final int RX10_TEMP6 = RX10_TEMP1 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP2 , RX10_TEMP6 ) ; final Dist1 X10_TEMP16 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP7 = X10_TEMP16 . dReg ; final int RX10_TEMP8 = Program . searchPointInRegion1 ( RX10_TEMP7 , pl ) ; final int RX10_TEMP9 = 0 ; final boolean RX10_TEMP10 = RX10_TEMP8 < RX10_TEMP9 ; if ( RX10_TEMP10 ) { final String RX10_TEMP11 = "Point pl not found in the distribution X10_TEMP16." ; throw new RuntimeException ( RX10_TEMP11 ) ; }
 final place RX10_TEMP12 = Program . getPlaceFromDist1 ( X10_TEMP16 , RX10_TEMP8 ) ; final place p = ( RX10_TEMP12 ) ; final Dist2 X10_TEMP20 = Program . restrictDist2 ( d , p ) ; final Region2 RX10_TEMP13 = X10_TEMP20 . dReg ; final Region2 X10_TEMP21 = RX10_TEMP13 ; final Region2 rLocal = X10_TEMP21 ; final Dist1 X10_TEMP24 = Program . restrictDist1 ( dRef , p ) ; final Region1 RX10_TEMP14 = X10_TEMP24 . dReg ; final Region1 X10_TEMP25 = RX10_TEMP14 ; final Region1 rRefLocal = X10_TEMP25 ; final int X10_TEMP29 = ( 0 ) ; final Region1 X10_TEMP31 = Program . X10Util_getRank2D ( rLocal , X10_TEMP29 ) ; final int X10_TEMP34 = 0 ; final boolean X10_TEMP35 = false ; final int X10_TEMP32 = X10_TEMP31 . regSize ; final int X10_TEMP33 = r1 . regSize ; boolean X10_TEMP36 = X10_TEMP32 == X10_TEMP33 ; if ( X10_TEMP36 ) { final Region1 X10_TEMP37 = Program . createNewRegion1R ( X10_TEMP34 , X10_TEMP34 ) ; final place X10_TEMP38 = here ; final Dist1 X10_TEMP39 = Program . getPlaceDist1 ( X10_TEMP37 , X10_TEMP38 ) ; final Region1 RX10_TEMP15 = X10_TEMP39 . dReg ; final int RX10_TEMP16 = 0 ; final int RX10_TEMP17 = 1 ; int RX10_TEMP18 = place.MAX_PLACES ; RX10_TEMP18 = RX10_TEMP18 - RX10_TEMP17 ; final region ( : rank==1 ) RX10_TEMP19 = [ 0 : RX10_TEMP18 ] ; final dist ( : rank==1 ) RX10_TEMP20 = [ 0 : RX10_TEMP18 ] -> here ; final booleanStub [ : rank==1 ] RX10_TEMP21 = ( booleanStub [ : rank==1 ] ) ( new booleanStub [ RX10_TEMP20 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP22 : RX10_TEMP19 ) { final place RX10_TEMP23 = here ; final int RX10_TEMP24 = RX10_TEMP22 [0] ; final place RX10_TEMP25 = place.places ( RX10_TEMP24 ) ; final int RX10_TEMP26 = Program . getDistLocalCount1 ( X10_TEMP39 , RX10_TEMP24 ) ; final int RX10_TEMP27 = RX10_TEMP26 - RX10_TEMP17 ; 
 final T11 utmp11 = new T11(RX10_TEMP27, RX10_TEMP23, RX10_TEMP22, RX10_TEMP21);
 async (RX10_TEMP25) {Program.thread11(utmp11); }
 }
 }
 final booleanStub value [ : rank==1 ] RX10_TEMP32 = ( booleanStub value [ : rank==1 ] ) ( new booleanStub value [ RX10_TEMP19 ] ( point ( : rank==1 ) RX10_TEMP34 ) { final booleanStub RX10_TEMP33 = RX10_TEMP21 [ RX10_TEMP34 ] ; return RX10_TEMP33 ; }
 ) ; final booleanRefArray1 RX10_TEMP35 = new booleanRefArray1 ( X10_TEMP39 , RX10_TEMP32 ) ; final booleanRefArray1 X10_TEMP40 = RX10_TEMP35 ; finish { final int RX10_TEMP39 = 1 ; int RX10_TEMP37 = X10_TEMP31 . regSize ; RX10_TEMP37 = RX10_TEMP37 - RX10_TEMP39 ; final region ( : rank==1 ) RX10_TEMP38 = [ 0 : RX10_TEMP37 ] ; for ( point ( : rank==1 ) RX10_TEMP36 : RX10_TEMP38 ) { final int RX10_TEMP40 = RX10_TEMP36 [0] ; final Point1 X10_TEMP43 = Program . regionOrdinalPoint1 ( X10_TEMP31 , RX10_TEMP40 ) ; 
 final T12 utmp12 = new T12(X10_TEMP43, X10_TEMP40, X10_TEMP35, X10_TEMP34, r1);
 async (X10_TEMP38) {Program.thread12(utmp12); }
 }
 }
 final Point1 RX10_TEMP53 = new Point1 ( X10_TEMP34 ) ; final Dist1 RX10_TEMP54 = X10_TEMP40 . distValue ; final Region1 RX10_TEMP55 = RX10_TEMP54 . dReg ; final int RX10_TEMP56 = Program . searchPointInRegion1 ( RX10_TEMP55 , RX10_TEMP53 ) ; final int RX10_TEMP57 = 0 ; final boolean RX10_TEMP58 = RX10_TEMP56 < RX10_TEMP57 ; if ( RX10_TEMP58 ) { String RX10_TEMP59 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 final place RX10_TEMP60 = Program . getPlaceFromDist1 ( RX10_TEMP54 , RX10_TEMP56 ) ; final place RX10_TEMP62 = here ; final boolean RX10_TEMP63 = RX10_TEMP60 != RX10_TEMP62 ; if ( RX10_TEMP63 ) { String RX10_TEMP61 = "Bad place access for array X10_TEMP40" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final boolean RX10_TEMP64 = Program . getRefArrayValue1boolean ( X10_TEMP40 , RX10_TEMP56 ) ; X10_TEMP36 = RX10_TEMP64 ; }
 final boolean X10_TEMP45 = X10_TEMP36 ; final int X10_TEMP48 = ( 1 ) ; final Region1 X10_TEMP50 = Program . X10Util_getRank2D ( rLocal , X10_TEMP48 ) ; final int X10_TEMP53 = 0 ; final boolean X10_TEMP54 = false ; final int X10_TEMP51 = X10_TEMP50 . regSize ; final int X10_TEMP52 = rRefLocal . regSize ; boolean X10_TEMP55 = X10_TEMP51 == X10_TEMP52 ; if ( X10_TEMP55 ) { final Region1 X10_TEMP56 = Program . createNewRegion1R ( X10_TEMP53 , X10_TEMP53 ) ; final place X10_TEMP57 = here ; final Dist1 X10_TEMP58 = Program . getPlaceDist1 ( X10_TEMP56 , X10_TEMP57 ) ; final Region1 RX10_TEMP65 = X10_TEMP58 . dReg ; final int RX10_TEMP66 = 0 ; final int RX10_TEMP67 = 1 ; int RX10_TEMP68 = place.MAX_PLACES ; RX10_TEMP68 = RX10_TEMP68 - RX10_TEMP67 ; final region ( : rank==1 ) RX10_TEMP69 = [ 0 : RX10_TEMP68 ] ; final dist ( : rank==1 ) RX10_TEMP70 = [ 0 : RX10_TEMP68 ] -> here ; final booleanStub [ : rank==1 ] RX10_TEMP71 = ( booleanStub [ : rank==1 ] ) ( new booleanStub [ RX10_TEMP70 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP72 : RX10_TEMP69 ) { final place RX10_TEMP73 = here ; final int RX10_TEMP74 = RX10_TEMP72 [0] ; final place RX10_TEMP75 = place.places ( RX10_TEMP74 ) ; final int RX10_TEMP76 = Program . getDistLocalCount1 ( X10_TEMP58 , RX10_TEMP74 ) ; final int RX10_TEMP77 = RX10_TEMP76 - RX10_TEMP67 ; 
 final T13 utmp13 = new T13(RX10_TEMP77, RX10_TEMP73, RX10_TEMP72, RX10_TEMP71);
 async (RX10_TEMP75) {Program.thread13(utmp13); }
 }
 }
 final booleanStub value [ : rank==1 ] RX10_TEMP82 = ( booleanStub value [ : rank==1 ] ) ( new booleanStub value [ RX10_TEMP69 ] ( point ( : rank==1 ) RX10_TEMP84 ) { final booleanStub RX10_TEMP83 = RX10_TEMP71 [ RX10_TEMP84 ] ; return RX10_TEMP83 ; }
 ) ; final booleanRefArray1 RX10_TEMP85 = new booleanRefArray1 ( X10_TEMP58 , RX10_TEMP82 ) ; final booleanRefArray1 X10_TEMP59 = RX10_TEMP85 ; finish { final int RX10_TEMP89 = 1 ; int RX10_TEMP87 = X10_TEMP50 . regSize ; RX10_TEMP87 = RX10_TEMP87 - RX10_TEMP89 ; final region ( : rank==1 ) RX10_TEMP88 = [ 0 : RX10_TEMP87 ] ; for ( point ( : rank==1 ) RX10_TEMP86 : RX10_TEMP88 ) { final int RX10_TEMP90 = RX10_TEMP86 [0] ; final Point1 X10_TEMP62 = Program . regionOrdinalPoint1 ( X10_TEMP50 , RX10_TEMP90 ) ; 
 final T14 utmp14 = new T14(X10_TEMP62, X10_TEMP59, X10_TEMP54, X10_TEMP53, rRefLocal);
 async (X10_TEMP57) {Program.thread14(utmp14); }
 }
 }
 final Point1 RX10_TEMP103 = new Point1 ( X10_TEMP53 ) ; final Dist1 RX10_TEMP104 = X10_TEMP59 . distValue ; final Region1 RX10_TEMP105 = RX10_TEMP104 . dReg ; final int RX10_TEMP106 = Program . searchPointInRegion1 ( RX10_TEMP105 , RX10_TEMP103 ) ; final int RX10_TEMP107 = 0 ; final boolean RX10_TEMP108 = RX10_TEMP106 < RX10_TEMP107 ; if ( RX10_TEMP108 ) { String RX10_TEMP109 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP109 ) ; }
 final place RX10_TEMP110 = Program . getPlaceFromDist1 ( RX10_TEMP104 , RX10_TEMP106 ) ; final place RX10_TEMP112 = here ; final boolean RX10_TEMP113 = RX10_TEMP110 != RX10_TEMP112 ; if ( RX10_TEMP113 ) { String RX10_TEMP111 = "Bad place access for array X10_TEMP59" ; throw new RuntimeException ( RX10_TEMP111 ) ; }
 final boolean RX10_TEMP114 = Program . getRefArrayValue1boolean ( X10_TEMP59 , RX10_TEMP106 ) ; X10_TEMP55 = RX10_TEMP114 ; }
 final boolean X10_TEMP64 = X10_TEMP55 ; final boolean X10_TEMP66 = ( X10_TEMP45 && X10_TEMP64 ) ; final boolean X10_TEMP68 = ! X10_TEMP66 ; if ( X10_TEMP68 ) { final boolean X10_TEMP70 = ( false ) ; return X10_TEMP70 ; }
 }
 }
 final boolean X10_TEMP72 = ( true ) ; return X10_TEMP72 ; }
 public static Dist1 X10Util_get2DDistRank ( final Dist2 d , final int n ) { final int X10_TEMP1 = ( 2 ) ; final boolean X10_TEMP3 = ( n > X10_TEMP1 ) ; final int X10_TEMP2 = ( 0 ) ; final boolean X10_TEMP4 = ( n < X10_TEMP2 ) ; final boolean X10_TEMP6 = X10_TEMP3 || X10_TEMP4 ; if ( X10_TEMP6 ) { final String X10_TEMP8 = ( "Rank must within bounds" ) ; throw new RuntimeException ( X10_TEMP8 ) ; }
 final int X10_TEMP9 = 0 ; final int X10_TEMP10 = 1 ; final int X10_TEMP11 = X10_TEMP9 - X10_TEMP10 ; final Region1 X10_TEMP12 = Program . createNewRegion1R ( X10_TEMP9 , X10_TEMP11 ) ; final place X10_TEMP13 = ( here ) ; final Dist1 X10_TEMP15 = Program . getPlaceDist1 ( X10_TEMP12 , X10_TEMP13 ) ; Dist1 dResult = X10_TEMP15 ; final Dist1 X10_TEMP18 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP18 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP19 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP19 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP19." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP19 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final Dist2 X10_TEMP23 = Program . restrictDist2 ( d , p ) ; final Region2 RX10_TEMP12 = X10_TEMP23 . dReg ; final Region2 rLocal = RX10_TEMP12 ; final Region1 rLocalN = Program . X10Util_getRank2D ( rLocal , n ) ; final Region1 RX10_TEMP13 = dResult . dReg ; final Region1 X10_TEMP28 = RX10_TEMP13 ; final int X10_TEMP29 = 0 ; final int X10_TEMP30 = 1 ; final int X10_TEMP31 = X10_TEMP29 - X10_TEMP30 ; final place X10_TEMP32 = here ; Region1 X10_TEMP33 = Program . createNewRegion1R ( X10_TEMP29 , X10_TEMP31 ) ; final int RX10_TEMP17 = 1 ; int RX10_TEMP15 = rLocalN . regSize ; RX10_TEMP15 = RX10_TEMP15 - RX10_TEMP17 ; final region ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP15 ] ; for ( point ( : rank==1 ) RX10_TEMP14 : RX10_TEMP16 ) { final int RX10_TEMP18 = RX10_TEMP14 [0] ; final Point1 X10_TEMP34 = Program . regionOrdinalPoint1 ( rLocalN , RX10_TEMP18 ) ; final int X10_TEMP35 = X10_TEMP34 . f0 ; final boolean RX10_TEMP19 = Program . regionContainsPoint1 ( X10_TEMP28 , X10_TEMP34 ) ; boolean X10_TEMP36 = RX10_TEMP19 ; X10_TEMP36 = ! X10_TEMP36 ; if ( X10_TEMP36 ) { final Region1 X10_TEMP37 = Program . createNewRegion1R ( X10_TEMP35 , X10_TEMP35 ) ; X10_TEMP33 = Program . unionRegion1 ( X10_TEMP33 , X10_TEMP37 ) ; }
 }
 final Region1 X10_TEMP38 = X10_TEMP33 ; final Region1 X10_TEMP40 = X10_TEMP38 ; final Dist1 X10_TEMP42 = Program . getPlaceDist1 ( X10_TEMP40 , p ) ; final Dist1 X10_TEMP44 = Program . unionDist1 ( dResult , X10_TEMP42 ) ; dResult = ( X10_TEMP44 ) ; }
 return dResult ; }
 public static Region2 X10Util_transposeRegion ( final Region2 r ) { final int X10_TEMP3 = ( 1 ) ; final Region1 X10_TEMP5 = Program . X10Util_getRank2D ( r , X10_TEMP3 ) ; final int X10_TEMP8 = ( 0 ) ; final Region1 X10_TEMP10 = Program . X10Util_getRank2D ( r , X10_TEMP8 ) ; final Region2 X10_TEMP12 = Program . createNewRegion2AA ( X10_TEMP5 , X10_TEMP10 ) ; return X10_TEMP12 ; }
 public static Dist2 X10Util_transposeDist ( final Dist2 d ) { final int X10_TEMP1 = 0 ; final int X10_TEMP2 = 1 ; final int X10_TEMP3 = X10_TEMP1 - X10_TEMP2 ; final Region2 X10_TEMP4 = Program . createNewRegion2RR ( X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 ) ; final place X10_TEMP5 = ( here ) ; final Dist2 X10_TEMP7 = Program . getPlaceDist2 ( X10_TEMP4 , X10_TEMP5 ) ; Dist2 dResult = X10_TEMP7 ; final Dist1 X10_TEMP10 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP10 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP11 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP11." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP11 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final Dist2 X10_TEMP15 = Program . restrictDist2 ( d , p ) ; final Region2 RX10_TEMP12 = X10_TEMP15 . dReg ; final Region2 X10_TEMP16 = RX10_TEMP12 ; final Region2 rLocal = X10_TEMP16 ; final Region2 X10_TEMP19 = Program . X10Util_transposeRegion ( rLocal ) ; final Dist2 X10_TEMP21 = Program . getPlaceDist2 ( X10_TEMP19 , p ) ; final Dist2 X10_TEMP23 = Program . unionDist2 ( dResult , X10_TEMP21 ) ; dResult = ( X10_TEMP23 ) ; }
 return dResult ; }
 public static Dist2 X10Util_transposeBlockStar ( final Dist2 d ) { final Region2 RX10_TEMP0 = d . dReg ; final Region2 rd = RX10_TEMP0 ; final int X10_TEMP4 = ( 0 ) ; final Region1 r1 = Program . X10Util_getRank2D ( rd , X10_TEMP4 ) ; final int X10_TEMP8 = ( 1 ) ; final Region1 r2 = Program . X10Util_getRank2D ( rd , X10_TEMP8 ) ; final Dist1 X10_TEMP13 = Program . X10Util_distBlock ( r2 ) ; final Dist2 X10_TEMP15 = Program . X10Util_extendDistRank2D ( X10_TEMP13 , r1 ) ; return X10_TEMP15 ; }
 public static boolean X10Util_pullBoolean ( final booleanRefArray1 b , final Point1 pt ) { final Dist1 RX10_TEMP0 = b . distValue ; final Region1 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region1 X10_TEMP1 = RX10_TEMP1 ; final boolean RX10_TEMP2 = Program . regionContainsPoint1 ( X10_TEMP1 , pt ) ; final boolean X10_TEMP3 = ( RX10_TEMP2 ) ; final boolean X10_TEMP5 = ! X10_TEMP3 ; if ( X10_TEMP5 ) { final String X10_TEMP6 = ( "pt must be contained in b.region: " ) ; final Dist1 RX10_TEMP3 = b . distValue ; final Region1 RX10_TEMP4 = RX10_TEMP3 . dReg ; final Region1 X10_TEMP7 = RX10_TEMP4 ; final String RX10_TEMP5 = Program . toStringRegion1 ( X10_TEMP7 ) ; final String X10_TEMP8 = ( X10_TEMP6 + RX10_TEMP5 ) ; final String X10_TEMP9 = ( " " ) ; final String X10_TEMP10 = ( X10_TEMP8 + X10_TEMP9 ) ; final String RX10_TEMP6 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP12 = ( X10_TEMP10 + RX10_TEMP6 ) ; Program . X10Util_println ( X10_TEMP12 ) ; final String X10_TEMP13 = ( "pullBoolean Exception: " ) ; final String RX10_TEMP7 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP15 = ( X10_TEMP13 + RX10_TEMP7 ) ; throw new RuntimeException ( X10_TEMP15 ) ; }
 final place pHere = ( here ) ; final int X10_TEMP19 = ( 0 ) ; final int X10_TEMP20 = ( 0 ) ; final Region1 X10_TEMP21 = Program . createNewRegion1R ( X10_TEMP19 , X10_TEMP20 ) ; final place X10_TEMP22 = ( here ) ; final Dist1 dDst = Program . getPlaceDist1 ( X10_TEMP21 , X10_TEMP22 ) ; final Region1 RX10_TEMP8 = dDst . dReg ; final int RX10_TEMP9 = 0 ; final int RX10_TEMP10 = 1 ; int RX10_TEMP11 = place.MAX_PLACES ; RX10_TEMP11 = RX10_TEMP11 - RX10_TEMP10 ; final region ( : rank==1 ) RX10_TEMP12 = [ 0 : RX10_TEMP11 ] ; final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP11 ] -> here ; final booleanStub [ : rank==1 ] RX10_TEMP14 = ( booleanStub [ : rank==1 ] ) ( new booleanStub [ RX10_TEMP13 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP15 : RX10_TEMP12 ) { final place RX10_TEMP16 = here ; final int RX10_TEMP17 = RX10_TEMP15 [0] ; final place RX10_TEMP18 = place.places ( RX10_TEMP17 ) ; final int RX10_TEMP19 = Program . getDistLocalCount1 ( dDst , RX10_TEMP17 ) ; final int RX10_TEMP20 = RX10_TEMP19 - RX10_TEMP10 ; 
 final T15 utmp15 = new T15(RX10_TEMP20, RX10_TEMP16, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP18) {Program.thread15(utmp15); }
 }
 }
 final booleanStub value [ : rank==1 ] RX10_TEMP24 = ( booleanStub value [ : rank==1 ] ) ( new booleanStub value [ RX10_TEMP12 ] ( point ( : rank==1 ) RX10_TEMP26 ) { final booleanStub RX10_TEMP25 = RX10_TEMP14 [ RX10_TEMP26 ] ; return RX10_TEMP25 ; }
 ) ; final booleanRefArray1 RX10_TEMP27 = new booleanRefArray1 ( dDst , RX10_TEMP24 ) ; final booleanRefArray1 result = RX10_TEMP27 ; finish { final Dist1 RX10_TEMP28 = b . distValue ; final Dist1 X10_TEMP25 = RX10_TEMP28 ; final Region1 RX10_TEMP29 = X10_TEMP25 . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion1 ( RX10_TEMP29 , pt ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pt not found in the distribution X10_TEMP25." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist1 ( X10_TEMP25 , RX10_TEMP30 ) ; final place X10_TEMP28 = RX10_TEMP34 ; 
 final T16 utmp16 = new T16(result, pHere, pt, b);
 async (X10_TEMP28) {Program.thread16(utmp16); }
 }
 final int X10_TEMP37 = ( 0 ) ; final Point1 RX10_TEMP57 = new Point1 ( X10_TEMP37 ) ; final Dist1 RX10_TEMP58 = result . distValue ; final Region1 RX10_TEMP59 = RX10_TEMP58 . dReg ; final int RX10_TEMP60 = Program . searchPointInRegion1 ( RX10_TEMP59 , RX10_TEMP57 ) ; final int RX10_TEMP61 = 0 ; final boolean RX10_TEMP62 = RX10_TEMP60 < RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP63 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final place RX10_TEMP64 = Program . getPlaceFromDist1 ( RX10_TEMP58 , RX10_TEMP60 ) ; final place RX10_TEMP66 = here ; final boolean RX10_TEMP67 = RX10_TEMP64 != RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP65 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final boolean RX10_TEMP68 = Program . getRefArrayValue1boolean ( result , RX10_TEMP60 ) ; final boolean X10_TEMP39 = ( RX10_TEMP68 ) ; return X10_TEMP39 ; }
 public static Complex X10Util_pullComplex ( final ComplexRefArray1 c , final Point1 pt ) { final Dist1 RX10_TEMP0 = c . distValue ; final Region1 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region1 X10_TEMP1 = RX10_TEMP1 ; final boolean RX10_TEMP2 = Program . regionContainsPoint1 ( X10_TEMP1 , pt ) ; final boolean X10_TEMP3 = ( RX10_TEMP2 ) ; final boolean X10_TEMP5 = ! X10_TEMP3 ; if ( X10_TEMP5 ) { final String X10_TEMP6 = ( "pt must be contained in c.region: " ) ; final Dist1 RX10_TEMP3 = c . distValue ; final Region1 RX10_TEMP4 = RX10_TEMP3 . dReg ; final Region1 X10_TEMP7 = RX10_TEMP4 ; final String RX10_TEMP5 = Program . toStringRegion1 ( X10_TEMP7 ) ; final String X10_TEMP8 = ( X10_TEMP6 + RX10_TEMP5 ) ; final String X10_TEMP9 = ( " " ) ; final String X10_TEMP10 = ( X10_TEMP8 + X10_TEMP9 ) ; final String RX10_TEMP6 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP12 = ( X10_TEMP10 + RX10_TEMP6 ) ; Program . X10Util_println ( X10_TEMP12 ) ; final String X10_TEMP13 = ( "Complex Exception: " ) ; final String RX10_TEMP7 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP15 = ( X10_TEMP13 + RX10_TEMP7 ) ; throw new RuntimeException ( X10_TEMP15 ) ; }
 final place pHere = ( here ) ; final int X10_TEMP19 = ( 0 ) ; final int X10_TEMP20 = ( 0 ) ; final Region1 X10_TEMP21 = Program . createNewRegion1R ( X10_TEMP19 , X10_TEMP20 ) ; final place X10_TEMP22 = ( here ) ; final Dist1 dDst = Program . getPlaceDist1 ( X10_TEMP21 , X10_TEMP22 ) ; final Region1 RX10_TEMP8 = dDst . dReg ; final int RX10_TEMP9 = 0 ; final int RX10_TEMP10 = 1 ; int RX10_TEMP11 = place.MAX_PLACES ; RX10_TEMP11 = RX10_TEMP11 - RX10_TEMP10 ; final region ( : rank==1 ) RX10_TEMP12 = [ 0 : RX10_TEMP11 ] ; final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP11 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP14 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP13 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP15 : RX10_TEMP12 ) { final place RX10_TEMP16 = here ; final int RX10_TEMP17 = RX10_TEMP15 [0] ; final place RX10_TEMP18 = place.places ( RX10_TEMP17 ) ; final int RX10_TEMP19 = Program . getDistLocalCount1 ( dDst , RX10_TEMP17 ) ; final int RX10_TEMP20 = RX10_TEMP19 - RX10_TEMP10 ; 
 final T17 utmp17 = new T17(RX10_TEMP20, RX10_TEMP16, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP18) {Program.thread17(utmp17); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP24 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP12 ] ( point ( : rank==1 ) RX10_TEMP26 ) { final ComplexStub RX10_TEMP25 = RX10_TEMP14 [ RX10_TEMP26 ] ; return RX10_TEMP25 ; }
 ) ; final ComplexRefArray1 RX10_TEMP27 = new ComplexRefArray1 ( dDst , RX10_TEMP24 ) ; final ComplexRefArray1 result = RX10_TEMP27 ; finish { final Dist1 RX10_TEMP28 = c . distValue ; final Dist1 X10_TEMP25 = RX10_TEMP28 ; final Region1 RX10_TEMP29 = X10_TEMP25 . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion1 ( RX10_TEMP29 , pt ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pt not found in the distribution X10_TEMP25." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist1 ( X10_TEMP25 , RX10_TEMP30 ) ; final place X10_TEMP28 = RX10_TEMP34 ; 
 final T18 utmp18 = new T18(result, pHere, pt, c);
 async (X10_TEMP28) {Program.thread18(utmp18); }
 }
 final int X10_TEMP37 = ( 0 ) ; final Point1 RX10_TEMP57 = new Point1 ( X10_TEMP37 ) ; final Dist1 RX10_TEMP58 = result . distValue ; final Region1 RX10_TEMP59 = RX10_TEMP58 . dReg ; final int RX10_TEMP60 = Program . searchPointInRegion1 ( RX10_TEMP59 , RX10_TEMP57 ) ; final int RX10_TEMP61 = 0 ; final boolean RX10_TEMP62 = RX10_TEMP60 < RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP63 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final place RX10_TEMP64 = Program . getPlaceFromDist1 ( RX10_TEMP58 , RX10_TEMP60 ) ; final place RX10_TEMP66 = here ; final boolean RX10_TEMP67 = RX10_TEMP64 != RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP65 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final Complex RX10_TEMP68 = Program . getRefArrayValue1Complex ( result , RX10_TEMP60 ) ; final Complex X10_TEMP39 = ( RX10_TEMP68 ) ; return X10_TEMP39 ; }
 public static int X10Util_pullInt ( final intRefArray1 i , final Point1 pt ) { final Dist1 RX10_TEMP0 = i . distValue ; final Region1 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region1 X10_TEMP1 = RX10_TEMP1 ; final boolean RX10_TEMP2 = Program . regionContainsPoint1 ( X10_TEMP1 , pt ) ; final boolean X10_TEMP3 = ( RX10_TEMP2 ) ; final boolean X10_TEMP5 = ! X10_TEMP3 ; if ( X10_TEMP5 ) { final String X10_TEMP6 = ( "pt must be contained in i.region: " ) ; final Dist1 RX10_TEMP3 = i . distValue ; final Region1 RX10_TEMP4 = RX10_TEMP3 . dReg ; final Region1 X10_TEMP7 = RX10_TEMP4 ; final String RX10_TEMP5 = Program . toStringRegion1 ( X10_TEMP7 ) ; final String X10_TEMP8 = ( X10_TEMP6 + RX10_TEMP5 ) ; final String X10_TEMP9 = ( " " ) ; final String X10_TEMP10 = ( X10_TEMP8 + X10_TEMP9 ) ; final String RX10_TEMP6 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP12 = ( X10_TEMP10 + RX10_TEMP6 ) ; Program . X10Util_println ( X10_TEMP12 ) ; final String X10_TEMP13 = ( "pullDouble Exception: " ) ; final String RX10_TEMP7 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP15 = ( X10_TEMP13 + RX10_TEMP7 ) ; throw new RuntimeException ( X10_TEMP15 ) ; }
 final place pHere = ( here ) ; final int X10_TEMP19 = ( 0 ) ; final int X10_TEMP20 = ( 0 ) ; final Region1 X10_TEMP21 = Program . createNewRegion1R ( X10_TEMP19 , X10_TEMP20 ) ; final place X10_TEMP22 = ( here ) ; final Dist1 dDst = Program . getPlaceDist1 ( X10_TEMP21 , X10_TEMP22 ) ; final Region1 RX10_TEMP8 = dDst . dReg ; final int RX10_TEMP9 = 0 ; final int RX10_TEMP10 = 1 ; int RX10_TEMP11 = place.MAX_PLACES ; RX10_TEMP11 = RX10_TEMP11 - RX10_TEMP10 ; final region ( : rank==1 ) RX10_TEMP12 = [ 0 : RX10_TEMP11 ] ; final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP11 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP14 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP13 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP15 : RX10_TEMP12 ) { final place RX10_TEMP16 = here ; final int RX10_TEMP17 = RX10_TEMP15 [0] ; final place RX10_TEMP18 = place.places ( RX10_TEMP17 ) ; final int RX10_TEMP19 = Program . getDistLocalCount1 ( dDst , RX10_TEMP17 ) ; final int RX10_TEMP20 = RX10_TEMP19 - RX10_TEMP10 ; 
 final T19 utmp19 = new T19(RX10_TEMP20, RX10_TEMP16, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP18) {Program.thread19(utmp19); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP24 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP12 ] ( point ( : rank==1 ) RX10_TEMP26 ) { final intStub RX10_TEMP25 = RX10_TEMP14 [ RX10_TEMP26 ] ; return RX10_TEMP25 ; }
 ) ; final intRefArray1 RX10_TEMP27 = new intRefArray1 ( dDst , RX10_TEMP24 ) ; final intRefArray1 result = RX10_TEMP27 ; finish { final Dist1 RX10_TEMP28 = i . distValue ; final Dist1 X10_TEMP25 = RX10_TEMP28 ; final Region1 RX10_TEMP29 = X10_TEMP25 . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion1 ( RX10_TEMP29 , pt ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pt not found in the distribution X10_TEMP25." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist1 ( X10_TEMP25 , RX10_TEMP30 ) ; final place X10_TEMP28 = RX10_TEMP34 ; 
 final T20 utmp20 = new T20(result, pHere, pt, i);
 async (X10_TEMP28) {Program.thread20(utmp20); }
 }
 final int X10_TEMP37 = ( 0 ) ; final Point1 RX10_TEMP57 = new Point1 ( X10_TEMP37 ) ; final Dist1 RX10_TEMP58 = result . distValue ; final Region1 RX10_TEMP59 = RX10_TEMP58 . dReg ; final int RX10_TEMP60 = Program . searchPointInRegion1 ( RX10_TEMP59 , RX10_TEMP57 ) ; final int RX10_TEMP61 = 0 ; final boolean RX10_TEMP62 = RX10_TEMP60 < RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP63 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final place RX10_TEMP64 = Program . getPlaceFromDist1 ( RX10_TEMP58 , RX10_TEMP60 ) ; final place RX10_TEMP66 = here ; final boolean RX10_TEMP67 = RX10_TEMP64 != RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP65 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final int RX10_TEMP68 = Program . getRefArrayValue1int ( result , RX10_TEMP60 ) ; final int X10_TEMP39 = ( RX10_TEMP68 ) ; return X10_TEMP39 ; }
 public static double X10Util_pullDouble ( final doubleRefArray1 d , final Point1 pt ) { final Dist1 RX10_TEMP0 = d . distValue ; final Region1 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region1 X10_TEMP1 = RX10_TEMP1 ; final boolean RX10_TEMP2 = Program . regionContainsPoint1 ( X10_TEMP1 , pt ) ; final boolean X10_TEMP3 = ( RX10_TEMP2 ) ; final boolean X10_TEMP5 = ! X10_TEMP3 ; if ( X10_TEMP5 ) { final String X10_TEMP6 = ( "pt must be contained in d.region: " ) ; final Dist1 RX10_TEMP3 = d . distValue ; final Region1 RX10_TEMP4 = RX10_TEMP3 . dReg ; final Region1 X10_TEMP7 = RX10_TEMP4 ; final String RX10_TEMP5 = Program . toStringRegion1 ( X10_TEMP7 ) ; final String X10_TEMP8 = ( X10_TEMP6 + RX10_TEMP5 ) ; final String X10_TEMP9 = ( " " ) ; final String X10_TEMP10 = ( X10_TEMP8 + X10_TEMP9 ) ; final String RX10_TEMP6 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP12 = ( X10_TEMP10 + RX10_TEMP6 ) ; Program . X10Util_println ( X10_TEMP12 ) ; final String X10_TEMP13 = ( "pullDouble Exception: " ) ; final String RX10_TEMP7 = Program . toStringPoint1 ( pt ) ; final String X10_TEMP15 = ( X10_TEMP13 + RX10_TEMP7 ) ; throw new RuntimeException ( X10_TEMP15 ) ; }
 final place pHere = ( here ) ; final int X10_TEMP19 = ( 0 ) ; final int X10_TEMP20 = ( 0 ) ; final Region1 X10_TEMP21 = Program . createNewRegion1R ( X10_TEMP19 , X10_TEMP20 ) ; final place X10_TEMP22 = ( here ) ; final Dist1 dDst = Program . getPlaceDist1 ( X10_TEMP21 , X10_TEMP22 ) ; final Region1 RX10_TEMP8 = dDst . dReg ; final int RX10_TEMP9 = 0 ; final int RX10_TEMP10 = 1 ; int RX10_TEMP11 = place.MAX_PLACES ; RX10_TEMP11 = RX10_TEMP11 - RX10_TEMP10 ; final region ( : rank==1 ) RX10_TEMP12 = [ 0 : RX10_TEMP11 ] ; final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP11 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP14 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP13 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP15 : RX10_TEMP12 ) { final place RX10_TEMP16 = here ; final int RX10_TEMP17 = RX10_TEMP15 [0] ; final place RX10_TEMP18 = place.places ( RX10_TEMP17 ) ; final int RX10_TEMP19 = Program . getDistLocalCount1 ( dDst , RX10_TEMP17 ) ; final int RX10_TEMP20 = RX10_TEMP19 - RX10_TEMP10 ; 
 final T21 utmp21 = new T21(RX10_TEMP20, RX10_TEMP16, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP18) {Program.thread21(utmp21); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP24 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP12 ] ( point ( : rank==1 ) RX10_TEMP26 ) { final doubleStub RX10_TEMP25 = RX10_TEMP14 [ RX10_TEMP26 ] ; return RX10_TEMP25 ; }
 ) ; final doubleRefArray1 RX10_TEMP27 = new doubleRefArray1 ( dDst , RX10_TEMP24 ) ; final doubleRefArray1 result = RX10_TEMP27 ; finish { final Dist1 RX10_TEMP28 = d . distValue ; final Dist1 X10_TEMP25 = RX10_TEMP28 ; final Region1 RX10_TEMP29 = X10_TEMP25 . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion1 ( RX10_TEMP29 , pt ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pt not found in the distribution X10_TEMP25." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist1 ( X10_TEMP25 , RX10_TEMP30 ) ; final place X10_TEMP28 = RX10_TEMP34 ; 
 final T22 utmp22 = new T22(result, pHere, pt, d);
 async (X10_TEMP28) {Program.thread22(utmp22); }
 }
 final int X10_TEMP37 = ( 0 ) ; final Point1 RX10_TEMP57 = new Point1 ( X10_TEMP37 ) ; final Dist1 RX10_TEMP58 = result . distValue ; final Region1 RX10_TEMP59 = RX10_TEMP58 . dReg ; final int RX10_TEMP60 = Program . searchPointInRegion1 ( RX10_TEMP59 , RX10_TEMP57 ) ; final int RX10_TEMP61 = 0 ; final boolean RX10_TEMP62 = RX10_TEMP60 < RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP63 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final place RX10_TEMP64 = Program . getPlaceFromDist1 ( RX10_TEMP58 , RX10_TEMP60 ) ; final place RX10_TEMP66 = here ; final boolean RX10_TEMP67 = RX10_TEMP64 != RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP65 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final double RX10_TEMP68 = Program . getRefArrayValue1double ( result , RX10_TEMP60 ) ; final double X10_TEMP39 = ( RX10_TEMP68 ) ; return X10_TEMP39 ; }
 public static Region1 X10Util_getRank2D ( final Region2 r , final int n ) { final Region1 RX10_TEMP0 = Program . getRank2 ( r , n ) ; final Region1 X10_TEMP2 = RX10_TEMP0 ; return X10_TEMP2 ; }
 public static Region1 X10Util_getRank3D ( final Region3 r , final int n ) { final Region1 RX10_TEMP0 = Program . getRank3 ( r , n ) ; final Region1 X10_TEMP2 = RX10_TEMP0 ; return X10_TEMP2 ; }
 public static Region1 X10Util_getLRank2D ( final Dist2 d , final int n ) { final place X10_TEMP4 = ( here ) ; final Region1 X10_TEMP6 = Program . X10Util_getPRank2D ( d , X10_TEMP4 , n ) ; return X10_TEMP6 ; }
 public static Region1 X10Util_getLRank3D ( final Dist3 d , final int n ) { final place X10_TEMP4 = ( here ) ; final Region1 X10_TEMP6 = Program . X10Util_getPRank3D ( d , X10_TEMP4 , n ) ; return X10_TEMP6 ; }
 public static Region1 X10Util_getPRank2D ( final Dist2 d , final place p , final int n ) { final Dist2 X10_TEMP2 = Program . restrictDist2 ( d , p ) ; final Region2 RX10_TEMP0 = X10_TEMP2 . dReg ; final Region2 X10_TEMP5 = RX10_TEMP0 ; final Region1 X10_TEMP7 = Program . X10Util_getRank2D ( X10_TEMP5 , n ) ; return X10_TEMP7 ; }
 public static Region1 X10Util_getPRank3D ( final Dist3 d , final place p , final int n ) { final Dist3 X10_TEMP2 = Program . restrictDist3 ( d , p ) ; final Region3 RX10_TEMP0 = X10_TEMP2 . dReg ; final Region3 X10_TEMP5 = RX10_TEMP0 ; final Region1 X10_TEMP7 = Program . X10Util_getRank3D ( X10_TEMP5 , n ) ; return X10_TEMP7 ; }
 public static Region1 X10Util_get1DLRegion ( final Dist1 d ) { final place X10_TEMP1 = ( here ) ; final Dist1 X10_TEMP3 = Program . restrictDist1 ( d , X10_TEMP1 ) ; final Region1 RX10_TEMP0 = X10_TEMP3 . dReg ; final Region1 X10_TEMP4 = RX10_TEMP0 ; return X10_TEMP4 ; }
 public static Region1 X10Util_get1DPRegion ( final Dist1 d , final place p ) { final Dist1 X10_TEMP2 = Program . restrictDist1 ( d , p ) ; final Region1 RX10_TEMP0 = X10_TEMP2 . dReg ; final Region1 X10_TEMP3 = RX10_TEMP0 ; return X10_TEMP3 ; }
 public static Region2 X10Util_get2DLRegion ( final Dist2 d ) { final place X10_TEMP1 = ( here ) ; final Dist2 X10_TEMP3 = Program . restrictDist2 ( d , X10_TEMP1 ) ; final Region2 RX10_TEMP0 = X10_TEMP3 . dReg ; final Region2 X10_TEMP4 = RX10_TEMP0 ; return X10_TEMP4 ; }
 public static Region2 X10Util_get2DPRegion ( final Dist2 d , final place p ) { final Dist2 X10_TEMP2 = Program . restrictDist2 ( d , p ) ; final Region2 RX10_TEMP0 = X10_TEMP2 . dReg ; final Region2 X10_TEMP3 = RX10_TEMP0 ; return X10_TEMP3 ; }
 public static Region3 X10Util_get3DLRegion ( final Dist3 d ) { final place X10_TEMP1 = ( here ) ; final Dist3 X10_TEMP3 = Program . restrictDist3 ( d , X10_TEMP1 ) ; final Region3 RX10_TEMP0 = X10_TEMP3 . dReg ; final Region3 X10_TEMP4 = RX10_TEMP0 ; return X10_TEMP4 ; }
 public static Region3 X10Util_get3DPRegion ( final Dist3 d , final place p ) { final Dist3 X10_TEMP2 = Program . restrictDist3 ( d , p ) ; final Region3 RX10_TEMP0 = X10_TEMP2 . dReg ; final Region3 X10_TEMP3 = RX10_TEMP0 ; return X10_TEMP3 ; }
 public static void X10Util_print ( final String s ) { if ( _X10Util_DEBUG ) { System.out.print ( s ) ; }
 }
 public static void X10Util_println ( final String s ) { Program . X10Util_print ( s ) ; Program . X10Util_newline ( ) ; }
 public static void X10Util_newline ( ) { final String X10_TEMP2 = ( "\n" ) ; Program . X10Util_print ( X10_TEMP2 ) ; }
 public static ComplexRefArray2 FourierTransform2D_transformC ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f ) { Program . FourierTransform2D_scrambleY ( X10_TEMP0 , f ) ; final int X10_TEMP4 = ( 0 ) ; Program . FourierTransform2D_bitReverse ( X10_TEMP0 , f , X10_TEMP4 ) ; final int X10_TEMP8 = ( 0 ) ; final boolean X10_TEMP9 = ( false ) ; Program . FourierTransform2D_transformRank ( X10_TEMP0 , f , X10_TEMP8 , X10_TEMP9 ) ; final ComplexRefArray2 g = Program . ArrayUtil_transpose ( f ) ; Program . FourierTransform2D_scrambleX ( X10_TEMP0 , g ) ; final int X10_TEMP15 = ( 1 ) ; Program . FourierTransform2D_bitReverse ( X10_TEMP0 , g , X10_TEMP15 ) ; final int X10_TEMP19 = ( 1 ) ; final boolean X10_TEMP20 = ( false ) ; Program . FourierTransform2D_transformRank ( X10_TEMP0 , g , X10_TEMP19 , X10_TEMP20 ) ; return g ; }
 public static ComplexRefArray2 FourierTransform2D_transformD ( final FourierTransform2D X10_TEMP0 , final doubleRefArray2 f ) { final ComplexRefArray2 X10_TEMP3 = Program . ArrayUtil_doubleToComplex ( f ) ; final ComplexRefArray2 X10_TEMP5 = Program . FourierTransform2D_transformC ( X10_TEMP0 , X10_TEMP3 ) ; return X10_TEMP5 ; }
 public static ComplexRefArray2 FourierTransform2D_inverseTransformC ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f ) { final int X10_TEMP3 = ( 1 ) ; Program . FourierTransform2D_bitReverse ( X10_TEMP0 , f , X10_TEMP3 ) ; final int X10_TEMP7 = ( 1 ) ; final boolean X10_TEMP8 = ( true ) ; Program . FourierTransform2D_transformRank ( X10_TEMP0 , f , X10_TEMP7 , X10_TEMP8 ) ; Program . FourierTransform2D_unscrambleX ( X10_TEMP0 , f ) ; final ComplexRefArray2 g = Program . ArrayUtil_transpose ( f ) ; final int X10_TEMP14 = ( 0 ) ; Program . FourierTransform2D_bitReverse ( X10_TEMP0 , g , X10_TEMP14 ) ; final int X10_TEMP18 = ( 0 ) ; final boolean X10_TEMP19 = ( true ) ; Program . FourierTransform2D_transformRank ( X10_TEMP0 , g , X10_TEMP18 , X10_TEMP19 ) ; Program . FourierTransform2D_unscrambleY ( X10_TEMP0 , g ) ; return g ; }
 public static ComplexRefArray2 FourierTransform2D_inverseTransformD ( final FourierTransform2D X10_TEMP0 , final doubleRefArray2 f ) { final ComplexRefArray2 X10_TEMP3 = Program . ArrayUtil_doubleToComplex ( f ) ; final ComplexRefArray2 X10_TEMP5 = Program . FourierTransform2D_inverseTransformC ( X10_TEMP0 , X10_TEMP3 ) ; return X10_TEMP5 ; }
 public static void FourierTransform2D_bitReverse ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f , final int rnk ) { final int X10_TEMP1 = ( 0 ) ; final boolean X10_TEMP3 = ( rnk == X10_TEMP1 ) ; final boolean X10_TEMP4 = X10_TEMP3 ; final int X10_TEMP6 = ( X10_TEMP0 . nBits2 ) ; final int X10_TEMP7 = ( 1 ) ; int X10_TEMP9 = X10_TEMP6 - X10_TEMP7 ; if ( X10_TEMP4 ) { X10_TEMP9 = X10_TEMP0 . nBits1 ; }
 final int X10_TEMP10 = X10_TEMP9 ; final int nBits = ( X10_TEMP10 ) ; final int X10_TEMP11 = ( 0 ) ; final boolean X10_TEMP13 = ( rnk == X10_TEMP11 ) ; final boolean X10_TEMP14 = X10_TEMP13 ; final int X10_TEMP16 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP17 = ( 2 ) ; int X10_TEMP19 = X10_TEMP16 / X10_TEMP17 ; if ( X10_TEMP14 ) { X10_TEMP19 = X10_TEMP0 . length1 ; }
 final int X10_TEMP20 = X10_TEMP19 ; final int r1Length = ( X10_TEMP20 ) ; final int X10_TEMP21 = ( 1 ) ; final int X10_TEMP23 = ( X10_TEMP21 << nBits ) ; final int nrx = ( X10_TEMP23 / r1Length ) ; finish { final Dist1 X10_TEMP26 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP26 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP26 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP26." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP26 , RX10_TEMP7 ) ; final place X10_TEMP27 = RX10_TEMP11 ; 
 final T23 utmp23 = new T23(r1Length, nBits, f, X10_TEMP0);
 async (X10_TEMP27) {Program.thread23(utmp23); }
 }
 }
 }
 public static void FourierTransform2D_scrambleX ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f ) { final int X10_TEMP1 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP2 = ( 2 ) ; final int nxh = ( X10_TEMP1 / X10_TEMP2 ) ; final int X10_TEMP4 = ( 2 ) ; final int nxhh = ( nxh / X10_TEMP4 ) ; final int X10_TEMP8 = ( X10_TEMP0 . length1 ) ; final int X10_TEMP9 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP10 = ( Program . X10Util_maxInt ( X10_TEMP8 , X10_TEMP9 ) ) ; final int X10_TEMP11 = ( X10_TEMP0 . length2 ) ; final int kmr = ( X10_TEMP10 / X10_TEMP11 ) ; finish { final Dist1 X10_TEMP14 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP14 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP14 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP14." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP14 , RX10_TEMP7 ) ; final place X10_TEMP15 = RX10_TEMP11 ; 
 final T24 utmp24 = new T24(kmr, nxhh, nxh, f, X10_TEMP0);
 async (X10_TEMP15) {Program.thread24(utmp24); }
 }
 }
 }
 public static void FourierTransform2D_unscrambleX ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f ) { final int X10_TEMP1 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP2 = ( 2 ) ; final int nxh = ( X10_TEMP1 / X10_TEMP2 ) ; final int X10_TEMP4 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP5 = ( 4 ) ; final int nxhh = ( X10_TEMP4 / X10_TEMP5 ) ; final int X10_TEMP9 = ( X10_TEMP0 . length1 ) ; final int X10_TEMP10 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP11 = ( Program . X10Util_maxInt ( X10_TEMP9 , X10_TEMP10 ) ) ; final int X10_TEMP12 = ( X10_TEMP0 . length2 ) ; final int kmr = ( X10_TEMP11 / X10_TEMP12 ) ; finish { final Dist1 X10_TEMP15 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP15 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP15 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP15." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP15 , RX10_TEMP7 ) ; final place X10_TEMP16 = RX10_TEMP11 ; 
 final T25 utmp25 = new T25(kmr, nxhh, nxh, f, X10_TEMP0);
 async (X10_TEMP16) {Program.thread25(utmp25); }
 }
 }
 }
 public static void FourierTransform2D_scrambleY ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f ) { finish { final place X10_TEMP2 = place.FIRST_PLACE ; 
 final T26 utmp26 = new T26(f, X10_TEMP0);
 async (X10_TEMP2) {Program.thread26(utmp26); }
 }
 }
 public static void FourierTransform2D_unscrambleY ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f ) { finish { final place X10_TEMP2 = place.FIRST_PLACE ; 
 final T27 utmp27 = new T27(f, X10_TEMP0);
 async (X10_TEMP2) {Program.thread27(utmp27); }
 }
 }
 public static void FourierTransform2D_transformRank ( final FourierTransform2D X10_TEMP0 , final ComplexRefArray2 f , final int rnk , final boolean inverse ) { final int X10_TEMP3 = ( X10_TEMP0 . length1 ) ; final int X10_TEMP4 = ( X10_TEMP0 . length2 ) ; final int nxy = ( Program . X10Util_maxInt ( X10_TEMP3 , X10_TEMP4 ) ) ; final int X10_TEMP6 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP7 = ( 2 ) ; final int nxh = ( X10_TEMP6 / X10_TEMP7 ) ; final int X10_TEMP9 = ( X10_TEMP0 . length1 ) ; final int X10_TEMP10 = ( 2 ) ; final int nyh = ( X10_TEMP9 / X10_TEMP10 ) ; final int X10_TEMP12 = ( X10_TEMP0 . length2 ) ; final int X10_TEMP13 = ( 4 ) ; final int nxhh = ( X10_TEMP12 / X10_TEMP13 ) ; final int X10_TEMP15 = ( 0 ) ; final boolean X10_TEMP17 = ( rnk == X10_TEMP15 ) ; final boolean X10_TEMP18 = X10_TEMP17 ; final int X10_TEMP20 = ( X10_TEMP0 . nBits2 ) ; final int X10_TEMP21 = ( 1 ) ; int X10_TEMP23 = X10_TEMP20 - X10_TEMP21 ; if ( X10_TEMP18 ) { X10_TEMP23 = X10_TEMP0 . nBits1 ; }
 final int X10_TEMP24 = X10_TEMP23 ; final int bits = ( X10_TEMP24 ) ; final int X10_TEMP25 = ( 0 ) ; final boolean X10_TEMP27 = ( rnk == X10_TEMP25 ) ; final boolean X10_TEMP28 = X10_TEMP27 ; int X10_TEMP31 = nxh ; if ( X10_TEMP28 ) { X10_TEMP31 = X10_TEMP0 . length1 ; }
 final int X10_TEMP32 = X10_TEMP31 ; final int X10_TEMP33 = ( X10_TEMP32 ) ; final int r = ( nxy / X10_TEMP33 ) ; final int X10_TEMP38 = ( 0 ) ; final int X10_TEMP36 = ( 1 ) ; final int X10_TEMP39 = ( bits - X10_TEMP36 ) ; final Region1 X10_TEMP41 = Program . createNewRegion1R ( X10_TEMP38 , X10_TEMP39 ) ; final int RX10_TEMP3 = 1 ; int RX10_TEMP1 = X10_TEMP41 . regSize ; RX10_TEMP1 = RX10_TEMP1 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP2 = [ 0 : RX10_TEMP1 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP2 ) { final int RX10_TEMP4 = RX10_TEMP0 [0] ; final Point1 exponent = Program . regionOrdinalPoint1 ( X10_TEMP41 , RX10_TEMP4 ) ; final int X10_TEMP43 = ( 1 ) ; final int X10_TEMP44 = ( exponent . f0 ) ; final int stride = ( X10_TEMP43 << X10_TEMP44 ) ; final int X10_TEMP46 = ( 2 ) ; final int width = ( X10_TEMP46 * stride ) ; final int X10_TEMP48 = ( 0 ) ; final boolean X10_TEMP50 = ( rnk == X10_TEMP48 ) ; final boolean X10_TEMP51 = X10_TEMP50 ; int X10_TEMP54 = nxhh ; if ( X10_TEMP51 ) { X10_TEMP54 = nyh ; }
 final int X10_TEMP55 = X10_TEMP54 ; final int X10_TEMP56 = ( X10_TEMP55 ) ; final int km = ( X10_TEMP56 / stride ) ; final int kmr = ( km * r ) ; finish { final Dist1 X10_TEMP60 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP60 . dReg ; final int RX10_TEMP9 = 1 ; int RX10_TEMP7 = RX10_TEMP6 . regSize ; RX10_TEMP7 = RX10_TEMP7 - RX10_TEMP9 ; final region ( : rank==1 ) RX10_TEMP8 = [ 0 : RX10_TEMP7 ] ; for ( point ( : rank==1 ) RX10_TEMP5 : RX10_TEMP8 ) { final int RX10_TEMP10 = RX10_TEMP5 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP6 , RX10_TEMP10 ) ; final Region1 RX10_TEMP11 = X10_TEMP60 . dReg ; final int RX10_TEMP12 = Program . searchPointInRegion1 ( RX10_TEMP11 , pl ) ; final int RX10_TEMP13 = 0 ; final boolean RX10_TEMP14 = RX10_TEMP12 < RX10_TEMP13 ; if ( RX10_TEMP14 ) { final String RX10_TEMP15 = "Point pl not found in the distribution X10_TEMP60." ; throw new RuntimeException ( RX10_TEMP15 ) ; }
 final place RX10_TEMP16 = Program . getPlaceFromDist1 ( X10_TEMP60 , RX10_TEMP12 ) ; final place X10_TEMP61 = RX10_TEMP16 ; 
 final T28 utmp28 = new T28(kmr, km, width, stride, inverse, f, X10_TEMP0);
 async (X10_TEMP61) {Program.thread28(utmp28); }
 }
 }
 }
 }
 public static String FourierTransform2D_toString ( final FourierTransform2D X10_TEMP0 ) { final String X10_TEMP1 = ( "FourierTransform: xbits = " ) ; final int X10_TEMP2 = ( X10_TEMP0 . nBits1 ) ; final String X10_TEMP3 = ( X10_TEMP1 + X10_TEMP2 ) ; final String X10_TEMP4 = ( " ybits = " ) ; final String X10_TEMP5 = ( X10_TEMP3 + X10_TEMP4 ) ; final int X10_TEMP6 = ( X10_TEMP0 . nBits2 ) ; final String X10_TEMP8 = ( X10_TEMP5 + X10_TEMP6 ) ; return X10_TEMP8 ; }
 public static int _LinearESOpenPIC2D_NUMBER_OF_XBITS_init ( ) { final int X10_TEMP2 = ( 5 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_NUMBER_OF_YBITS_init ( ) { final int X10_TEMP2 = ( 5 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_XLENGTH_init ( ) { final int X10_TEMP1 = ( 1 ) ; final int X10_TEMP3 = ( X10_TEMP1 << _LinearESOpenPIC2D_NUMBER_OF_XBITS ) ; return X10_TEMP3 ; }
 public static int _LinearESOpenPIC2D_YLENGTH_init ( ) { final int X10_TEMP1 = ( 1 ) ; final int X10_TEMP3 = ( X10_TEMP1 << _LinearESOpenPIC2D_NUMBER_OF_YBITS ) ; return X10_TEMP3 ; }
 public static int _LinearESOpenPIC2D_PARTICLE_XDENSITY_init ( ) { final int X10_TEMP2 = ( 128 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_PARTICLE_YDENSITY_init ( ) { final int X10_TEMP2 = ( 128 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_NPARTICLES_init ( ) { final int X10_TEMP2 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY * _LinearESOpenPIC2D_PARTICLE_YDENSITY ) ; return X10_TEMP2 ; }
 public static double _LinearESOpenPIC2D_DELTA_TIME_init ( ) { final double X10_TEMP2 = ( 0.2000000e+00 ) ; return X10_TEMP2 ; }
 public static double _LinearESOpenPIC2D_ELECTRON_CHARGE_init ( ) { final double X10_TEMP1 = ( 1.0 ) ; final int X10_TEMP2 = 0 ; final double X10_TEMP4 = ( X10_TEMP2 - X10_TEMP1 ) ; return X10_TEMP4 ; }
 public static double _LinearESOpenPIC2D_THERMAL_XVELOCITY_init ( ) { final double X10_TEMP2 = ( 1.0 ) ; return X10_TEMP2 ; }
 public static double _LinearESOpenPIC2D_THERMAL_YVELOCITY_init ( ) { final double X10_TEMP2 = ( 1.0 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_BOUNDARY_CONDITION_init ( ) { final int X10_TEMP2 = ( 2 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_TIME_STEPS_init ( ) { final int X10_TEMP2 = ( 325 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_SORT_TIME_init ( ) { final int X10_TEMP2 = ( 50 ) ; return X10_TEMP2 ; }
 public static double _LinearESOpenPIC2D_IMBALANCE_init ( ) { final double X10_TEMP2 = ( 0.08 ) ; return X10_TEMP2 ; }
 public static int _LinearESOpenPIC2D_MOVE_FIELD_TO_DIST_MAX_ROWS_init ( ) { final int X10_TEMP1 = ( 4 ) ; final int X10_TEMP2 = ( X10_TEMP1 * _LinearESOpenPIC2D_YLENGTH ) ; final int X10_TEMP3 = ( place.MAX_PLACES ) ; final int X10_TEMP5 = ( X10_TEMP2 / X10_TEMP3 ) ; return X10_TEMP5 ; }
 public static int _LinearESOpenPIC2D_MOVE_PARTICLES_MAX_init ( ) { final int X10_TEMP1 = ( 4 ) ; final int X10_TEMP2 = ( X10_TEMP1 * _LinearESOpenPIC2D_NPARTICLES ) ; final int X10_TEMP3 = ( place.MAX_PLACES ) ; final int X10_TEMP5 = ( X10_TEMP2 / X10_TEMP3 ) ; return X10_TEMP5 ; }
 public static int _LinearESOpenPIC2D_MOVE_PARTICLES_MAX_BUFFER_init ( ) { final int X10_TEMP1 = ( 4 ) ; final int X10_TEMP2 = ( X10_TEMP1 * _LinearESOpenPIC2D_NPARTICLES ) ; final int X10_TEMP3 = ( place.MAX_PLACES ) ; final int X10_TEMP5 = ( X10_TEMP2 / X10_TEMP3 ) ; return X10_TEMP5 ; }
 public static void LinearESOpenPIC2D_run ( final LinearESOpenPIC2D X10_TEMP0 ) { final long X10_TEMP2 = ( System.currentTimeMillis ( ) ) ; final long X10_TEMP3 = ( X10_TEMP2 ) ; X10_TEMP0 . totalTime = ( X10_TEMP3 ) ; final long X10_TEMP5 = ( System.currentTimeMillis ( ) ) ; final long X10_TEMP6 = ( X10_TEMP5 ) ; X10_TEMP0 . initTime = ( X10_TEMP6 ) ; Program . LinearESOpenPIC2D_initialize ( X10_TEMP0 ) ; final long X10_TEMP7 = ( System.currentTimeMillis ( ) ) ; final long X10_TEMP8 = ( X10_TEMP0 . initTime ) ; final long X10_TEMP10 = ( X10_TEMP7 - X10_TEMP8 ) ; final long X10_TEMP11 = ( X10_TEMP10 ) ; X10_TEMP0 . initTime = ( X10_TEMP11 ) ; final int X10_TEMP15 = ( 0 ) ; final int X10_TEMP13 = ( 1 ) ; final int X10_TEMP16 = ( _LinearESOpenPIC2D_TIME_STEPS - X10_TEMP13 ) ; final Region1 X10_TEMP18 = Program . createNewRegion1R ( X10_TEMP15 , X10_TEMP16 ) ; final int RX10_TEMP3 = 1 ; int RX10_TEMP1 = X10_TEMP18 . regSize ; RX10_TEMP1 = RX10_TEMP1 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP2 = [ 0 : RX10_TEMP1 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP2 ) { final int RX10_TEMP4 = RX10_TEMP0 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( X10_TEMP18 , RX10_TEMP4 ) ; final String X10_TEMP20 = ( "T = " ) ; final int X10_TEMP21 = ( i . f0 ) ; final String X10_TEMP23 = ( X10_TEMP20 + X10_TEMP21 ) ; System.out.println ( X10_TEMP23 ) ; final doubleRefArray2 X10_TEMP25 = X10_TEMP0 . backgroundCharge ; final doubleRefArray1 e = Program . LinearESOpenPIC2D_stepTime ( X10_TEMP0 , X10_TEMP25 ) ; final int X10_TEMP28 = ( i . f0 ) ; final int X10_TEMP29 = ( X10_TEMP28 % _LinearESOpenPIC2D_SORT_TIME ) ; final int X10_TEMP30 = ( 0 ) ; final boolean X10_TEMP32 = X10_TEMP29 == X10_TEMP30 ; if ( X10_TEMP32 ) { long time0 = ( System.currentTimeMillis ( ) ) ; final ParticleRefArray1 X10_TEMP37 = X10_TEMP0 . particles ; final doubleRefArray2 X10_TEMP35 = X10_TEMP0 . backgroundCharge ; final Dist2 RX10_TEMP5 = X10_TEMP35 . distValue ; final Dist2 X10_TEMP38 = RX10_TEMP5 ; Program . LinearESOpenPIC2D_sortParticles ( X10_TEMP0 , X10_TEMP37 , X10_TEMP38 ) ; final long X10_TEMP42 = ( X10_TEMP0 . moveTime ) ; final long X10_TEMP39 = ( System.currentTimeMillis ( ) ) ; final long X10_TEMP41 = ( X10_TEMP39 - time0 ) ; final long X10_TEMP44 = ( X10_TEMP42 + X10_TEMP41 ) ; final long X10_TEMP45 = ( X10_TEMP44 ) ; X10_TEMP0 . moveTime = ( X10_TEMP45 ) ; }
 final String X10_TEMP48 = ( "field, kinetic, total energies = " ) ; final int X10_TEMP47 = ( 0 ) ; final Point1 RX10_TEMP6 = new Point1 ( X10_TEMP47 ) ; final Dist1 RX10_TEMP7 = e . distValue ; final Region1 RX10_TEMP8 = RX10_TEMP7 . dReg ; final int RX10_TEMP9 = Program . searchPointInRegion1 ( RX10_TEMP8 , RX10_TEMP6 ) ; final int RX10_TEMP10 = 0 ; final boolean RX10_TEMP11 = RX10_TEMP9 < RX10_TEMP10 ; if ( RX10_TEMP11 ) { String RX10_TEMP12 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP12 ) ; }
 final place RX10_TEMP13 = Program . getPlaceFromDist1 ( RX10_TEMP7 , RX10_TEMP9 ) ; final place RX10_TEMP15 = here ; final boolean RX10_TEMP16 = RX10_TEMP13 != RX10_TEMP15 ; if ( RX10_TEMP16 ) { String RX10_TEMP14 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP14 ) ; }
 final double RX10_TEMP17 = Program . getRefArrayValue1double ( e , RX10_TEMP9 ) ; final double X10_TEMP49 = ( RX10_TEMP17 ) ; final String X10_TEMP50 = ( X10_TEMP48 + X10_TEMP49 ) ; final String X10_TEMP51 = ( "," ) ; final String X10_TEMP54 = ( X10_TEMP50 + X10_TEMP51 ) ; final int X10_TEMP53 = ( 1 ) ; final Point1 RX10_TEMP18 = new Point1 ( X10_TEMP53 ) ; final Dist1 RX10_TEMP19 = e . distValue ; final Region1 RX10_TEMP20 = RX10_TEMP19 . dReg ; final int RX10_TEMP21 = Program . searchPointInRegion1 ( RX10_TEMP20 , RX10_TEMP18 ) ; final int RX10_TEMP22 = 0 ; final boolean RX10_TEMP23 = RX10_TEMP21 < RX10_TEMP22 ; if ( RX10_TEMP23 ) { String RX10_TEMP24 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final place RX10_TEMP25 = Program . getPlaceFromDist1 ( RX10_TEMP19 , RX10_TEMP21 ) ; final place RX10_TEMP27 = here ; final boolean RX10_TEMP28 = RX10_TEMP25 != RX10_TEMP27 ; if ( RX10_TEMP28 ) { String RX10_TEMP26 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP26 ) ; }
 final double RX10_TEMP29 = Program . getRefArrayValue1double ( e , RX10_TEMP21 ) ; final double X10_TEMP55 = ( RX10_TEMP29 ) ; final String X10_TEMP56 = ( X10_TEMP54 + X10_TEMP55 ) ; final String X10_TEMP57 = ( "," ) ; final String X10_TEMP60 = ( X10_TEMP56 + X10_TEMP57 ) ; final int X10_TEMP59 = ( 2 ) ; final Point1 RX10_TEMP30 = new Point1 ( X10_TEMP59 ) ; final Dist1 RX10_TEMP31 = e . distValue ; final Region1 RX10_TEMP32 = RX10_TEMP31 . dReg ; final int RX10_TEMP33 = Program . searchPointInRegion1 ( RX10_TEMP32 , RX10_TEMP30 ) ; final int RX10_TEMP34 = 0 ; final boolean RX10_TEMP35 = RX10_TEMP33 < RX10_TEMP34 ; if ( RX10_TEMP35 ) { String RX10_TEMP36 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 final place RX10_TEMP37 = Program . getPlaceFromDist1 ( RX10_TEMP31 , RX10_TEMP33 ) ; final place RX10_TEMP39 = here ; final boolean RX10_TEMP40 = RX10_TEMP37 != RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP38 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 final double RX10_TEMP41 = Program . getRefArrayValue1double ( e , RX10_TEMP33 ) ; final double X10_TEMP61 = ( RX10_TEMP41 ) ; final String X10_TEMP63 = ( X10_TEMP60 + X10_TEMP61 ) ; System.out.println ( X10_TEMP63 ) ; final int X10_TEMP66 = ( i . f0 ) ; final int X10_TEMP65 = ( 1 ) ; final int X10_TEMP67 = ( _LinearESOpenPIC2D_TIME_STEPS - X10_TEMP65 ) ; final boolean X10_TEMP69 = X10_TEMP66 == X10_TEMP67 ; if ( X10_TEMP69 ) { final int X10_TEMP72 = ( 0 ) ; final int X10_TEMP73 = ( 2 ) ; final Region1 X10_TEMP74 = Program . createNewRegion1R ( X10_TEMP72 , X10_TEMP73 ) ; final place X10_TEMP75 = ( here ) ; final Dist1 dRef = Program . getPlaceDist1 ( X10_TEMP74 , X10_TEMP75 ) ; final Region1 RX10_TEMP42 = dRef . dReg ; final int RX10_TEMP43 = 0 ; final int RX10_TEMP44 = 1 ; int RX10_TEMP45 = place.MAX_PLACES ; RX10_TEMP45 = RX10_TEMP45 - RX10_TEMP44 ; final region ( : rank==1 ) RX10_TEMP46 = [ 0 : RX10_TEMP45 ] ; final dist ( : rank==1 ) RX10_TEMP47 = [ 0 : RX10_TEMP45 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP48 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP47 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP49 : RX10_TEMP46 ) { final place RX10_TEMP50 = here ; final int RX10_TEMP51 = RX10_TEMP49 [0] ; final place RX10_TEMP52 = place.places ( RX10_TEMP51 ) ; final int RX10_TEMP53 = Program . getDistLocalCount1 ( dRef , RX10_TEMP51 ) ; final int RX10_TEMP54 = RX10_TEMP53 - RX10_TEMP44 ; 
 final T29 utmp29 = new T29(RX10_TEMP54, RX10_TEMP50, RX10_TEMP49, RX10_TEMP48);
 async (RX10_TEMP52) {Program.thread29(utmp29); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP58 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP46 ] ( point ( : rank==1 ) RX10_TEMP60 ) { final doubleStub RX10_TEMP59 = RX10_TEMP48 [ RX10_TEMP60 ] ; return RX10_TEMP59 ; }
 ) ; final doubleRefArray1 RX10_TEMP61 = new doubleRefArray1 ( dRef , RX10_TEMP58 ) ; final doubleRefArray1 ref = RX10_TEMP61 ; final int X10_TEMP78 = ( 2 ) ; final boolean X10_TEMP80 = ( _LinearESOpenPIC2D_NUMBER_OF_XBITS == X10_TEMP78 ) ; final int X10_TEMP79 = ( 3 ) ; final boolean X10_TEMP81 = ( _LinearESOpenPIC2D_NUMBER_OF_YBITS == X10_TEMP79 ) ; final boolean X10_TEMP83 = ( X10_TEMP80 && X10_TEMP81 ) ; final int X10_TEMP82 = ( 4 ) ; final boolean X10_TEMP84 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY == X10_TEMP82 ) ; final boolean X10_TEMP86 = ( X10_TEMP83 && X10_TEMP84 ) ; final int X10_TEMP85 = ( 8 ) ; final boolean X10_TEMP87 = ( _LinearESOpenPIC2D_PARTICLE_YDENSITY == X10_TEMP85 ) ; final boolean X10_TEMP89 = X10_TEMP86 && X10_TEMP87 ; if ( X10_TEMP89 ) { final int X10_TEMP91 = ( 0 ) ; final double X10_TEMP93 = ( 0.009936711552799253 ) ; final double X10_TEMP94 = ( X10_TEMP93 ) ; final Point1 RX10_TEMP62 = new Point1 ( X10_TEMP91 ) ; final Dist1 RX10_TEMP63 = ref . distValue ; final Region1 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP65 = Program . searchPointInRegion1 ( RX10_TEMP64 , RX10_TEMP62 ) ; final int RX10_TEMP66 = 0 ; final boolean RX10_TEMP67 = RX10_TEMP65 < RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP68 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP68 ) ; }
 final place RX10_TEMP69 = Program . getPlaceFromDist1 ( RX10_TEMP63 , RX10_TEMP65 ) ; final place RX10_TEMP71 = here ; final boolean RX10_TEMP72 = RX10_TEMP69 != RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP70 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP65 , X10_TEMP94 ) ; final int X10_TEMP96 = ( 1 ) ; final double X10_TEMP98 = ( 35.7904959849017 ) ; final double X10_TEMP99 = ( X10_TEMP98 ) ; final Point1 RX10_TEMP73 = new Point1 ( X10_TEMP96 ) ; final Dist1 RX10_TEMP74 = ref . distValue ; final Region1 RX10_TEMP75 = RX10_TEMP74 . dReg ; final int RX10_TEMP76 = Program . searchPointInRegion1 ( RX10_TEMP75 , RX10_TEMP73 ) ; final int RX10_TEMP77 = 0 ; final boolean RX10_TEMP78 = RX10_TEMP76 < RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP79 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP79 ) ; }
 final place RX10_TEMP80 = Program . getPlaceFromDist1 ( RX10_TEMP74 , RX10_TEMP76 ) ; final place RX10_TEMP82 = here ; final boolean RX10_TEMP83 = RX10_TEMP80 != RX10_TEMP82 ; if ( RX10_TEMP83 ) { String RX10_TEMP81 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP81 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP76 , X10_TEMP99 ) ; final int X10_TEMP101 = ( 2 ) ; final double X10_TEMP103 = ( 35.8004326964545 ) ; final double X10_TEMP104 = ( X10_TEMP103 ) ; final Point1 RX10_TEMP84 = new Point1 ( X10_TEMP101 ) ; final Dist1 RX10_TEMP85 = ref . distValue ; final Region1 RX10_TEMP86 = RX10_TEMP85 . dReg ; final int RX10_TEMP87 = Program . searchPointInRegion1 ( RX10_TEMP86 , RX10_TEMP84 ) ; final int RX10_TEMP88 = 0 ; final boolean RX10_TEMP89 = RX10_TEMP87 < RX10_TEMP88 ; if ( RX10_TEMP89 ) { String RX10_TEMP90 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP90 ) ; }
 final place RX10_TEMP91 = Program . getPlaceFromDist1 ( RX10_TEMP85 , RX10_TEMP87 ) ; final place RX10_TEMP93 = here ; final boolean RX10_TEMP94 = RX10_TEMP91 != RX10_TEMP93 ; if ( RX10_TEMP94 ) { String RX10_TEMP92 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP92 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP87 , X10_TEMP104 ) ; final String X10_TEMP115 = ( "final field energy diff = " ) ; final int X10_TEMP106 = ( 0 ) ; final Point1 RX10_TEMP95 = new Point1 ( X10_TEMP106 ) ; final Dist1 RX10_TEMP96 = ref . distValue ; final Region1 RX10_TEMP97 = RX10_TEMP96 . dReg ; final int RX10_TEMP98 = Program . searchPointInRegion1 ( RX10_TEMP97 , RX10_TEMP95 ) ; final int RX10_TEMP99 = 0 ; final boolean RX10_TEMP100 = RX10_TEMP98 < RX10_TEMP99 ; if ( RX10_TEMP100 ) { String RX10_TEMP101 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP101 ) ; }
 final place RX10_TEMP102 = Program . getPlaceFromDist1 ( RX10_TEMP96 , RX10_TEMP98 ) ; final place RX10_TEMP104 = here ; final boolean RX10_TEMP105 = RX10_TEMP102 != RX10_TEMP104 ; if ( RX10_TEMP105 ) { String RX10_TEMP103 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP103 ) ; }
 final double RX10_TEMP106 = Program . getRefArrayValue1double ( ref , RX10_TEMP98 ) ; final double X10_TEMP109 = ( RX10_TEMP106 ) ; final int X10_TEMP108 = ( 0 ) ; final Point1 RX10_TEMP107 = new Point1 ( X10_TEMP108 ) ; final Dist1 RX10_TEMP108 = e . distValue ; final Region1 RX10_TEMP109 = RX10_TEMP108 . dReg ; final int RX10_TEMP110 = Program . searchPointInRegion1 ( RX10_TEMP109 , RX10_TEMP107 ) ; final int RX10_TEMP111 = 0 ; final boolean RX10_TEMP112 = RX10_TEMP110 < RX10_TEMP111 ; if ( RX10_TEMP112 ) { String RX10_TEMP113 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP113 ) ; }
 final place RX10_TEMP114 = Program . getPlaceFromDist1 ( RX10_TEMP108 , RX10_TEMP110 ) ; final place RX10_TEMP116 = here ; final boolean RX10_TEMP117 = RX10_TEMP114 != RX10_TEMP116 ; if ( RX10_TEMP117 ) { String RX10_TEMP115 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP115 ) ; }
 final double RX10_TEMP118 = Program . getRefArrayValue1double ( e , RX10_TEMP110 ) ; final double X10_TEMP110 = ( RX10_TEMP118 ) ; final double X10_TEMP112 = ( X10_TEMP109 - X10_TEMP110 ) ; final double X10_TEMP114 = ( Math . abs ( X10_TEMP112 ) ) ; final String X10_TEMP117 = ( X10_TEMP115 + X10_TEMP114 ) ; System.out.println ( X10_TEMP117 ) ; final String X10_TEMP128 = ( "final kinetic energy diff = " ) ; final int X10_TEMP119 = ( 1 ) ; final Point1 RX10_TEMP119 = new Point1 ( X10_TEMP119 ) ; final Dist1 RX10_TEMP120 = ref . distValue ; final Region1 RX10_TEMP121 = RX10_TEMP120 . dReg ; final int RX10_TEMP122 = Program . searchPointInRegion1 ( RX10_TEMP121 , RX10_TEMP119 ) ; final int RX10_TEMP123 = 0 ; final boolean RX10_TEMP124 = RX10_TEMP122 < RX10_TEMP123 ; if ( RX10_TEMP124 ) { String RX10_TEMP125 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP125 ) ; }
 final place RX10_TEMP126 = Program . getPlaceFromDist1 ( RX10_TEMP120 , RX10_TEMP122 ) ; final place RX10_TEMP128 = here ; final boolean RX10_TEMP129 = RX10_TEMP126 != RX10_TEMP128 ; if ( RX10_TEMP129 ) { String RX10_TEMP127 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP127 ) ; }
 final double RX10_TEMP130 = Program . getRefArrayValue1double ( ref , RX10_TEMP122 ) ; final double X10_TEMP122 = ( RX10_TEMP130 ) ; final int X10_TEMP121 = ( 1 ) ; final Point1 RX10_TEMP131 = new Point1 ( X10_TEMP121 ) ; final Dist1 RX10_TEMP132 = e . distValue ; final Region1 RX10_TEMP133 = RX10_TEMP132 . dReg ; final int RX10_TEMP134 = Program . searchPointInRegion1 ( RX10_TEMP133 , RX10_TEMP131 ) ; final int RX10_TEMP135 = 0 ; final boolean RX10_TEMP136 = RX10_TEMP134 < RX10_TEMP135 ; if ( RX10_TEMP136 ) { String RX10_TEMP137 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP137 ) ; }
 final place RX10_TEMP138 = Program . getPlaceFromDist1 ( RX10_TEMP132 , RX10_TEMP134 ) ; final place RX10_TEMP140 = here ; final boolean RX10_TEMP141 = RX10_TEMP138 != RX10_TEMP140 ; if ( RX10_TEMP141 ) { String RX10_TEMP139 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP139 ) ; }
 final double RX10_TEMP142 = Program . getRefArrayValue1double ( e , RX10_TEMP134 ) ; final double X10_TEMP123 = ( RX10_TEMP142 ) ; final double X10_TEMP125 = ( X10_TEMP122 - X10_TEMP123 ) ; final double X10_TEMP127 = ( Math . abs ( X10_TEMP125 ) ) ; final String X10_TEMP130 = ( X10_TEMP128 + X10_TEMP127 ) ; System.out.println ( X10_TEMP130 ) ; final String X10_TEMP141 = ( "final final energy diff = " ) ; final int X10_TEMP132 = ( 2 ) ; final Point1 RX10_TEMP143 = new Point1 ( X10_TEMP132 ) ; final Dist1 RX10_TEMP144 = ref . distValue ; final Region1 RX10_TEMP145 = RX10_TEMP144 . dReg ; final int RX10_TEMP146 = Program . searchPointInRegion1 ( RX10_TEMP145 , RX10_TEMP143 ) ; final int RX10_TEMP147 = 0 ; final boolean RX10_TEMP148 = RX10_TEMP146 < RX10_TEMP147 ; if ( RX10_TEMP148 ) { String RX10_TEMP149 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP149 ) ; }
 final place RX10_TEMP150 = Program . getPlaceFromDist1 ( RX10_TEMP144 , RX10_TEMP146 ) ; final place RX10_TEMP152 = here ; final boolean RX10_TEMP153 = RX10_TEMP150 != RX10_TEMP152 ; if ( RX10_TEMP153 ) { String RX10_TEMP151 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP151 ) ; }
 final double RX10_TEMP154 = Program . getRefArrayValue1double ( ref , RX10_TEMP146 ) ; final double X10_TEMP135 = ( RX10_TEMP154 ) ; final int X10_TEMP134 = ( 2 ) ; final Point1 RX10_TEMP155 = new Point1 ( X10_TEMP134 ) ; final Dist1 RX10_TEMP156 = e . distValue ; final Region1 RX10_TEMP157 = RX10_TEMP156 . dReg ; final int RX10_TEMP158 = Program . searchPointInRegion1 ( RX10_TEMP157 , RX10_TEMP155 ) ; final int RX10_TEMP159 = 0 ; final boolean RX10_TEMP160 = RX10_TEMP158 < RX10_TEMP159 ; if ( RX10_TEMP160 ) { String RX10_TEMP161 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP161 ) ; }
 final place RX10_TEMP162 = Program . getPlaceFromDist1 ( RX10_TEMP156 , RX10_TEMP158 ) ; final place RX10_TEMP164 = here ; final boolean RX10_TEMP165 = RX10_TEMP162 != RX10_TEMP164 ; if ( RX10_TEMP165 ) { String RX10_TEMP163 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP163 ) ; }
 final double RX10_TEMP166 = Program . getRefArrayValue1double ( e , RX10_TEMP158 ) ; final double X10_TEMP136 = ( RX10_TEMP166 ) ; final double X10_TEMP138 = ( X10_TEMP135 - X10_TEMP136 ) ; final double X10_TEMP140 = ( Math . abs ( X10_TEMP138 ) ) ; final String X10_TEMP143 = ( X10_TEMP141 + X10_TEMP140 ) ; System.out.println ( X10_TEMP143 ) ; }
 else { final int X10_TEMP144 = ( 3 ) ; final boolean X10_TEMP146 = ( _LinearESOpenPIC2D_NUMBER_OF_XBITS == X10_TEMP144 ) ; final int X10_TEMP145 = ( 4 ) ; final boolean X10_TEMP147 = ( _LinearESOpenPIC2D_NUMBER_OF_YBITS == X10_TEMP145 ) ; final boolean X10_TEMP149 = ( X10_TEMP146 && X10_TEMP147 ) ; final int X10_TEMP148 = ( 8 ) ; final boolean X10_TEMP150 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY == X10_TEMP148 ) ; final boolean X10_TEMP152 = ( X10_TEMP149 && X10_TEMP150 ) ; final int X10_TEMP151 = ( 16 ) ; final boolean X10_TEMP153 = ( _LinearESOpenPIC2D_PARTICLE_YDENSITY == X10_TEMP151 ) ; final boolean X10_TEMP155 = X10_TEMP152 && X10_TEMP153 ; if ( X10_TEMP155 ) { final int X10_TEMP157 = ( 0 ) ; final double X10_TEMP159 = ( 1.12911030199718 ) ; final double X10_TEMP160 = ( X10_TEMP159 ) ; final Point1 RX10_TEMP167 = new Point1 ( X10_TEMP157 ) ; final Dist1 RX10_TEMP168 = ref . distValue ; final Region1 RX10_TEMP169 = RX10_TEMP168 . dReg ; final int RX10_TEMP170 = Program . searchPointInRegion1 ( RX10_TEMP169 , RX10_TEMP167 ) ; final int RX10_TEMP171 = 0 ; final boolean RX10_TEMP172 = RX10_TEMP170 < RX10_TEMP171 ; if ( RX10_TEMP172 ) { String RX10_TEMP173 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP173 ) ; }
 final place RX10_TEMP174 = Program . getPlaceFromDist1 ( RX10_TEMP168 , RX10_TEMP170 ) ; final place RX10_TEMP176 = here ; final boolean RX10_TEMP177 = RX10_TEMP174 != RX10_TEMP176 ; if ( RX10_TEMP177 ) { String RX10_TEMP175 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP175 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP170 , X10_TEMP160 ) ; final int X10_TEMP162 = ( 1 ) ; final double X10_TEMP164 = ( 138.01404855563126 ) ; final double X10_TEMP165 = ( X10_TEMP164 ) ; final Point1 RX10_TEMP178 = new Point1 ( X10_TEMP162 ) ; final Dist1 RX10_TEMP179 = ref . distValue ; final Region1 RX10_TEMP180 = RX10_TEMP179 . dReg ; final int RX10_TEMP181 = Program . searchPointInRegion1 ( RX10_TEMP180 , RX10_TEMP178 ) ; final int RX10_TEMP182 = 0 ; final boolean RX10_TEMP183 = RX10_TEMP181 < RX10_TEMP182 ; if ( RX10_TEMP183 ) { String RX10_TEMP184 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP184 ) ; }
 final place RX10_TEMP185 = Program . getPlaceFromDist1 ( RX10_TEMP179 , RX10_TEMP181 ) ; final place RX10_TEMP187 = here ; final boolean RX10_TEMP188 = RX10_TEMP185 != RX10_TEMP187 ; if ( RX10_TEMP188 ) { String RX10_TEMP186 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP186 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP181 , X10_TEMP165 ) ; final int X10_TEMP167 = ( 2 ) ; final double X10_TEMP169 = ( 139.14315885762844 ) ; final double X10_TEMP170 = ( X10_TEMP169 ) ; final Point1 RX10_TEMP189 = new Point1 ( X10_TEMP167 ) ; final Dist1 RX10_TEMP190 = ref . distValue ; final Region1 RX10_TEMP191 = RX10_TEMP190 . dReg ; final int RX10_TEMP192 = Program . searchPointInRegion1 ( RX10_TEMP191 , RX10_TEMP189 ) ; final int RX10_TEMP193 = 0 ; final boolean RX10_TEMP194 = RX10_TEMP192 < RX10_TEMP193 ; if ( RX10_TEMP194 ) { String RX10_TEMP195 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP195 ) ; }
 final place RX10_TEMP196 = Program . getPlaceFromDist1 ( RX10_TEMP190 , RX10_TEMP192 ) ; final place RX10_TEMP198 = here ; final boolean RX10_TEMP199 = RX10_TEMP196 != RX10_TEMP198 ; if ( RX10_TEMP199 ) { String RX10_TEMP197 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP197 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP192 , X10_TEMP170 ) ; final String X10_TEMP181 = ( "final field energy diff = " ) ; final int X10_TEMP172 = ( 0 ) ; final Point1 RX10_TEMP200 = new Point1 ( X10_TEMP172 ) ; final Dist1 RX10_TEMP201 = ref . distValue ; final Region1 RX10_TEMP202 = RX10_TEMP201 . dReg ; final int RX10_TEMP203 = Program . searchPointInRegion1 ( RX10_TEMP202 , RX10_TEMP200 ) ; final int RX10_TEMP204 = 0 ; final boolean RX10_TEMP205 = RX10_TEMP203 < RX10_TEMP204 ; if ( RX10_TEMP205 ) { String RX10_TEMP206 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP206 ) ; }
 final place RX10_TEMP207 = Program . getPlaceFromDist1 ( RX10_TEMP201 , RX10_TEMP203 ) ; final place RX10_TEMP209 = here ; final boolean RX10_TEMP210 = RX10_TEMP207 != RX10_TEMP209 ; if ( RX10_TEMP210 ) { String RX10_TEMP208 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP208 ) ; }
 final double RX10_TEMP211 = Program . getRefArrayValue1double ( ref , RX10_TEMP203 ) ; final double X10_TEMP175 = ( RX10_TEMP211 ) ; final int X10_TEMP174 = ( 0 ) ; final Point1 RX10_TEMP212 = new Point1 ( X10_TEMP174 ) ; final Dist1 RX10_TEMP213 = e . distValue ; final Region1 RX10_TEMP214 = RX10_TEMP213 . dReg ; final int RX10_TEMP215 = Program . searchPointInRegion1 ( RX10_TEMP214 , RX10_TEMP212 ) ; final int RX10_TEMP216 = 0 ; final boolean RX10_TEMP217 = RX10_TEMP215 < RX10_TEMP216 ; if ( RX10_TEMP217 ) { String RX10_TEMP218 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP218 ) ; }
 final place RX10_TEMP219 = Program . getPlaceFromDist1 ( RX10_TEMP213 , RX10_TEMP215 ) ; final place RX10_TEMP221 = here ; final boolean RX10_TEMP222 = RX10_TEMP219 != RX10_TEMP221 ; if ( RX10_TEMP222 ) { String RX10_TEMP220 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP220 ) ; }
 final double RX10_TEMP223 = Program . getRefArrayValue1double ( e , RX10_TEMP215 ) ; final double X10_TEMP176 = ( RX10_TEMP223 ) ; final double X10_TEMP178 = ( X10_TEMP175 - X10_TEMP176 ) ; final double X10_TEMP180 = ( Math . abs ( X10_TEMP178 ) ) ; final String X10_TEMP183 = ( X10_TEMP181 + X10_TEMP180 ) ; System.out.println ( X10_TEMP183 ) ; final String X10_TEMP194 = ( "final kinetic energy diff = " ) ; final int X10_TEMP185 = ( 1 ) ; final Point1 RX10_TEMP224 = new Point1 ( X10_TEMP185 ) ; final Dist1 RX10_TEMP225 = ref . distValue ; final Region1 RX10_TEMP226 = RX10_TEMP225 . dReg ; final int RX10_TEMP227 = Program . searchPointInRegion1 ( RX10_TEMP226 , RX10_TEMP224 ) ; final int RX10_TEMP228 = 0 ; final boolean RX10_TEMP229 = RX10_TEMP227 < RX10_TEMP228 ; if ( RX10_TEMP229 ) { String RX10_TEMP230 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP230 ) ; }
 final place RX10_TEMP231 = Program . getPlaceFromDist1 ( RX10_TEMP225 , RX10_TEMP227 ) ; final place RX10_TEMP233 = here ; final boolean RX10_TEMP234 = RX10_TEMP231 != RX10_TEMP233 ; if ( RX10_TEMP234 ) { String RX10_TEMP232 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP232 ) ; }
 final double RX10_TEMP235 = Program . getRefArrayValue1double ( ref , RX10_TEMP227 ) ; final double X10_TEMP188 = ( RX10_TEMP235 ) ; final int X10_TEMP187 = ( 1 ) ; final Point1 RX10_TEMP236 = new Point1 ( X10_TEMP187 ) ; final Dist1 RX10_TEMP237 = e . distValue ; final Region1 RX10_TEMP238 = RX10_TEMP237 . dReg ; final int RX10_TEMP239 = Program . searchPointInRegion1 ( RX10_TEMP238 , RX10_TEMP236 ) ; final int RX10_TEMP240 = 0 ; final boolean RX10_TEMP241 = RX10_TEMP239 < RX10_TEMP240 ; if ( RX10_TEMP241 ) { String RX10_TEMP242 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP242 ) ; }
 final place RX10_TEMP243 = Program . getPlaceFromDist1 ( RX10_TEMP237 , RX10_TEMP239 ) ; final place RX10_TEMP245 = here ; final boolean RX10_TEMP246 = RX10_TEMP243 != RX10_TEMP245 ; if ( RX10_TEMP246 ) { String RX10_TEMP244 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP244 ) ; }
 final double RX10_TEMP247 = Program . getRefArrayValue1double ( e , RX10_TEMP239 ) ; final double X10_TEMP189 = ( RX10_TEMP247 ) ; final double X10_TEMP191 = ( X10_TEMP188 - X10_TEMP189 ) ; final double X10_TEMP193 = ( Math . abs ( X10_TEMP191 ) ) ; final String X10_TEMP196 = ( X10_TEMP194 + X10_TEMP193 ) ; System.out.println ( X10_TEMP196 ) ; final String X10_TEMP207 = ( "final final energy diff = " ) ; final int X10_TEMP198 = ( 2 ) ; final Point1 RX10_TEMP248 = new Point1 ( X10_TEMP198 ) ; final Dist1 RX10_TEMP249 = ref . distValue ; final Region1 RX10_TEMP250 = RX10_TEMP249 . dReg ; final int RX10_TEMP251 = Program . searchPointInRegion1 ( RX10_TEMP250 , RX10_TEMP248 ) ; final int RX10_TEMP252 = 0 ; final boolean RX10_TEMP253 = RX10_TEMP251 < RX10_TEMP252 ; if ( RX10_TEMP253 ) { String RX10_TEMP254 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP254 ) ; }
 final place RX10_TEMP255 = Program . getPlaceFromDist1 ( RX10_TEMP249 , RX10_TEMP251 ) ; final place RX10_TEMP257 = here ; final boolean RX10_TEMP258 = RX10_TEMP255 != RX10_TEMP257 ; if ( RX10_TEMP258 ) { String RX10_TEMP256 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP256 ) ; }
 final double RX10_TEMP259 = Program . getRefArrayValue1double ( ref , RX10_TEMP251 ) ; final double X10_TEMP201 = ( RX10_TEMP259 ) ; final int X10_TEMP200 = ( 2 ) ; final Point1 RX10_TEMP260 = new Point1 ( X10_TEMP200 ) ; final Dist1 RX10_TEMP261 = e . distValue ; final Region1 RX10_TEMP262 = RX10_TEMP261 . dReg ; final int RX10_TEMP263 = Program . searchPointInRegion1 ( RX10_TEMP262 , RX10_TEMP260 ) ; final int RX10_TEMP264 = 0 ; final boolean RX10_TEMP265 = RX10_TEMP263 < RX10_TEMP264 ; if ( RX10_TEMP265 ) { String RX10_TEMP266 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP266 ) ; }
 final place RX10_TEMP267 = Program . getPlaceFromDist1 ( RX10_TEMP261 , RX10_TEMP263 ) ; final place RX10_TEMP269 = here ; final boolean RX10_TEMP270 = RX10_TEMP267 != RX10_TEMP269 ; if ( RX10_TEMP270 ) { String RX10_TEMP268 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP268 ) ; }
 final double RX10_TEMP271 = Program . getRefArrayValue1double ( e , RX10_TEMP263 ) ; final double X10_TEMP202 = ( RX10_TEMP271 ) ; final double X10_TEMP204 = ( X10_TEMP201 - X10_TEMP202 ) ; final double X10_TEMP206 = ( Math . abs ( X10_TEMP204 ) ) ; final String X10_TEMP209 = ( X10_TEMP207 + X10_TEMP206 ) ; System.out.println ( X10_TEMP209 ) ; }
 else { final int X10_TEMP210 = ( 5 ) ; final boolean X10_TEMP212 = ( _LinearESOpenPIC2D_NUMBER_OF_XBITS == X10_TEMP210 ) ; final int X10_TEMP211 = ( 5 ) ; final boolean X10_TEMP213 = ( _LinearESOpenPIC2D_NUMBER_OF_YBITS == X10_TEMP211 ) ; final boolean X10_TEMP215 = ( X10_TEMP212 && X10_TEMP213 ) ; final int X10_TEMP214 = ( 128 ) ; final boolean X10_TEMP216 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY == X10_TEMP214 ) ; final boolean X10_TEMP218 = ( X10_TEMP215 && X10_TEMP216 ) ; final int X10_TEMP217 = ( 128 ) ; final boolean X10_TEMP219 = ( _LinearESOpenPIC2D_PARTICLE_YDENSITY == X10_TEMP217 ) ; final boolean X10_TEMP221 = X10_TEMP218 && X10_TEMP219 ; if ( X10_TEMP221 ) { final int X10_TEMP223 = ( 0 ) ; final double X10_TEMP225 = ( 14.29416386663976 ) ; final double X10_TEMP226 = ( X10_TEMP225 ) ; final Point1 RX10_TEMP272 = new Point1 ( X10_TEMP223 ) ; final Dist1 RX10_TEMP273 = ref . distValue ; final Region1 RX10_TEMP274 = RX10_TEMP273 . dReg ; final int RX10_TEMP275 = Program . searchPointInRegion1 ( RX10_TEMP274 , RX10_TEMP272 ) ; final int RX10_TEMP276 = 0 ; final boolean RX10_TEMP277 = RX10_TEMP275 < RX10_TEMP276 ; if ( RX10_TEMP277 ) { String RX10_TEMP278 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP278 ) ; }
 final place RX10_TEMP279 = Program . getPlaceFromDist1 ( RX10_TEMP273 , RX10_TEMP275 ) ; final place RX10_TEMP281 = here ; final boolean RX10_TEMP282 = RX10_TEMP279 != RX10_TEMP281 ; if ( RX10_TEMP282 ) { String RX10_TEMP280 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP280 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP275 , X10_TEMP226 ) ; final int X10_TEMP228 = ( 1 ) ; final double X10_TEMP230 = ( 16556.89300233198082 ) ; final double X10_TEMP231 = ( X10_TEMP230 ) ; final Point1 RX10_TEMP283 = new Point1 ( X10_TEMP228 ) ; final Dist1 RX10_TEMP284 = ref . distValue ; final Region1 RX10_TEMP285 = RX10_TEMP284 . dReg ; final int RX10_TEMP286 = Program . searchPointInRegion1 ( RX10_TEMP285 , RX10_TEMP283 ) ; final int RX10_TEMP287 = 0 ; final boolean RX10_TEMP288 = RX10_TEMP286 < RX10_TEMP287 ; if ( RX10_TEMP288 ) { String RX10_TEMP289 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP289 ) ; }
 final place RX10_TEMP290 = Program . getPlaceFromDist1 ( RX10_TEMP284 , RX10_TEMP286 ) ; final place RX10_TEMP292 = here ; final boolean RX10_TEMP293 = RX10_TEMP290 != RX10_TEMP292 ; if ( RX10_TEMP293 ) { String RX10_TEMP291 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP291 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP286 , X10_TEMP231 ) ; final int X10_TEMP233 = ( 2 ) ; final double X10_TEMP235 = ( 16571.18716619861880 ) ; final double X10_TEMP236 = ( X10_TEMP235 ) ; final Point1 RX10_TEMP294 = new Point1 ( X10_TEMP233 ) ; final Dist1 RX10_TEMP295 = ref . distValue ; final Region1 RX10_TEMP296 = RX10_TEMP295 . dReg ; final int RX10_TEMP297 = Program . searchPointInRegion1 ( RX10_TEMP296 , RX10_TEMP294 ) ; final int RX10_TEMP298 = 0 ; final boolean RX10_TEMP299 = RX10_TEMP297 < RX10_TEMP298 ; if ( RX10_TEMP299 ) { String RX10_TEMP300 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP300 ) ; }
 final place RX10_TEMP301 = Program . getPlaceFromDist1 ( RX10_TEMP295 , RX10_TEMP297 ) ; final place RX10_TEMP303 = here ; final boolean RX10_TEMP304 = RX10_TEMP301 != RX10_TEMP303 ; if ( RX10_TEMP304 ) { String RX10_TEMP302 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP302 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP297 , X10_TEMP236 ) ; final String X10_TEMP247 = ( "final field energy diff = " ) ; final int X10_TEMP238 = ( 0 ) ; final Point1 RX10_TEMP305 = new Point1 ( X10_TEMP238 ) ; final Dist1 RX10_TEMP306 = ref . distValue ; final Region1 RX10_TEMP307 = RX10_TEMP306 . dReg ; final int RX10_TEMP308 = Program . searchPointInRegion1 ( RX10_TEMP307 , RX10_TEMP305 ) ; final int RX10_TEMP309 = 0 ; final boolean RX10_TEMP310 = RX10_TEMP308 < RX10_TEMP309 ; if ( RX10_TEMP310 ) { String RX10_TEMP311 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP311 ) ; }
 final place RX10_TEMP312 = Program . getPlaceFromDist1 ( RX10_TEMP306 , RX10_TEMP308 ) ; final place RX10_TEMP314 = here ; final boolean RX10_TEMP315 = RX10_TEMP312 != RX10_TEMP314 ; if ( RX10_TEMP315 ) { String RX10_TEMP313 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP313 ) ; }
 final double RX10_TEMP316 = Program . getRefArrayValue1double ( ref , RX10_TEMP308 ) ; final double X10_TEMP241 = ( RX10_TEMP316 ) ; final int X10_TEMP240 = ( 0 ) ; final Point1 RX10_TEMP317 = new Point1 ( X10_TEMP240 ) ; final Dist1 RX10_TEMP318 = e . distValue ; final Region1 RX10_TEMP319 = RX10_TEMP318 . dReg ; final int RX10_TEMP320 = Program . searchPointInRegion1 ( RX10_TEMP319 , RX10_TEMP317 ) ; final int RX10_TEMP321 = 0 ; final boolean RX10_TEMP322 = RX10_TEMP320 < RX10_TEMP321 ; if ( RX10_TEMP322 ) { String RX10_TEMP323 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP323 ) ; }
 final place RX10_TEMP324 = Program . getPlaceFromDist1 ( RX10_TEMP318 , RX10_TEMP320 ) ; final place RX10_TEMP326 = here ; final boolean RX10_TEMP327 = RX10_TEMP324 != RX10_TEMP326 ; if ( RX10_TEMP327 ) { String RX10_TEMP325 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP325 ) ; }
 final double RX10_TEMP328 = Program . getRefArrayValue1double ( e , RX10_TEMP320 ) ; final double X10_TEMP242 = ( RX10_TEMP328 ) ; final double X10_TEMP244 = ( X10_TEMP241 - X10_TEMP242 ) ; final double X10_TEMP246 = ( Math . abs ( X10_TEMP244 ) ) ; final String X10_TEMP249 = ( X10_TEMP247 + X10_TEMP246 ) ; System.out.println ( X10_TEMP249 ) ; final String X10_TEMP260 = ( "final kinetic energy diff = " ) ; final int X10_TEMP251 = ( 1 ) ; final Point1 RX10_TEMP329 = new Point1 ( X10_TEMP251 ) ; final Dist1 RX10_TEMP330 = ref . distValue ; final Region1 RX10_TEMP331 = RX10_TEMP330 . dReg ; final int RX10_TEMP332 = Program . searchPointInRegion1 ( RX10_TEMP331 , RX10_TEMP329 ) ; final int RX10_TEMP333 = 0 ; final boolean RX10_TEMP334 = RX10_TEMP332 < RX10_TEMP333 ; if ( RX10_TEMP334 ) { String RX10_TEMP335 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP335 ) ; }
 final place RX10_TEMP336 = Program . getPlaceFromDist1 ( RX10_TEMP330 , RX10_TEMP332 ) ; final place RX10_TEMP338 = here ; final boolean RX10_TEMP339 = RX10_TEMP336 != RX10_TEMP338 ; if ( RX10_TEMP339 ) { String RX10_TEMP337 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP337 ) ; }
 final double RX10_TEMP340 = Program . getRefArrayValue1double ( ref , RX10_TEMP332 ) ; final double X10_TEMP254 = ( RX10_TEMP340 ) ; final int X10_TEMP253 = ( 1 ) ; final Point1 RX10_TEMP341 = new Point1 ( X10_TEMP253 ) ; final Dist1 RX10_TEMP342 = e . distValue ; final Region1 RX10_TEMP343 = RX10_TEMP342 . dReg ; final int RX10_TEMP344 = Program . searchPointInRegion1 ( RX10_TEMP343 , RX10_TEMP341 ) ; final int RX10_TEMP345 = 0 ; final boolean RX10_TEMP346 = RX10_TEMP344 < RX10_TEMP345 ; if ( RX10_TEMP346 ) { String RX10_TEMP347 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP347 ) ; }
 final place RX10_TEMP348 = Program . getPlaceFromDist1 ( RX10_TEMP342 , RX10_TEMP344 ) ; final place RX10_TEMP350 = here ; final boolean RX10_TEMP351 = RX10_TEMP348 != RX10_TEMP350 ; if ( RX10_TEMP351 ) { String RX10_TEMP349 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP349 ) ; }
 final double RX10_TEMP352 = Program . getRefArrayValue1double ( e , RX10_TEMP344 ) ; final double X10_TEMP255 = ( RX10_TEMP352 ) ; final double X10_TEMP257 = ( X10_TEMP254 - X10_TEMP255 ) ; final double X10_TEMP259 = ( Math . abs ( X10_TEMP257 ) ) ; final String X10_TEMP262 = ( X10_TEMP260 + X10_TEMP259 ) ; System.out.println ( X10_TEMP262 ) ; final String X10_TEMP273 = ( "final final energy diff = " ) ; final int X10_TEMP264 = ( 2 ) ; final Point1 RX10_TEMP353 = new Point1 ( X10_TEMP264 ) ; final Dist1 RX10_TEMP354 = ref . distValue ; final Region1 RX10_TEMP355 = RX10_TEMP354 . dReg ; final int RX10_TEMP356 = Program . searchPointInRegion1 ( RX10_TEMP355 , RX10_TEMP353 ) ; final int RX10_TEMP357 = 0 ; final boolean RX10_TEMP358 = RX10_TEMP356 < RX10_TEMP357 ; if ( RX10_TEMP358 ) { String RX10_TEMP359 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP359 ) ; }
 final place RX10_TEMP360 = Program . getPlaceFromDist1 ( RX10_TEMP354 , RX10_TEMP356 ) ; final place RX10_TEMP362 = here ; final boolean RX10_TEMP363 = RX10_TEMP360 != RX10_TEMP362 ; if ( RX10_TEMP363 ) { String RX10_TEMP361 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP361 ) ; }
 final double RX10_TEMP364 = Program . getRefArrayValue1double ( ref , RX10_TEMP356 ) ; final double X10_TEMP267 = ( RX10_TEMP364 ) ; final int X10_TEMP266 = ( 2 ) ; final Point1 RX10_TEMP365 = new Point1 ( X10_TEMP266 ) ; final Dist1 RX10_TEMP366 = e . distValue ; final Region1 RX10_TEMP367 = RX10_TEMP366 . dReg ; final int RX10_TEMP368 = Program . searchPointInRegion1 ( RX10_TEMP367 , RX10_TEMP365 ) ; final int RX10_TEMP369 = 0 ; final boolean RX10_TEMP370 = RX10_TEMP368 < RX10_TEMP369 ; if ( RX10_TEMP370 ) { String RX10_TEMP371 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP371 ) ; }
 final place RX10_TEMP372 = Program . getPlaceFromDist1 ( RX10_TEMP366 , RX10_TEMP368 ) ; final place RX10_TEMP374 = here ; final boolean RX10_TEMP375 = RX10_TEMP372 != RX10_TEMP374 ; if ( RX10_TEMP375 ) { String RX10_TEMP373 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP373 ) ; }
 final double RX10_TEMP376 = Program . getRefArrayValue1double ( e , RX10_TEMP368 ) ; final double X10_TEMP268 = ( RX10_TEMP376 ) ; final double X10_TEMP270 = ( X10_TEMP267 - X10_TEMP268 ) ; final double X10_TEMP272 = ( Math . abs ( X10_TEMP270 ) ) ; final String X10_TEMP275 = ( X10_TEMP273 + X10_TEMP272 ) ; System.out.println ( X10_TEMP275 ) ; }
 else { final int X10_TEMP276 = ( 6 ) ; final boolean X10_TEMP278 = ( _LinearESOpenPIC2D_NUMBER_OF_XBITS == X10_TEMP276 ) ; final int X10_TEMP277 = ( 7 ) ; final boolean X10_TEMP279 = ( _LinearESOpenPIC2D_NUMBER_OF_YBITS == X10_TEMP277 ) ; final boolean X10_TEMP281 = ( X10_TEMP278 && X10_TEMP279 ) ; final int X10_TEMP280 = ( 384 ) ; final boolean X10_TEMP282 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY == X10_TEMP280 ) ; final boolean X10_TEMP284 = ( X10_TEMP281 && X10_TEMP282 ) ; final int X10_TEMP283 = ( 768 ) ; final boolean X10_TEMP285 = ( _LinearESOpenPIC2D_PARTICLE_YDENSITY == X10_TEMP283 ) ; final boolean X10_TEMP287 = X10_TEMP284 && X10_TEMP285 ; if ( X10_TEMP287 ) { final int X10_TEMP289 = ( 0 ) ; final double X10_TEMP291 = ( 135.15662890071584 ) ; final double X10_TEMP292 = ( X10_TEMP291 ) ; final Point1 RX10_TEMP377 = new Point1 ( X10_TEMP289 ) ; final Dist1 RX10_TEMP378 = ref . distValue ; final Region1 RX10_TEMP379 = RX10_TEMP378 . dReg ; final int RX10_TEMP380 = Program . searchPointInRegion1 ( RX10_TEMP379 , RX10_TEMP377 ) ; final int RX10_TEMP381 = 0 ; final boolean RX10_TEMP382 = RX10_TEMP380 < RX10_TEMP381 ; if ( RX10_TEMP382 ) { String RX10_TEMP383 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP383 ) ; }
 final place RX10_TEMP384 = Program . getPlaceFromDist1 ( RX10_TEMP378 , RX10_TEMP380 ) ; final place RX10_TEMP386 = here ; final boolean RX10_TEMP387 = RX10_TEMP384 != RX10_TEMP386 ; if ( RX10_TEMP387 ) { String RX10_TEMP385 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP385 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP380 , X10_TEMP292 ) ; final int X10_TEMP294 = ( 1 ) ; final double X10_TEMP296 = ( 295436.86221817752812 ) ; final double X10_TEMP297 = ( X10_TEMP296 ) ; final Point1 RX10_TEMP388 = new Point1 ( X10_TEMP294 ) ; final Dist1 RX10_TEMP389 = ref . distValue ; final Region1 RX10_TEMP390 = RX10_TEMP389 . dReg ; final int RX10_TEMP391 = Program . searchPointInRegion1 ( RX10_TEMP390 , RX10_TEMP388 ) ; final int RX10_TEMP392 = 0 ; final boolean RX10_TEMP393 = RX10_TEMP391 < RX10_TEMP392 ; if ( RX10_TEMP393 ) { String RX10_TEMP394 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP394 ) ; }
 final place RX10_TEMP395 = Program . getPlaceFromDist1 ( RX10_TEMP389 , RX10_TEMP391 ) ; final place RX10_TEMP397 = here ; final boolean RX10_TEMP398 = RX10_TEMP395 != RX10_TEMP397 ; if ( RX10_TEMP398 ) { String RX10_TEMP396 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP396 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP391 , X10_TEMP297 ) ; final int X10_TEMP299 = ( 2 ) ; final double X10_TEMP301 = ( 295572.01884707825957 ) ; final double X10_TEMP302 = ( X10_TEMP301 ) ; final Point1 RX10_TEMP399 = new Point1 ( X10_TEMP299 ) ; final Dist1 RX10_TEMP400 = ref . distValue ; final Region1 RX10_TEMP401 = RX10_TEMP400 . dReg ; final int RX10_TEMP402 = Program . searchPointInRegion1 ( RX10_TEMP401 , RX10_TEMP399 ) ; final int RX10_TEMP403 = 0 ; final boolean RX10_TEMP404 = RX10_TEMP402 < RX10_TEMP403 ; if ( RX10_TEMP404 ) { String RX10_TEMP405 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP405 ) ; }
 final place RX10_TEMP406 = Program . getPlaceFromDist1 ( RX10_TEMP400 , RX10_TEMP402 ) ; final place RX10_TEMP408 = here ; final boolean RX10_TEMP409 = RX10_TEMP406 != RX10_TEMP408 ; if ( RX10_TEMP409 ) { String RX10_TEMP407 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP407 ) ; }
 Program . setRefArrayValue1double ( ref , RX10_TEMP402 , X10_TEMP302 ) ; final String X10_TEMP313 = ( "final field energy diff = " ) ; final int X10_TEMP304 = ( 0 ) ; final Point1 RX10_TEMP410 = new Point1 ( X10_TEMP304 ) ; final Dist1 RX10_TEMP411 = ref . distValue ; final Region1 RX10_TEMP412 = RX10_TEMP411 . dReg ; final int RX10_TEMP413 = Program . searchPointInRegion1 ( RX10_TEMP412 , RX10_TEMP410 ) ; final int RX10_TEMP414 = 0 ; final boolean RX10_TEMP415 = RX10_TEMP413 < RX10_TEMP414 ; if ( RX10_TEMP415 ) { String RX10_TEMP416 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP416 ) ; }
 final place RX10_TEMP417 = Program . getPlaceFromDist1 ( RX10_TEMP411 , RX10_TEMP413 ) ; final place RX10_TEMP419 = here ; final boolean RX10_TEMP420 = RX10_TEMP417 != RX10_TEMP419 ; if ( RX10_TEMP420 ) { String RX10_TEMP418 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP418 ) ; }
 final double RX10_TEMP421 = Program . getRefArrayValue1double ( ref , RX10_TEMP413 ) ; final double X10_TEMP307 = ( RX10_TEMP421 ) ; final int X10_TEMP306 = ( 0 ) ; final Point1 RX10_TEMP422 = new Point1 ( X10_TEMP306 ) ; final Dist1 RX10_TEMP423 = e . distValue ; final Region1 RX10_TEMP424 = RX10_TEMP423 . dReg ; final int RX10_TEMP425 = Program . searchPointInRegion1 ( RX10_TEMP424 , RX10_TEMP422 ) ; final int RX10_TEMP426 = 0 ; final boolean RX10_TEMP427 = RX10_TEMP425 < RX10_TEMP426 ; if ( RX10_TEMP427 ) { String RX10_TEMP428 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP428 ) ; }
 final place RX10_TEMP429 = Program . getPlaceFromDist1 ( RX10_TEMP423 , RX10_TEMP425 ) ; final place RX10_TEMP431 = here ; final boolean RX10_TEMP432 = RX10_TEMP429 != RX10_TEMP431 ; if ( RX10_TEMP432 ) { String RX10_TEMP430 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP430 ) ; }
 final double RX10_TEMP433 = Program . getRefArrayValue1double ( e , RX10_TEMP425 ) ; final double X10_TEMP308 = ( RX10_TEMP433 ) ; final double X10_TEMP310 = ( X10_TEMP307 - X10_TEMP308 ) ; final double X10_TEMP312 = ( Math . abs ( X10_TEMP310 ) ) ; final String X10_TEMP315 = ( X10_TEMP313 + X10_TEMP312 ) ; System.out.println ( X10_TEMP315 ) ; final String X10_TEMP326 = ( "final kinetic energy diff = " ) ; final int X10_TEMP317 = ( 1 ) ; final Point1 RX10_TEMP434 = new Point1 ( X10_TEMP317 ) ; final Dist1 RX10_TEMP435 = ref . distValue ; final Region1 RX10_TEMP436 = RX10_TEMP435 . dReg ; final int RX10_TEMP437 = Program . searchPointInRegion1 ( RX10_TEMP436 , RX10_TEMP434 ) ; final int RX10_TEMP438 = 0 ; final boolean RX10_TEMP439 = RX10_TEMP437 < RX10_TEMP438 ; if ( RX10_TEMP439 ) { String RX10_TEMP440 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP440 ) ; }
 final place RX10_TEMP441 = Program . getPlaceFromDist1 ( RX10_TEMP435 , RX10_TEMP437 ) ; final place RX10_TEMP443 = here ; final boolean RX10_TEMP444 = RX10_TEMP441 != RX10_TEMP443 ; if ( RX10_TEMP444 ) { String RX10_TEMP442 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP442 ) ; }
 final double RX10_TEMP445 = Program . getRefArrayValue1double ( ref , RX10_TEMP437 ) ; final double X10_TEMP320 = ( RX10_TEMP445 ) ; final int X10_TEMP319 = ( 1 ) ; final Point1 RX10_TEMP446 = new Point1 ( X10_TEMP319 ) ; final Dist1 RX10_TEMP447 = e . distValue ; final Region1 RX10_TEMP448 = RX10_TEMP447 . dReg ; final int RX10_TEMP449 = Program . searchPointInRegion1 ( RX10_TEMP448 , RX10_TEMP446 ) ; final int RX10_TEMP450 = 0 ; final boolean RX10_TEMP451 = RX10_TEMP449 < RX10_TEMP450 ; if ( RX10_TEMP451 ) { String RX10_TEMP452 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP452 ) ; }
 final place RX10_TEMP453 = Program . getPlaceFromDist1 ( RX10_TEMP447 , RX10_TEMP449 ) ; final place RX10_TEMP455 = here ; final boolean RX10_TEMP456 = RX10_TEMP453 != RX10_TEMP455 ; if ( RX10_TEMP456 ) { String RX10_TEMP454 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP454 ) ; }
 final double RX10_TEMP457 = Program . getRefArrayValue1double ( e , RX10_TEMP449 ) ; final double X10_TEMP321 = ( RX10_TEMP457 ) ; final double X10_TEMP323 = ( X10_TEMP320 - X10_TEMP321 ) ; final double X10_TEMP325 = ( Math . abs ( X10_TEMP323 ) ) ; final String X10_TEMP328 = ( X10_TEMP326 + X10_TEMP325 ) ; System.out.println ( X10_TEMP328 ) ; final String X10_TEMP339 = ( "final final energy diff = " ) ; final int X10_TEMP330 = ( 2 ) ; final Point1 RX10_TEMP458 = new Point1 ( X10_TEMP330 ) ; final Dist1 RX10_TEMP459 = ref . distValue ; final Region1 RX10_TEMP460 = RX10_TEMP459 . dReg ; final int RX10_TEMP461 = Program . searchPointInRegion1 ( RX10_TEMP460 , RX10_TEMP458 ) ; final int RX10_TEMP462 = 0 ; final boolean RX10_TEMP463 = RX10_TEMP461 < RX10_TEMP462 ; if ( RX10_TEMP463 ) { String RX10_TEMP464 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP464 ) ; }
 final place RX10_TEMP465 = Program . getPlaceFromDist1 ( RX10_TEMP459 , RX10_TEMP461 ) ; final place RX10_TEMP467 = here ; final boolean RX10_TEMP468 = RX10_TEMP465 != RX10_TEMP467 ; if ( RX10_TEMP468 ) { String RX10_TEMP466 = "Bad place access for array ref" ; throw new RuntimeException ( RX10_TEMP466 ) ; }
 final double RX10_TEMP469 = Program . getRefArrayValue1double ( ref , RX10_TEMP461 ) ; final double X10_TEMP333 = ( RX10_TEMP469 ) ; final int X10_TEMP332 = ( 2 ) ; final Point1 RX10_TEMP470 = new Point1 ( X10_TEMP332 ) ; final Dist1 RX10_TEMP471 = e . distValue ; final Region1 RX10_TEMP472 = RX10_TEMP471 . dReg ; final int RX10_TEMP473 = Program . searchPointInRegion1 ( RX10_TEMP472 , RX10_TEMP470 ) ; final int RX10_TEMP474 = 0 ; final boolean RX10_TEMP475 = RX10_TEMP473 < RX10_TEMP474 ; if ( RX10_TEMP475 ) { String RX10_TEMP476 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP476 ) ; }
 final place RX10_TEMP477 = Program . getPlaceFromDist1 ( RX10_TEMP471 , RX10_TEMP473 ) ; final place RX10_TEMP479 = here ; final boolean RX10_TEMP480 = RX10_TEMP477 != RX10_TEMP479 ; if ( RX10_TEMP480 ) { String RX10_TEMP478 = "Bad place access for array e" ; throw new RuntimeException ( RX10_TEMP478 ) ; }
 final double RX10_TEMP481 = Program . getRefArrayValue1double ( e , RX10_TEMP473 ) ; final double X10_TEMP334 = ( RX10_TEMP481 ) ; final double X10_TEMP336 = ( X10_TEMP333 - X10_TEMP334 ) ; final double X10_TEMP338 = ( Math . abs ( X10_TEMP336 ) ) ; final String X10_TEMP341 = ( X10_TEMP339 + X10_TEMP338 ) ; System.out.println ( X10_TEMP341 ) ; }
 else { final String X10_TEMP343 = ( "No reference values availabile" ) ; System.out.println ( X10_TEMP343 ) ; }
 }
 }
 }
 }
 }
 final long X10_TEMP344 = ( System.currentTimeMillis ( ) ) ; final long X10_TEMP345 = ( X10_TEMP0 . totalTime ) ; final long X10_TEMP347 = ( X10_TEMP344 - X10_TEMP345 ) ; final long X10_TEMP348 = ( X10_TEMP347 ) ; X10_TEMP0 . totalTime = ( X10_TEMP348 ) ; final String X10_TEMP349 = ( "Total time (ms): " ) ; final long X10_TEMP350 = ( X10_TEMP0 . totalTime ) ; final String X10_TEMP352 = ( X10_TEMP349 + X10_TEMP350 ) ; System.out.println ( X10_TEMP352 ) ; final String X10_TEMP353 = ( "Initialization time (ms): " ) ; final long X10_TEMP354 = ( X10_TEMP0 . initTime ) ; final String X10_TEMP355 = ( X10_TEMP353 + X10_TEMP354 ) ; final String X10_TEMP356 = ( " " ) ; final String X10_TEMP362 = ( X10_TEMP355 + X10_TEMP356 ) ; final double X10_TEMP357 = ( 100.0 ) ; final long X10_TEMP358 = ( X10_TEMP0 . initTime ) ; final double X10_TEMP360 = ( X10_TEMP357 * X10_TEMP358 ) ; final long X10_TEMP361 = ( X10_TEMP0 . totalTime ) ; final double X10_TEMP363 = ( X10_TEMP360 / X10_TEMP361 ) ; final String X10_TEMP365 = ( X10_TEMP362 + X10_TEMP363 ) ; System.out.println ( X10_TEMP365 ) ; final String X10_TEMP366 = ( "Particle Deposit time (ms): " ) ; final long X10_TEMP367 = ( X10_TEMP0 . depositTime ) ; final String X10_TEMP368 = ( X10_TEMP366 + X10_TEMP367 ) ; final String X10_TEMP369 = ( " " ) ; final String X10_TEMP375 = ( X10_TEMP368 + X10_TEMP369 ) ; final double X10_TEMP370 = ( 100.0 ) ; final long X10_TEMP371 = ( X10_TEMP0 . depositTime ) ; final double X10_TEMP373 = ( X10_TEMP370 * X10_TEMP371 ) ; final long X10_TEMP374 = ( X10_TEMP0 . totalTime ) ; final double X10_TEMP376 = ( X10_TEMP373 / X10_TEMP374 ) ; final String X10_TEMP378 = ( X10_TEMP375 + X10_TEMP376 ) ; System.out.println ( X10_TEMP378 ) ; final String X10_TEMP379 = ( "Field Redistribution time (ms): " ) ; final long X10_TEMP380 = ( X10_TEMP0 . redistTime ) ; final String X10_TEMP381 = ( X10_TEMP379 + X10_TEMP380 ) ; final String X10_TEMP382 = ( " " ) ; final String X10_TEMP388 = ( X10_TEMP381 + X10_TEMP382 ) ; final double X10_TEMP383 = ( 100.0 ) ; final long X10_TEMP384 = ( X10_TEMP0 . redistTime ) ; final double X10_TEMP386 = ( X10_TEMP383 * X10_TEMP384 ) ; final long X10_TEMP387 = ( X10_TEMP0 . totalTime ) ; final double X10_TEMP389 = ( X10_TEMP386 / X10_TEMP387 ) ; final String X10_TEMP391 = ( X10_TEMP388 + X10_TEMP389 ) ; System.out.println ( X10_TEMP391 ) ; final String X10_TEMP392 = ( "Solver time (ms): " ) ; final long X10_TEMP393 = ( X10_TEMP0 . solverTime ) ; final String X10_TEMP394 = ( X10_TEMP392 + X10_TEMP393 ) ; final String X10_TEMP395 = ( " " ) ; final String X10_TEMP401 = ( X10_TEMP394 + X10_TEMP395 ) ; final double X10_TEMP396 = ( 100.0 ) ; final long X10_TEMP397 = ( X10_TEMP0 . solverTime ) ; final double X10_TEMP399 = ( X10_TEMP396 * X10_TEMP397 ) ; final long X10_TEMP400 = ( X10_TEMP0 . totalTime ) ; final double X10_TEMP402 = ( X10_TEMP399 / X10_TEMP400 ) ; final String X10_TEMP404 = ( X10_TEMP401 + X10_TEMP402 ) ; System.out.println ( X10_TEMP404 ) ; final String X10_TEMP405 = ( "Particle Push time (ms): " ) ; final long X10_TEMP406 = ( X10_TEMP0 . pushTime ) ; final String X10_TEMP407 = ( X10_TEMP405 + X10_TEMP406 ) ; final String X10_TEMP408 = ( " " ) ; final String X10_TEMP414 = ( X10_TEMP407 + X10_TEMP408 ) ; final double X10_TEMP409 = ( 100.0 ) ; final long X10_TEMP410 = ( X10_TEMP0 . pushTime ) ; final double X10_TEMP412 = ( X10_TEMP409 * X10_TEMP410 ) ; final long X10_TEMP413 = ( X10_TEMP0 . totalTime ) ; final double X10_TEMP415 = ( X10_TEMP412 / X10_TEMP413 ) ; final String X10_TEMP417 = ( X10_TEMP414 + X10_TEMP415 ) ; System.out.println ( X10_TEMP417 ) ; final String X10_TEMP418 = ( "Particle move time (ms): " ) ; final long X10_TEMP419 = ( X10_TEMP0 . moveTime ) ; final String X10_TEMP420 = ( X10_TEMP418 + X10_TEMP419 ) ; final String X10_TEMP421 = ( " " ) ; final String X10_TEMP427 = ( X10_TEMP420 + X10_TEMP421 ) ; final double X10_TEMP422 = ( 100.0 ) ; final long X10_TEMP423 = ( X10_TEMP0 . moveTime ) ; final double X10_TEMP425 = ( X10_TEMP422 * X10_TEMP423 ) ; final long X10_TEMP426 = ( X10_TEMP0 . totalTime ) ; final double X10_TEMP428 = ( X10_TEMP425 / X10_TEMP426 ) ; final String X10_TEMP430 = ( X10_TEMP427 + X10_TEMP428 ) ; System.out.println ( X10_TEMP430 ) ; }
 public static void LinearESOpenPIC2D_initialize ( final LinearESOpenPIC2D X10_TEMP0 ) { final String X10_TEMP2 = ( "Init: particle position" ) ; System.out.println ( X10_TEMP2 ) ; final doubleRefArray2 position = Program . LinearESOpenPIC2D_genParticlePosition ( X10_TEMP0 , _LinearESOpenPIC2D_NPARTICLES ) ; final String X10_TEMP6 = ( "Init: particle velocity" ) ; System.out.println ( X10_TEMP6 ) ; final doubleRefArray2 velocity = Program . LinearESOpenPIC2D_genParticleVelocity ( X10_TEMP0 , _LinearESOpenPIC2D_NPARTICLES ) ; final String X10_TEMP10 = ( "Init: particles" ) ; System.out.println ( X10_TEMP10 ) ; final ParticleRefArray1 X10_TEMP15 = Program . LinearESOpenPIC2D_genParticles ( X10_TEMP0 , _LinearESOpenPIC2D_NPARTICLES , position , velocity ) ; final ParticleRefArray1 X10_TEMP16 = X10_TEMP15 ; X10_TEMP0 . particles = ( X10_TEMP16 ) ; final String X10_TEMP18 = ( "Init: initial field distribution" ) ; System.out.println ( X10_TEMP18 ) ; final ParticleRefArray1 X10_TEMP20 = X10_TEMP0 . particles ; final Dist2 dField = Program . LinearESOpenPIC2D_genInitialDist ( X10_TEMP0 , X10_TEMP20 ) ; final String X10_TEMP23 = ( "Init: initial partical distribution" ) ; System.out.println ( X10_TEMP23 ) ; final intRefArray1 info = Program . LinearESOpenPIC2D_makeInfoArray ( X10_TEMP0 ) ; final ParticleRefArray1 X10_TEMP28 = X10_TEMP0 . particles ; final ParticleRefArray1 X10_TEMP30 = Program . LinearESOpenPIC2D_moveParticles ( X10_TEMP0 , X10_TEMP28 , dField , info ) ; final ParticleRefArray1 X10_TEMP31 = X10_TEMP30 ; X10_TEMP0 . particles = ( X10_TEMP31 ) ; final String X10_TEMP33 = ( "Init: background charge" ) ; System.out.println ( X10_TEMP33 ) ; final Region2 RX10_TEMP0 = dField . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dField , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T30 utmp30 = new T30(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread30(utmp30); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dField , RX10_TEMP16 ) ; final doubleRefArray2 X10_TEMP35 = RX10_TEMP19 ; final doubleRefArray2 X10_TEMP36 = X10_TEMP35 ; X10_TEMP0 . backgroundCharge = ( X10_TEMP36 ) ; final doubleRefArray2 backgroundGuards = Program . LinearESOpenPIC2D_makeGuards ( X10_TEMP0 , dField ) ; final ParticleRefArray1 X10_TEMP44 = X10_TEMP0 . particles ; final doubleRefArray2 X10_TEMP45 = X10_TEMP0 . backgroundCharge ; final double X10_TEMP46 = ( Math . abs ( _LinearESOpenPIC2D_ELECTRON_CHARGE ) ) ; Program . LinearESOpenPIC2D_depositCharge ( X10_TEMP0 , X10_TEMP44 , X10_TEMP45 , backgroundGuards , X10_TEMP46 ) ; final doubleRefArray2 X10_TEMP49 = X10_TEMP0 . backgroundCharge ; Program . LinearESOpenPIC2D_addGuards ( X10_TEMP0 , X10_TEMP49 , backgroundGuards ) ; }
 public static doubleRefArray2 LinearESOpenPIC2D_genParticlePosition ( final LinearESOpenPIC2D X10_TEMP0 , final int np ) { final int X = ( 0 ) ; final int Y = ( 1 ) ; final int MAX_PLACES = ( place.MAX_PLACES ) ; final int MAX_ITER = ( 20 ) ; final double ERROR = ( 0.0001 ) ; final double BIG = ( 0.5 ) ; final int X10_TEMP10 = ( 0 ) ; final int X10_TEMP8 = ( 1 ) ; final int X10_TEMP11 = ( np - X10_TEMP8 ) ; final Region1 X10_TEMP18 = Program . createNewRegion1R ( X10_TEMP10 , X10_TEMP11 ) ; final int X10_TEMP15 = ( 0 ) ; final int X10_TEMP16 = ( 1 ) ; final Region1 X10_TEMP19 = Program . createNewRegion1R ( X10_TEMP15 , X10_TEMP16 ) ; final Dist2 dResult = Program . X10Util_distBlockStar2 ( X10_TEMP18 , X10_TEMP19 ) ; final Region2 RX10_TEMP0 = dResult . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dResult , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T31 utmp31 = new T31(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread31(utmp31); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dResult , RX10_TEMP16 ) ; final doubleRefArray2 result = RX10_TEMP19 ; final int X10_TEMP23 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY * _LinearESOpenPIC2D_PARTICLE_YDENSITY ) ; final int particlesPerPlace = ( X10_TEMP23 / MAX_PLACES ) ; final int totalParticles = ( particlesPerPlace * MAX_PLACES ) ; final boolean X10_TEMP27 = totalParticles != _LinearESOpenPIC2D_NPARTICLES ; if ( X10_TEMP27 ) { final String X10_TEMP28 = ( "Particle distribution truncated, " ) ; final String X10_TEMP29 = ( "total particles = " ) ; final String X10_TEMP30 = ( X10_TEMP28 + X10_TEMP29 ) ; final String X10_TEMP32 = ( X10_TEMP30 + totalParticles ) ; System.err.println ( X10_TEMP32 ) ; return result ; }
 final int X10_TEMP34 = ( 2 ) ; final boolean X10_TEMP36 = ( _LinearESOpenPIC2D_BOUNDARY_CONDITION == X10_TEMP34 ) ; final int X10_TEMP35 = ( 3 ) ; final boolean X10_TEMP37 = ( _LinearESOpenPIC2D_BOUNDARY_CONDITION == X10_TEMP35 ) ; final boolean X10_TEMP39 = ( X10_TEMP36 || X10_TEMP37 ) ; final boolean X10_TEMP40 = X10_TEMP39 ; double X10_TEMP43 = 0.0 ; if ( X10_TEMP40 ) { X10_TEMP43 = 1.0 ; }
 final double X10_TEMP44 = X10_TEMP43 ; final double edgelx = ( X10_TEMP44 ) ; final int X10_TEMP45 = ( 2 ) ; final boolean X10_TEMP47 = ( _LinearESOpenPIC2D_BOUNDARY_CONDITION == X10_TEMP45 ) ; final boolean X10_TEMP48 = X10_TEMP47 ; double X10_TEMP51 = 0.0 ; if ( X10_TEMP48 ) { X10_TEMP51 = 1.0 ; }
 final double X10_TEMP52 = X10_TEMP51 ; final double edgely = ( X10_TEMP52 ) ; final double X10_TEMP57 = ( 0.0 ) ; final double X10_TEMP58 = ( 0.0 ) ; final double X10_TEMP59 = ( 0.0 ) ; double tx0 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , edgelx , X10_TEMP57 , X10_TEMP58 , X10_TEMP59 ) ) ; final double X10_TEMP65 = ( 0.0 ) ; final double X10_TEMP66 = ( 0.0 ) ; final double X10_TEMP67 = ( 0.0 ) ; double ty0 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , edgely , X10_TEMP65 , X10_TEMP66 , X10_TEMP67 ) ) ; final double anx = ( _LinearESOpenPIC2D_XLENGTH - edgelx ) ; final double any = ( _LinearESOpenPIC2D_YLENGTH - edgely ) ; final double X10_TEMP75 = ( 0.0 ) ; final double X10_TEMP76 = ( 0.0 ) ; final double X10_TEMP77 = ( 0.0 ) ; final double X10_TEMP78 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , anx , X10_TEMP75 , X10_TEMP76 , X10_TEMP77 ) ) ; final double X10_TEMP80 = ( X10_TEMP78 - tx0 ) ; final double bnx = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY / X10_TEMP80 ) ; final double X10_TEMP86 = ( 0.0 ) ; final double X10_TEMP87 = ( 0.0 ) ; final double X10_TEMP88 = ( 0.0 ) ; final double X10_TEMP89 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , any , X10_TEMP86 , X10_TEMP87 , X10_TEMP88 ) ) ; final double X10_TEMP91 = ( X10_TEMP89 - ty0 ) ; final double bny = ( _LinearESOpenPIC2D_PARTICLE_YDENSITY / X10_TEMP91 ) ; final double X10_TEMP93 = ( bnx * tx0 ) ; final double X10_TEMP94 = ( 0.5 ) ; final double x0 = ( X10_TEMP93 - X10_TEMP94 ) ; final double X10_TEMP96 = ( bny * ty0 ) ; final double X10_TEMP97 = ( 0.5 ) ; final double y0 = ( X10_TEMP96 - X10_TEMP97 ) ; finish { final Dist1 X10_TEMP100 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP21 = X10_TEMP100 . dReg ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = RX10_TEMP21 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP21 , RX10_TEMP25 ) ; final Region1 RX10_TEMP26 = X10_TEMP100 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , pl ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { final String RX10_TEMP30 = "Point pl not found in the distribution X10_TEMP100." ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( X10_TEMP100 , RX10_TEMP27 ) ; final place X10_TEMP101 = RX10_TEMP31 ; 
 final T32 utmp32 = new T32(pl, y0, x0, bny, bnx, any, anx, edgely, edgelx, particlesPerPlace, result, dResult, BIG, ERROR, MAX_ITER, Y, X, X10_TEMP0);
 async (X10_TEMP101) {Program.thread32(utmp32); }
 }
 }
 return result ; }
 public static doubleRefArray2 LinearESOpenPIC2D_genParticleVelocity ( final LinearESOpenPIC2D X10_TEMP0 , final int n ) { final int X = ( 0 ) ; final int Y = ( 1 ) ; final int X10_TEMP6 = ( 0 ) ; final int X10_TEMP4 = ( 1 ) ; final int X10_TEMP7 = ( n - X10_TEMP4 ) ; final Region1 X10_TEMP14 = Program . createNewRegion1R ( X10_TEMP6 , X10_TEMP7 ) ; final int X10_TEMP11 = ( 0 ) ; final int X10_TEMP12 = ( 1 ) ; final Region1 X10_TEMP15 = Program . createNewRegion1R ( X10_TEMP11 , X10_TEMP12 ) ; final Dist2 dResult = Program . X10Util_distBlockStar2 ( X10_TEMP14 , X10_TEMP15 ) ; final Region2 RX10_TEMP0 = dResult . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dResult , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T33 utmp33 = new T33(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread33(utmp33); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dResult , RX10_TEMP16 ) ; final doubleRefArray2 result = RX10_TEMP19 ; finish { final int X10_TEMP21 = ( 0 ) ; final int X10_TEMP19 = ( 1 ) ; final int X10_TEMP22 = ( _LinearESOpenPIC2D_PARTICLE_YDENSITY - X10_TEMP19 ) ; final Region1 X10_TEMP24 = Program . createNewRegion1R ( X10_TEMP21 , X10_TEMP22 ) ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = X10_TEMP24 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 RX10_TEMP21 = Program . regionOrdinalPoint1 ( X10_TEMP24 , RX10_TEMP25 ) ; final int i = RX10_TEMP21 . f0 ; final int offset = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY * i ) ; final int X10_TEMP29 = ( 0 ) ; final int X10_TEMP27 = ( 1 ) ; final int X10_TEMP30 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY - X10_TEMP27 ) ; final Region1 X10_TEMP32 = Program . createNewRegion1R ( X10_TEMP29 , X10_TEMP30 ) ; final int RX10_TEMP30 = 1 ; int RX10_TEMP28 = X10_TEMP32 . regSize ; RX10_TEMP28 = RX10_TEMP28 - RX10_TEMP30 ; final region ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP28 ] ; for ( point ( : rank==1 ) RX10_TEMP26 : RX10_TEMP29 ) { final int RX10_TEMP31 = RX10_TEMP26 [0] ; final Point1 RX10_TEMP27 = Program . regionOrdinalPoint1 ( X10_TEMP32 , RX10_TEMP31 ) ; final int j = RX10_TEMP27 . f0 ; final int idx = ( j + offset ) ; final Random X10_TEMP34 = ( X10_TEMP0 . r ) ; final double X10_TEMP35 = ( Program . Random_nextNormal ( X10_TEMP34 ) ) ; final double vx = ( _LinearESOpenPIC2D_THERMAL_XVELOCITY * X10_TEMP35 ) ; final Random X10_TEMP37 = ( X10_TEMP0 . r ) ; final double X10_TEMP38 = ( Program . Random_nextNormal ( X10_TEMP37 ) ) ; final double vy = ( _LinearESOpenPIC2D_THERMAL_YVELOCITY * X10_TEMP38 ) ; int X10_TEMP42 = ( 0 ) ; final Point2 RX10_TEMP32 = new Point2 ( idx , X10_TEMP42 ) ; final Region2 RX10_TEMP33 = dResult . dReg ; final int RX10_TEMP34 = Program . searchPointInRegion2 ( RX10_TEMP33 , RX10_TEMP32 ) ; final int RX10_TEMP35 = 0 ; final boolean RX10_TEMP36 = RX10_TEMP34 < RX10_TEMP35 ; if ( RX10_TEMP36 ) { final String RX10_TEMP37 = "Point RX10_TEMP32 not found in the distribution dResult." ; throw new RuntimeException ( RX10_TEMP37 ) ; }
 final place RX10_TEMP38 = Program . getPlaceFromDist2 ( dResult , RX10_TEMP34 ) ; final place X10_TEMP44 = RX10_TEMP38 ; 
 final T34 utmp34 = new T34(vy, vx, idx, result, Y, X);
 async (X10_TEMP44) {Program.thread34(utmp34); }
 }
 }
 }
 final String X10_TEMP54 = ( "Init: correcting drift" ) ; System.out.println ( X10_TEMP54 ) ; final Dist1 X10_TEMP55 = Program . getUniqueDist ( ) ; final Dist1 dUnique = X10_TEMP55 ; final Region1 RX10_TEMP61 = dUnique . dReg ; final int RX10_TEMP62 = 0 ; final int RX10_TEMP63 = 1 ; int RX10_TEMP64 = place.MAX_PLACES ; RX10_TEMP64 = RX10_TEMP64 - RX10_TEMP63 ; final region ( : rank==1 ) RX10_TEMP65 = [ 0 : RX10_TEMP64 ] ; final dist ( : rank==1 ) RX10_TEMP66 = [ 0 : RX10_TEMP64 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP67 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP66 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP68 : RX10_TEMP65 ) { final place RX10_TEMP69 = here ; final int RX10_TEMP70 = RX10_TEMP68 [0] ; final place RX10_TEMP71 = place.places ( RX10_TEMP70 ) ; final int RX10_TEMP72 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP70 ) ; final int RX10_TEMP73 = RX10_TEMP72 - RX10_TEMP63 ; 
 final T35 utmp35 = new T35(RX10_TEMP73, RX10_TEMP69, RX10_TEMP68, RX10_TEMP67);
 async (RX10_TEMP71) {Program.thread35(utmp35); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP78 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP65 ] ( point ( : rank==1 ) RX10_TEMP80 ) { final intStub RX10_TEMP79 = RX10_TEMP67 [ RX10_TEMP80 ] ; return RX10_TEMP79 ; }
 ) ; final intRefArray1 RX10_TEMP81 = new intRefArray1 ( dUnique , RX10_TEMP78 ) ; final intRefArray1 numParticles = RX10_TEMP81 ; final Region1 RX10_TEMP82 = dUnique . dReg ; final int RX10_TEMP83 = 0 ; final int RX10_TEMP84 = 1 ; int RX10_TEMP85 = place.MAX_PLACES ; RX10_TEMP85 = RX10_TEMP85 - RX10_TEMP84 ; final region ( : rank==1 ) RX10_TEMP86 = [ 0 : RX10_TEMP85 ] ; final dist ( : rank==1 ) RX10_TEMP87 = [ 0 : RX10_TEMP85 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP88 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP87 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP89 : RX10_TEMP86 ) { final place RX10_TEMP90 = here ; final int RX10_TEMP91 = RX10_TEMP89 [0] ; final place RX10_TEMP92 = place.places ( RX10_TEMP91 ) ; final int RX10_TEMP93 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP91 ) ; final int RX10_TEMP94 = RX10_TEMP93 - RX10_TEMP84 ; 
 final T36 utmp36 = new T36(RX10_TEMP94, RX10_TEMP90, RX10_TEMP89, RX10_TEMP88);
 async (RX10_TEMP92) {Program.thread36(utmp36); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP99 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP86 ] ( point ( : rank==1 ) RX10_TEMP101 ) { final doubleStub RX10_TEMP100 = RX10_TEMP88 [ RX10_TEMP101 ] ; return RX10_TEMP100 ; }
 ) ; final doubleRefArray1 RX10_TEMP102 = new doubleRefArray1 ( dUnique , RX10_TEMP99 ) ; final doubleRefArray1 sumX = RX10_TEMP102 ; final Region1 RX10_TEMP103 = dUnique . dReg ; final int RX10_TEMP104 = 0 ; final int RX10_TEMP105 = 1 ; int RX10_TEMP106 = place.MAX_PLACES ; RX10_TEMP106 = RX10_TEMP106 - RX10_TEMP105 ; final region ( : rank==1 ) RX10_TEMP107 = [ 0 : RX10_TEMP106 ] ; final dist ( : rank==1 ) RX10_TEMP108 = [ 0 : RX10_TEMP106 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP109 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP108 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP110 : RX10_TEMP107 ) { final place RX10_TEMP111 = here ; final int RX10_TEMP112 = RX10_TEMP110 [0] ; final place RX10_TEMP113 = place.places ( RX10_TEMP112 ) ; final int RX10_TEMP114 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP112 ) ; final int RX10_TEMP115 = RX10_TEMP114 - RX10_TEMP105 ; 
 final T37 utmp37 = new T37(RX10_TEMP115, RX10_TEMP111, RX10_TEMP110, RX10_TEMP109);
 async (RX10_TEMP113) {Program.thread37(utmp37); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP120 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP107 ] ( point ( : rank==1 ) RX10_TEMP122 ) { final doubleStub RX10_TEMP121 = RX10_TEMP109 [ RX10_TEMP122 ] ; return RX10_TEMP121 ; }
 ) ; final doubleRefArray1 RX10_TEMP123 = new doubleRefArray1 ( dUnique , RX10_TEMP120 ) ; final doubleRefArray1 sumY = RX10_TEMP123 ; finish { final Dist1 X10_TEMP67 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP125 = X10_TEMP67 . dReg ; final int RX10_TEMP128 = 1 ; int RX10_TEMP126 = RX10_TEMP125 . regSize ; RX10_TEMP126 = RX10_TEMP126 - RX10_TEMP128 ; final region ( : rank==1 ) RX10_TEMP127 = [ 0 : RX10_TEMP126 ] ; for ( point ( : rank==1 ) RX10_TEMP124 : RX10_TEMP127 ) { final int RX10_TEMP129 = RX10_TEMP124 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP125 , RX10_TEMP129 ) ; final Region1 RX10_TEMP130 = X10_TEMP67 . dReg ; final int RX10_TEMP131 = Program . searchPointInRegion1 ( RX10_TEMP130 , pl ) ; final int RX10_TEMP132 = 0 ; final boolean RX10_TEMP133 = RX10_TEMP131 < RX10_TEMP132 ; if ( RX10_TEMP133 ) { final String RX10_TEMP134 = "Point pl not found in the distribution X10_TEMP67." ; throw new RuntimeException ( RX10_TEMP134 ) ; }
 final place RX10_TEMP135 = Program . getPlaceFromDist1 ( X10_TEMP67 , RX10_TEMP131 ) ; final place X10_TEMP68 = RX10_TEMP135 ; 
 final T38 utmp38 = new T38(pl, sumY, sumX, numParticles, result, dResult, Y, X);
 async (X10_TEMP68) {Program.thread38(utmp38); }
 }
 }
 final int totalParticles = ( Program . intrefArraySum1 ( numParticles ) ) ; final double X10_TEMP107 = ( Program . doublerefArraySum1 ( sumX ) ) ; final double driftX = ( X10_TEMP107 / totalParticles ) ; final double X10_TEMP109 = ( Program . doublerefArraySum1 ( sumY ) ) ; final double driftY = ( X10_TEMP109 / totalParticles ) ; final String X10_TEMP112 = ( "Init: updating with drift" ) ; System.out.println ( X10_TEMP112 ) ; finish { final Dist1 X10_TEMP114 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP232 = X10_TEMP114 . dReg ; final int RX10_TEMP235 = 1 ; int RX10_TEMP233 = RX10_TEMP232 . regSize ; RX10_TEMP233 = RX10_TEMP233 - RX10_TEMP235 ; final region ( : rank==1 ) RX10_TEMP234 = [ 0 : RX10_TEMP233 ] ; for ( point ( : rank==1 ) RX10_TEMP231 : RX10_TEMP234 ) { final int RX10_TEMP236 = RX10_TEMP231 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP232 , RX10_TEMP236 ) ; final Region1 RX10_TEMP237 = X10_TEMP114 . dReg ; final int RX10_TEMP238 = Program . searchPointInRegion1 ( RX10_TEMP237 , pl ) ; final int RX10_TEMP239 = 0 ; final boolean RX10_TEMP240 = RX10_TEMP238 < RX10_TEMP239 ; if ( RX10_TEMP240 ) { final String RX10_TEMP241 = "Point pl not found in the distribution X10_TEMP114." ; throw new RuntimeException ( RX10_TEMP241 ) ; }
 final place RX10_TEMP242 = Program . getPlaceFromDist1 ( X10_TEMP114 , RX10_TEMP238 ) ; final place X10_TEMP115 = RX10_TEMP242 ; 
 final T39 utmp39 = new T39(driftY, driftX, result, dResult, Y, X);
 async (X10_TEMP115) {Program.thread39(utmp39); }
 }
 }
 final boolean X10_TEMP145 = totalParticles != _LinearESOpenPIC2D_NPARTICLES ; if ( X10_TEMP145 ) { final String X10_TEMP146 = ( "Velocity distribution truncated, number of " ) ; final String X10_TEMP147 = ( "particles = " ) ; final String X10_TEMP148 = ( X10_TEMP146 + X10_TEMP147 ) ; final String X10_TEMP150 = ( X10_TEMP148 + totalParticles ) ; System.err.println ( X10_TEMP150 ) ; }
 return result ; }
 public static ParticleRefArray1 LinearESOpenPIC2D_genParticles ( final LinearESOpenPIC2D X10_TEMP0 , final int n , final doubleRefArray2 position , final doubleRefArray2 velocity ) { final int X10_TEMP4 = ( 0 ) ; final int X10_TEMP2 = ( 1 ) ; final int X10_TEMP5 = ( n - X10_TEMP2 ) ; final Region1 X10_TEMP7 = Program . createNewRegion1R ( X10_TEMP4 , X10_TEMP5 ) ; final Dist1 X10_TEMP8 = Program . getBlockDist1 ( X10_TEMP7 ) ; final Dist1 dResult = X10_TEMP8 ; final Region1 RX10_TEMP0 = dResult . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP6 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dResult , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; final Dist1 RX10_TEMP13 = Program . restrictDist1 ( dResult , RX10_TEMP10 ) ; final Region1 RX10_TEMP14 = RX10_TEMP13 . dReg ; 
 final T40 utmp40 = new T40(RX10_TEMP14, RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6, velocity, position);
 async (RX10_TEMP10) {Program.thread40(utmp40); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP69 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP71 ) { final ParticleStub RX10_TEMP70 = RX10_TEMP6 [ RX10_TEMP71 ] ; return RX10_TEMP70 ; }
 ) ; final ParticleRefArray1 RX10_TEMP72 = new ParticleRefArray1 ( dResult , RX10_TEMP69 ) ; final ParticleRefArray1 X10_TEMP33 = RX10_TEMP72 ; return X10_TEMP33 ; }
 public static Dist2 LinearESOpenPIC2D_genInitialDist ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles ) { final int MAX_PLACES = ( place.MAX_PLACES ) ; final int X10_TEMP2 = ( 2 ) ; final boolean X10_TEMP4 = ( _LinearESOpenPIC2D_BOUNDARY_CONDITION == X10_TEMP2 ) ; final boolean X10_TEMP5 = X10_TEMP4 ; double X10_TEMP8 = 0.0 ; if ( X10_TEMP5 ) { X10_TEMP8 = 1.0 ; }
 final double X10_TEMP9 = X10_TEMP8 ; final double edgely = ( X10_TEMP9 ) ; final double y = ( _LinearESOpenPIC2D_YLENGTH ) ; final double X10_TEMP15 = ( 0.0 ) ; final double X10_TEMP16 = ( 0.0 ) ; final double X10_TEMP17 = ( 0.0 ) ; final double y0 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , edgely , X10_TEMP15 , X10_TEMP16 , X10_TEMP17 ) ) ; final double X10_TEMP23 = ( y - edgely ) ; final double X10_TEMP24 = ( 0.0 ) ; final double X10_TEMP25 = ( 0.0 ) ; final double X10_TEMP26 = ( 0.0 ) ; final double X10_TEMP27 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , X10_TEMP23 , X10_TEMP24 , X10_TEMP25 , X10_TEMP26 ) ) ; final double X10_TEMP29 = ( X10_TEMP27 - y0 ) ; final double nParticlesAve = ( X10_TEMP29 / MAX_PLACES ) ; final Dist1 X10_TEMP31 = Program . getUniqueDist ( ) ; final Dist1 dUnique = X10_TEMP31 ; final Region1 RX10_TEMP0 = dUnique . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final Region1Stub [ : rank==1 ] RX10_TEMP6 = ( Region1Stub [ : rank==1 ] ) ( new Region1Stub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T41 utmp41 = new T41(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread41(utmp41); }
 }
 }
 final Region1Stub value [ : rank==1 ] RX10_TEMP16 = ( Region1Stub value [ : rank==1 ] ) ( new Region1Stub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final Region1Stub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final Region1RefArray1 RX10_TEMP19 = new Region1RefArray1 ( dUnique , RX10_TEMP16 ) ; final Region1RefArray1 X10_TEMP33 = RX10_TEMP19 ; final Region1RefArray1 yRegions = X10_TEMP33 ; finish { final Dist1 X10_TEMP36 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP21 = X10_TEMP36 . dReg ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = RX10_TEMP21 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP21 , RX10_TEMP25 ) ; final Region1 RX10_TEMP26 = X10_TEMP36 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , pl ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { final String RX10_TEMP30 = "Point pl not found in the distribution X10_TEMP36." ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( X10_TEMP36 , RX10_TEMP27 ) ; final place X10_TEMP37 = RX10_TEMP31 ; 
 final T42 utmp42 = new T42(pl, yRegions, nParticlesAve, y0, y, edgely, X10_TEMP0);
 async (X10_TEMP37) {Program.thread42(utmp42); }
 }
 }
 final place pHere = ( here ) ; final int X10_TEMP147 = ( 0 ) ; final int X10_TEMP145 = ( 1 ) ; final int X10_TEMP148 = ( MAX_PLACES - X10_TEMP145 ) ; final Region1 X10_TEMP149 = Program . createNewRegion1R ( X10_TEMP147 , X10_TEMP148 ) ; final place X10_TEMP150 = ( here ) ; final Dist1 X10_TEMP152 = Program . getPlaceDist1 ( X10_TEMP149 , X10_TEMP150 ) ; final Dist1 dPlace = X10_TEMP152 ; final Region1 RX10_TEMP42 = dPlace . dReg ; final int RX10_TEMP43 = 0 ; final int RX10_TEMP44 = 1 ; int RX10_TEMP45 = place.MAX_PLACES ; RX10_TEMP45 = RX10_TEMP45 - RX10_TEMP44 ; final region ( : rank==1 ) RX10_TEMP46 = [ 0 : RX10_TEMP45 ] ; final dist ( : rank==1 ) RX10_TEMP47 = [ 0 : RX10_TEMP45 ] -> here ; final Region1Stub [ : rank==1 ] RX10_TEMP48 = ( Region1Stub [ : rank==1 ] ) ( new Region1Stub [ RX10_TEMP47 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP49 : RX10_TEMP46 ) { final place RX10_TEMP50 = here ; final int RX10_TEMP51 = RX10_TEMP49 [0] ; final place RX10_TEMP52 = place.places ( RX10_TEMP51 ) ; final int RX10_TEMP53 = Program . getDistLocalCount1 ( dPlace , RX10_TEMP51 ) ; final int RX10_TEMP54 = RX10_TEMP53 - RX10_TEMP44 ; 
 final T43 utmp43 = new T43(RX10_TEMP54, RX10_TEMP50, RX10_TEMP49, RX10_TEMP48);
 async (RX10_TEMP52) {Program.thread43(utmp43); }
 }
 }
 final Region1Stub value [ : rank==1 ] RX10_TEMP58 = ( Region1Stub value [ : rank==1 ] ) ( new Region1Stub value [ RX10_TEMP46 ] ( point ( : rank==1 ) RX10_TEMP60 ) { final Region1Stub RX10_TEMP59 = RX10_TEMP48 [ RX10_TEMP60 ] ; return RX10_TEMP59 ; }
 ) ; final Region1RefArray1 RX10_TEMP61 = new Region1RefArray1 ( dPlace , RX10_TEMP58 ) ; final Region1RefArray1 X10_TEMP154 = RX10_TEMP61 ; final Region1RefArray1 rBuffer = X10_TEMP154 ; finish { final Dist1 X10_TEMP157 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP63 = X10_TEMP157 . dReg ; final int RX10_TEMP66 = 1 ; int RX10_TEMP64 = RX10_TEMP63 . regSize ; RX10_TEMP64 = RX10_TEMP64 - RX10_TEMP66 ; final region ( : rank==1 ) RX10_TEMP65 = [ 0 : RX10_TEMP64 ] ; for ( point ( : rank==1 ) RX10_TEMP62 : RX10_TEMP65 ) { final int RX10_TEMP67 = RX10_TEMP62 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP63 , RX10_TEMP67 ) ; final Region1 RX10_TEMP68 = X10_TEMP157 . dReg ; final int RX10_TEMP69 = Program . searchPointInRegion1 ( RX10_TEMP68 , pl ) ; final int RX10_TEMP70 = 0 ; final boolean RX10_TEMP71 = RX10_TEMP69 < RX10_TEMP70 ; if ( RX10_TEMP71 ) { final String RX10_TEMP72 = "Point pl not found in the distribution X10_TEMP157." ; throw new RuntimeException ( RX10_TEMP72 ) ; }
 final place RX10_TEMP73 = Program . getPlaceFromDist1 ( X10_TEMP157 , RX10_TEMP69 ) ; final place X10_TEMP158 = RX10_TEMP73 ; 
 final T44 utmp44 = new T44(pl, rBuffer, pHere, yRegions);
 async (X10_TEMP158) {Program.thread44(utmp44); }
 }
 }
 final int X10_TEMP166 = 0 ; final int X10_TEMP167 = 1 ; final int X10_TEMP168 = X10_TEMP166 - X10_TEMP167 ; final Region2 X10_TEMP169 = Program . createNewRegion2RR ( X10_TEMP166 , X10_TEMP168 , X10_TEMP166 , X10_TEMP168 ) ; final place X10_TEMP170 = ( here ) ; final Dist2 X10_TEMP172 = Program . getPlaceDist2 ( X10_TEMP169 , X10_TEMP170 ) ; Dist2 dResult = X10_TEMP172 ; final Dist1 X10_TEMP175 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP96 = X10_TEMP175 . dReg ; final int RX10_TEMP99 = 1 ; int RX10_TEMP97 = RX10_TEMP96 . regSize ; RX10_TEMP97 = RX10_TEMP97 - RX10_TEMP99 ; final region ( : rank==1 ) RX10_TEMP98 = [ 0 : RX10_TEMP97 ] ; for ( point ( : rank==1 ) RX10_TEMP95 : RX10_TEMP98 ) { final int RX10_TEMP100 = RX10_TEMP95 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP96 , RX10_TEMP100 ) ; final Dist1 X10_TEMP176 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP101 = X10_TEMP176 . dReg ; final int RX10_TEMP102 = Program . searchPointInRegion1 ( RX10_TEMP101 , pl ) ; final int RX10_TEMP103 = 0 ; final boolean RX10_TEMP104 = RX10_TEMP102 < RX10_TEMP103 ; if ( RX10_TEMP104 ) { final String RX10_TEMP105 = "Point pl not found in the distribution X10_TEMP176." ; throw new RuntimeException ( RX10_TEMP105 ) ; }
 final place RX10_TEMP106 = Program . getPlaceFromDist1 ( X10_TEMP176 , RX10_TEMP102 ) ; final place p = ( RX10_TEMP106 ) ; final Dist1 RX10_TEMP107 = rBuffer . distValue ; final Region1 RX10_TEMP108 = RX10_TEMP107 . dReg ; final int RX10_TEMP109 = Program . searchPointInRegion1 ( RX10_TEMP108 , pl ) ; final int RX10_TEMP110 = 0 ; final boolean RX10_TEMP111 = RX10_TEMP109 < RX10_TEMP110 ; if ( RX10_TEMP111 ) { String RX10_TEMP112 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP112 ) ; }
 final place RX10_TEMP113 = Program . getPlaceFromDist1 ( RX10_TEMP107 , RX10_TEMP109 ) ; final place RX10_TEMP115 = here ; final boolean RX10_TEMP116 = RX10_TEMP113 != RX10_TEMP115 ; if ( RX10_TEMP116 ) { String RX10_TEMP114 = "Bad place access for array rBuffer" ; throw new RuntimeException ( RX10_TEMP114 ) ; }
 final Region1 RX10_TEMP117 = Program . getRefArrayValue1Region1 ( rBuffer , RX10_TEMP109 ) ; final Region1 X10_TEMP180 = RX10_TEMP117 ; final Region1 ry = X10_TEMP180 ; final int X10_TEMP185 = ( 0 ) ; final Region2 X10_TEMP186 = Program . createNewRegion2AR ( ry , X10_TEMP185 , _LinearESOpenPIC2D_XLENGTH ) ; final Dist2 X10_TEMP188 = Program . getPlaceDist2 ( X10_TEMP186 , p ) ; final Dist2 dLocal = X10_TEMP188 ; final Dist2 X10_TEMP191 = Program . unionDist2 ( dResult , dLocal ) ; dResult = ( X10_TEMP191 ) ; }
 return dResult ; }
 public static double LinearESOpenPIC2D_linearDensityFn ( final LinearESOpenPIC2D X10_TEMP0 , final double x , final double anlx , final double anxi , final double shift ) { final double X10_TEMP4 = ( 1.0 ) ; final double X10_TEMP1 = ( x * anxi ) ; final double X10_TEMP3 = ( X10_TEMP1 - shift ) ; final double X10_TEMP5 = ( anlx * X10_TEMP3 ) ; final double result = ( X10_TEMP4 + X10_TEMP5 ) ; final double X10_TEMP7 = ( 0.0 ) ; final boolean X10_TEMP9 = result < X10_TEMP7 ; if ( X10_TEMP9 ) { final String X10_TEMP10 = ( "Linear Density Error: result = " ) ; final String X10_TEMP12 = ( X10_TEMP10 + result ) ; System.err.println ( X10_TEMP12 ) ; }
 return result ; }
 public static double LinearESOpenPIC2D_linearDensityFnIntegral ( final LinearESOpenPIC2D X10_TEMP0 , final double x , final double anlx , final double anxi , final double shift ) { double result = ( 0.0 ) ; final double X10_TEMP2 = ( 0.0 ) ; final boolean X10_TEMP4 = anxi == X10_TEMP2 ; if ( X10_TEMP4 ) { result = ( x ) ; }
 else { final double X10_TEMP6 = ( 0.5 ) ; final double X10_TEMP7 = ( X10_TEMP6 * anlx ) ; final double X10_TEMP13 = ( X10_TEMP7 * x ) ; final double X10_TEMP9 = ( x * anxi ) ; final double X10_TEMP8 = ( 2.0 ) ; final double X10_TEMP10 = ( X10_TEMP8 * shift ) ; final double X10_TEMP12 = ( X10_TEMP9 - X10_TEMP10 ) ; final double X10_TEMP14 = ( X10_TEMP13 * X10_TEMP12 ) ; final double X10_TEMP16 = ( x + X10_TEMP14 ) ; result = ( X10_TEMP16 ) ; }
 final double X10_TEMP17 = ( 0.0 ) ; final boolean X10_TEMP19 = result < X10_TEMP17 ; if ( X10_TEMP19 ) { final String X10_TEMP20 = ( "Linear Density Integral Error: " ) ; final String X10_TEMP21 = ( "result = " ) ; final String X10_TEMP22 = ( X10_TEMP20 + X10_TEMP21 ) ; final String X10_TEMP24 = ( X10_TEMP22 + result ) ; System.err.println ( X10_TEMP24 ) ; }
 return result ; }
 public static doubleRefArray1 LinearESOpenPIC2D_stepTime ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 ionBackground ) { long time1 = ( System.currentTimeMillis ( ) ) ; long time2 = ( 0 ) ; final double CHARGE = ( _LinearESOpenPIC2D_ELECTRON_CHARGE ) ; final Dist2 RX10_TEMP0 = ionBackground . distValue ; final Dist2 dIonBG = RX10_TEMP0 ; final doubleRefArray2 chargeDensityGuards = Program . LinearESOpenPIC2D_makeGuards ( X10_TEMP0 , dIonBG ) ; final Region2 RX10_TEMP1 = dIonBG . dReg ; final int RX10_TEMP2 = 0 ; final int RX10_TEMP3 = 1 ; int RX10_TEMP4 = place.MAX_PLACES ; RX10_TEMP4 = RX10_TEMP4 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP4 ] ; final dist ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP4 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP7 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP6 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP5 ) { final place RX10_TEMP9 = here ; final int RX10_TEMP10 = RX10_TEMP8 [0] ; final place RX10_TEMP11 = place.places ( RX10_TEMP10 ) ; final int RX10_TEMP12 = Program . getDistLocalCount2 ( dIonBG , RX10_TEMP10 ) ; final int RX10_TEMP13 = RX10_TEMP12 - RX10_TEMP3 ; 
 final T45 utmp45 = new T45(RX10_TEMP13, RX10_TEMP9, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP11) {Program.thread45(utmp45); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP18 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP5 ] ( point ( : rank==1 ) RX10_TEMP20 ) { final doubleStub RX10_TEMP19 = RX10_TEMP7 [ RX10_TEMP20 ] ; return RX10_TEMP19 ; }
 ) ; final doubleRefArray2 RX10_TEMP21 = new doubleRefArray2 ( dIonBG , RX10_TEMP18 ) ; final doubleRefArray2 X10_TEMP9 = RX10_TEMP21 ; final doubleRefArray2 chargeDensity = X10_TEMP9 ; final ParticleRefArray1 X10_TEMP15 = X10_TEMP0 . particles ; Program . LinearESOpenPIC2D_depositCharge ( X10_TEMP0 , X10_TEMP15 , chargeDensity , chargeDensityGuards , CHARGE ) ; finish { final Region2 RX10_TEMP23 = dIonBG . dReg ; final int RX10_TEMP26 = 1 ; int RX10_TEMP24 = RX10_TEMP23 . regSize ; RX10_TEMP24 = RX10_TEMP24 - RX10_TEMP26 ; final region ( : rank==1 ) RX10_TEMP25 = [ 0 : RX10_TEMP24 ] ; for ( point ( : rank==1 ) RX10_TEMP22 : RX10_TEMP25 ) { final int RX10_TEMP27 = RX10_TEMP22 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP23 , RX10_TEMP27 ) ; final Region2 RX10_TEMP28 = dIonBG . dReg ; final int RX10_TEMP29 = Program . searchPointInRegion2 ( RX10_TEMP28 , pt ) ; final int RX10_TEMP30 = 0 ; final boolean RX10_TEMP31 = RX10_TEMP29 < RX10_TEMP30 ; if ( RX10_TEMP31 ) { final String RX10_TEMP32 = "Point pt not found in the distribution dIonBG." ; throw new RuntimeException ( RX10_TEMP32 ) ; }
 final place RX10_TEMP33 = Program . getPlaceFromDist2 ( dIonBG , RX10_TEMP29 ) ; final place X10_TEMP17 = RX10_TEMP33 ; 
 final T46 utmp46 = new T46(pt, chargeDensity, ionBackground);
 async (X10_TEMP17) {Program.thread46(utmp46); }
 }
 }
 Program . LinearESOpenPIC2D_addGuards ( X10_TEMP0 , chargeDensity , chargeDensityGuards ) ; final long X10_TEMP29 = ( System.currentTimeMillis ( ) ) ; time2 = ( X10_TEMP29 ) ; final long X10_TEMP32 = ( X10_TEMP0 . depositTime ) ; final long X10_TEMP31 = ( time2 - time1 ) ; final long X10_TEMP34 = ( X10_TEMP32 + X10_TEMP31 ) ; final long X10_TEMP35 = ( X10_TEMP34 ) ; X10_TEMP0 . depositTime = ( X10_TEMP35 ) ; final Dist2 RX10_TEMP66 = chargeDensity . distValue ; final Dist2 dOld = RX10_TEMP66 ; final doubleRefArray2 uniformChargeDensity = Program . LinearESOpenPIC2D_moveFieldToUniform ( X10_TEMP0 , chargeDensity ) ; final doubleRefArray2 X10_TEMP41 = Program . LinearESOpenPIC2D_doubleDimensions ( X10_TEMP0 , uniformChargeDensity ) ; final ComplexRefArray2 complexChargeDensity = Program . ArrayUtil_doubleToComplex ( X10_TEMP41 ) ; final long X10_TEMP44 = ( System.currentTimeMillis ( ) ) ; time1 = ( X10_TEMP44 ) ; final long X10_TEMP47 = ( X10_TEMP0 . redistTime ) ; final long X10_TEMP46 = ( time1 - time2 ) ; final long X10_TEMP49 = ( X10_TEMP47 + X10_TEMP46 ) ; final long X10_TEMP50 = ( X10_TEMP49 ) ; X10_TEMP0 . redistTime = ( X10_TEMP50 ) ; final PoissonSolver X10_TEMP51 = ( X10_TEMP0 . solver ) ; final ComplexRefArray2 complexForceX = Program . PoissonSolver_makeForceArray ( X10_TEMP51 ) ; final PoissonSolver X10_TEMP53 = ( X10_TEMP0 . solver ) ; final ComplexRefArray2 complexForceY = Program . PoissonSolver_makeForceArray ( X10_TEMP53 ) ; final PoissonSolver X10_TEMP55 = ( X10_TEMP0 . solver ) ; double we = ( Program . PoissonSolver_getForceCharge ( X10_TEMP55 , complexChargeDensity , complexForceX , complexForceY ) ) ; final long X10_TEMP61 = ( System.currentTimeMillis ( ) ) ; time2 = ( X10_TEMP61 ) ; final long X10_TEMP64 = ( X10_TEMP0 . solverTime ) ; final long X10_TEMP63 = ( time2 - time1 ) ; final long X10_TEMP66 = ( X10_TEMP64 + X10_TEMP63 ) ; final long X10_TEMP67 = ( X10_TEMP66 ) ; X10_TEMP0 . solverTime = ( X10_TEMP67 ) ; final Dist2 RX10_TEMP67 = chargeDensityGuards . distValue ; final Dist2 dChargeDensityGuards = RX10_TEMP67 ; final Region2 RX10_TEMP68 = dChargeDensityGuards . dReg ; final int RX10_TEMP69 = 0 ; final int RX10_TEMP70 = 1 ; int RX10_TEMP71 = place.MAX_PLACES ; RX10_TEMP71 = RX10_TEMP71 - RX10_TEMP70 ; final region ( : rank==1 ) RX10_TEMP72 = [ 0 : RX10_TEMP71 ] ; final dist ( : rank==1 ) RX10_TEMP73 = [ 0 : RX10_TEMP71 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP74 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP73 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP75 : RX10_TEMP72 ) { final place RX10_TEMP76 = here ; final int RX10_TEMP77 = RX10_TEMP75 [0] ; final place RX10_TEMP78 = place.places ( RX10_TEMP77 ) ; final int RX10_TEMP79 = Program . getDistLocalCount2 ( dChargeDensityGuards , RX10_TEMP77 ) ; final int RX10_TEMP80 = RX10_TEMP79 - RX10_TEMP70 ; 
 final T47 utmp47 = new T47(RX10_TEMP80, RX10_TEMP76, RX10_TEMP75, RX10_TEMP74);
 async (RX10_TEMP78) {Program.thread47(utmp47); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP84 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP72 ] ( point ( : rank==1 ) RX10_TEMP86 ) { final doubleStub RX10_TEMP85 = RX10_TEMP74 [ RX10_TEMP86 ] ; return RX10_TEMP85 ; }
 ) ; final doubleRefArray2 RX10_TEMP87 = new doubleRefArray2 ( dChargeDensityGuards , RX10_TEMP84 ) ; final doubleRefArray2 gx = RX10_TEMP87 ; final Region2 RX10_TEMP88 = dChargeDensityGuards . dReg ; final int RX10_TEMP89 = 0 ; final int RX10_TEMP90 = 1 ; int RX10_TEMP91 = place.MAX_PLACES ; RX10_TEMP91 = RX10_TEMP91 - RX10_TEMP90 ; final region ( : rank==1 ) RX10_TEMP92 = [ 0 : RX10_TEMP91 ] ; final dist ( : rank==1 ) RX10_TEMP93 = [ 0 : RX10_TEMP91 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP94 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP93 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP95 : RX10_TEMP92 ) { final place RX10_TEMP96 = here ; final int RX10_TEMP97 = RX10_TEMP95 [0] ; final place RX10_TEMP98 = place.places ( RX10_TEMP97 ) ; final int RX10_TEMP99 = Program . getDistLocalCount2 ( dChargeDensityGuards , RX10_TEMP97 ) ; final int RX10_TEMP100 = RX10_TEMP99 - RX10_TEMP90 ; 
 final T48 utmp48 = new T48(RX10_TEMP100, RX10_TEMP96, RX10_TEMP95, RX10_TEMP94);
 async (RX10_TEMP98) {Program.thread48(utmp48); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP104 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP92 ] ( point ( : rank==1 ) RX10_TEMP106 ) { final doubleStub RX10_TEMP105 = RX10_TEMP94 [ RX10_TEMP106 ] ; return RX10_TEMP105 ; }
 ) ; final doubleRefArray2 RX10_TEMP107 = new doubleRefArray2 ( dChargeDensityGuards , RX10_TEMP104 ) ; final doubleRefArray2 gy = RX10_TEMP107 ; final doubleRefArray2 X10_TEMP74 = Program . ArrayUtil_complexToDouble ( complexForceX ) ; final doubleRefArray2 forceX = Program . LinearESOpenPIC2D_cropField ( X10_TEMP0 , X10_TEMP74 , gx ) ; final doubleRefArray2 X10_TEMP79 = Program . ArrayUtil_complexToDouble ( complexForceY ) ; final doubleRefArray2 forceY = Program . LinearESOpenPIC2D_cropField ( X10_TEMP0 , X10_TEMP79 , gy ) ; final doubleRefArray2 fcx = Program . LinearESOpenPIC2D_moveFieldToDist ( X10_TEMP0 , forceX , dOld ) ; final doubleRefArray2 fcy = Program . LinearESOpenPIC2D_moveFieldToDist ( X10_TEMP0 , forceY , dOld ) ; Program . LinearESOpenPIC2D_loadGuards ( X10_TEMP0 , fcx , gx ) ; Program . LinearESOpenPIC2D_loadGuards ( X10_TEMP0 , fcy , gy ) ; final long X10_TEMP92 = ( System.currentTimeMillis ( ) ) ; time1 = ( X10_TEMP92 ) ; final long X10_TEMP95 = ( X10_TEMP0 . redistTime ) ; final long X10_TEMP94 = ( time1 - time2 ) ; final long X10_TEMP97 = ( X10_TEMP95 + X10_TEMP94 ) ; final long X10_TEMP98 = ( X10_TEMP97 ) ; X10_TEMP0 . redistTime = ( X10_TEMP98 ) ; final ParticleRefArray1 X10_TEMP104 = X10_TEMP0 . particles ; double wk = ( Program . LinearESOpenPIC2D_pushParticles ( X10_TEMP0 , X10_TEMP104 , fcx , gx , fcy , gy ) ) ; final long X10_TEMP107 = ( System.currentTimeMillis ( ) ) ; time2 = ( X10_TEMP107 ) ; final long X10_TEMP110 = ( X10_TEMP0 . pushTime ) ; final long X10_TEMP109 = ( time2 - time1 ) ; final long X10_TEMP112 = ( X10_TEMP110 + X10_TEMP109 ) ; final long X10_TEMP113 = ( X10_TEMP112 ) ; X10_TEMP0 . pushTime = ( X10_TEMP113 ) ; final intRefArray1 info = Program . LinearESOpenPIC2D_makeInfoArray ( X10_TEMP0 ) ; final ParticleRefArray1 X10_TEMP118 = X10_TEMP0 . particles ; final ParticleRefArray1 X10_TEMP120 = Program . LinearESOpenPIC2D_moveParticles ( X10_TEMP0 , X10_TEMP118 , dOld , info ) ; final ParticleRefArray1 X10_TEMP121 = X10_TEMP120 ; X10_TEMP0 . particles = ( X10_TEMP121 ) ; final int X10_TEMP123 = ( 6 ) ; final Point1 RX10_TEMP108 = new Point1 ( X10_TEMP123 ) ; final Dist1 RX10_TEMP109 = info . distValue ; final Region1 RX10_TEMP110 = RX10_TEMP109 . dReg ; final int RX10_TEMP111 = Program . searchPointInRegion1 ( RX10_TEMP110 , RX10_TEMP108 ) ; final int RX10_TEMP112 = 0 ; final boolean RX10_TEMP113 = RX10_TEMP111 < RX10_TEMP112 ; if ( RX10_TEMP113 ) { String RX10_TEMP114 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP114 ) ; }
 final place RX10_TEMP115 = Program . getPlaceFromDist1 ( RX10_TEMP109 , RX10_TEMP111 ) ; final place RX10_TEMP117 = here ; final boolean RX10_TEMP118 = RX10_TEMP115 != RX10_TEMP117 ; if ( RX10_TEMP118 ) { String RX10_TEMP116 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP116 ) ; }
 final int RX10_TEMP119 = Program . getRefArrayValue1int ( info , RX10_TEMP111 ) ; final int X10_TEMP124 = ( RX10_TEMP119 ) ; final double X10_TEMP126 = ( ( double ) X10_TEMP124 ) ; final int X10_TEMP127 = ( place.MAX_PLACES ) ; final double particleAve = ( X10_TEMP126 / X10_TEMP127 ) ; final int X10_TEMP130 = ( 1 ) ; final Point1 RX10_TEMP120 = new Point1 ( X10_TEMP130 ) ; final Dist1 RX10_TEMP121 = info . distValue ; final Region1 RX10_TEMP122 = RX10_TEMP121 . dReg ; final int RX10_TEMP123 = Program . searchPointInRegion1 ( RX10_TEMP122 , RX10_TEMP120 ) ; final int RX10_TEMP124 = 0 ; final boolean RX10_TEMP125 = RX10_TEMP123 < RX10_TEMP124 ; if ( RX10_TEMP125 ) { String RX10_TEMP126 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP126 ) ; }
 final place RX10_TEMP127 = Program . getPlaceFromDist1 ( RX10_TEMP121 , RX10_TEMP123 ) ; final place RX10_TEMP129 = here ; final boolean RX10_TEMP130 = RX10_TEMP127 != RX10_TEMP129 ; if ( RX10_TEMP130 ) { String RX10_TEMP128 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP128 ) ; }
 final int RX10_TEMP131 = Program . getRefArrayValue1int ( info , RX10_TEMP123 ) ; final double X10_TEMP131 = ( RX10_TEMP131 ) ; final double X10_TEMP139 = ( X10_TEMP131 - particleAve ) ; final int X10_TEMP134 = ( 2 ) ; final Point1 RX10_TEMP132 = new Point1 ( X10_TEMP134 ) ; final Dist1 RX10_TEMP133 = info . distValue ; final Region1 RX10_TEMP134 = RX10_TEMP133 . dReg ; final int RX10_TEMP135 = Program . searchPointInRegion1 ( RX10_TEMP134 , RX10_TEMP132 ) ; final int RX10_TEMP136 = 0 ; final boolean RX10_TEMP137 = RX10_TEMP135 < RX10_TEMP136 ; if ( RX10_TEMP137 ) { String RX10_TEMP138 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP138 ) ; }
 final place RX10_TEMP139 = Program . getPlaceFromDist1 ( RX10_TEMP133 , RX10_TEMP135 ) ; final place RX10_TEMP141 = here ; final boolean RX10_TEMP142 = RX10_TEMP139 != RX10_TEMP141 ; if ( RX10_TEMP142 ) { String RX10_TEMP140 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP140 ) ; }
 final int RX10_TEMP143 = Program . getRefArrayValue1int ( info , RX10_TEMP135 ) ; final double X10_TEMP135 = ( RX10_TEMP143 ) ; final double X10_TEMP137 = ( X10_TEMP135 / particleAve ) ; final double X10_TEMP140 = ( particleAve - X10_TEMP137 ) ; final double balance = ( Program . X10Util_maxDouble ( X10_TEMP139 , X10_TEMP140 ) ) ; final boolean X10_TEMP143 = balance > _LinearESOpenPIC2D_IMBALANCE ; if ( X10_TEMP143 ) { final ParticleRefArray1 X10_TEMP146 = X10_TEMP0 . particles ; final intRefArray1 count = Program . LinearESOpenPIC2D_countParticles ( X10_TEMP0 , X10_TEMP146 , dOld ) ; final Dist2 dNew = Program . LinearESOpenPIC2D_repartition ( X10_TEMP0 , count , dOld , particleAve ) ; final doubleRefArray2 X10_TEMP154 = X10_TEMP0 . backgroundCharge ; final doubleRefArray2 X10_TEMP156 = Program . LinearESOpenPIC2D_moveFieldToDist ( X10_TEMP0 , X10_TEMP154 , dNew ) ; final doubleRefArray2 X10_TEMP157 = X10_TEMP156 ; X10_TEMP0 . backgroundCharge = ( X10_TEMP157 ) ; final ParticleRefArray1 X10_TEMP161 = X10_TEMP0 . particles ; final ParticleRefArray1 X10_TEMP163 = Program . LinearESOpenPIC2D_moveParticles ( X10_TEMP0 , X10_TEMP161 , dNew , info ) ; final ParticleRefArray1 X10_TEMP164 = X10_TEMP163 ; X10_TEMP0 . particles = ( X10_TEMP164 ) ; }
 final int X10_TEMP167 = ( 0 ) ; final int X10_TEMP168 = ( 2 ) ; final Region1 X10_TEMP169 = Program . createNewRegion1R ( X10_TEMP167 , X10_TEMP168 ) ; final place X10_TEMP170 = ( here ) ; final Dist1 X10_TEMP172 = Program . getPlaceDist1 ( X10_TEMP169 , X10_TEMP170 ) ; final Dist1 dResult = X10_TEMP172 ; final Region1 RX10_TEMP144 = dResult . dReg ; final int RX10_TEMP145 = 0 ; final int RX10_TEMP146 = 1 ; int RX10_TEMP147 = place.MAX_PLACES ; RX10_TEMP147 = RX10_TEMP147 - RX10_TEMP146 ; final region ( : rank==1 ) RX10_TEMP148 = [ 0 : RX10_TEMP147 ] ; final dist ( : rank==1 ) RX10_TEMP149 = [ 0 : RX10_TEMP147 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP150 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP149 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP151 : RX10_TEMP148 ) { final place RX10_TEMP152 = here ; final int RX10_TEMP153 = RX10_TEMP151 [0] ; final place RX10_TEMP154 = place.places ( RX10_TEMP153 ) ; final int RX10_TEMP155 = Program . getDistLocalCount1 ( dResult , RX10_TEMP153 ) ; final int RX10_TEMP156 = RX10_TEMP155 - RX10_TEMP146 ; 
 final T49 utmp49 = new T49(RX10_TEMP156, RX10_TEMP152, RX10_TEMP151, RX10_TEMP150);
 async (RX10_TEMP154) {Program.thread49(utmp49); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP160 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP148 ] ( point ( : rank==1 ) RX10_TEMP162 ) { final doubleStub RX10_TEMP161 = RX10_TEMP150 [ RX10_TEMP162 ] ; return RX10_TEMP161 ; }
 ) ; final doubleRefArray1 RX10_TEMP163 = new doubleRefArray1 ( dResult , RX10_TEMP160 ) ; final doubleRefArray1 result = RX10_TEMP163 ; final int X10_TEMP176 = ( 0 ) ; final double X10_TEMP178 = ( we ) ; final Point1 RX10_TEMP164 = new Point1 ( X10_TEMP176 ) ; final Dist1 RX10_TEMP165 = result . distValue ; final Region1 RX10_TEMP166 = RX10_TEMP165 . dReg ; final int RX10_TEMP167 = Program . searchPointInRegion1 ( RX10_TEMP166 , RX10_TEMP164 ) ; final int RX10_TEMP168 = 0 ; final boolean RX10_TEMP169 = RX10_TEMP167 < RX10_TEMP168 ; if ( RX10_TEMP169 ) { String RX10_TEMP170 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP170 ) ; }
 final place RX10_TEMP171 = Program . getPlaceFromDist1 ( RX10_TEMP165 , RX10_TEMP167 ) ; final place RX10_TEMP173 = here ; final boolean RX10_TEMP174 = RX10_TEMP171 != RX10_TEMP173 ; if ( RX10_TEMP174 ) { String RX10_TEMP172 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP172 ) ; }
 Program . setRefArrayValue1double ( result , RX10_TEMP167 , X10_TEMP178 ) ; final int X10_TEMP180 = ( 1 ) ; final double X10_TEMP182 = ( wk ) ; final Point1 RX10_TEMP175 = new Point1 ( X10_TEMP180 ) ; final Dist1 RX10_TEMP176 = result . distValue ; final Region1 RX10_TEMP177 = RX10_TEMP176 . dReg ; final int RX10_TEMP178 = Program . searchPointInRegion1 ( RX10_TEMP177 , RX10_TEMP175 ) ; final int RX10_TEMP179 = 0 ; final boolean RX10_TEMP180 = RX10_TEMP178 < RX10_TEMP179 ; if ( RX10_TEMP180 ) { String RX10_TEMP181 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP181 ) ; }
 final place RX10_TEMP182 = Program . getPlaceFromDist1 ( RX10_TEMP176 , RX10_TEMP178 ) ; final place RX10_TEMP184 = here ; final boolean RX10_TEMP185 = RX10_TEMP182 != RX10_TEMP184 ; if ( RX10_TEMP185 ) { String RX10_TEMP183 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP183 ) ; }
 Program . setRefArrayValue1double ( result , RX10_TEMP178 , X10_TEMP182 ) ; final int X10_TEMP184 = ( 2 ) ; final double X10_TEMP186 = ( we + wk ) ; final double X10_TEMP187 = ( X10_TEMP186 ) ; final Point1 RX10_TEMP186 = new Point1 ( X10_TEMP184 ) ; final Dist1 RX10_TEMP187 = result . distValue ; final Region1 RX10_TEMP188 = RX10_TEMP187 . dReg ; final int RX10_TEMP189 = Program . searchPointInRegion1 ( RX10_TEMP188 , RX10_TEMP186 ) ; final int RX10_TEMP190 = 0 ; final boolean RX10_TEMP191 = RX10_TEMP189 < RX10_TEMP190 ; if ( RX10_TEMP191 ) { String RX10_TEMP192 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP192 ) ; }
 final place RX10_TEMP193 = Program . getPlaceFromDist1 ( RX10_TEMP187 , RX10_TEMP189 ) ; final place RX10_TEMP195 = here ; final boolean RX10_TEMP196 = RX10_TEMP193 != RX10_TEMP195 ; if ( RX10_TEMP196 ) { String RX10_TEMP194 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP194 ) ; }
 Program . setRefArrayValue1double ( result , RX10_TEMP189 , X10_TEMP187 ) ; final long X10_TEMP189 = ( System.currentTimeMillis ( ) ) ; time1 = ( X10_TEMP189 ) ; final long X10_TEMP192 = ( X10_TEMP0 . moveTime ) ; final long X10_TEMP191 = ( time1 - time2 ) ; final long X10_TEMP194 = ( X10_TEMP192 + X10_TEMP191 ) ; final long X10_TEMP195 = ( X10_TEMP194 ) ; X10_TEMP0 . moveTime = ( X10_TEMP195 ) ; return result ; }
 public static double LinearESOpenPIC2D_linearDensity ( final LinearESOpenPIC2D X10_TEMP0 , final double x , final double anlx , final double anxi , final double shift ) { final double X10_TEMP4 = ( 1.0 ) ; final double X10_TEMP1 = ( x * anxi ) ; final double X10_TEMP3 = ( X10_TEMP1 - shift ) ; final double X10_TEMP5 = ( anlx * X10_TEMP3 ) ; final double X10_TEMP7 = ( X10_TEMP4 + X10_TEMP5 ) ; return X10_TEMP7 ; }
 public static double LinearESOpenPIC2D_linearDensityIntegral ( final LinearESOpenPIC2D X10_TEMP0 , final double x , final double anlx , final double anxi , final double shift ) { final int X10_TEMP1 = ( 0 ) ; final boolean X10_TEMP3 = ( anxi == X10_TEMP1 ) ; final boolean X10_TEMP4 = X10_TEMP3 ; final double X10_TEMP6 = ( 0.5 ) ; final double X10_TEMP7 = ( X10_TEMP6 * anlx ) ; final double X10_TEMP13 = ( X10_TEMP7 * x ) ; final double X10_TEMP9 = ( x * anxi ) ; final double X10_TEMP8 = ( 2.0 ) ; final double X10_TEMP10 = ( X10_TEMP8 * shift ) ; final double X10_TEMP12 = ( X10_TEMP9 - X10_TEMP10 ) ; final double X10_TEMP14 = ( X10_TEMP13 * X10_TEMP12 ) ; double X10_TEMP16 = x + X10_TEMP14 ; if ( X10_TEMP4 ) { X10_TEMP16 = x ; }
 final double X10_TEMP17 = X10_TEMP16 ; return X10_TEMP17 ; }
 public static doubleRefArray2 LinearESOpenPIC2D_makeGuards ( final LinearESOpenPIC2D X10_TEMP0 , final Dist2 dData ) { final int X10_TEMP1 = 0 ; final int X10_TEMP2 = 1 ; final int X10_TEMP3 = X10_TEMP1 - X10_TEMP2 ; final Region2 X10_TEMP4 = Program . createNewRegion2RR ( X10_TEMP1 , X10_TEMP3 , X10_TEMP1 , X10_TEMP3 ) ; final place X10_TEMP5 = ( here ) ; final Dist2 X10_TEMP7 = Program . getPlaceDist2 ( X10_TEMP4 , X10_TEMP5 ) ; Dist2 dResult = X10_TEMP7 ; final Dist1 X10_TEMP10 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP10 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP6 = X10_TEMP11 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP11." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP11 , RX10_TEMP7 ) ; final place p = ( RX10_TEMP11 ) ; final int X10_TEMP17 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getPRank2D ( dData , p , X10_TEMP17 ) ; final int X10_TEMP22 = ( 1 ) ; final Region1 rLocal2 = Program . X10Util_getPRank2D ( dData , p , X10_TEMP22 ) ; final int RX10_TEMP12 = rLocal1 . regSize ; final int RX10_TEMP13 = 0 ; final boolean RX10_TEMP14 = RX10_TEMP12 <= RX10_TEMP13 ; if ( RX10_TEMP14 ) { final String RX10_TEMP15 = "Operation high() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP15 ) ; }
 final int ub = ( Program . regionHigh ( rLocal1 ) ) ; final int X10_TEMP25 = ( 1 ) ; final int X10_TEMP29 = ( ub + X10_TEMP25 ) ; final int X10_TEMP27 = ( 1 ) ; final int X10_TEMP30 = ( ub + X10_TEMP27 ) ; final Region2 X10_TEMP32 = Program . createNewRegion2RA ( X10_TEMP29 , X10_TEMP30 , rLocal2 ) ; final Dist2 X10_TEMP34 = Program . getPlaceDist2 ( X10_TEMP32 , p ) ; final Dist2 X10_TEMP36 = Program . unionDist2 ( dResult , X10_TEMP34 ) ; dResult = ( X10_TEMP36 ) ; }
 final Region2 RX10_TEMP16 = dResult . dReg ; final int RX10_TEMP17 = 0 ; final int RX10_TEMP18 = 1 ; int RX10_TEMP19 = place.MAX_PLACES ; RX10_TEMP19 = RX10_TEMP19 - RX10_TEMP18 ; final region ( : rank==1 ) RX10_TEMP20 = [ 0 : RX10_TEMP19 ] ; final dist ( : rank==1 ) RX10_TEMP21 = [ 0 : RX10_TEMP19 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP22 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP21 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP23 : RX10_TEMP20 ) { final place RX10_TEMP24 = here ; final int RX10_TEMP25 = RX10_TEMP23 [0] ; final place RX10_TEMP26 = place.places ( RX10_TEMP25 ) ; final int RX10_TEMP27 = Program . getDistLocalCount2 ( dResult , RX10_TEMP25 ) ; final int RX10_TEMP28 = RX10_TEMP27 - RX10_TEMP18 ; 
 final T50 utmp50 = new T50(RX10_TEMP28, RX10_TEMP24, RX10_TEMP23, RX10_TEMP22);
 async (RX10_TEMP26) {Program.thread50(utmp50); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP33 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP20 ] ( point ( : rank==1 ) RX10_TEMP35 ) { final doubleStub RX10_TEMP34 = RX10_TEMP22 [ RX10_TEMP35 ] ; return RX10_TEMP34 ; }
 ) ; final doubleRefArray2 RX10_TEMP36 = new doubleRefArray2 ( dResult , RX10_TEMP33 ) ; final doubleRefArray2 X10_TEMP40 = RX10_TEMP36 ; return X10_TEMP40 ; }
 public static void LinearESOpenPIC2D_depositCharge ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles , final doubleRefArray2 fieldCharge , final doubleRefArray2 guards , final double charge ) { finish { final Dist1 X10_TEMP2 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP2 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP2 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP2." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP2 , RX10_TEMP7 ) ; final place X10_TEMP3 = RX10_TEMP11 ; 
 final T51 utmp51 = new T51(charge, guards, fieldCharge, particles);
 async (X10_TEMP3) {Program.thread51(utmp51); }
 }
 }
 }
 public static void LinearESOpenPIC2D_addGuards ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data , final doubleRefArray2 guards ) { final Dist2 RX10_TEMP0 = guards . distValue ; final Dist2 X10_TEMP1 = RX10_TEMP0 ; final Dist2 dGuard = X10_TEMP1 ; finish { final Dist1 X10_TEMP4 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP2 = X10_TEMP4 . dReg ; final int RX10_TEMP5 = 1 ; int RX10_TEMP3 = RX10_TEMP2 . regSize ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; for ( point ( : rank==1 ) RX10_TEMP1 : RX10_TEMP4 ) { final int RX10_TEMP6 = RX10_TEMP1 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP2 , RX10_TEMP6 ) ; final Region1 RX10_TEMP7 = X10_TEMP4 . dReg ; final int RX10_TEMP8 = Program . searchPointInRegion1 ( RX10_TEMP7 , pl ) ; final int RX10_TEMP9 = 0 ; final boolean RX10_TEMP10 = RX10_TEMP8 < RX10_TEMP9 ; if ( RX10_TEMP10 ) { final String RX10_TEMP11 = "Point pl not found in the distribution X10_TEMP4." ; throw new RuntimeException ( RX10_TEMP11 ) ; }
 final place RX10_TEMP12 = Program . getPlaceFromDist1 ( X10_TEMP4 , RX10_TEMP8 ) ; final place X10_TEMP5 = RX10_TEMP12 ; 
 final T52 utmp52 = new T52(guards, data);
 async (X10_TEMP5) {Program.thread52(utmp52); }
 }
 }
 }
 public static doubleRefArray2 LinearESOpenPIC2D_doubleDimensions ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data ) { final Dist2 RX10_TEMP0 = data . distValue ; final Region2 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region2 rData = RX10_TEMP1 ; final int X10_TEMP4 = ( 0 ) ; final Region1 rData1 = Program . X10Util_getRank2D ( rData , X10_TEMP4 ) ; final int X10_TEMP8 = ( 1 ) ; final Region1 rData2 = Program . X10Util_getRank2D ( rData , X10_TEMP8 ) ; final int X10_TEMP16 = ( 0 ) ; final int X10_TEMP11 = ( 2 ) ; final int X10_TEMP12 = ( rData1 . regSize ) ; final int X10_TEMP13 = ( X10_TEMP11 * X10_TEMP12 ) ; final int X10_TEMP14 = ( 1 ) ; final int X10_TEMP17 = ( X10_TEMP13 - X10_TEMP14 ) ; final Region1 X10_TEMP28 = Program . createNewRegion1R ( X10_TEMP16 , X10_TEMP17 ) ; final int X10_TEMP25 = ( 0 ) ; final int X10_TEMP20 = ( 2 ) ; final int X10_TEMP21 = ( rData2 . regSize ) ; final int X10_TEMP22 = ( X10_TEMP20 * X10_TEMP21 ) ; final int X10_TEMP23 = ( 1 ) ; final int X10_TEMP26 = ( X10_TEMP22 - X10_TEMP23 ) ; final Region1 X10_TEMP29 = Program . createNewRegion1R ( X10_TEMP25 , X10_TEMP26 ) ; final Dist2 dResult = Program . X10Util_distBlockStar2 ( X10_TEMP28 , X10_TEMP29 ) ; final Region2 RX10_TEMP2 = dResult . dReg ; final int RX10_TEMP3 = 0 ; final int RX10_TEMP4 = 1 ; int RX10_TEMP5 = place.MAX_PLACES ; RX10_TEMP5 = RX10_TEMP5 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP5 ] ; final dist ( : rank==1 ) RX10_TEMP7 = [ 0 : RX10_TEMP5 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP8 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP7 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP9 : RX10_TEMP6 ) { final place RX10_TEMP10 = here ; final int RX10_TEMP11 = RX10_TEMP9 [0] ; final place RX10_TEMP12 = place.places ( RX10_TEMP11 ) ; final int RX10_TEMP13 = Program . getDistLocalCount2 ( dResult , RX10_TEMP11 ) ; final int RX10_TEMP14 = RX10_TEMP13 - RX10_TEMP4 ; 
 final T53 utmp53 = new T53(RX10_TEMP14, RX10_TEMP10, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP12) {Program.thread53(utmp53); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP19 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP6 ] ( point ( : rank==1 ) RX10_TEMP21 ) { final doubleStub RX10_TEMP20 = RX10_TEMP8 [ RX10_TEMP21 ] ; return RX10_TEMP20 ; }
 ) ; final doubleRefArray2 RX10_TEMP22 = new doubleRefArray2 ( dResult , RX10_TEMP19 ) ; final doubleRefArray2 result = RX10_TEMP22 ; finish { final Dist1 X10_TEMP35 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP24 = X10_TEMP35 . dReg ; final int RX10_TEMP27 = 1 ; int RX10_TEMP25 = RX10_TEMP24 . regSize ; RX10_TEMP25 = RX10_TEMP25 - RX10_TEMP27 ; final region ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP25 ] ; for ( point ( : rank==1 ) RX10_TEMP23 : RX10_TEMP26 ) { final int RX10_TEMP28 = RX10_TEMP23 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP24 , RX10_TEMP28 ) ; final Region1 RX10_TEMP29 = X10_TEMP35 . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion1 ( RX10_TEMP29 , pl ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pl not found in the distribution X10_TEMP35." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist1 ( X10_TEMP35 , RX10_TEMP30 ) ; final place X10_TEMP36 = RX10_TEMP34 ; 
 final T54 utmp54 = new T54(pl, result, data);
 async (X10_TEMP36) {Program.thread54(utmp54); }
 }
 }
 return result ; }
 public static doubleRefArray2 LinearESOpenPIC2D_moveFieldToUniform ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data ) { final Dist2 RX10_TEMP0 = data . distValue ; final Region2 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region2 rData = RX10_TEMP1 ; final Dist2 X10_TEMP5 = Program . X10Util_distBlockStar1 ( rData ) ; final doubleRefArray2 X10_TEMP7 = Program . LinearESOpenPIC2D_moveFieldToDist ( X10_TEMP0 , data , X10_TEMP5 ) ; return X10_TEMP7 ; }
 public static doubleRefArray2 LinearESOpenPIC2D_moveFieldToDist ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data , final Dist2 dDst ) { final int MAX_ROWS = ( _LinearESOpenPIC2D_MOVE_FIELD_TO_DIST_MAX_ROWS ) ; final int MAX_ITER = ( 0 ) ; final Dist1 X10_TEMP3 = Program . getUniqueDist ( ) ; final Dist1 dUnique = X10_TEMP3 ; final Dist2 RX10_TEMP0 = data . distValue ; final Region2 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region2 rData = RX10_TEMP1 ; final int X10_TEMP8 = ( 0 ) ; final Region1 rRank1 = Program . X10Util_getRank2D ( rData , X10_TEMP8 ) ; final int X10_TEMP12 = ( 1 ) ; final Region1 rRank2t = Program . X10Util_getRank2D ( rData , X10_TEMP12 ) ; final int X10_TEMP18 = ( 0 ) ; final int X10_TEMP15 = ( rRank2t . regSize ) ; final int X10_TEMP16 = ( 1 ) ; final int X10_TEMP19 = ( X10_TEMP15 - X10_TEMP16 ) ; final Region1 rRank2 = Program . createNewRegion1R ( X10_TEMP18 , X10_TEMP19 ) ; final int X10_TEMP24 = ( 0 ) ; final int X10_TEMP22 = ( 1 ) ; final int X10_TEMP25 = ( MAX_ROWS - X10_TEMP22 ) ; final Region1 rRows = Program . createNewRegion1R ( X10_TEMP24 , X10_TEMP25 ) ; final Dist2 X10_TEMP31 = Program . X10Util_extendDistRank2D ( dUnique , rRows ) ; final Dist3 dBuffer = Program . X10Util_extendDistRank3D ( X10_TEMP31 , rRank2 ) ; final Region3 RX10_TEMP2 = dBuffer . dReg ; final int RX10_TEMP3 = 0 ; final int RX10_TEMP4 = 1 ; int RX10_TEMP5 = place.MAX_PLACES ; RX10_TEMP5 = RX10_TEMP5 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP5 ] ; final dist ( : rank==1 ) RX10_TEMP7 = [ 0 : RX10_TEMP5 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP8 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP7 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP9 : RX10_TEMP6 ) { final place RX10_TEMP10 = here ; final int RX10_TEMP11 = RX10_TEMP9 [0] ; final place RX10_TEMP12 = place.places ( RX10_TEMP11 ) ; final int RX10_TEMP13 = Program . getDistLocalCount3 ( dBuffer , RX10_TEMP11 ) ; final int RX10_TEMP14 = RX10_TEMP13 - RX10_TEMP4 ; 
 final T55 utmp55 = new T55(RX10_TEMP14, RX10_TEMP10, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP12) {Program.thread55(utmp55); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP19 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP6 ] ( point ( : rank==1 ) RX10_TEMP21 ) { final doubleStub RX10_TEMP20 = RX10_TEMP8 [ RX10_TEMP21 ] ; return RX10_TEMP20 ; }
 ) ; final doubleRefArray3 RX10_TEMP22 = new doubleRefArray3 ( dBuffer , RX10_TEMP19 ) ; final doubleRefArray3 srcBuffer = RX10_TEMP22 ; final Region3 RX10_TEMP23 = dBuffer . dReg ; final int RX10_TEMP24 = 0 ; final int RX10_TEMP25 = 1 ; int RX10_TEMP26 = place.MAX_PLACES ; RX10_TEMP26 = RX10_TEMP26 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP27 = [ 0 : RX10_TEMP26 ] ; final dist ( : rank==1 ) RX10_TEMP28 = [ 0 : RX10_TEMP26 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP29 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP28 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP30 : RX10_TEMP27 ) { final place RX10_TEMP31 = here ; final int RX10_TEMP32 = RX10_TEMP30 [0] ; final place RX10_TEMP33 = place.places ( RX10_TEMP32 ) ; final int RX10_TEMP34 = Program . getDistLocalCount3 ( dBuffer , RX10_TEMP32 ) ; final int RX10_TEMP35 = RX10_TEMP34 - RX10_TEMP25 ; 
 final T56 utmp56 = new T56(RX10_TEMP35, RX10_TEMP31, RX10_TEMP30, RX10_TEMP29);
 async (RX10_TEMP33) {Program.thread56(utmp56); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP40 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP27 ] ( point ( : rank==1 ) RX10_TEMP42 ) { final doubleStub RX10_TEMP41 = RX10_TEMP29 [ RX10_TEMP42 ] ; return RX10_TEMP41 ; }
 ) ; final doubleRefArray3 RX10_TEMP43 = new doubleRefArray3 ( dBuffer , RX10_TEMP40 ) ; final doubleRefArray3 dstBuffer = RX10_TEMP43 ; final Region1 RX10_TEMP44 = dUnique . dReg ; final int RX10_TEMP45 = 0 ; final int RX10_TEMP46 = 1 ; int RX10_TEMP47 = place.MAX_PLACES ; RX10_TEMP47 = RX10_TEMP47 - RX10_TEMP46 ; final region ( : rank==1 ) RX10_TEMP48 = [ 0 : RX10_TEMP47 ] ; final dist ( : rank==1 ) RX10_TEMP49 = [ 0 : RX10_TEMP47 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP50 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP49 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP51 : RX10_TEMP48 ) { final place RX10_TEMP52 = here ; final int RX10_TEMP53 = RX10_TEMP51 [0] ; final place RX10_TEMP54 = place.places ( RX10_TEMP53 ) ; final int RX10_TEMP55 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP53 ) ; final int RX10_TEMP56 = RX10_TEMP55 - RX10_TEMP46 ; 
 final T57 utmp57 = new T57(RX10_TEMP56, RX10_TEMP52, RX10_TEMP51, RX10_TEMP50);
 async (RX10_TEMP54) {Program.thread57(utmp57); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP61 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP48 ] ( point ( : rank==1 ) RX10_TEMP63 ) { final intStub RX10_TEMP62 = RX10_TEMP50 [ RX10_TEMP63 ] ; return RX10_TEMP62 ; }
 ) ; final intRefArray1 RX10_TEMP64 = new intRefArray1 ( dUnique , RX10_TEMP61 ) ; final intRefArray1 offsets = RX10_TEMP64 ; final Region1 RX10_TEMP65 = dUnique . dReg ; final int RX10_TEMP66 = 0 ; final int RX10_TEMP67 = 1 ; int RX10_TEMP68 = place.MAX_PLACES ; RX10_TEMP68 = RX10_TEMP68 - RX10_TEMP67 ; final region ( : rank==1 ) RX10_TEMP69 = [ 0 : RX10_TEMP68 ] ; final dist ( : rank==1 ) RX10_TEMP70 = [ 0 : RX10_TEMP68 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP71 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP70 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP72 : RX10_TEMP69 ) { final place RX10_TEMP73 = here ; final int RX10_TEMP74 = RX10_TEMP72 [0] ; final place RX10_TEMP75 = place.places ( RX10_TEMP74 ) ; final int RX10_TEMP76 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP74 ) ; final int RX10_TEMP77 = RX10_TEMP76 - RX10_TEMP67 ; 
 final T58 utmp58 = new T58(RX10_TEMP77, RX10_TEMP73, RX10_TEMP72, RX10_TEMP71);
 async (RX10_TEMP75) {Program.thread58(utmp58); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP82 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP69 ] ( point ( : rank==1 ) RX10_TEMP84 ) { final intStub RX10_TEMP83 = RX10_TEMP71 [ RX10_TEMP84 ] ; return RX10_TEMP83 ; }
 ) ; final intRefArray1 RX10_TEMP85 = new intRefArray1 ( dUnique , RX10_TEMP82 ) ; final intRefArray1 sizes = RX10_TEMP85 ; final Region1 RX10_TEMP86 = dUnique . dReg ; final int RX10_TEMP87 = 0 ; final int RX10_TEMP88 = 1 ; int RX10_TEMP89 = place.MAX_PLACES ; RX10_TEMP89 = RX10_TEMP89 - RX10_TEMP88 ; final region ( : rank==1 ) RX10_TEMP90 = [ 0 : RX10_TEMP89 ] ; final dist ( : rank==1 ) RX10_TEMP91 = [ 0 : RX10_TEMP89 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP92 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP91 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP93 : RX10_TEMP90 ) { final place RX10_TEMP94 = here ; final int RX10_TEMP95 = RX10_TEMP93 [0] ; final place RX10_TEMP96 = place.places ( RX10_TEMP95 ) ; final int RX10_TEMP97 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP95 ) ; final int RX10_TEMP98 = RX10_TEMP97 - RX10_TEMP88 ; 
 final T59 utmp59 = new T59(RX10_TEMP98, RX10_TEMP94, RX10_TEMP93, RX10_TEMP92);
 async (RX10_TEMP96) {Program.thread59(utmp59); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP103 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP90 ] ( point ( : rank==1 ) RX10_TEMP105 ) { final intStub RX10_TEMP104 = RX10_TEMP92 [ RX10_TEMP105 ] ; return RX10_TEMP104 ; }
 ) ; final intRefArray1 RX10_TEMP106 = new intRefArray1 ( dUnique , RX10_TEMP103 ) ; final intRefArray1 inLt = RX10_TEMP106 ; final Region1 RX10_TEMP107 = dUnique . dReg ; final int RX10_TEMP108 = 0 ; final int RX10_TEMP109 = 1 ; int RX10_TEMP110 = place.MAX_PLACES ; RX10_TEMP110 = RX10_TEMP110 - RX10_TEMP109 ; final region ( : rank==1 ) RX10_TEMP111 = [ 0 : RX10_TEMP110 ] ; final dist ( : rank==1 ) RX10_TEMP112 = [ 0 : RX10_TEMP110 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP113 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP112 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP114 : RX10_TEMP111 ) { final place RX10_TEMP115 = here ; final int RX10_TEMP116 = RX10_TEMP114 [0] ; final place RX10_TEMP117 = place.places ( RX10_TEMP116 ) ; final int RX10_TEMP118 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP116 ) ; final int RX10_TEMP119 = RX10_TEMP118 - RX10_TEMP109 ; 
 final T60 utmp60 = new T60(RX10_TEMP119, RX10_TEMP115, RX10_TEMP114, RX10_TEMP113);
 async (RX10_TEMP117) {Program.thread60(utmp60); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP124 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP111 ] ( point ( : rank==1 ) RX10_TEMP126 ) { final intStub RX10_TEMP125 = RX10_TEMP113 [ RX10_TEMP126 ] ; return RX10_TEMP125 ; }
 ) ; final intRefArray1 RX10_TEMP127 = new intRefArray1 ( dUnique , RX10_TEMP124 ) ; final intRefArray1 inRt = RX10_TEMP127 ; final Region1 RX10_TEMP128 = dUnique . dReg ; final int RX10_TEMP129 = 0 ; final int RX10_TEMP130 = 1 ; int RX10_TEMP131 = place.MAX_PLACES ; RX10_TEMP131 = RX10_TEMP131 - RX10_TEMP130 ; final region ( : rank==1 ) RX10_TEMP132 = [ 0 : RX10_TEMP131 ] ; final dist ( : rank==1 ) RX10_TEMP133 = [ 0 : RX10_TEMP131 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP134 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP133 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP135 : RX10_TEMP132 ) { final place RX10_TEMP136 = here ; final int RX10_TEMP137 = RX10_TEMP135 [0] ; final place RX10_TEMP138 = place.places ( RX10_TEMP137 ) ; final int RX10_TEMP139 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP137 ) ; final int RX10_TEMP140 = RX10_TEMP139 - RX10_TEMP130 ; 
 final T61 utmp61 = new T61(RX10_TEMP140, RX10_TEMP136, RX10_TEMP135, RX10_TEMP134);
 async (RX10_TEMP138) {Program.thread61(utmp61); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP145 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP132 ] ( point ( : rank==1 ) RX10_TEMP147 ) { final intStub RX10_TEMP146 = RX10_TEMP134 [ RX10_TEMP147 ] ; return RX10_TEMP146 ; }
 ) ; final intRefArray1 RX10_TEMP148 = new intRefArray1 ( dUnique , RX10_TEMP145 ) ; final intRefArray1 outLt = RX10_TEMP148 ; final Region1 RX10_TEMP149 = dUnique . dReg ; final int RX10_TEMP150 = 0 ; final int RX10_TEMP151 = 1 ; int RX10_TEMP152 = place.MAX_PLACES ; RX10_TEMP152 = RX10_TEMP152 - RX10_TEMP151 ; final region ( : rank==1 ) RX10_TEMP153 = [ 0 : RX10_TEMP152 ] ; final dist ( : rank==1 ) RX10_TEMP154 = [ 0 : RX10_TEMP152 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP155 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP154 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP156 : RX10_TEMP153 ) { final place RX10_TEMP157 = here ; final int RX10_TEMP158 = RX10_TEMP156 [0] ; final place RX10_TEMP159 = place.places ( RX10_TEMP158 ) ; final int RX10_TEMP160 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP158 ) ; final int RX10_TEMP161 = RX10_TEMP160 - RX10_TEMP151 ; 
 final T62 utmp62 = new T62(RX10_TEMP161, RX10_TEMP157, RX10_TEMP156, RX10_TEMP155);
 async (RX10_TEMP159) {Program.thread62(utmp62); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP166 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP153 ] ( point ( : rank==1 ) RX10_TEMP168 ) { final intStub RX10_TEMP167 = RX10_TEMP155 [ RX10_TEMP168 ] ; return RX10_TEMP167 ; }
 ) ; final intRefArray1 RX10_TEMP169 = new intRefArray1 ( dUnique , RX10_TEMP166 ) ; final intRefArray1 outRt = RX10_TEMP169 ; finish { final Dist1 X10_TEMP58 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP171 = X10_TEMP58 . dReg ; final int RX10_TEMP174 = 1 ; int RX10_TEMP172 = RX10_TEMP171 . regSize ; RX10_TEMP172 = RX10_TEMP172 - RX10_TEMP174 ; final region ( : rank==1 ) RX10_TEMP173 = [ 0 : RX10_TEMP172 ] ; for ( point ( : rank==1 ) RX10_TEMP170 : RX10_TEMP173 ) { final int RX10_TEMP175 = RX10_TEMP170 [0] ; final Point1 X10_TEMP59 = Program . regionOrdinalPoint1 ( RX10_TEMP171 , RX10_TEMP175 ) ; final int pl = X10_TEMP59 . f0 ; final Region1 RX10_TEMP176 = X10_TEMP58 . dReg ; final int RX10_TEMP177 = Program . searchPointInRegion1 ( RX10_TEMP176 , X10_TEMP59 ) ; final int RX10_TEMP178 = 0 ; final boolean RX10_TEMP179 = RX10_TEMP177 < RX10_TEMP178 ; if ( RX10_TEMP179 ) { final String RX10_TEMP180 = "Point X10_TEMP59 not found in the distribution X10_TEMP58." ; throw new RuntimeException ( RX10_TEMP180 ) ; }
 final place RX10_TEMP181 = Program . getPlaceFromDist1 ( X10_TEMP58 , RX10_TEMP177 ) ; final place X10_TEMP60 = RX10_TEMP181 ; 
 final T63 utmp63 = new T63(pl, sizes, offsets, srcBuffer, data);
 async (X10_TEMP60) {Program.thread63(utmp63); }
 }
 }
 int mter = ( MAX_ITER ) ; int iter = ( 0 ) ; boolean done = ( false ) ; boolean X10_TEMP97 = false ; do { finish { final Dist1 X10_TEMP99 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP239 = X10_TEMP99 . dReg ; final int RX10_TEMP242 = 1 ; int RX10_TEMP240 = RX10_TEMP239 . regSize ; RX10_TEMP240 = RX10_TEMP240 - RX10_TEMP242 ; final region ( : rank==1 ) RX10_TEMP241 = [ 0 : RX10_TEMP240 ] ; for ( point ( : rank==1 ) RX10_TEMP238 : RX10_TEMP241 ) { final int RX10_TEMP243 = RX10_TEMP238 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP239 , RX10_TEMP243 ) ; final Region1 RX10_TEMP244 = X10_TEMP99 . dReg ; final int RX10_TEMP245 = Program . searchPointInRegion1 ( RX10_TEMP244 , pl ) ; final int RX10_TEMP246 = 0 ; final boolean RX10_TEMP247 = RX10_TEMP245 < RX10_TEMP246 ; if ( RX10_TEMP247 ) { final String RX10_TEMP248 = "Point pl not found in the distribution X10_TEMP99." ; throw new RuntimeException ( RX10_TEMP248 ) ; }
 final place RX10_TEMP249 = Program . getPlaceFromDist1 ( X10_TEMP99 , RX10_TEMP245 ) ; final place X10_TEMP100 = RX10_TEMP249 ; 
 final T64 utmp64 = new T64(pl, outRt, outLt, sizes, offsets, dDst);
 async (X10_TEMP100) {Program.thread64(utmp64); }
 }
 }
 final int X10_TEMP158 = ( iter ) ; final int X10_TEMP159 = 1 ; iter = iter + X10_TEMP159 ; final Region1 RX10_TEMP348 = dUnique . dReg ; final int RX10_TEMP349 = 0 ; final int RX10_TEMP350 = 1 ; int RX10_TEMP351 = place.MAX_PLACES ; RX10_TEMP351 = RX10_TEMP351 - RX10_TEMP350 ; final region ( : rank==1 ) RX10_TEMP352 = [ 0 : RX10_TEMP351 ] ; final dist ( : rank==1 ) RX10_TEMP353 = [ 0 : RX10_TEMP351 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP354 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP353 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP355 : RX10_TEMP352 ) { final place RX10_TEMP356 = here ; final int RX10_TEMP357 = RX10_TEMP355 [0] ; final place RX10_TEMP358 = place.places ( RX10_TEMP357 ) ; final int RX10_TEMP359 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP357 ) ; final int RX10_TEMP360 = RX10_TEMP359 - RX10_TEMP350 ; 
 final T65 utmp65 = new T65(RX10_TEMP360, RX10_TEMP356, RX10_TEMP355, RX10_TEMP354);
 async (RX10_TEMP358) {Program.thread65(utmp65); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP365 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP352 ] ( point ( : rank==1 ) RX10_TEMP367 ) { final intStub RX10_TEMP366 = RX10_TEMP354 [ RX10_TEMP367 ] ; return RX10_TEMP366 ; }
 ) ; final intRefArray1 RX10_TEMP368 = new intRefArray1 ( dUnique , RX10_TEMP365 ) ; final intRefArray1 pr = RX10_TEMP368 ; final Region1 RX10_TEMP369 = dUnique . dReg ; final int RX10_TEMP370 = 0 ; final int RX10_TEMP371 = 1 ; int RX10_TEMP372 = place.MAX_PLACES ; RX10_TEMP372 = RX10_TEMP372 - RX10_TEMP371 ; final region ( : rank==1 ) RX10_TEMP373 = [ 0 : RX10_TEMP372 ] ; final dist ( : rank==1 ) RX10_TEMP374 = [ 0 : RX10_TEMP372 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP375 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP374 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP376 : RX10_TEMP373 ) { final place RX10_TEMP377 = here ; final int RX10_TEMP378 = RX10_TEMP376 [0] ; final place RX10_TEMP379 = place.places ( RX10_TEMP378 ) ; final int RX10_TEMP380 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP378 ) ; final int RX10_TEMP381 = RX10_TEMP380 - RX10_TEMP371 ; 
 final T66 utmp66 = new T66(RX10_TEMP381, RX10_TEMP377, RX10_TEMP376, RX10_TEMP375);
 async (RX10_TEMP379) {Program.thread66(utmp66); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP386 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP373 ] ( point ( : rank==1 ) RX10_TEMP388 ) { final intStub RX10_TEMP387 = RX10_TEMP375 [ RX10_TEMP388 ] ; return RX10_TEMP387 ; }
 ) ; final intRefArray1 RX10_TEMP389 = new intRefArray1 ( dUnique , RX10_TEMP386 ) ; final intRefArray1 ter = RX10_TEMP389 ; finish { final Dist1 X10_TEMP167 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP391 = X10_TEMP167 . dReg ; final int RX10_TEMP394 = 1 ; int RX10_TEMP392 = RX10_TEMP391 . regSize ; RX10_TEMP392 = RX10_TEMP392 - RX10_TEMP394 ; final region ( : rank==1 ) RX10_TEMP393 = [ 0 : RX10_TEMP392 ] ; for ( point ( : rank==1 ) RX10_TEMP390 : RX10_TEMP393 ) { final int RX10_TEMP395 = RX10_TEMP390 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP391 , RX10_TEMP395 ) ; final Region1 RX10_TEMP396 = X10_TEMP167 . dReg ; final int RX10_TEMP397 = Program . searchPointInRegion1 ( RX10_TEMP396 , pl ) ; final int RX10_TEMP398 = 0 ; final boolean RX10_TEMP399 = RX10_TEMP397 < RX10_TEMP398 ; if ( RX10_TEMP399 ) { final String RX10_TEMP400 = "Point pl not found in the distribution X10_TEMP167." ; throw new RuntimeException ( RX10_TEMP400 ) ; }
 final place RX10_TEMP401 = Program . getPlaceFromDist1 ( X10_TEMP167 , RX10_TEMP397 ) ; final place X10_TEMP168 = RX10_TEMP401 ; 
 final T67 utmp67 = new T67(pl, inRt, inLt);
 async (X10_TEMP168) {Program.thread67(utmp67); }
 }
 }
 finish { final Dist1 X10_TEMP178 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP423 = X10_TEMP178 . dReg ; final int RX10_TEMP426 = 1 ; int RX10_TEMP424 = RX10_TEMP423 . regSize ; RX10_TEMP424 = RX10_TEMP424 - RX10_TEMP426 ; final region ( : rank==1 ) RX10_TEMP425 = [ 0 : RX10_TEMP424 ] ; for ( point ( : rank==1 ) RX10_TEMP422 : RX10_TEMP425 ) { final int RX10_TEMP427 = RX10_TEMP422 [0] ; final Point1 X10_TEMP179 = Program . regionOrdinalPoint1 ( RX10_TEMP423 , RX10_TEMP427 ) ; final int pl = X10_TEMP179 . f0 ; final Region1 RX10_TEMP428 = X10_TEMP178 . dReg ; final int RX10_TEMP429 = Program . searchPointInRegion1 ( RX10_TEMP428 , X10_TEMP179 ) ; final int RX10_TEMP430 = 0 ; final boolean RX10_TEMP431 = RX10_TEMP429 < RX10_TEMP430 ; if ( RX10_TEMP431 ) { final String RX10_TEMP432 = "Point X10_TEMP179 not found in the distribution X10_TEMP178." ; throw new RuntimeException ( RX10_TEMP432 ) ; }
 final place RX10_TEMP433 = Program . getPlaceFromDist1 ( X10_TEMP178 , RX10_TEMP429 ) ; final place X10_TEMP180 = RX10_TEMP433 ; 
 final T68 utmp68 = new T68(pl, outRt, inLt, sizes, dstBuffer, srcBuffer, rRank2);
 async (X10_TEMP180) {Program.thread68(utmp68); }
 }
 }
 finish { final Dist1 X10_TEMP229 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP540 = X10_TEMP229 . dReg ; final int RX10_TEMP543 = 1 ; int RX10_TEMP541 = RX10_TEMP540 . regSize ; RX10_TEMP541 = RX10_TEMP541 - RX10_TEMP543 ; final region ( : rank==1 ) RX10_TEMP542 = [ 0 : RX10_TEMP541 ] ; for ( point ( : rank==1 ) RX10_TEMP539 : RX10_TEMP542 ) { final int RX10_TEMP544 = RX10_TEMP539 [0] ; final Point1 X10_TEMP230 = Program . regionOrdinalPoint1 ( RX10_TEMP540 , RX10_TEMP544 ) ; final int pl = X10_TEMP230 . f0 ; final Region1 RX10_TEMP545 = X10_TEMP229 . dReg ; final int RX10_TEMP546 = Program . searchPointInRegion1 ( RX10_TEMP545 , X10_TEMP230 ) ; final int RX10_TEMP547 = 0 ; final boolean RX10_TEMP548 = RX10_TEMP546 < RX10_TEMP547 ; if ( RX10_TEMP548 ) { final String RX10_TEMP549 = "Point X10_TEMP230 not found in the distribution X10_TEMP229." ; throw new RuntimeException ( RX10_TEMP549 ) ; }
 final place RX10_TEMP550 = Program . getPlaceFromDist1 ( X10_TEMP229 , RX10_TEMP546 ) ; final place X10_TEMP231 = RX10_TEMP550 ; 
 final T69 utmp69 = new T69(pl, pr, outRt, inLt, sizes, offsets, dstBuffer, srcBuffer, rRank2, MAX_ROWS);
 async (X10_TEMP231) {Program.thread69(utmp69); }
 }
 }
 finish { final Dist1 X10_TEMP376 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP972 = X10_TEMP376 . dReg ; final int RX10_TEMP975 = 1 ; int RX10_TEMP973 = RX10_TEMP972 . regSize ; RX10_TEMP973 = RX10_TEMP973 - RX10_TEMP975 ; final region ( : rank==1 ) RX10_TEMP974 = [ 0 : RX10_TEMP973 ] ; for ( point ( : rank==1 ) RX10_TEMP971 : RX10_TEMP974 ) { final int RX10_TEMP976 = RX10_TEMP971 [0] ; final Point1 X10_TEMP377 = Program . regionOrdinalPoint1 ( RX10_TEMP972 , RX10_TEMP976 ) ; final int pl = X10_TEMP377 . f0 ; final Region1 RX10_TEMP977 = X10_TEMP376 . dReg ; final int RX10_TEMP978 = Program . searchPointInRegion1 ( RX10_TEMP977 , X10_TEMP377 ) ; final int RX10_TEMP979 = 0 ; final boolean RX10_TEMP980 = RX10_TEMP978 < RX10_TEMP979 ; if ( RX10_TEMP980 ) { final String RX10_TEMP981 = "Point X10_TEMP377 not found in the distribution X10_TEMP376." ; throw new RuntimeException ( RX10_TEMP981 ) ; }
 final place RX10_TEMP982 = Program . getPlaceFromDist1 ( X10_TEMP376 , RX10_TEMP978 ) ; final place X10_TEMP378 = RX10_TEMP982 ; 
 final T70 utmp70 = new T70(pl, outLt, inRt, dstBuffer, srcBuffer, rRank2);
 async (X10_TEMP378) {Program.thread70(utmp70); }
 }
 }
 finish { final Dist1 X10_TEMP421 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1065 = X10_TEMP421 . dReg ; final int RX10_TEMP1068 = 1 ; int RX10_TEMP1066 = RX10_TEMP1065 . regSize ; RX10_TEMP1066 = RX10_TEMP1066 - RX10_TEMP1068 ; final region ( : rank==1 ) RX10_TEMP1067 = [ 0 : RX10_TEMP1066 ] ; for ( point ( : rank==1 ) RX10_TEMP1064 : RX10_TEMP1067 ) { final int RX10_TEMP1069 = RX10_TEMP1064 [0] ; final Point1 X10_TEMP422 = Program . regionOrdinalPoint1 ( RX10_TEMP1065 , RX10_TEMP1069 ) ; final int pl = X10_TEMP422 . f0 ; final Region1 RX10_TEMP1070 = X10_TEMP421 . dReg ; final int RX10_TEMP1071 = Program . searchPointInRegion1 ( RX10_TEMP1070 , X10_TEMP422 ) ; final int RX10_TEMP1072 = 0 ; final boolean RX10_TEMP1073 = RX10_TEMP1071 < RX10_TEMP1072 ; if ( RX10_TEMP1073 ) { final String RX10_TEMP1074 = "Point X10_TEMP422 not found in the distribution X10_TEMP421." ; throw new RuntimeException ( RX10_TEMP1074 ) ; }
 final place RX10_TEMP1075 = Program . getPlaceFromDist1 ( X10_TEMP421 , RX10_TEMP1071 ) ; final place X10_TEMP423 = RX10_TEMP1075 ; 
 final T71 utmp71 = new T71(pl, ter, pr, outRt, outLt, inRt, sizes, offsets, dstBuffer, srcBuffer, rRank2, MAX_ROWS, dDst);
 async (X10_TEMP423) {Program.thread71(utmp71); }
 }
 }
 int ierr = ( 0 ) ; final boolean X10_TEMP577 = iter <= mter ; if ( X10_TEMP577 ) { final int X10_TEMP578 = ( Program . intrefArrayMax1 ( pr ) ) ; final int X10_TEMP579 = ( 0 ) ; final boolean X10_TEMP581 = X10_TEMP578 != X10_TEMP579 ; if ( X10_TEMP581 ) { final int X10_TEMP583 = ( Program . intrefArrayMax1 ( pr ) ) ; ierr = ( X10_TEMP583 ) ; final String X10_TEMP584 = ( "Local field overflow error, " ) ; final String X10_TEMP585 = ( "ierr = " ) ; final String X10_TEMP586 = ( X10_TEMP584 + X10_TEMP585 ) ; final String X10_TEMP588 = ( X10_TEMP586 + ierr ) ; System.err.println ( X10_TEMP588 ) ; break ; }
 final boolean X10_TEMP590 = iter < mter ; if ( X10_TEMP590 ) { continue ; }
 else { break ; }
 }
 final int X10_TEMP591 = ( 10 ) ; final boolean X10_TEMP593 = iter > X10_TEMP591 ; if ( X10_TEMP593 ) { final String X10_TEMP595 = ( "Too many iterations" ) ; throw new RuntimeException ( X10_TEMP595 ) ; }
 final int X10_TEMP598 = ( 0 ) ; final int X10_TEMP599 = ( 1 ) ; final Region1 X10_TEMP600 = Program . createNewRegion1R ( X10_TEMP598 , X10_TEMP599 ) ; final place X10_TEMP601 = ( here ) ; final Dist1 dFlags = Program . getPlaceDist1 ( X10_TEMP600 , X10_TEMP601 ) ; final Region1 RX10_TEMP1485 = dFlags . dReg ; final int RX10_TEMP1486 = 0 ; final int RX10_TEMP1487 = 1 ; int RX10_TEMP1488 = place.MAX_PLACES ; RX10_TEMP1488 = RX10_TEMP1488 - RX10_TEMP1487 ; final region ( : rank==1 ) RX10_TEMP1489 = [ 0 : RX10_TEMP1488 ] ; final dist ( : rank==1 ) RX10_TEMP1490 = [ 0 : RX10_TEMP1488 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1491 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1490 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1492 : RX10_TEMP1489 ) { final place RX10_TEMP1493 = here ; final int RX10_TEMP1494 = RX10_TEMP1492 [0] ; final place RX10_TEMP1495 = place.places ( RX10_TEMP1494 ) ; final int RX10_TEMP1496 = Program . getDistLocalCount1 ( dFlags , RX10_TEMP1494 ) ; final int RX10_TEMP1497 = RX10_TEMP1496 - RX10_TEMP1487 ; 
 final T72 utmp72 = new T72(RX10_TEMP1497, RX10_TEMP1493, RX10_TEMP1492, RX10_TEMP1491);
 async (RX10_TEMP1495) {Program.thread72(utmp72); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1501 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1489 ] ( point ( : rank==1 ) RX10_TEMP1503 ) { final intStub RX10_TEMP1502 = RX10_TEMP1491 [ RX10_TEMP1503 ] ; return RX10_TEMP1502 ; }
 ) ; final intRefArray1 RX10_TEMP1504 = new intRefArray1 ( dFlags , RX10_TEMP1501 ) ; final intRefArray1 flags = RX10_TEMP1504 ; final int X10_TEMP605 = ( 0 ) ; final int X10_TEMP607 = ( Program . intrefArrayMax1 ( pr ) ) ; final int X10_TEMP608 = ( X10_TEMP607 ) ; final Point1 RX10_TEMP1505 = new Point1 ( X10_TEMP605 ) ; final Dist1 RX10_TEMP1506 = flags . distValue ; final Region1 RX10_TEMP1507 = RX10_TEMP1506 . dReg ; final int RX10_TEMP1508 = Program . searchPointInRegion1 ( RX10_TEMP1507 , RX10_TEMP1505 ) ; final int RX10_TEMP1509 = 0 ; final boolean RX10_TEMP1510 = RX10_TEMP1508 < RX10_TEMP1509 ; if ( RX10_TEMP1510 ) { String RX10_TEMP1511 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1511 ) ; }
 final place RX10_TEMP1512 = Program . getPlaceFromDist1 ( RX10_TEMP1506 , RX10_TEMP1508 ) ; final place RX10_TEMP1514 = here ; final boolean RX10_TEMP1515 = RX10_TEMP1512 != RX10_TEMP1514 ; if ( RX10_TEMP1515 ) { String RX10_TEMP1513 = "Bad place access for array flags" ; throw new RuntimeException ( RX10_TEMP1513 ) ; }
 Program . setRefArrayValue1int ( flags , RX10_TEMP1508 , X10_TEMP608 ) ; final int X10_TEMP610 = ( 1 ) ; final int X10_TEMP612 = ( Program . intrefArrayMax1 ( ter ) ) ; final int X10_TEMP613 = ( X10_TEMP612 ) ; final Point1 RX10_TEMP1516 = new Point1 ( X10_TEMP610 ) ; final Dist1 RX10_TEMP1517 = flags . distValue ; final Region1 RX10_TEMP1518 = RX10_TEMP1517 . dReg ; final int RX10_TEMP1519 = Program . searchPointInRegion1 ( RX10_TEMP1518 , RX10_TEMP1516 ) ; final int RX10_TEMP1520 = 0 ; final boolean RX10_TEMP1521 = RX10_TEMP1519 < RX10_TEMP1520 ; if ( RX10_TEMP1521 ) { String RX10_TEMP1522 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1522 ) ; }
 final place RX10_TEMP1523 = Program . getPlaceFromDist1 ( RX10_TEMP1517 , RX10_TEMP1519 ) ; final place RX10_TEMP1525 = here ; final boolean RX10_TEMP1526 = RX10_TEMP1523 != RX10_TEMP1525 ; if ( RX10_TEMP1526 ) { String RX10_TEMP1524 = "Bad place access for array flags" ; throw new RuntimeException ( RX10_TEMP1524 ) ; }
 Program . setRefArrayValue1int ( flags , RX10_TEMP1519 , X10_TEMP613 ) ; final int X10_TEMP615 = ( 0 ) ; final Point1 RX10_TEMP1527 = new Point1 ( X10_TEMP615 ) ; final Dist1 RX10_TEMP1528 = flags . distValue ; final Region1 RX10_TEMP1529 = RX10_TEMP1528 . dReg ; final int RX10_TEMP1530 = Program . searchPointInRegion1 ( RX10_TEMP1529 , RX10_TEMP1527 ) ; final int RX10_TEMP1531 = 0 ; final boolean RX10_TEMP1532 = RX10_TEMP1530 < RX10_TEMP1531 ; if ( RX10_TEMP1532 ) { String RX10_TEMP1533 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1533 ) ; }
 final place RX10_TEMP1534 = Program . getPlaceFromDist1 ( RX10_TEMP1528 , RX10_TEMP1530 ) ; final place RX10_TEMP1536 = here ; final boolean RX10_TEMP1537 = RX10_TEMP1534 != RX10_TEMP1536 ; if ( RX10_TEMP1537 ) { String RX10_TEMP1535 = "Bad place access for array flags" ; throw new RuntimeException ( RX10_TEMP1535 ) ; }
 final int RX10_TEMP1538 = Program . getRefArrayValue1int ( flags , RX10_TEMP1530 ) ; final int X10_TEMP616 = ( RX10_TEMP1538 ) ; final int X10_TEMP617 = ( 0 ) ; final boolean X10_TEMP619 = X10_TEMP616 != X10_TEMP617 ; if ( X10_TEMP619 ) { final int X10_TEMP621 = ( 0 ) ; final Point1 RX10_TEMP1539 = new Point1 ( X10_TEMP621 ) ; final Dist1 RX10_TEMP1540 = flags . distValue ; final Region1 RX10_TEMP1541 = RX10_TEMP1540 . dReg ; final int RX10_TEMP1542 = Program . searchPointInRegion1 ( RX10_TEMP1541 , RX10_TEMP1539 ) ; final int RX10_TEMP1543 = 0 ; final boolean RX10_TEMP1544 = RX10_TEMP1542 < RX10_TEMP1543 ; if ( RX10_TEMP1544 ) { String RX10_TEMP1545 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1545 ) ; }
 final place RX10_TEMP1546 = Program . getPlaceFromDist1 ( RX10_TEMP1540 , RX10_TEMP1542 ) ; final place RX10_TEMP1548 = here ; final boolean RX10_TEMP1549 = RX10_TEMP1546 != RX10_TEMP1548 ; if ( RX10_TEMP1549 ) { String RX10_TEMP1547 = "Bad place access for array flags" ; throw new RuntimeException ( RX10_TEMP1547 ) ; }
 final int RX10_TEMP1550 = Program . getRefArrayValue1int ( flags , RX10_TEMP1542 ) ; final int X10_TEMP623 = ( RX10_TEMP1550 ) ; ierr = ( X10_TEMP623 ) ; final String X10_TEMP624 = ( "Global field overflow error, " ) ; final String X10_TEMP625 = ( "ierr = " ) ; final String X10_TEMP626 = ( X10_TEMP624 + X10_TEMP625 ) ; final String X10_TEMP628 = ( X10_TEMP626 + ierr ) ; System.err.println ( X10_TEMP628 ) ; break ; }
 final int X10_TEMP630 = ( 1 ) ; final Point1 RX10_TEMP1551 = new Point1 ( X10_TEMP630 ) ; final Dist1 RX10_TEMP1552 = flags . distValue ; final Region1 RX10_TEMP1553 = RX10_TEMP1552 . dReg ; final int RX10_TEMP1554 = Program . searchPointInRegion1 ( RX10_TEMP1553 , RX10_TEMP1551 ) ; final int RX10_TEMP1555 = 0 ; final boolean RX10_TEMP1556 = RX10_TEMP1554 < RX10_TEMP1555 ; if ( RX10_TEMP1556 ) { String RX10_TEMP1557 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1557 ) ; }
 final place RX10_TEMP1558 = Program . getPlaceFromDist1 ( RX10_TEMP1552 , RX10_TEMP1554 ) ; final place RX10_TEMP1560 = here ; final boolean RX10_TEMP1561 = RX10_TEMP1558 != RX10_TEMP1560 ; if ( RX10_TEMP1561 ) { String RX10_TEMP1559 = "Bad place access for array flags" ; throw new RuntimeException ( RX10_TEMP1559 ) ; }
 final int RX10_TEMP1562 = Program . getRefArrayValue1int ( flags , RX10_TEMP1554 ) ; final int X10_TEMP631 = ( RX10_TEMP1562 ) ; final int X10_TEMP632 = ( 0 ) ; final boolean X10_TEMP634 = X10_TEMP631 != X10_TEMP632 ; if ( X10_TEMP634 ) { final String X10_TEMP635 = ( "Info: fields being passed " ) ; final String X10_TEMP636 = ( "further = " ) ; final String X10_TEMP639 = ( X10_TEMP635 + X10_TEMP636 ) ; final int X10_TEMP638 = ( 1 ) ; final Point1 RX10_TEMP1563 = new Point1 ( X10_TEMP638 ) ; final Dist1 RX10_TEMP1564 = flags . distValue ; final Region1 RX10_TEMP1565 = RX10_TEMP1564 . dReg ; final int RX10_TEMP1566 = Program . searchPointInRegion1 ( RX10_TEMP1565 , RX10_TEMP1563 ) ; final int RX10_TEMP1567 = 0 ; final boolean RX10_TEMP1568 = RX10_TEMP1566 < RX10_TEMP1567 ; if ( RX10_TEMP1568 ) { String RX10_TEMP1569 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1569 ) ; }
 final place RX10_TEMP1570 = Program . getPlaceFromDist1 ( RX10_TEMP1564 , RX10_TEMP1566 ) ; final place RX10_TEMP1572 = here ; final boolean RX10_TEMP1573 = RX10_TEMP1570 != RX10_TEMP1572 ; if ( RX10_TEMP1573 ) { String RX10_TEMP1571 = "Bad place access for array flags" ; throw new RuntimeException ( RX10_TEMP1571 ) ; }
 final int RX10_TEMP1574 = Program . getRefArrayValue1int ( flags , RX10_TEMP1566 ) ; final int X10_TEMP640 = ( RX10_TEMP1574 ) ; final String X10_TEMP642 = ( X10_TEMP639 + X10_TEMP640 ) ; System.err.println ( X10_TEMP642 ) ; }
 else { mter = ( iter ) ; break ; }
 X10_TEMP97 = ! done ; }
 while ( X10_TEMP97 ) ; final Region2 RX10_TEMP1575 = dDst . dReg ; final int RX10_TEMP1576 = 0 ; final int RX10_TEMP1577 = 1 ; int RX10_TEMP1578 = place.MAX_PLACES ; RX10_TEMP1578 = RX10_TEMP1578 - RX10_TEMP1577 ; final region ( : rank==1 ) RX10_TEMP1579 = [ 0 : RX10_TEMP1578 ] ; final dist ( : rank==1 ) RX10_TEMP1580 = [ 0 : RX10_TEMP1578 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP1581 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP1580 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1582 : RX10_TEMP1579 ) { final place RX10_TEMP1583 = here ; final int RX10_TEMP1584 = RX10_TEMP1582 [0] ; final place RX10_TEMP1585 = place.places ( RX10_TEMP1584 ) ; final int RX10_TEMP1586 = Program . getDistLocalCount2 ( dDst , RX10_TEMP1584 ) ; final int RX10_TEMP1587 = RX10_TEMP1586 - RX10_TEMP1577 ; 
 final T73 utmp73 = new T73(RX10_TEMP1587, RX10_TEMP1583, RX10_TEMP1582, RX10_TEMP1581);
 async (RX10_TEMP1585) {Program.thread73(utmp73); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP1591 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP1579 ] ( point ( : rank==1 ) RX10_TEMP1593 ) { final doubleStub RX10_TEMP1592 = RX10_TEMP1581 [ RX10_TEMP1593 ] ; return RX10_TEMP1592 ; }
 ) ; final doubleRefArray2 RX10_TEMP1594 = new doubleRefArray2 ( dDst , RX10_TEMP1591 ) ; final doubleRefArray2 result = RX10_TEMP1594 ; finish { final Dist1 X10_TEMP647 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1596 = X10_TEMP647 . dReg ; final int RX10_TEMP1599 = 1 ; int RX10_TEMP1597 = RX10_TEMP1596 . regSize ; RX10_TEMP1597 = RX10_TEMP1597 - RX10_TEMP1599 ; final region ( : rank==1 ) RX10_TEMP1598 = [ 0 : RX10_TEMP1597 ] ; for ( point ( : rank==1 ) RX10_TEMP1595 : RX10_TEMP1598 ) { final int RX10_TEMP1600 = RX10_TEMP1595 [0] ; final Point1 X10_TEMP648 = Program . regionOrdinalPoint1 ( RX10_TEMP1596 , RX10_TEMP1600 ) ; final int pl = X10_TEMP648 . f0 ; final Region1 RX10_TEMP1601 = X10_TEMP647 . dReg ; final int RX10_TEMP1602 = Program . searchPointInRegion1 ( RX10_TEMP1601 , X10_TEMP648 ) ; final int RX10_TEMP1603 = 0 ; final boolean RX10_TEMP1604 = RX10_TEMP1602 < RX10_TEMP1603 ; if ( RX10_TEMP1604 ) { final String RX10_TEMP1605 = "Point X10_TEMP648 not found in the distribution X10_TEMP647." ; throw new RuntimeException ( RX10_TEMP1605 ) ; }
 final place RX10_TEMP1606 = Program . getPlaceFromDist1 ( X10_TEMP647 , RX10_TEMP1602 ) ; final place X10_TEMP649 = RX10_TEMP1606 ; 
 final T74 utmp74 = new T74(pl, result, sizes, offsets, srcBuffer, rRank2, dDst);
 async (X10_TEMP649) {Program.thread74(utmp74); }
 }
 }
 return result ; }
 public static doubleRefArray2 LinearESOpenPIC2D_cropField ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data , final doubleRefArray2 guards ) { final int X10_TEMP4 = ( 0 ) ; final int X10_TEMP2 = ( 1 ) ; final int X10_TEMP5 = ( _LinearESOpenPIC2D_YLENGTH - X10_TEMP2 ) ; final Region1 rRank1 = Program . createNewRegion1R ( X10_TEMP4 , X10_TEMP5 ) ; final int X10_TEMP9 = ( 0 ) ; final Region1 rRank2 = Program . createNewRegion1R ( X10_TEMP9 , _LinearESOpenPIC2D_XLENGTH ) ; final Dist2 RX10_TEMP0 = guards . distValue ; final Dist2 dGuard = RX10_TEMP0 ; final int X10_TEMP13 = ( place.MAX_PLACES ) ; final int X10_TEMP14 = ( 1 ) ; final int X10_TEMP16 = ( X10_TEMP13 - X10_TEMP14 ) ; final place X10_TEMP18 = ( place.places ( X10_TEMP16 ) ) ; final Region2 rGuard = Program . X10Util_get2DPRegion ( dGuard , X10_TEMP18 ) ; final Dist2 dResult = Program . X10Util_distBlockStar2 ( rRank1 , rRank2 ) ; final Region2 RX10_TEMP1 = dResult . dReg ; final int RX10_TEMP2 = 0 ; final int RX10_TEMP3 = 1 ; int RX10_TEMP4 = place.MAX_PLACES ; RX10_TEMP4 = RX10_TEMP4 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP4 ] ; final dist ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP4 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP7 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP6 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP5 ) { final place RX10_TEMP9 = here ; final int RX10_TEMP10 = RX10_TEMP8 [0] ; final place RX10_TEMP11 = place.places ( RX10_TEMP10 ) ; final int RX10_TEMP12 = Program . getDistLocalCount2 ( dResult , RX10_TEMP10 ) ; final int RX10_TEMP13 = RX10_TEMP12 - RX10_TEMP3 ; 
 final T75 utmp75 = new T75(RX10_TEMP13, RX10_TEMP9, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP11) {Program.thread75(utmp75); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP17 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP5 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final doubleStub RX10_TEMP18 = RX10_TEMP7 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final doubleRefArray2 RX10_TEMP20 = new doubleRefArray2 ( dResult , RX10_TEMP17 ) ; final doubleRefArray2 result = RX10_TEMP20 ; final Dist1 X10_TEMP25 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP22 = X10_TEMP25 . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; finish { final Dist1 X10_TEMP26 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP27 = X10_TEMP26 . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , pl ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point pl not found in the distribution X10_TEMP26." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( X10_TEMP26 , RX10_TEMP28 ) ; final place X10_TEMP29 = RX10_TEMP32 ; 
 final T76 utmp76 = new T76(pl, result, dResult, rGuard, guards, data);
 async (X10_TEMP29) {Program.thread76(utmp76); }
 }
 }
 return result ; }
 public static void LinearESOpenPIC2D_loadGuards ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data , final doubleRefArray2 guards ) { finish { final Dist1 X10_TEMP2 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP2 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP2 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP2." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP2 , RX10_TEMP7 ) ; final place X10_TEMP3 = RX10_TEMP11 ; 
 final T77 utmp77 = new T77(guards, data);
 async (X10_TEMP3) {Program.thread77(utmp77); }
 }
 }
 }
 public static intRefArray1 LinearESOpenPIC2D_makeInfoArray ( final LinearESOpenPIC2D X10_TEMP0 ) { final int X10_TEMP3 = ( 0 ) ; final int X10_TEMP4 = ( 6 ) ; final Region1 X10_TEMP5 = Program . createNewRegion1R ( X10_TEMP3 , X10_TEMP4 ) ; final place X10_TEMP6 = ( here ) ; final Dist1 X10_TEMP8 = Program . getPlaceDist1 ( X10_TEMP5 , X10_TEMP6 ) ; final Dist1 dInfo = X10_TEMP8 ; final Region1 RX10_TEMP0 = dInfo . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP6 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dInfo , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T78 utmp78 = new T78(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread78(utmp78); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP17 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final intStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final intRefArray1 RX10_TEMP20 = new intRefArray1 ( dInfo , RX10_TEMP17 ) ; final intRefArray1 X10_TEMP13 = RX10_TEMP20 ; return X10_TEMP13 ; }
 public static ParticleRefArray1 LinearESOpenPIC2D_moveParticles ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles , final Dist2 dFieldSpace , final intRefArray1 info ) { final int MAX = ( _LinearESOpenPIC2D_MOVE_PARTICLES_MAX ) ; final int MAX_BUFFER = ( _LinearESOpenPIC2D_MOVE_PARTICLES_MAX_BUFFER ) ; final int ITER_MAX = ( 20 ) ; final int X10_TEMP7 = ( 0 ) ; final int X10_TEMP5 = ( 1 ) ; final int X10_TEMP8 = ( MAX - X10_TEMP5 ) ; final Region1 rPart = Program . createNewRegion1R ( X10_TEMP7 , X10_TEMP8 ) ; final int X10_TEMP13 = ( 0 ) ; final int X10_TEMP11 = ( 1 ) ; final int X10_TEMP14 = ( MAX_BUFFER - X10_TEMP11 ) ; final Region1 rBuffer = Program . createNewRegion1R ( X10_TEMP13 , X10_TEMP14 ) ; final Dist1 X10_TEMP16 = Program . getUniqueDist ( ) ; final Dist1 dUnique = X10_TEMP16 ; final Dist2 dPart = Program . X10Util_extendDistRank2D ( dUnique , rPart ) ; final Dist2 dBuffer = Program . X10Util_extendDistRank2D ( dUnique , rBuffer ) ; final Region2 RX10_TEMP0 = dPart . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP6 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dPart , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T79 utmp79 = new T79(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread79(utmp79); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP16 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final ParticleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final ParticleRefArray2 RX10_TEMP19 = new ParticleRefArray2 ( dPart , RX10_TEMP16 ) ; final ParticleRefArray2 part = RX10_TEMP19 ; final Region2 RX10_TEMP20 = dBuffer . dReg ; final int RX10_TEMP21 = 0 ; final int RX10_TEMP22 = 1 ; int RX10_TEMP23 = place.MAX_PLACES ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP22 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; final dist ( : rank==1 ) RX10_TEMP25 = [ 0 : RX10_TEMP23 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP26 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP25 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP27 : RX10_TEMP24 ) { final place RX10_TEMP28 = here ; final int RX10_TEMP29 = RX10_TEMP27 [0] ; final place RX10_TEMP30 = place.places ( RX10_TEMP29 ) ; final int RX10_TEMP31 = Program . getDistLocalCount2 ( dBuffer , RX10_TEMP29 ) ; final int RX10_TEMP32 = RX10_TEMP31 - RX10_TEMP22 ; 
 final T80 utmp80 = new T80(RX10_TEMP32, RX10_TEMP28, RX10_TEMP27, RX10_TEMP26);
 async (RX10_TEMP30) {Program.thread80(utmp80); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP36 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP24 ] ( point ( : rank==1 ) RX10_TEMP38 ) { final ParticleStub RX10_TEMP37 = RX10_TEMP26 [ RX10_TEMP38 ] ; return RX10_TEMP37 ; }
 ) ; final ParticleRefArray2 RX10_TEMP39 = new ParticleRefArray2 ( dBuffer , RX10_TEMP36 ) ; final ParticleRefArray2 sBufferL = RX10_TEMP39 ; final Region2 RX10_TEMP40 = dBuffer . dReg ; final int RX10_TEMP41 = 0 ; final int RX10_TEMP42 = 1 ; int RX10_TEMP43 = place.MAX_PLACES ; RX10_TEMP43 = RX10_TEMP43 - RX10_TEMP42 ; final region ( : rank==1 ) RX10_TEMP44 = [ 0 : RX10_TEMP43 ] ; final dist ( : rank==1 ) RX10_TEMP45 = [ 0 : RX10_TEMP43 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP46 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP45 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP47 : RX10_TEMP44 ) { final place RX10_TEMP48 = here ; final int RX10_TEMP49 = RX10_TEMP47 [0] ; final place RX10_TEMP50 = place.places ( RX10_TEMP49 ) ; final int RX10_TEMP51 = Program . getDistLocalCount2 ( dBuffer , RX10_TEMP49 ) ; final int RX10_TEMP52 = RX10_TEMP51 - RX10_TEMP42 ; 
 final T81 utmp81 = new T81(RX10_TEMP52, RX10_TEMP48, RX10_TEMP47, RX10_TEMP46);
 async (RX10_TEMP50) {Program.thread81(utmp81); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP56 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP44 ] ( point ( : rank==1 ) RX10_TEMP58 ) { final ParticleStub RX10_TEMP57 = RX10_TEMP46 [ RX10_TEMP58 ] ; return RX10_TEMP57 ; }
 ) ; final ParticleRefArray2 RX10_TEMP59 = new ParticleRefArray2 ( dBuffer , RX10_TEMP56 ) ; final ParticleRefArray2 sBufferR = RX10_TEMP59 ; final Region2 RX10_TEMP60 = dBuffer . dReg ; final int RX10_TEMP61 = 0 ; final int RX10_TEMP62 = 1 ; int RX10_TEMP63 = place.MAX_PLACES ; RX10_TEMP63 = RX10_TEMP63 - RX10_TEMP62 ; final region ( : rank==1 ) RX10_TEMP64 = [ 0 : RX10_TEMP63 ] ; final dist ( : rank==1 ) RX10_TEMP65 = [ 0 : RX10_TEMP63 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP66 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP65 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP67 : RX10_TEMP64 ) { final place RX10_TEMP68 = here ; final int RX10_TEMP69 = RX10_TEMP67 [0] ; final place RX10_TEMP70 = place.places ( RX10_TEMP69 ) ; final int RX10_TEMP71 = Program . getDistLocalCount2 ( dBuffer , RX10_TEMP69 ) ; final int RX10_TEMP72 = RX10_TEMP71 - RX10_TEMP62 ; 
 final T82 utmp82 = new T82(RX10_TEMP72, RX10_TEMP68, RX10_TEMP67, RX10_TEMP66);
 async (RX10_TEMP70) {Program.thread82(utmp82); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP76 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP64 ] ( point ( : rank==1 ) RX10_TEMP78 ) { final ParticleStub RX10_TEMP77 = RX10_TEMP66 [ RX10_TEMP78 ] ; return RX10_TEMP77 ; }
 ) ; final ParticleRefArray2 RX10_TEMP79 = new ParticleRefArray2 ( dBuffer , RX10_TEMP76 ) ; final ParticleRefArray2 rBufferL = RX10_TEMP79 ; final Region2 RX10_TEMP80 = dBuffer . dReg ; final int RX10_TEMP81 = 0 ; final int RX10_TEMP82 = 1 ; int RX10_TEMP83 = place.MAX_PLACES ; RX10_TEMP83 = RX10_TEMP83 - RX10_TEMP82 ; final region ( : rank==1 ) RX10_TEMP84 = [ 0 : RX10_TEMP83 ] ; final dist ( : rank==1 ) RX10_TEMP85 = [ 0 : RX10_TEMP83 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP86 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP85 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP87 : RX10_TEMP84 ) { final place RX10_TEMP88 = here ; final int RX10_TEMP89 = RX10_TEMP87 [0] ; final place RX10_TEMP90 = place.places ( RX10_TEMP89 ) ; final int RX10_TEMP91 = Program . getDistLocalCount2 ( dBuffer , RX10_TEMP89 ) ; final int RX10_TEMP92 = RX10_TEMP91 - RX10_TEMP82 ; 
 final T83 utmp83 = new T83(RX10_TEMP92, RX10_TEMP88, RX10_TEMP87, RX10_TEMP86);
 async (RX10_TEMP90) {Program.thread83(utmp83); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP96 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP84 ] ( point ( : rank==1 ) RX10_TEMP98 ) { final ParticleStub RX10_TEMP97 = RX10_TEMP86 [ RX10_TEMP98 ] ; return RX10_TEMP97 ; }
 ) ; final ParticleRefArray2 RX10_TEMP99 = new ParticleRefArray2 ( dBuffer , RX10_TEMP96 ) ; final ParticleRefArray2 rBufferR = RX10_TEMP99 ; final Region1 RX10_TEMP100 = dUnique . dReg ; final int RX10_TEMP101 = 0 ; final int RX10_TEMP102 = 1 ; int RX10_TEMP103 = place.MAX_PLACES ; RX10_TEMP103 = RX10_TEMP103 - RX10_TEMP102 ; final region ( : rank==1 ) RX10_TEMP104 = [ 0 : RX10_TEMP103 ] ; final dist ( : rank==1 ) RX10_TEMP105 = [ 0 : RX10_TEMP103 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP106 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP105 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP107 : RX10_TEMP104 ) { final place RX10_TEMP108 = here ; final int RX10_TEMP109 = RX10_TEMP107 [0] ; final place RX10_TEMP110 = place.places ( RX10_TEMP109 ) ; final int RX10_TEMP111 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP109 ) ; final int RX10_TEMP112 = RX10_TEMP111 - RX10_TEMP102 ; 
 final T84 utmp84 = new T84(RX10_TEMP112, RX10_TEMP108, RX10_TEMP107, RX10_TEMP106);
 async (RX10_TEMP110) {Program.thread84(utmp84); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP117 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP104 ] ( point ( : rank==1 ) RX10_TEMP119 ) { final intStub RX10_TEMP118 = RX10_TEMP106 [ RX10_TEMP119 ] ; return RX10_TEMP118 ; }
 ) ; final intRefArray1 RX10_TEMP120 = new intRefArray1 ( dUnique , RX10_TEMP117 ) ; final intRefArray1 inLt = RX10_TEMP120 ; final Region1 RX10_TEMP121 = dUnique . dReg ; final int RX10_TEMP122 = 0 ; final int RX10_TEMP123 = 1 ; int RX10_TEMP124 = place.MAX_PLACES ; RX10_TEMP124 = RX10_TEMP124 - RX10_TEMP123 ; final region ( : rank==1 ) RX10_TEMP125 = [ 0 : RX10_TEMP124 ] ; final dist ( : rank==1 ) RX10_TEMP126 = [ 0 : RX10_TEMP124 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP127 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP126 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP128 : RX10_TEMP125 ) { final place RX10_TEMP129 = here ; final int RX10_TEMP130 = RX10_TEMP128 [0] ; final place RX10_TEMP131 = place.places ( RX10_TEMP130 ) ; final int RX10_TEMP132 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP130 ) ; final int RX10_TEMP133 = RX10_TEMP132 - RX10_TEMP123 ; 
 final T85 utmp85 = new T85(RX10_TEMP133, RX10_TEMP129, RX10_TEMP128, RX10_TEMP127);
 async (RX10_TEMP131) {Program.thread85(utmp85); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP138 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP125 ] ( point ( : rank==1 ) RX10_TEMP140 ) { final intStub RX10_TEMP139 = RX10_TEMP127 [ RX10_TEMP140 ] ; return RX10_TEMP139 ; }
 ) ; final intRefArray1 RX10_TEMP141 = new intRefArray1 ( dUnique , RX10_TEMP138 ) ; final intRefArray1 inRt = RX10_TEMP141 ; final Region1 RX10_TEMP142 = dUnique . dReg ; final int RX10_TEMP143 = 0 ; final int RX10_TEMP144 = 1 ; int RX10_TEMP145 = place.MAX_PLACES ; RX10_TEMP145 = RX10_TEMP145 - RX10_TEMP144 ; final region ( : rank==1 ) RX10_TEMP146 = [ 0 : RX10_TEMP145 ] ; final dist ( : rank==1 ) RX10_TEMP147 = [ 0 : RX10_TEMP145 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP148 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP147 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP149 : RX10_TEMP146 ) { final place RX10_TEMP150 = here ; final int RX10_TEMP151 = RX10_TEMP149 [0] ; final place RX10_TEMP152 = place.places ( RX10_TEMP151 ) ; final int RX10_TEMP153 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP151 ) ; final int RX10_TEMP154 = RX10_TEMP153 - RX10_TEMP144 ; 
 final T86 utmp86 = new T86(RX10_TEMP154, RX10_TEMP150, RX10_TEMP149, RX10_TEMP148);
 async (RX10_TEMP152) {Program.thread86(utmp86); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP159 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP146 ] ( point ( : rank==1 ) RX10_TEMP161 ) { final intStub RX10_TEMP160 = RX10_TEMP148 [ RX10_TEMP161 ] ; return RX10_TEMP160 ; }
 ) ; final intRefArray1 RX10_TEMP162 = new intRefArray1 ( dUnique , RX10_TEMP159 ) ; final intRefArray1 outLt = RX10_TEMP162 ; final Region1 RX10_TEMP163 = dUnique . dReg ; final int RX10_TEMP164 = 0 ; final int RX10_TEMP165 = 1 ; int RX10_TEMP166 = place.MAX_PLACES ; RX10_TEMP166 = RX10_TEMP166 - RX10_TEMP165 ; final region ( : rank==1 ) RX10_TEMP167 = [ 0 : RX10_TEMP166 ] ; final dist ( : rank==1 ) RX10_TEMP168 = [ 0 : RX10_TEMP166 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP169 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP168 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP170 : RX10_TEMP167 ) { final place RX10_TEMP171 = here ; final int RX10_TEMP172 = RX10_TEMP170 [0] ; final place RX10_TEMP173 = place.places ( RX10_TEMP172 ) ; final int RX10_TEMP174 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP172 ) ; final int RX10_TEMP175 = RX10_TEMP174 - RX10_TEMP165 ; 
 final T87 utmp87 = new T87(RX10_TEMP175, RX10_TEMP171, RX10_TEMP170, RX10_TEMP169);
 async (RX10_TEMP173) {Program.thread87(utmp87); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP180 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP167 ] ( point ( : rank==1 ) RX10_TEMP182 ) { final intStub RX10_TEMP181 = RX10_TEMP169 [ RX10_TEMP182 ] ; return RX10_TEMP181 ; }
 ) ; final intRefArray1 RX10_TEMP183 = new intRefArray1 ( dUnique , RX10_TEMP180 ) ; final intRefArray1 outRt = RX10_TEMP183 ; final Region1 RX10_TEMP184 = dUnique . dReg ; final int RX10_TEMP185 = 0 ; final int RX10_TEMP186 = 1 ; int RX10_TEMP187 = place.MAX_PLACES ; RX10_TEMP187 = RX10_TEMP187 - RX10_TEMP186 ; final region ( : rank==1 ) RX10_TEMP188 = [ 0 : RX10_TEMP187 ] ; final dist ( : rank==1 ) RX10_TEMP189 = [ 0 : RX10_TEMP187 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP190 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP189 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP191 : RX10_TEMP188 ) { final place RX10_TEMP192 = here ; final int RX10_TEMP193 = RX10_TEMP191 [0] ; final place RX10_TEMP194 = place.places ( RX10_TEMP193 ) ; final int RX10_TEMP195 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP193 ) ; final int RX10_TEMP196 = RX10_TEMP195 - RX10_TEMP186 ; 
 final T88 utmp88 = new T88(RX10_TEMP196, RX10_TEMP192, RX10_TEMP191, RX10_TEMP190);
 async (RX10_TEMP194) {Program.thread88(utmp88); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP201 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP188 ] ( point ( : rank==1 ) RX10_TEMP203 ) { final intStub RX10_TEMP202 = RX10_TEMP190 [ RX10_TEMP203 ] ; return RX10_TEMP202 ; }
 ) ; final intRefArray1 RX10_TEMP204 = new intRefArray1 ( dUnique , RX10_TEMP201 ) ; final intRefArray1 nPart = RX10_TEMP204 ; final Region1 RX10_TEMP205 = dUnique . dReg ; final int RX10_TEMP206 = 0 ; final int RX10_TEMP207 = 1 ; int RX10_TEMP208 = place.MAX_PLACES ; RX10_TEMP208 = RX10_TEMP208 - RX10_TEMP207 ; final region ( : rank==1 ) RX10_TEMP209 = [ 0 : RX10_TEMP208 ] ; final dist ( : rank==1 ) RX10_TEMP210 = [ 0 : RX10_TEMP208 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP211 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP210 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP212 : RX10_TEMP209 ) { final place RX10_TEMP213 = here ; final int RX10_TEMP214 = RX10_TEMP212 [0] ; final place RX10_TEMP215 = place.places ( RX10_TEMP214 ) ; final int RX10_TEMP216 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP214 ) ; final int RX10_TEMP217 = RX10_TEMP216 - RX10_TEMP207 ; 
 final T89 utmp89 = new T89(RX10_TEMP217, RX10_TEMP213, RX10_TEMP212, RX10_TEMP211);
 async (RX10_TEMP215) {Program.thread89(utmp89); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP222 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP209 ] ( point ( : rank==1 ) RX10_TEMP224 ) { final intStub RX10_TEMP223 = RX10_TEMP211 [ RX10_TEMP224 ] ; return RX10_TEMP223 ; }
 ) ; final intRefArray1 RX10_TEMP225 = new intRefArray1 ( dUnique , RX10_TEMP222 ) ; intRefArray1 nPartOld = RX10_TEMP225 ; final Region2 RX10_TEMP226 = dPart . dReg ; final int RX10_TEMP227 = 0 ; final int RX10_TEMP228 = 1 ; int RX10_TEMP229 = place.MAX_PLACES ; RX10_TEMP229 = RX10_TEMP229 - RX10_TEMP228 ; final region ( : rank==1 ) RX10_TEMP230 = [ 0 : RX10_TEMP229 ] ; final dist ( : rank==1 ) RX10_TEMP231 = [ 0 : RX10_TEMP229 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP232 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP231 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP233 : RX10_TEMP230 ) { final place RX10_TEMP234 = here ; final int RX10_TEMP235 = RX10_TEMP233 [0] ; final place RX10_TEMP236 = place.places ( RX10_TEMP235 ) ; final int RX10_TEMP237 = Program . getDistLocalCount2 ( dPart , RX10_TEMP235 ) ; final int RX10_TEMP238 = RX10_TEMP237 - RX10_TEMP228 ; 
 final T90 utmp90 = new T90(RX10_TEMP238, RX10_TEMP234, RX10_TEMP233, RX10_TEMP232);
 async (RX10_TEMP236) {Program.thread90(utmp90); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP243 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP230 ] ( point ( : rank==1 ) RX10_TEMP245 ) { final intStub RX10_TEMP244 = RX10_TEMP232 [ RX10_TEMP245 ] ; return RX10_TEMP244 ; }
 ) ; final intRefArray2 RX10_TEMP246 = new intRefArray2 ( dPart , RX10_TEMP243 ) ; final intRefArray2 holes = RX10_TEMP246 ; final int X10_TEMP52 = ( 0 ) ; final int X10_TEMP53 = ( 3 ) ; final Region1 X10_TEMP54 = Program . createNewRegion1R ( X10_TEMP52 , X10_TEMP53 ) ; final place X10_TEMP55 = ( here ) ; final Dist1 dFlags = Program . getPlaceDist1 ( X10_TEMP54 , X10_TEMP55 ) ; final Region1 RX10_TEMP247 = dUnique . dReg ; final int RX10_TEMP248 = 0 ; final int RX10_TEMP249 = 1 ; int RX10_TEMP250 = place.MAX_PLACES ; RX10_TEMP250 = RX10_TEMP250 - RX10_TEMP249 ; final region ( : rank==1 ) RX10_TEMP251 = [ 0 : RX10_TEMP250 ] ; final dist ( : rank==1 ) RX10_TEMP252 = [ 0 : RX10_TEMP250 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP253 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP252 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP254 : RX10_TEMP251 ) { final place RX10_TEMP255 = here ; final int RX10_TEMP256 = RX10_TEMP254 [0] ; final place RX10_TEMP257 = place.places ( RX10_TEMP256 ) ; final int RX10_TEMP258 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP256 ) ; final int RX10_TEMP259 = RX10_TEMP258 - RX10_TEMP249 ; 
 final T91 utmp91 = new T91(RX10_TEMP259, RX10_TEMP255, RX10_TEMP254, RX10_TEMP253);
 async (RX10_TEMP257) {Program.thread91(utmp91); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP264 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP251 ] ( point ( : rank==1 ) RX10_TEMP266 ) { final intStub RX10_TEMP265 = RX10_TEMP253 [ RX10_TEMP266 ] ; return RX10_TEMP265 ; }
 ) ; final intRefArray1 RX10_TEMP267 = new intRefArray1 ( dUnique , RX10_TEMP264 ) ; final intRefArray1 nSent = RX10_TEMP267 ; final Region1 RX10_TEMP268 = dFlags . dReg ; final int RX10_TEMP269 = 0 ; final int RX10_TEMP270 = 1 ; int RX10_TEMP271 = place.MAX_PLACES ; RX10_TEMP271 = RX10_TEMP271 - RX10_TEMP270 ; final region ( : rank==1 ) RX10_TEMP272 = [ 0 : RX10_TEMP271 ] ; final dist ( : rank==1 ) RX10_TEMP273 = [ 0 : RX10_TEMP271 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP274 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP273 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP275 : RX10_TEMP272 ) { final place RX10_TEMP276 = here ; final int RX10_TEMP277 = RX10_TEMP275 [0] ; final place RX10_TEMP278 = place.places ( RX10_TEMP277 ) ; final int RX10_TEMP279 = Program . getDistLocalCount1 ( dFlags , RX10_TEMP277 ) ; final int RX10_TEMP280 = RX10_TEMP279 - RX10_TEMP270 ; 
 final T92 utmp92 = new T92(RX10_TEMP280, RX10_TEMP276, RX10_TEMP275, RX10_TEMP274);
 async (RX10_TEMP278) {Program.thread92(utmp92); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP285 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP272 ] ( point ( : rank==1 ) RX10_TEMP287 ) { final intStub RX10_TEMP286 = RX10_TEMP274 [ RX10_TEMP287 ] ; return RX10_TEMP286 ; }
 ) ; final intRefArray1 RX10_TEMP288 = new intRefArray1 ( dFlags , RX10_TEMP285 ) ; final intRefArray1 ibflg = RX10_TEMP288 ; finish { final Dist1 X10_TEMP64 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP290 = X10_TEMP64 . dReg ; final int RX10_TEMP293 = 1 ; int RX10_TEMP291 = RX10_TEMP290 . regSize ; RX10_TEMP291 = RX10_TEMP291 - RX10_TEMP293 ; final region ( : rank==1 ) RX10_TEMP292 = [ 0 : RX10_TEMP291 ] ; for ( point ( : rank==1 ) RX10_TEMP289 : RX10_TEMP292 ) { final int RX10_TEMP294 = RX10_TEMP289 [0] ; final Point1 X10_TEMP65 = Program . regionOrdinalPoint1 ( RX10_TEMP290 , RX10_TEMP294 ) ; final int pl = X10_TEMP65 . f0 ; final Region1 RX10_TEMP295 = X10_TEMP64 . dReg ; final int RX10_TEMP296 = Program . searchPointInRegion1 ( RX10_TEMP295 , X10_TEMP65 ) ; final int RX10_TEMP297 = 0 ; final boolean RX10_TEMP298 = RX10_TEMP296 < RX10_TEMP297 ; if ( RX10_TEMP298 ) { final String RX10_TEMP299 = "Point X10_TEMP65 not found in the distribution X10_TEMP64." ; throw new RuntimeException ( RX10_TEMP299 ) ; }
 final place RX10_TEMP300 = Program . getPlaceFromDist1 ( X10_TEMP64 , RX10_TEMP296 ) ; final place X10_TEMP66 = RX10_TEMP300 ; 
 final T93 utmp93 = new T93(pl, nPart, part, particles);
 async (X10_TEMP66) {Program.thread93(utmp93); }
 }
 }
 final Region2 RX10_TEMP347 = dFieldSpace . dReg ; final Region2 rFieldSpace = RX10_TEMP347 ; final int X10_TEMP94 = ( 1 ) ; final Region1 X10_TEMP95 = Program . X10Util_getRank2D ( rFieldSpace , X10_TEMP94 ) ; final double rsize = ( X10_TEMP95 . regSize ) ; int iter = ( 2 ) ; int nter = ( 0 ) ; finish { final int X10_TEMP101 = ( 0 ) ; final int X10_TEMP102 = ( 6 ) ; final Region1 X10_TEMP104 = Program . createNewRegion1R ( X10_TEMP101 , X10_TEMP102 ) ; final place X10_TEMP105 = here ; final int RX10_TEMP351 = 1 ; int RX10_TEMP349 = X10_TEMP104 . regSize ; RX10_TEMP349 = RX10_TEMP349 - RX10_TEMP351 ; final region ( : rank==1 ) RX10_TEMP350 = [ 0 : RX10_TEMP349 ] ; for ( point ( : rank==1 ) RX10_TEMP348 : RX10_TEMP350 ) { final int RX10_TEMP352 = RX10_TEMP348 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( X10_TEMP104 , RX10_TEMP352 ) ; 
 final T94 utmp94 = new T94(pt, info);
 async (X10_TEMP105) {Program.thread94(utmp94); }
 }
 }
 final intRefArray1 X10_TEMP112 = nPartOld ; final intRefArray1 X10_TEMP113 = nPart ; final Region1 RX10_TEMP363 = dUnique . dReg ; final int RX10_TEMP364 = 0 ; final int RX10_TEMP365 = 1 ; int RX10_TEMP366 = place.MAX_PLACES ; RX10_TEMP366 = RX10_TEMP366 - RX10_TEMP365 ; final region ( : rank==1 ) RX10_TEMP367 = [ 0 : RX10_TEMP366 ] ; final dist ( : rank==1 ) RX10_TEMP368 = [ 0 : RX10_TEMP366 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP369 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP368 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP370 : RX10_TEMP367 ) { final place RX10_TEMP371 = here ; final int RX10_TEMP372 = RX10_TEMP370 [0] ; final place RX10_TEMP373 = place.places ( RX10_TEMP372 ) ; final int RX10_TEMP374 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP372 ) ; final int RX10_TEMP375 = RX10_TEMP374 - RX10_TEMP365 ; final Dist1 RX10_TEMP376 = Program . restrictDist1 ( dUnique , RX10_TEMP373 ) ; final Region1 RX10_TEMP377 = RX10_TEMP376 . dReg ; 
 final T95 utmp95 = new T95(RX10_TEMP377, RX10_TEMP375, RX10_TEMP371, RX10_TEMP370, RX10_TEMP369, X10_TEMP113, X10_TEMP112);
 async (RX10_TEMP373) {Program.thread95(utmp95); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP405 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP367 ] ( point ( : rank==1 ) RX10_TEMP407 ) { final intStub RX10_TEMP406 = RX10_TEMP369 [ RX10_TEMP407 ] ; return RX10_TEMP406 ; }
 ) ; final intRefArray1 RX10_TEMP408 = new intRefArray1 ( dUnique , RX10_TEMP405 ) ; final intRefArray1 X10_TEMP110 = RX10_TEMP408 ; nPartOld = ( X10_TEMP110 ) ; boolean doneInner = ( false ) ; boolean doneOuter = ( false ) ; boolean X10_TEMP120 = false ; do { int mter = ( 0 ) ; final Region1 RX10_TEMP409 = dUnique . dReg ; final int RX10_TEMP410 = 0 ; final int RX10_TEMP411 = 1 ; int RX10_TEMP412 = place.MAX_PLACES ; RX10_TEMP412 = RX10_TEMP412 - RX10_TEMP411 ; final region ( : rank==1 ) RX10_TEMP413 = [ 0 : RX10_TEMP412 ] ; final dist ( : rank==1 ) RX10_TEMP414 = [ 0 : RX10_TEMP412 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP415 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP414 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP416 : RX10_TEMP413 ) { final place RX10_TEMP417 = here ; final int RX10_TEMP418 = RX10_TEMP416 [0] ; final place RX10_TEMP419 = place.places ( RX10_TEMP418 ) ; final int RX10_TEMP420 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP418 ) ; final int RX10_TEMP421 = RX10_TEMP420 - RX10_TEMP411 ; 
 final T96 utmp96 = new T96(RX10_TEMP421, RX10_TEMP417, RX10_TEMP416, RX10_TEMP415);
 async (RX10_TEMP419) {Program.thread96(utmp96); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP426 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP413 ] ( point ( : rank==1 ) RX10_TEMP428 ) { final intStub RX10_TEMP427 = RX10_TEMP415 [ RX10_TEMP428 ] ; return RX10_TEMP427 ; }
 ) ; final intRefArray1 RX10_TEMP429 = new intRefArray1 ( dUnique , RX10_TEMP426 ) ; final intRefArray1 overflow = RX10_TEMP429 ; finish { final Dist1 X10_TEMP126 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP431 = X10_TEMP126 . dReg ; final int RX10_TEMP434 = 1 ; int RX10_TEMP432 = RX10_TEMP431 . regSize ; RX10_TEMP432 = RX10_TEMP432 - RX10_TEMP434 ; final region ( : rank==1 ) RX10_TEMP433 = [ 0 : RX10_TEMP432 ] ; for ( point ( : rank==1 ) RX10_TEMP430 : RX10_TEMP433 ) { final int RX10_TEMP435 = RX10_TEMP430 [0] ; final Point1 X10_TEMP127 = Program . regionOrdinalPoint1 ( RX10_TEMP431 , RX10_TEMP435 ) ; final int pl = X10_TEMP127 . f0 ; final Region1 RX10_TEMP436 = X10_TEMP126 . dReg ; final int RX10_TEMP437 = Program . searchPointInRegion1 ( RX10_TEMP436 , X10_TEMP127 ) ; final int RX10_TEMP438 = 0 ; final boolean RX10_TEMP439 = RX10_TEMP437 < RX10_TEMP438 ; if ( RX10_TEMP439 ) { final String RX10_TEMP440 = "Point X10_TEMP127 not found in the distribution X10_TEMP126." ; throw new RuntimeException ( RX10_TEMP440 ) ; }
 final place RX10_TEMP441 = Program . getPlaceFromDist1 ( X10_TEMP126 , RX10_TEMP437 ) ; final place X10_TEMP128 = RX10_TEMP441 ; 
 final T97 utmp97 = new T97(pl, overflow, rsize, nSent, holes, nPart, outRt, outLt, sBufferR, sBufferL, part, rBuffer, dFieldSpace);
 async (X10_TEMP128) {Program.thread97(utmp97); }
 }
 }
 final int X10_TEMP248 = ( 2 ) ; final int X10_TEMP250 = ( Program . intrefArrayMax1 ( overflow ) ) ; final int X10_TEMP251 = ( X10_TEMP250 ) ; final Point1 RX10_TEMP770 = new Point1 ( X10_TEMP248 ) ; final Dist1 RX10_TEMP771 = ibflg . distValue ; final Region1 RX10_TEMP772 = RX10_TEMP771 . dReg ; final int RX10_TEMP773 = Program . searchPointInRegion1 ( RX10_TEMP772 , RX10_TEMP770 ) ; final int RX10_TEMP774 = 0 ; final boolean RX10_TEMP775 = RX10_TEMP773 < RX10_TEMP774 ; if ( RX10_TEMP775 ) { String RX10_TEMP776 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP776 ) ; }
 final place RX10_TEMP777 = Program . getPlaceFromDist1 ( RX10_TEMP771 , RX10_TEMP773 ) ; final place RX10_TEMP779 = here ; final boolean RX10_TEMP780 = RX10_TEMP777 != RX10_TEMP779 ; if ( RX10_TEMP780 ) { String RX10_TEMP778 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP778 ) ; }
 Program . setRefArrayValue1int ( ibflg , RX10_TEMP773 , X10_TEMP251 ) ; boolean X10_TEMP252 = false ; do { final int X10_TEMP253 = ( 2 ) ; final int X10_TEMP255 = ( iter + X10_TEMP253 ) ; iter = ( X10_TEMP255 ) ; final int X10_TEMP256 = ( 1 ) ; final int X10_TEMP258 = ( mter + X10_TEMP256 ) ; mter = ( X10_TEMP258 ) ; Program . LinearESOpenPIC2D_transferParticles ( X10_TEMP0 , sBufferL , sBufferR , outLt , outRt , rBufferL , rBufferR , inLt , inRt ) ; final Region1 RX10_TEMP781 = dUnique . dReg ; final int RX10_TEMP782 = 0 ; final int RX10_TEMP783 = 1 ; int RX10_TEMP784 = place.MAX_PLACES ; RX10_TEMP784 = RX10_TEMP784 - RX10_TEMP783 ; final region ( : rank==1 ) RX10_TEMP785 = [ 0 : RX10_TEMP784 ] ; final dist ( : rank==1 ) RX10_TEMP786 = [ 0 : RX10_TEMP784 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP787 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP786 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP788 : RX10_TEMP785 ) { final place RX10_TEMP789 = here ; final int RX10_TEMP790 = RX10_TEMP788 [0] ; final place RX10_TEMP791 = place.places ( RX10_TEMP790 ) ; final int RX10_TEMP792 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP790 ) ; final int RX10_TEMP793 = RX10_TEMP792 - RX10_TEMP783 ; 
 final T98 utmp98 = new T98(RX10_TEMP793, RX10_TEMP789, RX10_TEMP788, RX10_TEMP787);
 async (RX10_TEMP791) {Program.thread98(utmp98); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP797 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP785 ] ( point ( : rank==1 ) RX10_TEMP799 ) { final intStub RX10_TEMP798 = RX10_TEMP787 [ RX10_TEMP799 ] ; return RX10_TEMP798 ; }
 ) ; final intRefArray1 RX10_TEMP800 = new intRefArray1 ( dUnique , RX10_TEMP797 ) ; final intRefArray1 outgoing = RX10_TEMP800 ; finish { final Dist1 X10_TEMP269 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP802 = X10_TEMP269 . dReg ; final int RX10_TEMP805 = 1 ; int RX10_TEMP803 = RX10_TEMP802 . regSize ; RX10_TEMP803 = RX10_TEMP803 - RX10_TEMP805 ; final region ( : rank==1 ) RX10_TEMP804 = [ 0 : RX10_TEMP803 ] ; for ( point ( : rank==1 ) RX10_TEMP801 : RX10_TEMP804 ) { final int RX10_TEMP806 = RX10_TEMP801 [0] ; final Point1 X10_TEMP270 = Program . regionOrdinalPoint1 ( RX10_TEMP802 , RX10_TEMP806 ) ; final int pl = X10_TEMP270 . f0 ; final Region1 RX10_TEMP807 = X10_TEMP269 . dReg ; final int RX10_TEMP808 = Program . searchPointInRegion1 ( RX10_TEMP807 , X10_TEMP270 ) ; final int RX10_TEMP809 = 0 ; final boolean RX10_TEMP810 = RX10_TEMP808 < RX10_TEMP809 ; if ( RX10_TEMP810 ) { final String RX10_TEMP811 = "Point X10_TEMP270 not found in the distribution X10_TEMP269." ; throw new RuntimeException ( RX10_TEMP811 ) ; }
 final place RX10_TEMP812 = Program . getPlaceFromDist1 ( X10_TEMP269 , RX10_TEMP808 ) ; final place X10_TEMP271 = RX10_TEMP812 ; 
 final T99 utmp99 = new T99(pl, outgoing, outRt, outLt, inRt, inLt, rBufferR, rBufferL, dFieldSpace);
 async (X10_TEMP271) {Program.thread99(utmp99); }
 }
 }
 final int X10_TEMP372 = ( 1 ) ; final int X10_TEMP374 = ( Program . intrefArrayMax1 ( outgoing ) ) ; final int X10_TEMP375 = ( X10_TEMP374 ) ; final Point1 RX10_TEMP1079 = new Point1 ( X10_TEMP372 ) ; final Dist1 RX10_TEMP1080 = ibflg . distValue ; final Region1 RX10_TEMP1081 = RX10_TEMP1080 . dReg ; final int RX10_TEMP1082 = Program . searchPointInRegion1 ( RX10_TEMP1081 , RX10_TEMP1079 ) ; final int RX10_TEMP1083 = 0 ; final boolean RX10_TEMP1084 = RX10_TEMP1082 < RX10_TEMP1083 ; if ( RX10_TEMP1084 ) { String RX10_TEMP1085 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1085 ) ; }
 final place RX10_TEMP1086 = Program . getPlaceFromDist1 ( RX10_TEMP1080 , RX10_TEMP1082 ) ; final place RX10_TEMP1088 = here ; final boolean RX10_TEMP1089 = RX10_TEMP1086 != RX10_TEMP1088 ; if ( RX10_TEMP1089 ) { String RX10_TEMP1087 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP1087 ) ; }
 Program . setRefArrayValue1int ( ibflg , RX10_TEMP1082 , X10_TEMP375 ) ; final int X10_TEMP377 = ( 1 ) ; final Point1 RX10_TEMP1090 = new Point1 ( X10_TEMP377 ) ; final Dist1 RX10_TEMP1091 = ibflg . distValue ; final Region1 RX10_TEMP1092 = RX10_TEMP1091 . dReg ; final int RX10_TEMP1093 = Program . searchPointInRegion1 ( RX10_TEMP1092 , RX10_TEMP1090 ) ; final int RX10_TEMP1094 = 0 ; final boolean RX10_TEMP1095 = RX10_TEMP1093 < RX10_TEMP1094 ; if ( RX10_TEMP1095 ) { String RX10_TEMP1096 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1096 ) ; }
 final place RX10_TEMP1097 = Program . getPlaceFromDist1 ( RX10_TEMP1091 , RX10_TEMP1093 ) ; final place RX10_TEMP1099 = here ; final boolean RX10_TEMP1100 = RX10_TEMP1097 != RX10_TEMP1099 ; if ( RX10_TEMP1100 ) { String RX10_TEMP1098 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP1098 ) ; }
 final int RX10_TEMP1101 = Program . getRefArrayValue1int ( ibflg , RX10_TEMP1093 ) ; final int X10_TEMP378 = ( RX10_TEMP1101 ) ; final int X10_TEMP379 = ( 0 ) ; final boolean X10_TEMP381 = X10_TEMP378 != X10_TEMP379 ; if ( X10_TEMP381 ) { finish { final Dist1 X10_TEMP383 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1103 = X10_TEMP383 . dReg ; final int RX10_TEMP1106 = 1 ; int RX10_TEMP1104 = RX10_TEMP1103 . regSize ; RX10_TEMP1104 = RX10_TEMP1104 - RX10_TEMP1106 ; final region ( : rank==1 ) RX10_TEMP1105 = [ 0 : RX10_TEMP1104 ] ; for ( point ( : rank==1 ) RX10_TEMP1102 : RX10_TEMP1105 ) { final int RX10_TEMP1107 = RX10_TEMP1102 [0] ; final Point1 X10_TEMP384 = Program . regionOrdinalPoint1 ( RX10_TEMP1103 , RX10_TEMP1107 ) ; final int pl = X10_TEMP384 . f0 ; final Region1 RX10_TEMP1108 = X10_TEMP383 . dReg ; final int RX10_TEMP1109 = Program . searchPointInRegion1 ( RX10_TEMP1108 , X10_TEMP384 ) ; final int RX10_TEMP1110 = 0 ; final boolean RX10_TEMP1111 = RX10_TEMP1109 < RX10_TEMP1110 ; if ( RX10_TEMP1111 ) { final String RX10_TEMP1112 = "Point X10_TEMP384 not found in the distribution X10_TEMP383." ; throw new RuntimeException ( RX10_TEMP1112 ) ; }
 final place RX10_TEMP1113 = Program . getPlaceFromDist1 ( X10_TEMP383 , RX10_TEMP1109 ) ; final place X10_TEMP385 = RX10_TEMP1113 ; 
 final T100 utmp100 = new T100(pl, overflow, rsize, outRt, outLt, inRt, inLt, rBufferR, rBufferL, sBufferR, sBufferL, rBuffer, dFieldSpace);
 async (X10_TEMP385) {Program.thread100(utmp100); }
 }
 }
 }
 final int rSize = ( rPart . regSize ) ; final intRefArray1 X10_TEMP568 = nPart ; final intRefArray1 X10_TEMP569 = inLt ; final Region1 RX10_TEMP1538 = dUnique . dReg ; final int RX10_TEMP1539 = 0 ; final int RX10_TEMP1540 = 1 ; int RX10_TEMP1541 = place.MAX_PLACES ; RX10_TEMP1541 = RX10_TEMP1541 - RX10_TEMP1540 ; final region ( : rank==1 ) RX10_TEMP1542 = [ 0 : RX10_TEMP1541 ] ; final dist ( : rank==1 ) RX10_TEMP1543 = [ 0 : RX10_TEMP1541 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1544 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1543 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1545 : RX10_TEMP1542 ) { final place RX10_TEMP1546 = here ; final int RX10_TEMP1547 = RX10_TEMP1545 [0] ; final place RX10_TEMP1548 = place.places ( RX10_TEMP1547 ) ; final int RX10_TEMP1549 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP1547 ) ; final int RX10_TEMP1550 = RX10_TEMP1549 - RX10_TEMP1540 ; final Dist1 RX10_TEMP1551 = Program . restrictDist1 ( dUnique , RX10_TEMP1548 ) ; final Region1 RX10_TEMP1552 = RX10_TEMP1551 . dReg ; 
 final T101 utmp101 = new T101(RX10_TEMP1552, RX10_TEMP1550, RX10_TEMP1546, RX10_TEMP1545, RX10_TEMP1544, X10_TEMP569, X10_TEMP568);
 async (RX10_TEMP1548) {Program.thread101(utmp101); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1580 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1542 ] ( point ( : rank==1 ) RX10_TEMP1582 ) { final intStub RX10_TEMP1581 = RX10_TEMP1544 [ RX10_TEMP1582 ] ; return RX10_TEMP1581 ; }
 ) ; final intRefArray1 RX10_TEMP1583 = new intRefArray1 ( dUnique , RX10_TEMP1580 ) ; final intRefArray1 X10_TEMP566 = RX10_TEMP1583 ; final intRefArray1 X10_TEMP575 = X10_TEMP566 ; final intRefArray1 X10_TEMP576 = inRt ; final Region1 RX10_TEMP1584 = dUnique . dReg ; final int RX10_TEMP1585 = 0 ; final int RX10_TEMP1586 = 1 ; int RX10_TEMP1587 = place.MAX_PLACES ; RX10_TEMP1587 = RX10_TEMP1587 - RX10_TEMP1586 ; final region ( : rank==1 ) RX10_TEMP1588 = [ 0 : RX10_TEMP1587 ] ; final dist ( : rank==1 ) RX10_TEMP1589 = [ 0 : RX10_TEMP1587 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1590 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1589 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1591 : RX10_TEMP1588 ) { final place RX10_TEMP1592 = here ; final int RX10_TEMP1593 = RX10_TEMP1591 [0] ; final place RX10_TEMP1594 = place.places ( RX10_TEMP1593 ) ; final int RX10_TEMP1595 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP1593 ) ; final int RX10_TEMP1596 = RX10_TEMP1595 - RX10_TEMP1586 ; final Dist1 RX10_TEMP1597 = Program . restrictDist1 ( dUnique , RX10_TEMP1594 ) ; final Region1 RX10_TEMP1598 = RX10_TEMP1597 . dReg ; 
 final T102 utmp102 = new T102(RX10_TEMP1598, RX10_TEMP1596, RX10_TEMP1592, RX10_TEMP1591, RX10_TEMP1590, X10_TEMP576, X10_TEMP575);
 async (RX10_TEMP1594) {Program.thread102(utmp102); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1626 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1588 ] ( point ( : rank==1 ) RX10_TEMP1628 ) { final intStub RX10_TEMP1627 = RX10_TEMP1590 [ RX10_TEMP1628 ] ; return RX10_TEMP1627 ; }
 ) ; final intRefArray1 RX10_TEMP1629 = new intRefArray1 ( dUnique , RX10_TEMP1626 ) ; final intRefArray1 X10_TEMP573 = RX10_TEMP1629 ; final intRefArray1 X10_TEMP582 = X10_TEMP573 ; final intRefArray1 X10_TEMP583 = nSent ; final Region1 RX10_TEMP1630 = dUnique . dReg ; final int RX10_TEMP1631 = 0 ; final int RX10_TEMP1632 = 1 ; int RX10_TEMP1633 = place.MAX_PLACES ; RX10_TEMP1633 = RX10_TEMP1633 - RX10_TEMP1632 ; final region ( : rank==1 ) RX10_TEMP1634 = [ 0 : RX10_TEMP1633 ] ; final dist ( : rank==1 ) RX10_TEMP1635 = [ 0 : RX10_TEMP1633 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1636 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1635 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1637 : RX10_TEMP1634 ) { final place RX10_TEMP1638 = here ; final int RX10_TEMP1639 = RX10_TEMP1637 [0] ; final place RX10_TEMP1640 = place.places ( RX10_TEMP1639 ) ; final int RX10_TEMP1641 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP1639 ) ; final int RX10_TEMP1642 = RX10_TEMP1641 - RX10_TEMP1632 ; final Dist1 RX10_TEMP1643 = Program . restrictDist1 ( dUnique , RX10_TEMP1640 ) ; final Region1 RX10_TEMP1644 = RX10_TEMP1643 . dReg ; 
 final T103 utmp103 = new T103(RX10_TEMP1644, RX10_TEMP1642, RX10_TEMP1638, RX10_TEMP1637, RX10_TEMP1636, X10_TEMP583, X10_TEMP582);
 async (RX10_TEMP1640) {Program.thread103(utmp103); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1672 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1634 ] ( point ( : rank==1 ) RX10_TEMP1674 ) { final intStub RX10_TEMP1673 = RX10_TEMP1636 [ RX10_TEMP1674 ] ; return RX10_TEMP1673 ; }
 ) ; final intRefArray1 RX10_TEMP1675 = new intRefArray1 ( dUnique , RX10_TEMP1672 ) ; final intRefArray1 X10_TEMP580 = RX10_TEMP1675 ; final intRefArray1 X10_TEMP588 = X10_TEMP580 ; final intRefArray1 tMaxSize = X10_TEMP588 ; final Region1 RX10_TEMP1676 = dUnique . dReg ; final int RX10_TEMP1677 = 0 ; final int RX10_TEMP1678 = 1 ; int RX10_TEMP1679 = place.MAX_PLACES ; RX10_TEMP1679 = RX10_TEMP1679 - RX10_TEMP1678 ; final region ( : rank==1 ) RX10_TEMP1680 = [ 0 : RX10_TEMP1679 ] ; final dist ( : rank==1 ) RX10_TEMP1681 = [ 0 : RX10_TEMP1679 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1682 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1681 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1683 : RX10_TEMP1680 ) { final place RX10_TEMP1684 = here ; final int RX10_TEMP1685 = RX10_TEMP1683 [0] ; final place RX10_TEMP1686 = place.places ( RX10_TEMP1685 ) ; final int RX10_TEMP1687 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP1685 ) ; final int RX10_TEMP1688 = RX10_TEMP1687 - RX10_TEMP1678 ; 
 final T104 utmp104 = new T104(RX10_TEMP1688, RX10_TEMP1684, RX10_TEMP1683, RX10_TEMP1682, rSize);
 async (RX10_TEMP1686) {Program.thread104(utmp104); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1693 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1680 ] ( point ( : rank==1 ) RX10_TEMP1695 ) { final intStub RX10_TEMP1694 = RX10_TEMP1682 [ RX10_TEMP1695 ] ; return RX10_TEMP1694 ; }
 ) ; final intRefArray1 RX10_TEMP1696 = new intRefArray1 ( dUnique , RX10_TEMP1693 ) ; final intRefArray1 X10_TEMP592 = RX10_TEMP1696 ; final intRefArray1 X10_TEMP595 = X10_TEMP592 ; final intRefArray1 X10_TEMP596 = tMaxSize ; final Region1 RX10_TEMP1697 = dUnique . dReg ; final int RX10_TEMP1698 = 0 ; final int RX10_TEMP1699 = 1 ; int RX10_TEMP1700 = place.MAX_PLACES ; RX10_TEMP1700 = RX10_TEMP1700 - RX10_TEMP1699 ; final region ( : rank==1 ) RX10_TEMP1701 = [ 0 : RX10_TEMP1700 ] ; final dist ( : rank==1 ) RX10_TEMP1702 = [ 0 : RX10_TEMP1700 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1703 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1702 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1704 : RX10_TEMP1701 ) { final place RX10_TEMP1705 = here ; final int RX10_TEMP1706 = RX10_TEMP1704 [0] ; final place RX10_TEMP1707 = place.places ( RX10_TEMP1706 ) ; final int RX10_TEMP1708 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP1706 ) ; final int RX10_TEMP1709 = RX10_TEMP1708 - RX10_TEMP1699 ; final Dist1 RX10_TEMP1710 = Program . restrictDist1 ( dUnique , RX10_TEMP1707 ) ; final Region1 RX10_TEMP1711 = RX10_TEMP1710 . dReg ; 
 final T105 utmp105 = new T105(RX10_TEMP1711, RX10_TEMP1709, RX10_TEMP1705, RX10_TEMP1704, RX10_TEMP1703, X10_TEMP596, X10_TEMP595);
 async (RX10_TEMP1707) {Program.thread105(utmp105); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1739 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1701 ] ( point ( : rank==1 ) RX10_TEMP1741 ) { final intStub RX10_TEMP1740 = RX10_TEMP1703 [ RX10_TEMP1741 ] ; return RX10_TEMP1740 ; }
 ) ; final intRefArray1 RX10_TEMP1742 = new intRefArray1 ( dUnique , RX10_TEMP1739 ) ; final intRefArray1 X10_TEMP593 = RX10_TEMP1742 ; final intRefArray1 tMinSize = X10_TEMP593 ; final int X10_TEMP602 = ( 1 ) ; final int X10_TEMP604 = ( Program . intrefArrayMax1 ( tMaxSize ) ) ; final int X10_TEMP605 = ( X10_TEMP604 ) ; final Point1 RX10_TEMP1743 = new Point1 ( X10_TEMP602 ) ; final Dist1 RX10_TEMP1744 = info . distValue ; final Region1 RX10_TEMP1745 = RX10_TEMP1744 . dReg ; final int RX10_TEMP1746 = Program . searchPointInRegion1 ( RX10_TEMP1745 , RX10_TEMP1743 ) ; final int RX10_TEMP1747 = 0 ; final boolean RX10_TEMP1748 = RX10_TEMP1746 < RX10_TEMP1747 ; if ( RX10_TEMP1748 ) { String RX10_TEMP1749 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1749 ) ; }
 final place RX10_TEMP1750 = Program . getPlaceFromDist1 ( RX10_TEMP1744 , RX10_TEMP1746 ) ; final place RX10_TEMP1752 = here ; final boolean RX10_TEMP1753 = RX10_TEMP1750 != RX10_TEMP1752 ; if ( RX10_TEMP1753 ) { String RX10_TEMP1751 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP1751 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP1746 , X10_TEMP605 ) ; final int X10_TEMP607 = ( 2 ) ; final int X10_TEMP608 = ( Program . intrefArrayMax1 ( tMinSize ) ) ; final int X10_TEMP610 = ( rSize - X10_TEMP608 ) ; final int X10_TEMP611 = ( X10_TEMP610 ) ; final Point1 RX10_TEMP1754 = new Point1 ( X10_TEMP607 ) ; final Dist1 RX10_TEMP1755 = info . distValue ; final Region1 RX10_TEMP1756 = RX10_TEMP1755 . dReg ; final int RX10_TEMP1757 = Program . searchPointInRegion1 ( RX10_TEMP1756 , RX10_TEMP1754 ) ; final int RX10_TEMP1758 = 0 ; final boolean RX10_TEMP1759 = RX10_TEMP1757 < RX10_TEMP1758 ; if ( RX10_TEMP1759 ) { String RX10_TEMP1760 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1760 ) ; }
 final place RX10_TEMP1761 = Program . getPlaceFromDist1 ( RX10_TEMP1755 , RX10_TEMP1757 ) ; final place RX10_TEMP1763 = here ; final boolean RX10_TEMP1764 = RX10_TEMP1761 != RX10_TEMP1763 ; if ( RX10_TEMP1764 ) { String RX10_TEMP1762 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP1762 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP1757 , X10_TEMP611 ) ; final int X10_TEMP613 = ( 1 ) ; final Point1 RX10_TEMP1765 = new Point1 ( X10_TEMP613 ) ; final Dist1 RX10_TEMP1766 = ibflg . distValue ; final Region1 RX10_TEMP1767 = RX10_TEMP1766 . dReg ; final int RX10_TEMP1768 = Program . searchPointInRegion1 ( RX10_TEMP1767 , RX10_TEMP1765 ) ; final int RX10_TEMP1769 = 0 ; final boolean RX10_TEMP1770 = RX10_TEMP1768 < RX10_TEMP1769 ; if ( RX10_TEMP1770 ) { String RX10_TEMP1771 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1771 ) ; }
 final place RX10_TEMP1772 = Program . getPlaceFromDist1 ( RX10_TEMP1766 , RX10_TEMP1768 ) ; final place RX10_TEMP1774 = here ; final boolean RX10_TEMP1775 = RX10_TEMP1772 != RX10_TEMP1774 ; if ( RX10_TEMP1775 ) { String RX10_TEMP1773 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP1773 ) ; }
 final int RX10_TEMP1776 = Program . getRefArrayValue1int ( ibflg , RX10_TEMP1768 ) ; final int X10_TEMP614 = ( RX10_TEMP1776 ) ; final int X10_TEMP615 = ( rPart . regSize ) ; int err = ( X10_TEMP614 - X10_TEMP615 ) ; final int X10_TEMP617 = ( 0 ) ; final boolean X10_TEMP619 = err > X10_TEMP617 ; if ( X10_TEMP619 ) { final String X10_TEMP620 = ( "Particle overflow error, err = " ) ; final String X10_TEMP622 = ( X10_TEMP620 + err ) ; System.err.println ( X10_TEMP622 ) ; final int X10_TEMP624 = ( 0 ) ; final int X10_TEMP626 = ( err ) ; final Point1 RX10_TEMP1777 = new Point1 ( X10_TEMP624 ) ; final Dist1 RX10_TEMP1778 = info . distValue ; final Region1 RX10_TEMP1779 = RX10_TEMP1778 . dReg ; final int RX10_TEMP1780 = Program . searchPointInRegion1 ( RX10_TEMP1779 , RX10_TEMP1777 ) ; final int RX10_TEMP1781 = 0 ; final boolean RX10_TEMP1782 = RX10_TEMP1780 < RX10_TEMP1781 ; if ( RX10_TEMP1782 ) { String RX10_TEMP1783 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1783 ) ; }
 final place RX10_TEMP1784 = Program . getPlaceFromDist1 ( RX10_TEMP1778 , RX10_TEMP1780 ) ; final place RX10_TEMP1786 = here ; final boolean RX10_TEMP1787 = RX10_TEMP1784 != RX10_TEMP1786 ; if ( RX10_TEMP1787 ) { String RX10_TEMP1785 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP1785 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP1780 , X10_TEMP626 ) ; return particles ; }
 finish { final Dist1 X10_TEMP629 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1789 = X10_TEMP629 . dReg ; final int RX10_TEMP1792 = 1 ; int RX10_TEMP1790 = RX10_TEMP1789 . regSize ; RX10_TEMP1790 = RX10_TEMP1790 - RX10_TEMP1792 ; final region ( : rank==1 ) RX10_TEMP1791 = [ 0 : RX10_TEMP1790 ] ; for ( point ( : rank==1 ) RX10_TEMP1788 : RX10_TEMP1791 ) { final int RX10_TEMP1793 = RX10_TEMP1788 [0] ; final Point1 X10_TEMP630 = Program . regionOrdinalPoint1 ( RX10_TEMP1789 , RX10_TEMP1793 ) ; final int pl = X10_TEMP630 . f0 ; final Region1 RX10_TEMP1794 = X10_TEMP629 . dReg ; final int RX10_TEMP1795 = Program . searchPointInRegion1 ( RX10_TEMP1794 , X10_TEMP630 ) ; final int RX10_TEMP1796 = 0 ; final boolean RX10_TEMP1797 = RX10_TEMP1795 < RX10_TEMP1796 ; if ( RX10_TEMP1797 ) { final String RX10_TEMP1798 = "Point X10_TEMP630 not found in the distribution X10_TEMP629." ; throw new RuntimeException ( RX10_TEMP1798 ) ; }
 final place RX10_TEMP1799 = Program . getPlaceFromDist1 ( X10_TEMP629 , RX10_TEMP1795 ) ; final place X10_TEMP631 = RX10_TEMP1799 ; 
 final T106 utmp106 = new T106(pl, nSent, holes, nPart, inRt, inLt, rBufferR, rBufferL, part);
 async (X10_TEMP631) {Program.thread106(utmp106); }
 }
 }
 final int X10_TEMP825 = ( 4 ) ; final int X10_TEMP827 = ( 4 ) ; final Point1 RX10_TEMP2305 = new Point1 ( X10_TEMP827 ) ; final Dist1 RX10_TEMP2306 = info . distValue ; final Region1 RX10_TEMP2307 = RX10_TEMP2306 . dReg ; final int RX10_TEMP2308 = Program . searchPointInRegion1 ( RX10_TEMP2307 , RX10_TEMP2305 ) ; final int RX10_TEMP2309 = 0 ; final boolean RX10_TEMP2310 = RX10_TEMP2308 < RX10_TEMP2309 ; if ( RX10_TEMP2310 ) { String RX10_TEMP2311 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2311 ) ; }
 final place RX10_TEMP2312 = Program . getPlaceFromDist1 ( RX10_TEMP2306 , RX10_TEMP2308 ) ; final place RX10_TEMP2314 = here ; final boolean RX10_TEMP2315 = RX10_TEMP2312 != RX10_TEMP2314 ; if ( RX10_TEMP2315 ) { String RX10_TEMP2313 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2313 ) ; }
 final int RX10_TEMP2316 = Program . getRefArrayValue1int ( info , RX10_TEMP2308 ) ; final int X10_TEMP830 = ( RX10_TEMP2316 ) ; final int X10_TEMP832 = ( Program . X10Util_maxInt ( X10_TEMP830 , mter ) ) ; final int X10_TEMP833 = ( X10_TEMP832 ) ; final Point1 RX10_TEMP2317 = new Point1 ( X10_TEMP825 ) ; final Dist1 RX10_TEMP2318 = info . distValue ; final Region1 RX10_TEMP2319 = RX10_TEMP2318 . dReg ; final int RX10_TEMP2320 = Program . searchPointInRegion1 ( RX10_TEMP2319 , RX10_TEMP2317 ) ; final int RX10_TEMP2321 = 0 ; final boolean RX10_TEMP2322 = RX10_TEMP2320 < RX10_TEMP2321 ; if ( RX10_TEMP2322 ) { String RX10_TEMP2323 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2323 ) ; }
 final place RX10_TEMP2324 = Program . getPlaceFromDist1 ( RX10_TEMP2318 , RX10_TEMP2320 ) ; final place RX10_TEMP2326 = here ; final boolean RX10_TEMP2327 = RX10_TEMP2324 != RX10_TEMP2326 ; if ( RX10_TEMP2327 ) { String RX10_TEMP2325 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2325 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP2320 , X10_TEMP833 ) ; final int X10_TEMP835 = ( 1 ) ; final Point1 RX10_TEMP2328 = new Point1 ( X10_TEMP835 ) ; final Dist1 RX10_TEMP2329 = ibflg . distValue ; final Region1 RX10_TEMP2330 = RX10_TEMP2329 . dReg ; final int RX10_TEMP2331 = Program . searchPointInRegion1 ( RX10_TEMP2330 , RX10_TEMP2328 ) ; final int RX10_TEMP2332 = 0 ; final boolean RX10_TEMP2333 = RX10_TEMP2331 < RX10_TEMP2332 ; if ( RX10_TEMP2333 ) { String RX10_TEMP2334 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2334 ) ; }
 final place RX10_TEMP2335 = Program . getPlaceFromDist1 ( RX10_TEMP2329 , RX10_TEMP2331 ) ; final place RX10_TEMP2337 = here ; final boolean RX10_TEMP2338 = RX10_TEMP2335 != RX10_TEMP2337 ; if ( RX10_TEMP2338 ) { String RX10_TEMP2336 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP2336 ) ; }
 final int RX10_TEMP2339 = Program . getRefArrayValue1int ( ibflg , RX10_TEMP2331 ) ; final int X10_TEMP836 = ( RX10_TEMP2339 ) ; final int X10_TEMP837 = ( 0 ) ; final boolean X10_TEMP839 = X10_TEMP836 > X10_TEMP837 ; if ( X10_TEMP839 ) { final String X10_TEMP840 = ( "Info: particles being passed" ) ; final String X10_TEMP841 = ( " further = " ) ; final String X10_TEMP844 = ( X10_TEMP840 + X10_TEMP841 ) ; final int X10_TEMP843 = ( 1 ) ; final Point1 RX10_TEMP2340 = new Point1 ( X10_TEMP843 ) ; final Dist1 RX10_TEMP2341 = ibflg . distValue ; final Region1 RX10_TEMP2342 = RX10_TEMP2341 . dReg ; final int RX10_TEMP2343 = Program . searchPointInRegion1 ( RX10_TEMP2342 , RX10_TEMP2340 ) ; final int RX10_TEMP2344 = 0 ; final boolean RX10_TEMP2345 = RX10_TEMP2343 < RX10_TEMP2344 ; if ( RX10_TEMP2345 ) { String RX10_TEMP2346 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2346 ) ; }
 final place RX10_TEMP2347 = Program . getPlaceFromDist1 ( RX10_TEMP2341 , RX10_TEMP2343 ) ; final place RX10_TEMP2349 = here ; final boolean RX10_TEMP2350 = RX10_TEMP2347 != RX10_TEMP2349 ; if ( RX10_TEMP2350 ) { String RX10_TEMP2348 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP2348 ) ; }
 final int RX10_TEMP2351 = Program . getRefArrayValue1int ( ibflg , RX10_TEMP2343 ) ; final int X10_TEMP845 = ( RX10_TEMP2351 ) ; final String X10_TEMP847 = ( X10_TEMP844 + X10_TEMP845 ) ; System.err.println ( X10_TEMP847 ) ; final int X10_TEMP849 = ( 2 ) ; final Point1 RX10_TEMP2352 = new Point1 ( X10_TEMP849 ) ; final Dist1 RX10_TEMP2353 = ibflg . distValue ; final Region1 RX10_TEMP2354 = RX10_TEMP2353 . dReg ; final int RX10_TEMP2355 = Program . searchPointInRegion1 ( RX10_TEMP2354 , RX10_TEMP2352 ) ; final int RX10_TEMP2356 = 0 ; final boolean RX10_TEMP2357 = RX10_TEMP2355 < RX10_TEMP2356 ; if ( RX10_TEMP2357 ) { String RX10_TEMP2358 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2358 ) ; }
 final place RX10_TEMP2359 = Program . getPlaceFromDist1 ( RX10_TEMP2353 , RX10_TEMP2355 ) ; final place RX10_TEMP2361 = here ; final boolean RX10_TEMP2362 = RX10_TEMP2359 != RX10_TEMP2361 ; if ( RX10_TEMP2362 ) { String RX10_TEMP2360 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP2360 ) ; }
 final int RX10_TEMP2363 = Program . getRefArrayValue1int ( ibflg , RX10_TEMP2355 ) ; final int X10_TEMP850 = ( RX10_TEMP2363 ) ; final int X10_TEMP851 = ( 0 ) ; final boolean X10_TEMP853 = X10_TEMP850 > X10_TEMP851 ; if ( X10_TEMP853 ) { final int X10_TEMP855 = ( 2 ) ; final int X10_TEMP857 = ( 1 ) ; final int X10_TEMP858 = ( X10_TEMP857 ) ; final Point1 RX10_TEMP2364 = new Point1 ( X10_TEMP855 ) ; final Dist1 RX10_TEMP2365 = ibflg . distValue ; final Region1 RX10_TEMP2366 = RX10_TEMP2365 . dReg ; final int RX10_TEMP2367 = Program . searchPointInRegion1 ( RX10_TEMP2366 , RX10_TEMP2364 ) ; final int RX10_TEMP2368 = 0 ; final boolean RX10_TEMP2369 = RX10_TEMP2367 < RX10_TEMP2368 ; if ( RX10_TEMP2369 ) { String RX10_TEMP2370 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2370 ) ; }
 final place RX10_TEMP2371 = Program . getPlaceFromDist1 ( RX10_TEMP2365 , RX10_TEMP2367 ) ; final place RX10_TEMP2373 = here ; final boolean RX10_TEMP2374 = RX10_TEMP2371 != RX10_TEMP2373 ; if ( RX10_TEMP2374 ) { String RX10_TEMP2372 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP2372 ) ; }
 Program . setRefArrayValue1int ( ibflg , RX10_TEMP2367 , X10_TEMP858 ) ; }
 final boolean X10_TEMP860 = iter >= ITER_MAX ; if ( X10_TEMP860 ) { final int X10_TEMP861 = ( 2 ) ; final int X10_TEMP862 = ( 2 ) ; final int X10_TEMP863 = ( X10_TEMP861 / X10_TEMP862 ) ; final int X10_TEMP865 = ( iter - X10_TEMP863 ) ; final int X10_TEMP867 = ( X10_TEMP865 ) ; final int X10_TEMP868 = 0 ; final int X10_TEMP870 = ( X10_TEMP868 - X10_TEMP867 ) ; err = ( X10_TEMP870 ) ; final String X10_TEMP871 = ( "Iteration overflow, " ) ; final String X10_TEMP872 = ( "iter = " ) ; final String X10_TEMP873 = ( X10_TEMP871 + X10_TEMP872 ) ; final String X10_TEMP875 = ( X10_TEMP873 + err ) ; System.err.println ( X10_TEMP875 ) ; final int X10_TEMP877 = ( 0 ) ; final int X10_TEMP879 = ( err ) ; final Point1 RX10_TEMP2375 = new Point1 ( X10_TEMP877 ) ; final Dist1 RX10_TEMP2376 = info . distValue ; final Region1 RX10_TEMP2377 = RX10_TEMP2376 . dReg ; final int RX10_TEMP2378 = Program . searchPointInRegion1 ( RX10_TEMP2377 , RX10_TEMP2375 ) ; final int RX10_TEMP2379 = 0 ; final boolean RX10_TEMP2380 = RX10_TEMP2378 < RX10_TEMP2379 ; if ( RX10_TEMP2380 ) { String RX10_TEMP2381 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2381 ) ; }
 final place RX10_TEMP2382 = Program . getPlaceFromDist1 ( RX10_TEMP2376 , RX10_TEMP2378 ) ; final place RX10_TEMP2384 = here ; final boolean RX10_TEMP2385 = RX10_TEMP2382 != RX10_TEMP2384 ; if ( RX10_TEMP2385 ) { String RX10_TEMP2383 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2383 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP2378 , X10_TEMP879 ) ; final boolean X10_TEMP881 = ( true ) ; doneInner = ( X10_TEMP881 ) ; final boolean X10_TEMP883 = ( true ) ; doneOuter = ( X10_TEMP883 ) ; }
 }
 else { final boolean X10_TEMP885 = ( true ) ; doneInner = ( X10_TEMP885 ) ; }
 X10_TEMP252 = ! doneInner ; }
 while ( X10_TEMP252 ) ; final boolean X10_TEMP891 = ( ! doneOuter ) ; final int X10_TEMP888 = ( 2 ) ; final Point1 RX10_TEMP2386 = new Point1 ( X10_TEMP888 ) ; final Dist1 RX10_TEMP2387 = ibflg . distValue ; final Region1 RX10_TEMP2388 = RX10_TEMP2387 . dReg ; final int RX10_TEMP2389 = Program . searchPointInRegion1 ( RX10_TEMP2388 , RX10_TEMP2386 ) ; final int RX10_TEMP2390 = 0 ; final boolean RX10_TEMP2391 = RX10_TEMP2389 < RX10_TEMP2390 ; if ( RX10_TEMP2391 ) { String RX10_TEMP2392 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2392 ) ; }
 final place RX10_TEMP2393 = Program . getPlaceFromDist1 ( RX10_TEMP2387 , RX10_TEMP2389 ) ; final place RX10_TEMP2395 = here ; final boolean RX10_TEMP2396 = RX10_TEMP2393 != RX10_TEMP2395 ; if ( RX10_TEMP2396 ) { String RX10_TEMP2394 = "Bad place access for array ibflg" ; throw new RuntimeException ( RX10_TEMP2394 ) ; }
 final int RX10_TEMP2397 = Program . getRefArrayValue1int ( ibflg , RX10_TEMP2389 ) ; final int X10_TEMP889 = ( RX10_TEMP2397 ) ; final int X10_TEMP890 = ( 0 ) ; final boolean X10_TEMP892 = ( X10_TEMP889 > X10_TEMP890 ) ; final boolean X10_TEMP894 = X10_TEMP891 && X10_TEMP892 ; if ( X10_TEMP894 ) { final int X10_TEMP895 = ( nter ) ; final int X10_TEMP896 = 1 ; nter = nter + X10_TEMP896 ; final int X10_TEMP898 = ( 3 ) ; final int X10_TEMP900 = ( nter ) ; final Point1 RX10_TEMP2398 = new Point1 ( X10_TEMP898 ) ; final Dist1 RX10_TEMP2399 = info . distValue ; final Region1 RX10_TEMP2400 = RX10_TEMP2399 . dReg ; final int RX10_TEMP2401 = Program . searchPointInRegion1 ( RX10_TEMP2400 , RX10_TEMP2398 ) ; final int RX10_TEMP2402 = 0 ; final boolean RX10_TEMP2403 = RX10_TEMP2401 < RX10_TEMP2402 ; if ( RX10_TEMP2403 ) { String RX10_TEMP2404 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2404 ) ; }
 final place RX10_TEMP2405 = Program . getPlaceFromDist1 ( RX10_TEMP2399 , RX10_TEMP2401 ) ; final place RX10_TEMP2407 = here ; final boolean RX10_TEMP2408 = RX10_TEMP2405 != RX10_TEMP2407 ; if ( RX10_TEMP2408 ) { String RX10_TEMP2406 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2406 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP2401 , X10_TEMP900 ) ; }
 else { final boolean X10_TEMP902 = ( true ) ; doneOuter = ( X10_TEMP902 ) ; }
 X10_TEMP120 = ! doneOuter ; }
 while ( X10_TEMP120 ) ; final int X10_TEMP905 = ( 5 ) ; final int X10_TEMP907 = ( Program . intrefArraySum1 ( nPart ) ) ; final int X10_TEMP908 = ( X10_TEMP907 ) ; final Point1 RX10_TEMP2409 = new Point1 ( X10_TEMP905 ) ; final Dist1 RX10_TEMP2410 = info . distValue ; final Region1 RX10_TEMP2411 = RX10_TEMP2410 . dReg ; final int RX10_TEMP2412 = Program . searchPointInRegion1 ( RX10_TEMP2411 , RX10_TEMP2409 ) ; final int RX10_TEMP2413 = 0 ; final boolean RX10_TEMP2414 = RX10_TEMP2412 < RX10_TEMP2413 ; if ( RX10_TEMP2414 ) { String RX10_TEMP2415 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2415 ) ; }
 final place RX10_TEMP2416 = Program . getPlaceFromDist1 ( RX10_TEMP2410 , RX10_TEMP2412 ) ; final place RX10_TEMP2418 = here ; final boolean RX10_TEMP2419 = RX10_TEMP2416 != RX10_TEMP2418 ; if ( RX10_TEMP2419 ) { String RX10_TEMP2417 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2417 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP2412 , X10_TEMP908 ) ; final int X10_TEMP910 = ( 6 ) ; final int X10_TEMP912 = ( Program . intrefArraySum1 ( nPartOld ) ) ; final int X10_TEMP913 = ( X10_TEMP912 ) ; final Point1 RX10_TEMP2420 = new Point1 ( X10_TEMP910 ) ; final Dist1 RX10_TEMP2421 = info . distValue ; final Region1 RX10_TEMP2422 = RX10_TEMP2421 . dReg ; final int RX10_TEMP2423 = Program . searchPointInRegion1 ( RX10_TEMP2422 , RX10_TEMP2420 ) ; final int RX10_TEMP2424 = 0 ; final boolean RX10_TEMP2425 = RX10_TEMP2423 < RX10_TEMP2424 ; if ( RX10_TEMP2425 ) { String RX10_TEMP2426 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2426 ) ; }
 final place RX10_TEMP2427 = Program . getPlaceFromDist1 ( RX10_TEMP2421 , RX10_TEMP2423 ) ; final place RX10_TEMP2429 = here ; final boolean RX10_TEMP2430 = RX10_TEMP2427 != RX10_TEMP2429 ; if ( RX10_TEMP2430 ) { String RX10_TEMP2428 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2428 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP2423 , X10_TEMP913 ) ; final int X10_TEMP915 = ( 5 ) ; final Point1 RX10_TEMP2431 = new Point1 ( X10_TEMP915 ) ; final Dist1 RX10_TEMP2432 = info . distValue ; final Region1 RX10_TEMP2433 = RX10_TEMP2432 . dReg ; final int RX10_TEMP2434 = Program . searchPointInRegion1 ( RX10_TEMP2433 , RX10_TEMP2431 ) ; final int RX10_TEMP2435 = 0 ; final boolean RX10_TEMP2436 = RX10_TEMP2434 < RX10_TEMP2435 ; if ( RX10_TEMP2436 ) { String RX10_TEMP2437 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2437 ) ; }
 final place RX10_TEMP2438 = Program . getPlaceFromDist1 ( RX10_TEMP2432 , RX10_TEMP2434 ) ; final place RX10_TEMP2440 = here ; final boolean RX10_TEMP2441 = RX10_TEMP2438 != RX10_TEMP2440 ; if ( RX10_TEMP2441 ) { String RX10_TEMP2439 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2439 ) ; }
 final int RX10_TEMP2442 = Program . getRefArrayValue1int ( info , RX10_TEMP2434 ) ; final int X10_TEMP918 = ( RX10_TEMP2442 ) ; final int X10_TEMP917 = ( 6 ) ; final Point1 RX10_TEMP2443 = new Point1 ( X10_TEMP917 ) ; final Dist1 RX10_TEMP2444 = info . distValue ; final Region1 RX10_TEMP2445 = RX10_TEMP2444 . dReg ; final int RX10_TEMP2446 = Program . searchPointInRegion1 ( RX10_TEMP2445 , RX10_TEMP2443 ) ; final int RX10_TEMP2447 = 0 ; final boolean RX10_TEMP2448 = RX10_TEMP2446 < RX10_TEMP2447 ; if ( RX10_TEMP2448 ) { String RX10_TEMP2449 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2449 ) ; }
 final place RX10_TEMP2450 = Program . getPlaceFromDist1 ( RX10_TEMP2444 , RX10_TEMP2446 ) ; final place RX10_TEMP2452 = here ; final boolean RX10_TEMP2453 = RX10_TEMP2450 != RX10_TEMP2452 ; if ( RX10_TEMP2453 ) { String RX10_TEMP2451 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2451 ) ; }
 final int RX10_TEMP2454 = Program . getRefArrayValue1int ( info , RX10_TEMP2446 ) ; final int X10_TEMP919 = ( RX10_TEMP2454 ) ; final boolean X10_TEMP921 = X10_TEMP918 != X10_TEMP919 ; if ( X10_TEMP921 ) { final String X10_TEMP924 = ( "Particle number error, old/new = " ) ; final int X10_TEMP923 = ( 0 ) ; final Point1 RX10_TEMP2455 = new Point1 ( X10_TEMP923 ) ; final Dist1 RX10_TEMP2456 = info . distValue ; final Region1 RX10_TEMP2457 = RX10_TEMP2456 . dReg ; final int RX10_TEMP2458 = Program . searchPointInRegion1 ( RX10_TEMP2457 , RX10_TEMP2455 ) ; final int RX10_TEMP2459 = 0 ; final boolean RX10_TEMP2460 = RX10_TEMP2458 < RX10_TEMP2459 ; if ( RX10_TEMP2460 ) { String RX10_TEMP2461 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2461 ) ; }
 final place RX10_TEMP2462 = Program . getPlaceFromDist1 ( RX10_TEMP2456 , RX10_TEMP2458 ) ; final place RX10_TEMP2464 = here ; final boolean RX10_TEMP2465 = RX10_TEMP2462 != RX10_TEMP2464 ; if ( RX10_TEMP2465 ) { String RX10_TEMP2463 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2463 ) ; }
 final int RX10_TEMP2466 = Program . getRefArrayValue1int ( info , RX10_TEMP2458 ) ; final int X10_TEMP925 = ( RX10_TEMP2466 ) ; final String X10_TEMP926 = ( X10_TEMP924 + X10_TEMP925 ) ; final String X10_TEMP927 = ( " " ) ; final String X10_TEMP930 = ( X10_TEMP926 + X10_TEMP927 ) ; final int X10_TEMP929 = ( 1 ) ; final Point1 RX10_TEMP2467 = new Point1 ( X10_TEMP929 ) ; final Dist1 RX10_TEMP2468 = info . distValue ; final Region1 RX10_TEMP2469 = RX10_TEMP2468 . dReg ; final int RX10_TEMP2470 = Program . searchPointInRegion1 ( RX10_TEMP2469 , RX10_TEMP2467 ) ; final int RX10_TEMP2471 = 0 ; final boolean RX10_TEMP2472 = RX10_TEMP2470 < RX10_TEMP2471 ; if ( RX10_TEMP2472 ) { String RX10_TEMP2473 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2473 ) ; }
 final place RX10_TEMP2474 = Program . getPlaceFromDist1 ( RX10_TEMP2468 , RX10_TEMP2470 ) ; final place RX10_TEMP2476 = here ; final boolean RX10_TEMP2477 = RX10_TEMP2474 != RX10_TEMP2476 ; if ( RX10_TEMP2477 ) { String RX10_TEMP2475 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2475 ) ; }
 final int RX10_TEMP2478 = Program . getRefArrayValue1int ( info , RX10_TEMP2470 ) ; final int X10_TEMP931 = ( RX10_TEMP2478 ) ; final String X10_TEMP933 = ( X10_TEMP930 + X10_TEMP931 ) ; System.err.println ( X10_TEMP933 ) ; final int X10_TEMP935 = ( 0 ) ; final int X10_TEMP937 = ( 1 ) ; final int X10_TEMP938 = ( X10_TEMP937 ) ; final Point1 RX10_TEMP2479 = new Point1 ( X10_TEMP935 ) ; final Dist1 RX10_TEMP2480 = info . distValue ; final Region1 RX10_TEMP2481 = RX10_TEMP2480 . dReg ; final int RX10_TEMP2482 = Program . searchPointInRegion1 ( RX10_TEMP2481 , RX10_TEMP2479 ) ; final int RX10_TEMP2483 = 0 ; final boolean RX10_TEMP2484 = RX10_TEMP2482 < RX10_TEMP2483 ; if ( RX10_TEMP2484 ) { String RX10_TEMP2485 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2485 ) ; }
 final place RX10_TEMP2486 = Program . getPlaceFromDist1 ( RX10_TEMP2480 , RX10_TEMP2482 ) ; final place RX10_TEMP2488 = here ; final boolean RX10_TEMP2489 = RX10_TEMP2486 != RX10_TEMP2488 ; if ( RX10_TEMP2489 ) { String RX10_TEMP2487 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP2487 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP2482 , X10_TEMP938 ) ; }
 final int X10_TEMP939 = ( 0 ) ; final boolean X10_TEMP941 = nter > X10_TEMP939 ; if ( X10_TEMP941 ) { final String X10_TEMP942 = ( "Info: " ) ; final String X10_TEMP943 = ( X10_TEMP942 + nter ) ; final String X10_TEMP944 = ( " buffer overflows, " ) ; final String X10_TEMP945 = ( X10_TEMP943 + X10_TEMP944 ) ; final String X10_TEMP946 = ( "nbmax = " ) ; final String X10_TEMP947 = ( X10_TEMP945 + X10_TEMP946 ) ; final int X10_TEMP948 = ( rBuffer . regSize ) ; final String X10_TEMP950 = ( X10_TEMP947 + X10_TEMP948 ) ; System.err.println ( X10_TEMP950 ) ; }
 final ParticleRefArray1 X10_TEMP954 = Program . LinearESOpenPIC2D_packParticleArray ( X10_TEMP0 , part , nPart ) ; return X10_TEMP954 ; }
 public static void LinearESOpenPIC2D_transferParticles ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray2 leftOutBuffer , final ParticleRefArray2 rightOutBuffer , final intRefArray1 outLeft , final intRefArray1 outRight , final ParticleRefArray2 leftInBuffer , final ParticleRefArray2 rightInBuffer , final intRefArray1 inLeft , final intRefArray1 inRight ) { finish { final Dist1 X10_TEMP2 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP2 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 X10_TEMP3 = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final int pl = X10_TEMP3 . f0 ; final Region1 RX10_TEMP6 = X10_TEMP2 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , X10_TEMP3 ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point X10_TEMP3 not found in the distribution X10_TEMP2." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP2 , RX10_TEMP7 ) ; final place X10_TEMP4 = RX10_TEMP11 ; 
 final T107 utmp107 = new T107(pl, inRight, inLeft, rightInBuffer, leftInBuffer, outRight, outLeft, rightOutBuffer, leftOutBuffer);
 async (X10_TEMP4) {Program.thread107(utmp107); }
 }
 }
 }
 public static ParticleRefArray1 LinearESOpenPIC2D_packParticleArray ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray2 part , final intRefArray1 nParticles ) { int lb = ( 0 ) ; final int X10_TEMP2 = 0 ; final int X10_TEMP3 = 1 ; final int X10_TEMP4 = X10_TEMP2 - X10_TEMP3 ; final Region1 X10_TEMP5 = Program . createNewRegion1R ( X10_TEMP2 , X10_TEMP4 ) ; final place X10_TEMP6 = ( here ) ; final Dist1 X10_TEMP8 = Program . getPlaceDist1 ( X10_TEMP5 , X10_TEMP6 ) ; Dist1 dResult = X10_TEMP8 ; final Dist1 X10_TEMP11 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP11 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; int rsize = ( Program . X10Util_pullInt ( nParticles , pt ) ) ; final int X10_TEMP17 = ( pt . f0 ) ; place p = ( place.places ( X10_TEMP17 ) ) ; final int X10_TEMP20 = ( lb + rsize ) ; final int X10_TEMP21 = ( 1 ) ; final int X10_TEMP23 = ( X10_TEMP20 - X10_TEMP21 ) ; final Region1 X10_TEMP24 = Program . createNewRegion1R ( lb , X10_TEMP23 ) ; final Dist1 X10_TEMP26 = Program . getPlaceDist1 ( X10_TEMP24 , p ) ; final Dist1 X10_TEMP28 = Program . unionDist1 ( dResult , X10_TEMP26 ) ; dResult = ( X10_TEMP28 ) ; final int X10_TEMP30 = ( lb + rsize ) ; lb = ( X10_TEMP30 ) ; }
 final Region1 RX10_TEMP6 = dResult . dReg ; final int RX10_TEMP7 = 0 ; final int RX10_TEMP8 = 1 ; int RX10_TEMP9 = place.MAX_PLACES ; RX10_TEMP9 = RX10_TEMP9 - RX10_TEMP8 ; final region ( : rank==1 ) RX10_TEMP10 = [ 0 : RX10_TEMP9 ] ; final dist ( : rank==1 ) RX10_TEMP11 = [ 0 : RX10_TEMP9 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP12 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP11 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP13 : RX10_TEMP10 ) { final place RX10_TEMP14 = here ; final int RX10_TEMP15 = RX10_TEMP13 [0] ; final place RX10_TEMP16 = place.places ( RX10_TEMP15 ) ; final int RX10_TEMP17 = Program . getDistLocalCount1 ( dResult , RX10_TEMP15 ) ; final int RX10_TEMP18 = RX10_TEMP17 - RX10_TEMP8 ; 
 final T108 utmp108 = new T108(RX10_TEMP18, RX10_TEMP14, RX10_TEMP13, RX10_TEMP12);
 async (RX10_TEMP16) {Program.thread108(utmp108); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP22 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP10 ] ( point ( : rank==1 ) RX10_TEMP24 ) { final ParticleStub RX10_TEMP23 = RX10_TEMP12 [ RX10_TEMP24 ] ; return RX10_TEMP23 ; }
 ) ; final ParticleRefArray1 RX10_TEMP25 = new ParticleRefArray1 ( dResult , RX10_TEMP22 ) ; final ParticleRefArray1 result = RX10_TEMP25 ; finish { final Dist1 X10_TEMP33 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP27 = X10_TEMP33 . dReg ; final int RX10_TEMP30 = 1 ; int RX10_TEMP28 = RX10_TEMP27 . regSize ; RX10_TEMP28 = RX10_TEMP28 - RX10_TEMP30 ; final region ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP28 ] ; for ( point ( : rank==1 ) RX10_TEMP26 : RX10_TEMP29 ) { final int RX10_TEMP31 = RX10_TEMP26 [0] ; final Point1 X10_TEMP34 = Program . regionOrdinalPoint1 ( RX10_TEMP27 , RX10_TEMP31 ) ; final int pl = X10_TEMP34 . f0 ; final Region1 RX10_TEMP32 = X10_TEMP33 . dReg ; final int RX10_TEMP33 = Program . searchPointInRegion1 ( RX10_TEMP32 , X10_TEMP34 ) ; final int RX10_TEMP34 = 0 ; final boolean RX10_TEMP35 = RX10_TEMP33 < RX10_TEMP34 ; if ( RX10_TEMP35 ) { final String RX10_TEMP36 = "Point X10_TEMP34 not found in the distribution X10_TEMP33." ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 final place RX10_TEMP37 = Program . getPlaceFromDist1 ( X10_TEMP33 , RX10_TEMP33 ) ; final place X10_TEMP35 = RX10_TEMP37 ; 
 final T109 utmp109 = new T109(pl, result, part);
 async (X10_TEMP35) {Program.thread109(utmp109); }
 }
 }
 return result ; }
 public static double LinearESOpenPIC2D_pushParticles ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles , final doubleRefArray2 forceChargeX , final doubleRefArray2 fcGuardX , final doubleRefArray2 forceChargeY , final doubleRefArray2 fcGuardY ) { double lx = ( 0.0 ) ; double ly = ( 0.0 ) ; double rx = ( 0.0 ) ; double ry = ( 0.0 ) ; final int X10_TEMP7 = 1 ; final int X10_TEMP10 = 2 ; final int X10_TEMP22 = 3 ; switch ( _LinearESOpenPIC2D_BOUNDARY_CONDITION ) { case X10_TEMP7 : { rx = ( _LinearESOpenPIC2D_XLENGTH ) ; break ; }
 case X10_TEMP10 : { final double X10_TEMP12 = ( 1.0 ) ; lx = ( X10_TEMP12 ) ; final double X10_TEMP14 = ( 1.0 ) ; ly = ( X10_TEMP14 ) ; final double X10_TEMP15 = ( 1.0 ) ; final double X10_TEMP17 = ( _LinearESOpenPIC2D_XLENGTH - X10_TEMP15 ) ; rx = ( X10_TEMP17 ) ; final double X10_TEMP18 = ( 1.0 ) ; final double X10_TEMP20 = ( _LinearESOpenPIC2D_YLENGTH - X10_TEMP18 ) ; ry = ( X10_TEMP20 ) ; break ; }
 case X10_TEMP22 : { final double X10_TEMP24 = ( 1.0 ) ; lx = ( X10_TEMP24 ) ; final double X10_TEMP25 = ( 1.0 ) ; final double X10_TEMP27 = ( _LinearESOpenPIC2D_XLENGTH - X10_TEMP25 ) ; rx = ( X10_TEMP27 ) ; break ; }
 } final double edgelx = ( lx ) ; final double edgely = ( ly ) ; final double edgerx = ( rx ) ; final double edgery = ( ry ) ; final double quantum = ( _LinearESOpenPIC2D_ELECTRON_CHARGE * _LinearESOpenPIC2D_DELTA_TIME ) ; final Dist1 RX10_TEMP0 = particles . distValue ; final Dist1 dEnergy = RX10_TEMP0 ; final Region1 RX10_TEMP1 = dEnergy . dReg ; final int RX10_TEMP2 = 0 ; final int RX10_TEMP3 = 1 ; int RX10_TEMP4 = place.MAX_PLACES ; RX10_TEMP4 = RX10_TEMP4 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP4 ] ; final dist ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP4 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP7 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP6 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP5 ) { final place RX10_TEMP9 = here ; final int RX10_TEMP10 = RX10_TEMP8 [0] ; final place RX10_TEMP11 = place.places ( RX10_TEMP10 ) ; final int RX10_TEMP12 = Program . getDistLocalCount1 ( dEnergy , RX10_TEMP10 ) ; final int RX10_TEMP13 = RX10_TEMP12 - RX10_TEMP3 ; 
 final T110 utmp110 = new T110(RX10_TEMP13, RX10_TEMP9, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP11) {Program.thread110(utmp110); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP17 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP5 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final doubleStub RX10_TEMP18 = RX10_TEMP7 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final doubleRefArray1 RX10_TEMP20 = new doubleRefArray1 ( dEnergy , RX10_TEMP17 ) ; final doubleRefArray1 energy = RX10_TEMP20 ; finish { final Dist1 X10_TEMP36 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP22 = X10_TEMP36 . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; final Region1 RX10_TEMP27 = X10_TEMP36 . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , pl ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point pl not found in the distribution X10_TEMP36." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( X10_TEMP36 , RX10_TEMP28 ) ; final place X10_TEMP37 = RX10_TEMP32 ; 
 final T111 utmp111 = new T111(energy, quantum, edgery, edgerx, edgely, edgelx, fcGuardY, forceChargeY, fcGuardX, forceChargeX, particles, X10_TEMP0);
 async (X10_TEMP37) {Program.thread111(utmp111); }
 }
 }
 final double X10_TEMP59 = ( 0.125 ) ; final double X10_TEMP60 = ( Program . doublerefArraySum1 ( energy ) ) ; final double X10_TEMP62 = ( X10_TEMP59 * X10_TEMP60 ) ; return X10_TEMP62 ; }
 public static doubleRefArray2 LinearESOpenPIC2D_makeLocalSpace ( final LinearESOpenPIC2D X10_TEMP0 , final doubleRefArray2 data , final doubleRefArray2 guards ) { final Dist2 RX10_TEMP0 = data . distValue ; final Dist2 dData = RX10_TEMP0 ; final Dist2 RX10_TEMP1 = guards . distValue ; final Dist2 dGuard = RX10_TEMP1 ; final Region2 rLocalD = Program . X10Util_get2DLRegion ( dData ) ; final Region2 rLocalG = Program . X10Util_get2DLRegion ( dGuard ) ; final Region2 X10_TEMP8 = Program . unionRegion2 ( rLocalD , rLocalG ) ; final place X10_TEMP9 = ( here ) ; final Dist2 X10_TEMP11 = Program . getPlaceDist2 ( X10_TEMP8 , X10_TEMP9 ) ; final Dist2 dResult = X10_TEMP11 ; final Region2 RX10_TEMP2 = dResult . dReg ; final int RX10_TEMP3 = 0 ; final int RX10_TEMP4 = 1 ; int RX10_TEMP5 = place.MAX_PLACES ; RX10_TEMP5 = RX10_TEMP5 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP5 ] ; final dist ( : rank==1 ) RX10_TEMP7 = [ 0 : RX10_TEMP5 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP8 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP7 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP9 : RX10_TEMP6 ) { final place RX10_TEMP10 = here ; final int RX10_TEMP11 = RX10_TEMP9 [0] ; final place RX10_TEMP12 = place.places ( RX10_TEMP11 ) ; final int RX10_TEMP13 = Program . getDistLocalCount2 ( dResult , RX10_TEMP11 ) ; final int RX10_TEMP14 = RX10_TEMP13 - RX10_TEMP4 ; 
 final T112 utmp112 = new T112(RX10_TEMP14, RX10_TEMP10, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP12) {Program.thread112(utmp112); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP18 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP6 ] ( point ( : rank==1 ) RX10_TEMP20 ) { final doubleStub RX10_TEMP19 = RX10_TEMP8 [ RX10_TEMP20 ] ; return RX10_TEMP19 ; }
 ) ; final doubleRefArray2 RX10_TEMP21 = new doubleRefArray2 ( dResult , RX10_TEMP18 ) ; final doubleRefArray2 result = RX10_TEMP21 ; finish { final Dist2 RX10_TEMP22 = data . distValue ; final Dist2 X10_TEMP14 = RX10_TEMP22 ; final place X10_TEMP15 = ( here ) ; final Dist2 X10_TEMP17 = Program . restrictDist2 ( X10_TEMP14 , X10_TEMP15 ) ; final place X10_TEMP18 = here ; final Region2 RX10_TEMP24 = X10_TEMP17 . dReg ; final int RX10_TEMP27 = 1 ; int RX10_TEMP25 = RX10_TEMP24 . regSize ; RX10_TEMP25 = RX10_TEMP25 - RX10_TEMP27 ; final region ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP25 ] ; for ( point ( : rank==1 ) RX10_TEMP23 : RX10_TEMP26 ) { final int RX10_TEMP28 = RX10_TEMP23 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP24 , RX10_TEMP28 ) ; 
 final T113 utmp113 = new T113(pt, result, data);
 async (X10_TEMP18) {Program.thread113(utmp113); }
 }
 final Dist2 RX10_TEMP50 = guards . distValue ; final Dist2 X10_TEMP24 = RX10_TEMP50 ; final place X10_TEMP25 = ( here ) ; final Dist2 X10_TEMP27 = Program . restrictDist2 ( X10_TEMP24 , X10_TEMP25 ) ; final place X10_TEMP28 = here ; final Region2 RX10_TEMP52 = X10_TEMP27 . dReg ; final int RX10_TEMP55 = 1 ; int RX10_TEMP53 = RX10_TEMP52 . regSize ; RX10_TEMP53 = RX10_TEMP53 - RX10_TEMP55 ; final region ( : rank==1 ) RX10_TEMP54 = [ 0 : RX10_TEMP53 ] ; for ( point ( : rank==1 ) RX10_TEMP51 : RX10_TEMP54 ) { final int RX10_TEMP56 = RX10_TEMP51 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP52 , RX10_TEMP56 ) ; 
 final T114 utmp114 = new T114(pt, result, guards);
 async (X10_TEMP28) {Program.thread114(utmp114); }
 }
 }
 return result ; }
 public static void LinearESOpenPIC2D_pushParticle ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles , final Point1 pt , final doubleRefArray2 forceChargeX , final doubleRefArray2 forceChargeY , final double quantum , final double edgelx , final double edgely , final double edgerx , final double edgery , final doubleRefArray1 energy ) { final Dist1 RX10_TEMP0 = particles . distValue ; final Region1 RX10_TEMP1 = RX10_TEMP0 . dReg ; final int RX10_TEMP2 = Program . searchPointInRegion1 ( RX10_TEMP1 , pt ) ; final int RX10_TEMP3 = 0 ; final boolean RX10_TEMP4 = RX10_TEMP2 < RX10_TEMP3 ; if ( RX10_TEMP4 ) { String RX10_TEMP5 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP5 ) ; }
 final place RX10_TEMP6 = Program . getPlaceFromDist1 ( RX10_TEMP0 , RX10_TEMP2 ) ; final place RX10_TEMP8 = here ; final boolean RX10_TEMP9 = RX10_TEMP6 != RX10_TEMP8 ; if ( RX10_TEMP9 ) { String RX10_TEMP7 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP7 ) ; }
 final Particle RX10_TEMP10 = Program . getRefArrayValue1Particle ( particles , RX10_TEMP2 ) ; final Particle p = ( RX10_TEMP10 ) ; final double X10_TEMP3 = ( Program . Particle_getX ( p ) ) ; final int x = ( ( int ) X10_TEMP3 ) ; final double X10_TEMP5 = ( Program . Particle_getY ( p ) ) ; final int y = ( ( int ) X10_TEMP5 ) ; final double X10_TEMP7 = ( Program . Particle_getX ( p ) ) ; final double dx = ( X10_TEMP7 - x ) ; final double X10_TEMP9 = ( Program . Particle_getY ( p ) ) ; final double dy = ( X10_TEMP9 - y ) ; final double X10_TEMP11 = ( 1.0 ) ; final double mx = ( X10_TEMP11 - dx ) ; final double X10_TEMP13 = ( 1.0 ) ; final double my = ( X10_TEMP13 - dy ) ; final int X10_TEMP15 = ( 1 ) ; final int X10_TEMP19 = ( y + X10_TEMP15 ) ; final int X10_TEMP17 = ( 1 ) ; final int X10_TEMP20 = ( x + X10_TEMP17 ) ; final Point2 RX10_TEMP11 = new Point2 ( X10_TEMP19 , X10_TEMP20 ) ; final Dist2 RX10_TEMP12 = forceChargeX . distValue ; final Region2 RX10_TEMP13 = RX10_TEMP12 . dReg ; final int RX10_TEMP14 = Program . searchPointInRegion2 ( RX10_TEMP13 , RX10_TEMP11 ) ; final int RX10_TEMP15 = 0 ; final boolean RX10_TEMP16 = RX10_TEMP14 < RX10_TEMP15 ; if ( RX10_TEMP16 ) { String RX10_TEMP17 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP17 ) ; }
 final place RX10_TEMP18 = Program . getPlaceFromDist2 ( RX10_TEMP12 , RX10_TEMP14 ) ; final place RX10_TEMP20 = here ; final boolean RX10_TEMP21 = RX10_TEMP18 != RX10_TEMP20 ; if ( RX10_TEMP21 ) { String RX10_TEMP19 = "Bad place access for array forceChargeX" ; throw new RuntimeException ( RX10_TEMP19 ) ; }
 final double RX10_TEMP22 = Program . getRefArrayValue2double ( forceChargeX , RX10_TEMP14 ) ; final double X10_TEMP21 = ( RX10_TEMP22 ) ; final double X10_TEMP27 = ( dx * X10_TEMP21 ) ; final int X10_TEMP22 = ( 1 ) ; final int X10_TEMP25 = ( y + X10_TEMP22 ) ; final Point2 RX10_TEMP23 = new Point2 ( X10_TEMP25 , x ) ; final Dist2 RX10_TEMP24 = forceChargeX . distValue ; final Region2 RX10_TEMP25 = RX10_TEMP24 . dReg ; final int RX10_TEMP26 = Program . searchPointInRegion2 ( RX10_TEMP25 , RX10_TEMP23 ) ; final int RX10_TEMP27 = 0 ; final boolean RX10_TEMP28 = RX10_TEMP26 < RX10_TEMP27 ; if ( RX10_TEMP28 ) { String RX10_TEMP29 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP29 ) ; }
 final place RX10_TEMP30 = Program . getPlaceFromDist2 ( RX10_TEMP24 , RX10_TEMP26 ) ; final place RX10_TEMP32 = here ; final boolean RX10_TEMP33 = RX10_TEMP30 != RX10_TEMP32 ; if ( RX10_TEMP33 ) { String RX10_TEMP31 = "Bad place access for array forceChargeX" ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final double RX10_TEMP34 = Program . getRefArrayValue2double ( forceChargeX , RX10_TEMP26 ) ; final double X10_TEMP26 = ( RX10_TEMP34 ) ; final double X10_TEMP28 = ( mx * X10_TEMP26 ) ; final double X10_TEMP30 = ( X10_TEMP27 + X10_TEMP28 ) ; final double X10_TEMP43 = ( dy * X10_TEMP30 ) ; final int X10_TEMP32 = ( 1 ) ; final int X10_TEMP34 = ( x + X10_TEMP32 ) ; final Point2 RX10_TEMP35 = new Point2 ( y , X10_TEMP34 ) ; final Dist2 RX10_TEMP36 = forceChargeX . distValue ; final Region2 RX10_TEMP37 = RX10_TEMP36 . dReg ; final int RX10_TEMP38 = Program . searchPointInRegion2 ( RX10_TEMP37 , RX10_TEMP35 ) ; final int RX10_TEMP39 = 0 ; final boolean RX10_TEMP40 = RX10_TEMP38 < RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP41 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP41 ) ; }
 final place RX10_TEMP42 = Program . getPlaceFromDist2 ( RX10_TEMP36 , RX10_TEMP38 ) ; final place RX10_TEMP44 = here ; final boolean RX10_TEMP45 = RX10_TEMP42 != RX10_TEMP44 ; if ( RX10_TEMP45 ) { String RX10_TEMP43 = "Bad place access for array forceChargeX" ; throw new RuntimeException ( RX10_TEMP43 ) ; }
 final double RX10_TEMP46 = Program . getRefArrayValue2double ( forceChargeX , RX10_TEMP38 ) ; final double X10_TEMP35 = ( RX10_TEMP46 ) ; final double X10_TEMP39 = ( dx * X10_TEMP35 ) ; final Point2 RX10_TEMP47 = new Point2 ( y , x ) ; final Dist2 RX10_TEMP48 = forceChargeX . distValue ; final Region2 RX10_TEMP49 = RX10_TEMP48 . dReg ; final int RX10_TEMP50 = Program . searchPointInRegion2 ( RX10_TEMP49 , RX10_TEMP47 ) ; final int RX10_TEMP51 = 0 ; final boolean RX10_TEMP52 = RX10_TEMP50 < RX10_TEMP51 ; if ( RX10_TEMP52 ) { String RX10_TEMP53 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP53 ) ; }
 final place RX10_TEMP54 = Program . getPlaceFromDist2 ( RX10_TEMP48 , RX10_TEMP50 ) ; final place RX10_TEMP56 = here ; final boolean RX10_TEMP57 = RX10_TEMP54 != RX10_TEMP56 ; if ( RX10_TEMP57 ) { String RX10_TEMP55 = "Bad place access for array forceChargeX" ; throw new RuntimeException ( RX10_TEMP55 ) ; }
 final double RX10_TEMP58 = Program . getRefArrayValue2double ( forceChargeX , RX10_TEMP50 ) ; final double X10_TEMP38 = ( RX10_TEMP58 ) ; final double X10_TEMP40 = ( mx * X10_TEMP38 ) ; final double X10_TEMP42 = ( X10_TEMP39 + X10_TEMP40 ) ; final double X10_TEMP44 = ( my * X10_TEMP42 ) ; final double X10_TEMP46 = ( X10_TEMP43 + X10_TEMP44 ) ; final double ax = ( X10_TEMP46 ) ; final int X10_TEMP48 = ( 1 ) ; final int X10_TEMP52 = ( y + X10_TEMP48 ) ; final int X10_TEMP50 = ( 1 ) ; final int X10_TEMP53 = ( x + X10_TEMP50 ) ; final Point2 RX10_TEMP59 = new Point2 ( X10_TEMP52 , X10_TEMP53 ) ; final Dist2 RX10_TEMP60 = forceChargeY . distValue ; final Region2 RX10_TEMP61 = RX10_TEMP60 . dReg ; final int RX10_TEMP62 = Program . searchPointInRegion2 ( RX10_TEMP61 , RX10_TEMP59 ) ; final int RX10_TEMP63 = 0 ; final boolean RX10_TEMP64 = RX10_TEMP62 < RX10_TEMP63 ; if ( RX10_TEMP64 ) { String RX10_TEMP65 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final place RX10_TEMP66 = Program . getPlaceFromDist2 ( RX10_TEMP60 , RX10_TEMP62 ) ; final place RX10_TEMP68 = here ; final boolean RX10_TEMP69 = RX10_TEMP66 != RX10_TEMP68 ; if ( RX10_TEMP69 ) { String RX10_TEMP67 = "Bad place access for array forceChargeY" ; throw new RuntimeException ( RX10_TEMP67 ) ; }
 final double RX10_TEMP70 = Program . getRefArrayValue2double ( forceChargeY , RX10_TEMP62 ) ; final double X10_TEMP54 = ( RX10_TEMP70 ) ; final double X10_TEMP60 = ( dx * X10_TEMP54 ) ; final int X10_TEMP55 = ( 1 ) ; final int X10_TEMP58 = ( y + X10_TEMP55 ) ; final Point2 RX10_TEMP71 = new Point2 ( X10_TEMP58 , x ) ; final Dist2 RX10_TEMP72 = forceChargeY . distValue ; final Region2 RX10_TEMP73 = RX10_TEMP72 . dReg ; final int RX10_TEMP74 = Program . searchPointInRegion2 ( RX10_TEMP73 , RX10_TEMP71 ) ; final int RX10_TEMP75 = 0 ; final boolean RX10_TEMP76 = RX10_TEMP74 < RX10_TEMP75 ; if ( RX10_TEMP76 ) { String RX10_TEMP77 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP77 ) ; }
 final place RX10_TEMP78 = Program . getPlaceFromDist2 ( RX10_TEMP72 , RX10_TEMP74 ) ; final place RX10_TEMP80 = here ; final boolean RX10_TEMP81 = RX10_TEMP78 != RX10_TEMP80 ; if ( RX10_TEMP81 ) { String RX10_TEMP79 = "Bad place access for array forceChargeY" ; throw new RuntimeException ( RX10_TEMP79 ) ; }
 final double RX10_TEMP82 = Program . getRefArrayValue2double ( forceChargeY , RX10_TEMP74 ) ; final double X10_TEMP59 = ( RX10_TEMP82 ) ; final double X10_TEMP61 = ( mx * X10_TEMP59 ) ; final double X10_TEMP63 = ( X10_TEMP60 + X10_TEMP61 ) ; final double X10_TEMP76 = ( dy * X10_TEMP63 ) ; final int X10_TEMP65 = ( 1 ) ; final int X10_TEMP67 = ( x + X10_TEMP65 ) ; final Point2 RX10_TEMP83 = new Point2 ( y , X10_TEMP67 ) ; final Dist2 RX10_TEMP84 = forceChargeY . distValue ; final Region2 RX10_TEMP85 = RX10_TEMP84 . dReg ; final int RX10_TEMP86 = Program . searchPointInRegion2 ( RX10_TEMP85 , RX10_TEMP83 ) ; final int RX10_TEMP87 = 0 ; final boolean RX10_TEMP88 = RX10_TEMP86 < RX10_TEMP87 ; if ( RX10_TEMP88 ) { String RX10_TEMP89 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP89 ) ; }
 final place RX10_TEMP90 = Program . getPlaceFromDist2 ( RX10_TEMP84 , RX10_TEMP86 ) ; final place RX10_TEMP92 = here ; final boolean RX10_TEMP93 = RX10_TEMP90 != RX10_TEMP92 ; if ( RX10_TEMP93 ) { String RX10_TEMP91 = "Bad place access for array forceChargeY" ; throw new RuntimeException ( RX10_TEMP91 ) ; }
 final double RX10_TEMP94 = Program . getRefArrayValue2double ( forceChargeY , RX10_TEMP86 ) ; final double X10_TEMP68 = ( RX10_TEMP94 ) ; final double X10_TEMP72 = ( dx * X10_TEMP68 ) ; final Point2 RX10_TEMP95 = new Point2 ( y , x ) ; final Dist2 RX10_TEMP96 = forceChargeY . distValue ; final Region2 RX10_TEMP97 = RX10_TEMP96 . dReg ; final int RX10_TEMP98 = Program . searchPointInRegion2 ( RX10_TEMP97 , RX10_TEMP95 ) ; final int RX10_TEMP99 = 0 ; final boolean RX10_TEMP100 = RX10_TEMP98 < RX10_TEMP99 ; if ( RX10_TEMP100 ) { String RX10_TEMP101 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP101 ) ; }
 final place RX10_TEMP102 = Program . getPlaceFromDist2 ( RX10_TEMP96 , RX10_TEMP98 ) ; final place RX10_TEMP104 = here ; final boolean RX10_TEMP105 = RX10_TEMP102 != RX10_TEMP104 ; if ( RX10_TEMP105 ) { String RX10_TEMP103 = "Bad place access for array forceChargeY" ; throw new RuntimeException ( RX10_TEMP103 ) ; }
 final double RX10_TEMP106 = Program . getRefArrayValue2double ( forceChargeY , RX10_TEMP98 ) ; final double X10_TEMP71 = ( RX10_TEMP106 ) ; final double X10_TEMP73 = ( mx * X10_TEMP71 ) ; final double X10_TEMP75 = ( X10_TEMP72 + X10_TEMP73 ) ; final double X10_TEMP77 = ( my * X10_TEMP75 ) ; final double X10_TEMP79 = ( X10_TEMP76 + X10_TEMP77 ) ; final double ay = ( X10_TEMP79 ) ; final double X10_TEMP81 = ( Program . Particle_getXVel ( p ) ) ; final double X10_TEMP82 = ( quantum * ax ) ; double vx = ( X10_TEMP81 + X10_TEMP82 ) ; final double X10_TEMP84 = ( Program . Particle_getYVel ( p ) ) ; final double X10_TEMP85 = ( quantum * ay ) ; double vy = ( X10_TEMP84 + X10_TEMP85 ) ; final double X10_TEMP87 = ( Program . Particle_getX ( p ) ) ; final double X10_TEMP88 = ( vx * _LinearESOpenPIC2D_DELTA_TIME ) ; double nx = ( X10_TEMP87 + X10_TEMP88 ) ; final double X10_TEMP90 = ( Program . Particle_getY ( p ) ) ; final double X10_TEMP91 = ( vy * _LinearESOpenPIC2D_DELTA_TIME ) ; double ny = ( X10_TEMP90 + X10_TEMP91 ) ; final double X10_TEMP94 = ( Program . Particle_getXVel ( p ) ) ; final double X10_TEMP97 = ( vx + X10_TEMP94 ) ; final int X10_TEMP98 = ( 2 ) ; final double X10_TEMP104 = ( Math . pow ( X10_TEMP97 , X10_TEMP98 ) ) ; final double X10_TEMP99 = ( Program . Particle_getYVel ( p ) ) ; final double X10_TEMP102 = ( vy + X10_TEMP99 ) ; final int X10_TEMP103 = ( 2 ) ; final double X10_TEMP105 = ( Math . pow ( X10_TEMP102 , X10_TEMP103 ) ) ; final double X10_TEMP107 = ( X10_TEMP104 + X10_TEMP105 ) ; final double X10_TEMP109 = ( X10_TEMP107 ) ; final Dist1 RX10_TEMP107 = energy . distValue ; final Region1 RX10_TEMP108 = RX10_TEMP107 . dReg ; final int RX10_TEMP109 = Program . searchPointInRegion1 ( RX10_TEMP108 , pt ) ; final int RX10_TEMP110 = 0 ; final boolean RX10_TEMP111 = RX10_TEMP109 < RX10_TEMP110 ; if ( RX10_TEMP111 ) { String RX10_TEMP112 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP112 ) ; }
 final place RX10_TEMP113 = Program . getPlaceFromDist1 ( RX10_TEMP107 , RX10_TEMP109 ) ; final place RX10_TEMP115 = here ; final boolean RX10_TEMP116 = RX10_TEMP113 != RX10_TEMP115 ; if ( RX10_TEMP116 ) { String RX10_TEMP114 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP114 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP109 , X10_TEMP109 ) ; final int X10_TEMP112 = 1 ; final int X10_TEMP122 = 2 ; final int X10_TEMP133 = 3 ; switch ( _LinearESOpenPIC2D_BOUNDARY_CONDITION ) { case X10_TEMP112 : { final boolean X10_TEMP114 = nx < edgelx ; if ( X10_TEMP114 ) { final double X10_TEMP116 = ( nx + edgerx ) ; nx = ( X10_TEMP116 ) ; }
 final boolean X10_TEMP118 = nx >= edgerx ; if ( X10_TEMP118 ) { final double X10_TEMP120 = ( nx - edgerx ) ; nx = ( X10_TEMP120 ) ; }
 break ; }
 case X10_TEMP122 : { final boolean X10_TEMP123 = ( ny < edgely ) ; final boolean X10_TEMP124 = ( ny >= edgery ) ; final boolean X10_TEMP126 = X10_TEMP123 || X10_TEMP124 ; if ( X10_TEMP126 ) { final double X10_TEMP128 = ( Program . Particle_getY ( p ) ) ; ny = ( X10_TEMP128 ) ; final int X10_TEMP129 = 0 ; final double X10_TEMP131 = ( X10_TEMP129 - vy ) ; vy = ( X10_TEMP131 ) ; }
 }
 case X10_TEMP133 : { final boolean X10_TEMP134 = ( nx < edgelx ) ; final boolean X10_TEMP135 = ( nx >= edgerx ) ; final boolean X10_TEMP137 = X10_TEMP134 || X10_TEMP135 ; if ( X10_TEMP137 ) { final double X10_TEMP139 = ( Program . Particle_getX ( p ) ) ; nx = ( X10_TEMP139 ) ; final int X10_TEMP140 = 0 ; final double X10_TEMP142 = ( X10_TEMP140 - vx ) ; vx = ( X10_TEMP142 ) ; }
 break ; }
 } final Particle X10_TEMP149 = ( new Particle ( nx , ny , vx , vy ) ) ; final Particle X10_TEMP150 = ( X10_TEMP149 ) ; final Dist1 RX10_TEMP117 = particles . distValue ; final Region1 RX10_TEMP118 = RX10_TEMP117 . dReg ; final int RX10_TEMP119 = Program . searchPointInRegion1 ( RX10_TEMP118 , pt ) ; final int RX10_TEMP120 = 0 ; final boolean RX10_TEMP121 = RX10_TEMP119 < RX10_TEMP120 ; if ( RX10_TEMP121 ) { String RX10_TEMP122 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP122 ) ; }
 final place RX10_TEMP123 = Program . getPlaceFromDist1 ( RX10_TEMP117 , RX10_TEMP119 ) ; final place RX10_TEMP125 = here ; final boolean RX10_TEMP126 = RX10_TEMP123 != RX10_TEMP125 ; if ( RX10_TEMP126 ) { String RX10_TEMP124 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP124 ) ; }
 Program . setRefArrayValue1Particle ( particles , RX10_TEMP119 , X10_TEMP150 ) ; }
 public static intRefArray1 LinearESOpenPIC2D_countParticles ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles , final Dist2 dField ) { final int X10_TEMP3 = ( 0 ) ; final Dist1 dCount = Program . X10Util_get2DDistRank ( dField , X10_TEMP3 ) ; final Region1 RX10_TEMP0 = dCount . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP6 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dCount , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T115 utmp115 = new T115(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {Program.thread115(utmp115); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP17 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final intStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final intRefArray1 RX10_TEMP20 = new intRefArray1 ( dCount , RX10_TEMP17 ) ; final intRefArray1 count = RX10_TEMP20 ; finish { final Dist1 X10_TEMP9 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP22 = X10_TEMP9 . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; final Region1 RX10_TEMP27 = X10_TEMP9 . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , pl ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point pl not found in the distribution X10_TEMP9." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( X10_TEMP9 , RX10_TEMP28 ) ; final place X10_TEMP10 = RX10_TEMP32 ; 
 final T116 utmp116 = new T116(count, particles);
 async (X10_TEMP10) {Program.thread116(utmp116); }
 }
 }
 return count ; }
 public static Dist2 LinearESOpenPIC2D_repartition ( final LinearESOpenPIC2D X10_TEMP0 , final intRefArray1 particleCount , final Dist2 dField , final double countAve ) { final int MAX = ( 1024 ) ; final Dist1 X10_TEMP2 = Program . getUniqueDist ( ) ; final Dist1 dUnique = X10_TEMP2 ; final int X10_TEMP6 = ( 0 ) ; final Dist1 dGrids = Program . X10Util_get2DDistRank ( dField , X10_TEMP6 ) ; final Region2 RX10_TEMP0 = dField . dReg ; final Region2 rField = RX10_TEMP0 ; final int X10_TEMP11 = ( 1 ) ; final Region1 rRows = Program . X10Util_getRank2D ( rField , X10_TEMP11 ) ; final Region1 RX10_TEMP1 = dUnique . dReg ; final int RX10_TEMP2 = 0 ; final int RX10_TEMP3 = 1 ; int RX10_TEMP4 = place.MAX_PLACES ; RX10_TEMP4 = RX10_TEMP4 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP4 ] ; final dist ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP4 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP7 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP6 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP5 ) { final place RX10_TEMP9 = here ; final int RX10_TEMP10 = RX10_TEMP8 [0] ; final place RX10_TEMP11 = place.places ( RX10_TEMP10 ) ; final int RX10_TEMP12 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP10 ) ; final int RX10_TEMP13 = RX10_TEMP12 - RX10_TEMP3 ; 
 final T117 utmp117 = new T117(RX10_TEMP13, RX10_TEMP9, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP11) {Program.thread117(utmp117); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP18 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP5 ] ( point ( : rank==1 ) RX10_TEMP20 ) { final doubleStub RX10_TEMP19 = RX10_TEMP7 [ RX10_TEMP20 ] ; return RX10_TEMP19 ; }
 ) ; final doubleRefArray1 RX10_TEMP21 = new doubleRefArray1 ( dUnique , RX10_TEMP18 ) ; final doubleRefArray1 border = RX10_TEMP21 ; final Region1 RX10_TEMP22 = dUnique . dReg ; final int RX10_TEMP23 = 0 ; final int RX10_TEMP24 = 1 ; int RX10_TEMP25 = place.MAX_PLACES ; RX10_TEMP25 = RX10_TEMP25 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP25 ] ; final dist ( : rank==1 ) RX10_TEMP27 = [ 0 : RX10_TEMP25 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP28 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP27 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP29 : RX10_TEMP26 ) { final place RX10_TEMP30 = here ; final int RX10_TEMP31 = RX10_TEMP29 [0] ; final place RX10_TEMP32 = place.places ( RX10_TEMP31 ) ; final int RX10_TEMP33 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP31 ) ; final int RX10_TEMP34 = RX10_TEMP33 - RX10_TEMP24 ; 
 final T118 utmp118 = new T118(RX10_TEMP34, RX10_TEMP30, RX10_TEMP29, RX10_TEMP28);
 async (RX10_TEMP32) {Program.thread118(utmp118); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP39 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP26 ] ( point ( : rank==1 ) RX10_TEMP41 ) { final intStub RX10_TEMP40 = RX10_TEMP28 [ RX10_TEMP41 ] ; return RX10_TEMP40 ; }
 ) ; final intRefArray1 RX10_TEMP42 = new intRefArray1 ( dUnique , RX10_TEMP39 ) ; final intRefArray1 particleTotals = RX10_TEMP42 ; final Region1 RX10_TEMP43 = dUnique . dReg ; final int RX10_TEMP44 = 0 ; final int RX10_TEMP45 = 1 ; int RX10_TEMP46 = place.MAX_PLACES ; RX10_TEMP46 = RX10_TEMP46 - RX10_TEMP45 ; final region ( : rank==1 ) RX10_TEMP47 = [ 0 : RX10_TEMP46 ] ; final dist ( : rank==1 ) RX10_TEMP48 = [ 0 : RX10_TEMP46 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP49 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP48 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP50 : RX10_TEMP47 ) { final place RX10_TEMP51 = here ; final int RX10_TEMP52 = RX10_TEMP50 [0] ; final place RX10_TEMP53 = place.places ( RX10_TEMP52 ) ; final int RX10_TEMP54 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP52 ) ; final int RX10_TEMP55 = RX10_TEMP54 - RX10_TEMP45 ; 
 final T119 utmp119 = new T119(RX10_TEMP55, RX10_TEMP51, RX10_TEMP50, RX10_TEMP49);
 async (RX10_TEMP53) {Program.thread119(utmp119); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP60 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP47 ] ( point ( : rank==1 ) RX10_TEMP62 ) { final intStub RX10_TEMP61 = RX10_TEMP49 [ RX10_TEMP62 ] ; return RX10_TEMP61 ; }
 ) ; final intRefArray1 RX10_TEMP63 = new intRefArray1 ( dUnique , RX10_TEMP60 ) ; final intRefArray1 gridTotals = RX10_TEMP63 ; final Dist1 X10_TEMP22 = Program . getUniqueDist ( ) ; final int X10_TEMP27 = ( 0 ) ; final int X10_TEMP25 = ( 1 ) ; final int X10_TEMP28 = ( MAX - X10_TEMP25 ) ; final Region1 X10_TEMP30 = Program . createNewRegion1R ( X10_TEMP27 , X10_TEMP28 ) ; final Dist2 dBuffer = Program . X10Util_extendDistRank2D ( X10_TEMP22 , X10_TEMP30 ) ; final Region2 RX10_TEMP64 = dBuffer . dReg ; final int RX10_TEMP65 = 0 ; final int RX10_TEMP66 = 1 ; int RX10_TEMP67 = place.MAX_PLACES ; RX10_TEMP67 = RX10_TEMP67 - RX10_TEMP66 ; final region ( : rank==1 ) RX10_TEMP68 = [ 0 : RX10_TEMP67 ] ; final dist ( : rank==1 ) RX10_TEMP69 = [ 0 : RX10_TEMP67 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP70 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP69 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP71 : RX10_TEMP68 ) { final place RX10_TEMP72 = here ; final int RX10_TEMP73 = RX10_TEMP71 [0] ; final place RX10_TEMP74 = place.places ( RX10_TEMP73 ) ; final int RX10_TEMP75 = Program . getDistLocalCount2 ( dBuffer , RX10_TEMP73 ) ; final int RX10_TEMP76 = RX10_TEMP75 - RX10_TEMP66 ; 
 final T120 utmp120 = new T120(RX10_TEMP76, RX10_TEMP72, RX10_TEMP71, RX10_TEMP70);
 async (RX10_TEMP74) {Program.thread120(utmp120); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP80 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP68 ] ( point ( : rank==1 ) RX10_TEMP82 ) { final intStub RX10_TEMP81 = RX10_TEMP70 [ RX10_TEMP82 ] ; return RX10_TEMP81 ; }
 ) ; final intRefArray2 RX10_TEMP83 = new intRefArray2 ( dBuffer , RX10_TEMP80 ) ; final intRefArray2 sCountBuffer = RX10_TEMP83 ; final Region2 RX10_TEMP84 = dBuffer . dReg ; final int RX10_TEMP85 = 0 ; final int RX10_TEMP86 = 1 ; int RX10_TEMP87 = place.MAX_PLACES ; RX10_TEMP87 = RX10_TEMP87 - RX10_TEMP86 ; final region ( : rank==1 ) RX10_TEMP88 = [ 0 : RX10_TEMP87 ] ; final dist ( : rank==1 ) RX10_TEMP89 = [ 0 : RX10_TEMP87 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP90 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP89 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP91 : RX10_TEMP88 ) { final place RX10_TEMP92 = here ; final int RX10_TEMP93 = RX10_TEMP91 [0] ; final place RX10_TEMP94 = place.places ( RX10_TEMP93 ) ; final int RX10_TEMP95 = Program . getDistLocalCount2 ( dBuffer , RX10_TEMP93 ) ; final int RX10_TEMP96 = RX10_TEMP95 - RX10_TEMP86 ; 
 final T121 utmp121 = new T121(RX10_TEMP96, RX10_TEMP92, RX10_TEMP91, RX10_TEMP90);
 async (RX10_TEMP94) {Program.thread121(utmp121); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP100 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP88 ] ( point ( : rank==1 ) RX10_TEMP102 ) { final intStub RX10_TEMP101 = RX10_TEMP90 [ RX10_TEMP102 ] ; return RX10_TEMP101 ; }
 ) ; final intRefArray2 RX10_TEMP103 = new intRefArray2 ( dBuffer , RX10_TEMP100 ) ; final intRefArray2 rCountBuffer = RX10_TEMP103 ; final Region1 RX10_TEMP104 = dUnique . dReg ; final int RX10_TEMP105 = 0 ; final int RX10_TEMP106 = 1 ; int RX10_TEMP107 = place.MAX_PLACES ; RX10_TEMP107 = RX10_TEMP107 - RX10_TEMP106 ; final region ( : rank==1 ) RX10_TEMP108 = [ 0 : RX10_TEMP107 ] ; final dist ( : rank==1 ) RX10_TEMP109 = [ 0 : RX10_TEMP107 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP110 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP109 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP111 : RX10_TEMP108 ) { final place RX10_TEMP112 = here ; final int RX10_TEMP113 = RX10_TEMP111 [0] ; final place RX10_TEMP114 = place.places ( RX10_TEMP113 ) ; final int RX10_TEMP115 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP113 ) ; final int RX10_TEMP116 = RX10_TEMP115 - RX10_TEMP106 ; 
 final T122 utmp122 = new T122(RX10_TEMP116, RX10_TEMP112, RX10_TEMP111, RX10_TEMP110);
 async (RX10_TEMP114) {Program.thread122(utmp122); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP120 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP108 ] ( point ( : rank==1 ) RX10_TEMP122 ) { final intStub RX10_TEMP121 = RX10_TEMP110 [ RX10_TEMP122 ] ; return RX10_TEMP121 ; }
 ) ; final intRefArray1 RX10_TEMP123 = new intRefArray1 ( dUnique , RX10_TEMP120 ) ; final intRefArray1 sendCount = RX10_TEMP123 ; final Region1 RX10_TEMP124 = dUnique . dReg ; final int RX10_TEMP125 = 0 ; final int RX10_TEMP126 = 1 ; int RX10_TEMP127 = place.MAX_PLACES ; RX10_TEMP127 = RX10_TEMP127 - RX10_TEMP126 ; final region ( : rank==1 ) RX10_TEMP128 = [ 0 : RX10_TEMP127 ] ; final dist ( : rank==1 ) RX10_TEMP129 = [ 0 : RX10_TEMP127 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP130 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP129 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP131 : RX10_TEMP128 ) { final place RX10_TEMP132 = here ; final int RX10_TEMP133 = RX10_TEMP131 [0] ; final place RX10_TEMP134 = place.places ( RX10_TEMP133 ) ; final int RX10_TEMP135 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP133 ) ; final int RX10_TEMP136 = RX10_TEMP135 - RX10_TEMP126 ; 
 final T123 utmp123 = new T123(RX10_TEMP136, RX10_TEMP132, RX10_TEMP131, RX10_TEMP130);
 async (RX10_TEMP134) {Program.thread123(utmp123); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP140 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP128 ] ( point ( : rank==1 ) RX10_TEMP142 ) { final intStub RX10_TEMP141 = RX10_TEMP130 [ RX10_TEMP142 ] ; return RX10_TEMP141 ; }
 ) ; final intRefArray1 RX10_TEMP143 = new intRefArray1 ( dUnique , RX10_TEMP140 ) ; final intRefArray1 sendGrids = RX10_TEMP143 ; final Region1 RX10_TEMP144 = dUnique . dReg ; final int RX10_TEMP145 = 0 ; final int RX10_TEMP146 = 1 ; int RX10_TEMP147 = place.MAX_PLACES ; RX10_TEMP147 = RX10_TEMP147 - RX10_TEMP146 ; final region ( : rank==1 ) RX10_TEMP148 = [ 0 : RX10_TEMP147 ] ; final dist ( : rank==1 ) RX10_TEMP149 = [ 0 : RX10_TEMP147 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP150 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP149 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP151 : RX10_TEMP148 ) { final place RX10_TEMP152 = here ; final int RX10_TEMP153 = RX10_TEMP151 [0] ; final place RX10_TEMP154 = place.places ( RX10_TEMP153 ) ; final int RX10_TEMP155 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP153 ) ; final int RX10_TEMP156 = RX10_TEMP155 - RX10_TEMP146 ; 
 final T124 utmp124 = new T124(RX10_TEMP156, RX10_TEMP152, RX10_TEMP151, RX10_TEMP150);
 async (RX10_TEMP154) {Program.thread124(utmp124); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP160 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP148 ] ( point ( : rank==1 ) RX10_TEMP162 ) { final intStub RX10_TEMP161 = RX10_TEMP150 [ RX10_TEMP162 ] ; return RX10_TEMP161 ; }
 ) ; final intRefArray1 RX10_TEMP163 = new intRefArray1 ( dUnique , RX10_TEMP160 ) ; final intRefArray1 recvCount = RX10_TEMP163 ; final Region1 RX10_TEMP164 = dUnique . dReg ; final int RX10_TEMP165 = 0 ; final int RX10_TEMP166 = 1 ; int RX10_TEMP167 = place.MAX_PLACES ; RX10_TEMP167 = RX10_TEMP167 - RX10_TEMP166 ; final region ( : rank==1 ) RX10_TEMP168 = [ 0 : RX10_TEMP167 ] ; final dist ( : rank==1 ) RX10_TEMP169 = [ 0 : RX10_TEMP167 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP170 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP169 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP171 : RX10_TEMP168 ) { final place RX10_TEMP172 = here ; final int RX10_TEMP173 = RX10_TEMP171 [0] ; final place RX10_TEMP174 = place.places ( RX10_TEMP173 ) ; final int RX10_TEMP175 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP173 ) ; final int RX10_TEMP176 = RX10_TEMP175 - RX10_TEMP166 ; 
 final T125 utmp125 = new T125(RX10_TEMP176, RX10_TEMP172, RX10_TEMP171, RX10_TEMP170);
 async (RX10_TEMP174) {Program.thread125(utmp125); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP180 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP168 ] ( point ( : rank==1 ) RX10_TEMP182 ) { final intStub RX10_TEMP181 = RX10_TEMP170 [ RX10_TEMP182 ] ; return RX10_TEMP181 ; }
 ) ; final intRefArray1 RX10_TEMP183 = new intRefArray1 ( dUnique , RX10_TEMP180 ) ; final intRefArray1 recvGrids = RX10_TEMP183 ; final Region1 RX10_TEMP184 = dUnique . dReg ; final int RX10_TEMP185 = 0 ; final int RX10_TEMP186 = 1 ; int RX10_TEMP187 = place.MAX_PLACES ; RX10_TEMP187 = RX10_TEMP187 - RX10_TEMP186 ; final region ( : rank==1 ) RX10_TEMP188 = [ 0 : RX10_TEMP187 ] ; final dist ( : rank==1 ) RX10_TEMP189 = [ 0 : RX10_TEMP187 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP190 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP189 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP191 : RX10_TEMP188 ) { final place RX10_TEMP192 = here ; final int RX10_TEMP193 = RX10_TEMP191 [0] ; final place RX10_TEMP194 = place.places ( RX10_TEMP193 ) ; final int RX10_TEMP195 = Program . getDistLocalCount1 ( dUnique , RX10_TEMP193 ) ; final int RX10_TEMP196 = RX10_TEMP195 - RX10_TEMP186 ; 
 final T126 utmp126 = new T126(RX10_TEMP196, RX10_TEMP192, RX10_TEMP191, RX10_TEMP190);
 async (RX10_TEMP194) {Program.thread126(utmp126); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP201 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP188 ] ( point ( : rank==1 ) RX10_TEMP203 ) { final intStub RX10_TEMP202 = RX10_TEMP190 [ RX10_TEMP203 ] ; return RX10_TEMP202 ; }
 ) ; final intRefArray1 RX10_TEMP204 = new intRefArray1 ( dUnique , RX10_TEMP201 ) ; final intRefArray1 finished = RX10_TEMP204 ; finish { final Dist1 X10_TEMP42 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP206 = X10_TEMP42 . dReg ; final int RX10_TEMP209 = 1 ; int RX10_TEMP207 = RX10_TEMP206 . regSize ; RX10_TEMP207 = RX10_TEMP207 - RX10_TEMP209 ; final region ( : rank==1 ) RX10_TEMP208 = [ 0 : RX10_TEMP207 ] ; for ( point ( : rank==1 ) RX10_TEMP205 : RX10_TEMP208 ) { final int RX10_TEMP210 = RX10_TEMP205 [0] ; final Point1 X10_TEMP43 = Program . regionOrdinalPoint1 ( RX10_TEMP206 , RX10_TEMP210 ) ; final int pl = X10_TEMP43 . f0 ; final Region1 RX10_TEMP211 = X10_TEMP42 . dReg ; final int RX10_TEMP212 = Program . searchPointInRegion1 ( RX10_TEMP211 , X10_TEMP43 ) ; final int RX10_TEMP213 = 0 ; final boolean RX10_TEMP214 = RX10_TEMP212 < RX10_TEMP213 ; if ( RX10_TEMP214 ) { final String RX10_TEMP215 = "Point X10_TEMP43 not found in the distribution X10_TEMP42." ; throw new RuntimeException ( RX10_TEMP215 ) ; }
 final place RX10_TEMP216 = Program . getPlaceFromDist1 ( X10_TEMP42 , RX10_TEMP212 ) ; final place X10_TEMP44 = RX10_TEMP216 ; 
 final T127 utmp127 = new T127(pl, recvGrids, recvCount, sendGrids, sendCount, sCountBuffer, gridTotals, particleTotals, particleCount);
 async (X10_TEMP44) {Program.thread127(utmp127); }
 }
 }
 final intRefArray1 runningPTotals = Program . LinearESOpenPIC2D_parallelPrefix ( X10_TEMP0 , particleTotals ) ; final intRefArray1 runningGTotals = Program . LinearESOpenPIC2D_parallelPrefix ( X10_TEMP0 , gridTotals ) ; finish { final Dist1 X10_TEMP96 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP320 = X10_TEMP96 . dReg ; final int RX10_TEMP323 = 1 ; int RX10_TEMP321 = RX10_TEMP320 . regSize ; RX10_TEMP321 = RX10_TEMP321 - RX10_TEMP323 ; final region ( : rank==1 ) RX10_TEMP322 = [ 0 : RX10_TEMP321 ] ; for ( point ( : rank==1 ) RX10_TEMP319 : RX10_TEMP322 ) { final int RX10_TEMP324 = RX10_TEMP319 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP320 , RX10_TEMP324 ) ; final Region1 RX10_TEMP325 = X10_TEMP96 . dReg ; final int RX10_TEMP326 = Program . searchPointInRegion1 ( RX10_TEMP325 , pl ) ; final int RX10_TEMP327 = 0 ; final boolean RX10_TEMP328 = RX10_TEMP326 < RX10_TEMP327 ; if ( RX10_TEMP328 ) { final String RX10_TEMP329 = "Point pl not found in the distribution X10_TEMP96." ; throw new RuntimeException ( RX10_TEMP329 ) ; }
 final place RX10_TEMP330 = Program . getPlaceFromDist1 ( X10_TEMP96 , RX10_TEMP326 ) ; final place X10_TEMP97 = RX10_TEMP330 ; 
 final T128 utmp128 = new T128(pl, runningGTotals, runningPTotals, gridTotals, particleTotals);
 async (X10_TEMP97) {Program.thread128(utmp128); }
 }
 }
 boolean X10_TEMP108 = false ; do { finish { final Dist1 X10_TEMP110 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP374 = X10_TEMP110 . dReg ; final int RX10_TEMP377 = 1 ; int RX10_TEMP375 = RX10_TEMP374 . regSize ; RX10_TEMP375 = RX10_TEMP375 - RX10_TEMP377 ; final region ( : rank==1 ) RX10_TEMP376 = [ 0 : RX10_TEMP375 ] ; for ( point ( : rank==1 ) RX10_TEMP373 : RX10_TEMP376 ) { final int RX10_TEMP378 = RX10_TEMP373 [0] ; final Point1 X10_TEMP111 = Program . regionOrdinalPoint1 ( RX10_TEMP374 , RX10_TEMP378 ) ; final int pl = X10_TEMP111 . f0 ; final Region1 RX10_TEMP379 = X10_TEMP110 . dReg ; final int RX10_TEMP380 = Program . searchPointInRegion1 ( RX10_TEMP379 , X10_TEMP111 ) ; final int RX10_TEMP381 = 0 ; final boolean RX10_TEMP382 = RX10_TEMP380 < RX10_TEMP381 ; if ( RX10_TEMP382 ) { final String RX10_TEMP383 = "Point X10_TEMP111 not found in the distribution X10_TEMP110." ; throw new RuntimeException ( RX10_TEMP383 ) ; }
 final place RX10_TEMP384 = Program . getPlaceFromDist1 ( X10_TEMP110 , RX10_TEMP380 ) ; final place X10_TEMP112 = RX10_TEMP384 ; 
 final T129 utmp129 = new T129(pl, runningPTotals, recvGrids, recvCount, sendGrids, sendCount, rCountBuffer, sCountBuffer, countAve);
 async (X10_TEMP112) {Program.thread129(utmp129); }
 }
 }
 finish { final Dist1 X10_TEMP169 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP502 = X10_TEMP169 . dReg ; final int RX10_TEMP505 = 1 ; int RX10_TEMP503 = RX10_TEMP502 . regSize ; RX10_TEMP503 = RX10_TEMP503 - RX10_TEMP505 ; final region ( : rank==1 ) RX10_TEMP504 = [ 0 : RX10_TEMP503 ] ; for ( point ( : rank==1 ) RX10_TEMP501 : RX10_TEMP504 ) { final int RX10_TEMP506 = RX10_TEMP501 [0] ; final Point1 X10_TEMP170 = Program . regionOrdinalPoint1 ( RX10_TEMP502 , RX10_TEMP506 ) ; final int pl = X10_TEMP170 . f0 ; final Region1 RX10_TEMP507 = X10_TEMP169 . dReg ; final int RX10_TEMP508 = Program . searchPointInRegion1 ( RX10_TEMP507 , X10_TEMP170 ) ; final int RX10_TEMP509 = 0 ; final boolean RX10_TEMP510 = RX10_TEMP508 < RX10_TEMP509 ; if ( RX10_TEMP510 ) { final String RX10_TEMP511 = "Point X10_TEMP170 not found in the distribution X10_TEMP169." ; throw new RuntimeException ( RX10_TEMP511 ) ; }
 final place RX10_TEMP512 = Program . getPlaceFromDist1 ( X10_TEMP169 , RX10_TEMP508 ) ; final place X10_TEMP171 = RX10_TEMP512 ; 
 final T130 utmp130 = new T130(pl, runningGTotals, runningPTotals, finished, recvGrids, recvCount, sendGrids, sendCount, rCountBuffer, sCountBuffer, border, countAve);
 async (X10_TEMP171) {Program.thread130(utmp130); }
 }
 }
 final int X10_TEMP356 = ( Program . intrefArraySum1 ( finished ) ) ; final int X10_TEMP357 = ( 0 ) ; X10_TEMP108 = X10_TEMP356 != X10_TEMP357 ; }
 while ( X10_TEMP108 ) ; finish { final Dist1 X10_TEMP360 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP939 = X10_TEMP360 . dReg ; final int RX10_TEMP942 = 1 ; int RX10_TEMP940 = RX10_TEMP939 . regSize ; RX10_TEMP940 = RX10_TEMP940 - RX10_TEMP942 ; final region ( : rank==1 ) RX10_TEMP941 = [ 0 : RX10_TEMP940 ] ; for ( point ( : rank==1 ) RX10_TEMP938 : RX10_TEMP941 ) { final int RX10_TEMP943 = RX10_TEMP938 [0] ; final Point1 X10_TEMP361 = Program . regionOrdinalPoint1 ( RX10_TEMP939 , RX10_TEMP943 ) ; final int pl = X10_TEMP361 . f0 ; final Region1 RX10_TEMP944 = X10_TEMP360 . dReg ; final int RX10_TEMP945 = Program . searchPointInRegion1 ( RX10_TEMP944 , X10_TEMP361 ) ; final int RX10_TEMP946 = 0 ; final boolean RX10_TEMP947 = RX10_TEMP945 < RX10_TEMP946 ; if ( RX10_TEMP947 ) { final String RX10_TEMP948 = "Point X10_TEMP361 not found in the distribution X10_TEMP360." ; throw new RuntimeException ( RX10_TEMP948 ) ; }
 final place RX10_TEMP949 = Program . getPlaceFromDist1 ( X10_TEMP360 , RX10_TEMP945 ) ; final place X10_TEMP362 = RX10_TEMP949 ; 
 final T131 utmp131 = new T131(pl, runningGTotals, runningPTotals, recvGrids, recvCount, sendGrids, sendCount, sCountBuffer, gridTotals, particleTotals, particleCount);
 async (X10_TEMP362) {Program.thread131(utmp131); }
 }
 }
 boolean X10_TEMP413 = false ; do { finish { final Dist1 X10_TEMP415 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1077 = X10_TEMP415 . dReg ; final int RX10_TEMP1080 = 1 ; int RX10_TEMP1078 = RX10_TEMP1077 . regSize ; RX10_TEMP1078 = RX10_TEMP1078 - RX10_TEMP1080 ; final region ( : rank==1 ) RX10_TEMP1079 = [ 0 : RX10_TEMP1078 ] ; for ( point ( : rank==1 ) RX10_TEMP1076 : RX10_TEMP1079 ) { final int RX10_TEMP1081 = RX10_TEMP1076 [0] ; final Point1 X10_TEMP416 = Program . regionOrdinalPoint1 ( RX10_TEMP1077 , RX10_TEMP1081 ) ; final int pl = X10_TEMP416 . f0 ; final Region1 RX10_TEMP1082 = X10_TEMP415 . dReg ; final int RX10_TEMP1083 = Program . searchPointInRegion1 ( RX10_TEMP1082 , X10_TEMP416 ) ; final int RX10_TEMP1084 = 0 ; final boolean RX10_TEMP1085 = RX10_TEMP1083 < RX10_TEMP1084 ; if ( RX10_TEMP1085 ) { final String RX10_TEMP1086 = "Point X10_TEMP416 not found in the distribution X10_TEMP415." ; throw new RuntimeException ( RX10_TEMP1086 ) ; }
 final place RX10_TEMP1087 = Program . getPlaceFromDist1 ( X10_TEMP415 , RX10_TEMP1083 ) ; final place X10_TEMP417 = RX10_TEMP1087 ; 
 final T132 utmp132 = new T132(pl, runningPTotals, recvGrids, recvCount, sendGrids, sendCount, rCountBuffer, sCountBuffer, countAve);
 async (X10_TEMP417) {Program.thread132(utmp132); }
 }
 }
 finish { final Dist1 X10_TEMP485 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1217 = X10_TEMP485 . dReg ; final int RX10_TEMP1220 = 1 ; int RX10_TEMP1218 = RX10_TEMP1217 . regSize ; RX10_TEMP1218 = RX10_TEMP1218 - RX10_TEMP1220 ; final region ( : rank==1 ) RX10_TEMP1219 = [ 0 : RX10_TEMP1218 ] ; for ( point ( : rank==1 ) RX10_TEMP1216 : RX10_TEMP1219 ) { final int RX10_TEMP1221 = RX10_TEMP1216 [0] ; final Point1 X10_TEMP486 = Program . regionOrdinalPoint1 ( RX10_TEMP1217 , RX10_TEMP1221 ) ; final int pl = X10_TEMP486 . f0 ; final Region1 RX10_TEMP1222 = X10_TEMP485 . dReg ; final int RX10_TEMP1223 = Program . searchPointInRegion1 ( RX10_TEMP1222 , X10_TEMP486 ) ; final int RX10_TEMP1224 = 0 ; final boolean RX10_TEMP1225 = RX10_TEMP1223 < RX10_TEMP1224 ; if ( RX10_TEMP1225 ) { final String RX10_TEMP1226 = "Point X10_TEMP486 not found in the distribution X10_TEMP485." ; throw new RuntimeException ( RX10_TEMP1226 ) ; }
 final place RX10_TEMP1227 = Program . getPlaceFromDist1 ( X10_TEMP485 , RX10_TEMP1223 ) ; final place X10_TEMP487 = RX10_TEMP1227 ; 
 final T133 utmp133 = new T133(pl, runningGTotals, runningPTotals, finished, recvGrids, recvCount, sendGrids, sendCount, rCountBuffer, sCountBuffer, border, countAve);
 async (X10_TEMP487) {Program.thread133(utmp133); }
 }
 }
 final int X10_TEMP622 = ( Program . intrefArraySum1 ( finished ) ) ; final int X10_TEMP623 = ( 0 ) ; X10_TEMP413 = X10_TEMP622 != X10_TEMP623 ; }
 while ( X10_TEMP413 ) ; final place pHere = ( here ) ; final int X10_TEMP628 = ( 0 ) ; final int X10_TEMP629 = ( place.MAX_PLACES ) ; final Region1 X10_TEMP630 = Program . createNewRegion1R ( X10_TEMP628 , X10_TEMP629 ) ; final place X10_TEMP631 = ( here ) ; final Dist1 dBounds = Program . getPlaceDist1 ( X10_TEMP630 , X10_TEMP631 ) ; final Region1 RX10_TEMP1558 = dBounds . dReg ; final int RX10_TEMP1559 = 0 ; final int RX10_TEMP1560 = 1 ; int RX10_TEMP1561 = place.MAX_PLACES ; RX10_TEMP1561 = RX10_TEMP1561 - RX10_TEMP1560 ; final region ( : rank==1 ) RX10_TEMP1562 = [ 0 : RX10_TEMP1561 ] ; final dist ( : rank==1 ) RX10_TEMP1563 = [ 0 : RX10_TEMP1561 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1564 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1563 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1565 : RX10_TEMP1562 ) { final place RX10_TEMP1566 = here ; final int RX10_TEMP1567 = RX10_TEMP1565 [0] ; final place RX10_TEMP1568 = place.places ( RX10_TEMP1567 ) ; final int RX10_TEMP1569 = Program . getDistLocalCount1 ( dBounds , RX10_TEMP1567 ) ; final int RX10_TEMP1570 = RX10_TEMP1569 - RX10_TEMP1560 ; 
 final T134 utmp134 = new T134(RX10_TEMP1570, RX10_TEMP1566, RX10_TEMP1565, RX10_TEMP1564);
 async (RX10_TEMP1568) {Program.thread134(utmp134); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1574 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1562 ] ( point ( : rank==1 ) RX10_TEMP1576 ) { final intStub RX10_TEMP1575 = RX10_TEMP1564 [ RX10_TEMP1576 ] ; return RX10_TEMP1575 ; }
 ) ; final intRefArray1 RX10_TEMP1577 = new intRefArray1 ( dBounds , RX10_TEMP1574 ) ; final intRefArray1 lowerbounds = RX10_TEMP1577 ; final Region1 RX10_TEMP1578 = dBounds . dReg ; final int RX10_TEMP1579 = 0 ; final int RX10_TEMP1580 = 1 ; int RX10_TEMP1581 = place.MAX_PLACES ; RX10_TEMP1581 = RX10_TEMP1581 - RX10_TEMP1580 ; final region ( : rank==1 ) RX10_TEMP1582 = [ 0 : RX10_TEMP1581 ] ; final dist ( : rank==1 ) RX10_TEMP1583 = [ 0 : RX10_TEMP1581 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP1584 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP1583 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP1585 : RX10_TEMP1582 ) { final place RX10_TEMP1586 = here ; final int RX10_TEMP1587 = RX10_TEMP1585 [0] ; final place RX10_TEMP1588 = place.places ( RX10_TEMP1587 ) ; final int RX10_TEMP1589 = Program . getDistLocalCount1 ( dBounds , RX10_TEMP1587 ) ; final int RX10_TEMP1590 = RX10_TEMP1589 - RX10_TEMP1580 ; 
 final T135 utmp135 = new T135(RX10_TEMP1590, RX10_TEMP1586, RX10_TEMP1585, RX10_TEMP1584);
 async (RX10_TEMP1588) {Program.thread135(utmp135); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP1594 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP1582 ] ( point ( : rank==1 ) RX10_TEMP1596 ) { final intStub RX10_TEMP1595 = RX10_TEMP1584 [ RX10_TEMP1596 ] ; return RX10_TEMP1595 ; }
 ) ; final intRefArray1 RX10_TEMP1597 = new intRefArray1 ( dBounds , RX10_TEMP1594 ) ; final intRefArray1 upperbounds = RX10_TEMP1597 ; finish { final Dist1 X10_TEMP636 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1599 = X10_TEMP636 . dReg ; final int RX10_TEMP1602 = 1 ; int RX10_TEMP1600 = RX10_TEMP1599 . regSize ; RX10_TEMP1600 = RX10_TEMP1600 - RX10_TEMP1602 ; final region ( : rank==1 ) RX10_TEMP1601 = [ 0 : RX10_TEMP1600 ] ; for ( point ( : rank==1 ) RX10_TEMP1598 : RX10_TEMP1601 ) { final int RX10_TEMP1603 = RX10_TEMP1598 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1599 , RX10_TEMP1603 ) ; final Region1 RX10_TEMP1604 = X10_TEMP636 . dReg ; final int RX10_TEMP1605 = Program . searchPointInRegion1 ( RX10_TEMP1604 , pl ) ; final int RX10_TEMP1606 = 0 ; final boolean RX10_TEMP1607 = RX10_TEMP1605 < RX10_TEMP1606 ; if ( RX10_TEMP1607 ) { final String RX10_TEMP1608 = "Point pl not found in the distribution X10_TEMP636." ; throw new RuntimeException ( RX10_TEMP1608 ) ; }
 final place RX10_TEMP1609 = Program . getPlaceFromDist1 ( X10_TEMP636 , RX10_TEMP1605 ) ; final place X10_TEMP637 = RX10_TEMP1609 ; 
 final T136 utmp136 = new T136(pl, lowerbounds, pHere, border);
 async (X10_TEMP637) {Program.thread136(utmp136); }
 }
 }
 final int X10_TEMP652 = ( 0 ) ; final int X10_TEMP649 = ( place.MAX_PLACES ) ; final int X10_TEMP650 = ( 1 ) ; final int X10_TEMP653 = ( X10_TEMP649 - X10_TEMP650 ) ; final Region1 X10_TEMP655 = Program . createNewRegion1R ( X10_TEMP652 , X10_TEMP653 ) ; final int RX10_TEMP1634 = 1 ; int RX10_TEMP1632 = X10_TEMP655 . regSize ; RX10_TEMP1632 = RX10_TEMP1632 - RX10_TEMP1634 ; final region ( : rank==1 ) RX10_TEMP1633 = [ 0 : RX10_TEMP1632 ] ; for ( point ( : rank==1 ) RX10_TEMP1631 : RX10_TEMP1633 ) { final int RX10_TEMP1635 = RX10_TEMP1631 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( X10_TEMP655 , RX10_TEMP1635 ) ; final Dist1 RX10_TEMP1636 = lowerbounds . distValue ; final Region1 RX10_TEMP1637 = RX10_TEMP1636 . dReg ; final int RX10_TEMP1638 = Program . searchPointInRegion1 ( RX10_TEMP1637 , i ) ; final int RX10_TEMP1639 = 0 ; final boolean RX10_TEMP1640 = RX10_TEMP1638 < RX10_TEMP1639 ; if ( RX10_TEMP1640 ) { String RX10_TEMP1641 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1641 ) ; }
 final place RX10_TEMP1642 = Program . getPlaceFromDist1 ( RX10_TEMP1636 , RX10_TEMP1638 ) ; final place RX10_TEMP1644 = here ; final boolean RX10_TEMP1645 = RX10_TEMP1642 != RX10_TEMP1644 ; if ( RX10_TEMP1645 ) { String RX10_TEMP1643 = "Bad place access for array lowerbounds" ; throw new RuntimeException ( RX10_TEMP1643 ) ; }
 final int RX10_TEMP1646 = Program . getRefArrayValue1int ( lowerbounds , RX10_TEMP1638 ) ; final int lb = ( RX10_TEMP1646 ) ; final int X10_TEMP659 = ( i . f0 ) ; final int X10_TEMP660 = ( 1 ) ; final int X10_TEMP665 = ( X10_TEMP659 + X10_TEMP660 ) ; final int X10_TEMP662 = ( place.MAX_PLACES ) ; final int X10_TEMP663 = ( 1 ) ; final int X10_TEMP666 = ( X10_TEMP662 - X10_TEMP663 ) ; final Region1 X10_TEMP668 = Program . createNewRegion1R ( X10_TEMP665 , X10_TEMP666 ) ; final int RX10_TEMP1650 = 1 ; int RX10_TEMP1648 = X10_TEMP668 . regSize ; RX10_TEMP1648 = RX10_TEMP1648 - RX10_TEMP1650 ; final region ( : rank==1 ) RX10_TEMP1649 = [ 0 : RX10_TEMP1648 ] ; for ( point ( : rank==1 ) RX10_TEMP1647 : RX10_TEMP1649 ) { final int RX10_TEMP1651 = RX10_TEMP1647 [0] ; final Point1 j = Program . regionOrdinalPoint1 ( X10_TEMP668 , RX10_TEMP1651 ) ; final Dist1 RX10_TEMP1652 = lowerbounds . distValue ; final Region1 RX10_TEMP1653 = RX10_TEMP1652 . dReg ; final int RX10_TEMP1654 = Program . searchPointInRegion1 ( RX10_TEMP1653 , j ) ; final int RX10_TEMP1655 = 0 ; final boolean RX10_TEMP1656 = RX10_TEMP1654 < RX10_TEMP1655 ; if ( RX10_TEMP1656 ) { String RX10_TEMP1657 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1657 ) ; }
 final place RX10_TEMP1658 = Program . getPlaceFromDist1 ( RX10_TEMP1652 , RX10_TEMP1654 ) ; final place RX10_TEMP1660 = here ; final boolean RX10_TEMP1661 = RX10_TEMP1658 != RX10_TEMP1660 ; if ( RX10_TEMP1661 ) { String RX10_TEMP1659 = "Bad place access for array lowerbounds" ; throw new RuntimeException ( RX10_TEMP1659 ) ; }
 final int RX10_TEMP1662 = Program . getRefArrayValue1int ( lowerbounds , RX10_TEMP1654 ) ; final int X10_TEMP670 = ( RX10_TEMP1662 ) ; final boolean X10_TEMP672 = X10_TEMP670 <= lb ; if ( X10_TEMP672 ) { final int X10_TEMP674 = ( 1 ) ; final int X10_TEMP676 = ( lb + X10_TEMP674 ) ; final int X10_TEMP677 = ( X10_TEMP676 ) ; final Dist1 RX10_TEMP1663 = lowerbounds . distValue ; final Region1 RX10_TEMP1664 = RX10_TEMP1663 . dReg ; final int RX10_TEMP1665 = Program . searchPointInRegion1 ( RX10_TEMP1664 , j ) ; final int RX10_TEMP1666 = 0 ; final boolean RX10_TEMP1667 = RX10_TEMP1665 < RX10_TEMP1666 ; if ( RX10_TEMP1667 ) { String RX10_TEMP1668 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1668 ) ; }
 final place RX10_TEMP1669 = Program . getPlaceFromDist1 ( RX10_TEMP1663 , RX10_TEMP1665 ) ; final place RX10_TEMP1671 = here ; final boolean RX10_TEMP1672 = RX10_TEMP1669 != RX10_TEMP1671 ; if ( RX10_TEMP1672 ) { String RX10_TEMP1670 = "Bad place access for array lowerbounds" ; throw new RuntimeException ( RX10_TEMP1670 ) ; }
 Program . setRefArrayValue1int ( lowerbounds , RX10_TEMP1665 , X10_TEMP677 ) ; }
 }
 }
 final int X10_TEMP682 = ( 0 ) ; final int X10_TEMP679 = ( place.MAX_PLACES ) ; final int X10_TEMP680 = ( 2 ) ; final int X10_TEMP683 = ( X10_TEMP679 - X10_TEMP680 ) ; final Region1 X10_TEMP685 = Program . createNewRegion1R ( X10_TEMP682 , X10_TEMP683 ) ; final int RX10_TEMP1676 = 1 ; int RX10_TEMP1674 = X10_TEMP685 . regSize ; RX10_TEMP1674 = RX10_TEMP1674 - RX10_TEMP1676 ; final region ( : rank==1 ) RX10_TEMP1675 = [ 0 : RX10_TEMP1674 ] ; for ( point ( : rank==1 ) RX10_TEMP1673 : RX10_TEMP1675 ) { final int RX10_TEMP1677 = RX10_TEMP1673 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( X10_TEMP685 , RX10_TEMP1677 ) ; int X10_TEMP688 = ( 1 ) ; int RX10_TEMP1678 = i . f0 ; RX10_TEMP1678 = RX10_TEMP1678 + X10_TEMP688 ; final Point1 X10_TEMP690 = ( new Point1 ( RX10_TEMP1678 ) ) ; final Dist1 RX10_TEMP1679 = lowerbounds . distValue ; final Region1 RX10_TEMP1680 = RX10_TEMP1679 . dReg ; final int RX10_TEMP1681 = Program . searchPointInRegion1 ( RX10_TEMP1680 , X10_TEMP690 ) ; final int RX10_TEMP1682 = 0 ; final boolean RX10_TEMP1683 = RX10_TEMP1681 < RX10_TEMP1682 ; if ( RX10_TEMP1683 ) { String RX10_TEMP1684 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1684 ) ; }
 final place RX10_TEMP1685 = Program . getPlaceFromDist1 ( RX10_TEMP1679 , RX10_TEMP1681 ) ; final place RX10_TEMP1687 = here ; final boolean RX10_TEMP1688 = RX10_TEMP1685 != RX10_TEMP1687 ; if ( RX10_TEMP1688 ) { String RX10_TEMP1686 = "Bad place access for array lowerbounds" ; throw new RuntimeException ( RX10_TEMP1686 ) ; }
 final int RX10_TEMP1689 = Program . getRefArrayValue1int ( lowerbounds , RX10_TEMP1681 ) ; final int X10_TEMP691 = ( RX10_TEMP1689 ) ; final int X10_TEMP692 = ( 1 ) ; final int X10_TEMP694 = ( X10_TEMP691 - X10_TEMP692 ) ; final int X10_TEMP695 = ( X10_TEMP694 ) ; final Dist1 RX10_TEMP1690 = upperbounds . distValue ; final Region1 RX10_TEMP1691 = RX10_TEMP1690 . dReg ; final int RX10_TEMP1692 = Program . searchPointInRegion1 ( RX10_TEMP1691 , i ) ; final int RX10_TEMP1693 = 0 ; final boolean RX10_TEMP1694 = RX10_TEMP1692 < RX10_TEMP1693 ; if ( RX10_TEMP1694 ) { String RX10_TEMP1695 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1695 ) ; }
 final place RX10_TEMP1696 = Program . getPlaceFromDist1 ( RX10_TEMP1690 , RX10_TEMP1692 ) ; final place RX10_TEMP1698 = here ; final boolean RX10_TEMP1699 = RX10_TEMP1696 != RX10_TEMP1698 ; if ( RX10_TEMP1699 ) { String RX10_TEMP1697 = "Bad place access for array upperbounds" ; throw new RuntimeException ( RX10_TEMP1697 ) ; }
 Program . setRefArrayValue1int ( upperbounds , RX10_TEMP1692 , X10_TEMP695 ) ; }
 final int X10_TEMP696 = ( place.MAX_PLACES ) ; final int X10_TEMP697 = ( 1 ) ; final int X10_TEMP699 = ( X10_TEMP696 - X10_TEMP697 ) ; final int X10_TEMP700 = ( 1 ) ; final int X10_TEMP702 = ( _LinearESOpenPIC2D_YLENGTH - X10_TEMP700 ) ; final int X10_TEMP703 = ( X10_TEMP702 ) ; final Point1 RX10_TEMP1700 = new Point1 ( X10_TEMP699 ) ; final Dist1 RX10_TEMP1701 = upperbounds . distValue ; final Region1 RX10_TEMP1702 = RX10_TEMP1701 . dReg ; final int RX10_TEMP1703 = Program . searchPointInRegion1 ( RX10_TEMP1702 , RX10_TEMP1700 ) ; final int RX10_TEMP1704 = 0 ; final boolean RX10_TEMP1705 = RX10_TEMP1703 < RX10_TEMP1704 ; if ( RX10_TEMP1705 ) { String RX10_TEMP1706 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1706 ) ; }
 final place RX10_TEMP1707 = Program . getPlaceFromDist1 ( RX10_TEMP1701 , RX10_TEMP1703 ) ; final place RX10_TEMP1709 = here ; final boolean RX10_TEMP1710 = RX10_TEMP1707 != RX10_TEMP1709 ; if ( RX10_TEMP1710 ) { String RX10_TEMP1708 = "Bad place access for array upperbounds" ; throw new RuntimeException ( RX10_TEMP1708 ) ; }
 Program . setRefArrayValue1int ( upperbounds , RX10_TEMP1703 , X10_TEMP703 ) ; final int X10_TEMP704 = 0 ; final int X10_TEMP705 = 1 ; final int X10_TEMP706 = X10_TEMP704 - X10_TEMP705 ; final Region2 X10_TEMP707 = Program . createNewRegion2RR ( X10_TEMP704 , X10_TEMP706 , X10_TEMP704 , X10_TEMP706 ) ; final place X10_TEMP708 = ( here ) ; final Dist2 X10_TEMP710 = Program . getPlaceDist2 ( X10_TEMP707 , X10_TEMP708 ) ; Dist2 dResult = X10_TEMP710 ; final Dist1 X10_TEMP713 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1712 = X10_TEMP713 . dReg ; final int RX10_TEMP1715 = 1 ; int RX10_TEMP1713 = RX10_TEMP1712 . regSize ; RX10_TEMP1713 = RX10_TEMP1713 - RX10_TEMP1715 ; final region ( : rank==1 ) RX10_TEMP1714 = [ 0 : RX10_TEMP1713 ] ; for ( point ( : rank==1 ) RX10_TEMP1711 : RX10_TEMP1714 ) { final int RX10_TEMP1716 = RX10_TEMP1711 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1712 , RX10_TEMP1716 ) ; final Dist1 X10_TEMP714 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1717 = X10_TEMP714 . dReg ; final int RX10_TEMP1718 = Program . searchPointInRegion1 ( RX10_TEMP1717 , pl ) ; final int RX10_TEMP1719 = 0 ; final boolean RX10_TEMP1720 = RX10_TEMP1718 < RX10_TEMP1719 ; if ( RX10_TEMP1720 ) { final String RX10_TEMP1721 = "Point pl not found in the distribution X10_TEMP714." ; throw new RuntimeException ( RX10_TEMP1721 ) ; }
 final place RX10_TEMP1722 = Program . getPlaceFromDist1 ( X10_TEMP714 , RX10_TEMP1718 ) ; final place p = ( RX10_TEMP1722 ) ; final Dist1 RX10_TEMP1723 = lowerbounds . distValue ; final Region1 RX10_TEMP1724 = RX10_TEMP1723 . dReg ; final int RX10_TEMP1725 = Program . searchPointInRegion1 ( RX10_TEMP1724 , pl ) ; final int RX10_TEMP1726 = 0 ; final boolean RX10_TEMP1727 = RX10_TEMP1725 < RX10_TEMP1726 ; if ( RX10_TEMP1727 ) { String RX10_TEMP1728 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1728 ) ; }
 final place RX10_TEMP1729 = Program . getPlaceFromDist1 ( RX10_TEMP1723 , RX10_TEMP1725 ) ; final place RX10_TEMP1731 = here ; final boolean RX10_TEMP1732 = RX10_TEMP1729 != RX10_TEMP1731 ; if ( RX10_TEMP1732 ) { String RX10_TEMP1730 = "Bad place access for array lowerbounds" ; throw new RuntimeException ( RX10_TEMP1730 ) ; }
 final int RX10_TEMP1733 = Program . getRefArrayValue1int ( lowerbounds , RX10_TEMP1725 ) ; final int X10_TEMP721 = ( RX10_TEMP1733 ) ; final Dist1 RX10_TEMP1734 = upperbounds . distValue ; final Region1 RX10_TEMP1735 = RX10_TEMP1734 . dReg ; final int RX10_TEMP1736 = Program . searchPointInRegion1 ( RX10_TEMP1735 , pl ) ; final int RX10_TEMP1737 = 0 ; final boolean RX10_TEMP1738 = RX10_TEMP1736 < RX10_TEMP1737 ; if ( RX10_TEMP1738 ) { String RX10_TEMP1739 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1739 ) ; }
 final place RX10_TEMP1740 = Program . getPlaceFromDist1 ( RX10_TEMP1734 , RX10_TEMP1736 ) ; final place RX10_TEMP1742 = here ; final boolean RX10_TEMP1743 = RX10_TEMP1740 != RX10_TEMP1742 ; if ( RX10_TEMP1743 ) { String RX10_TEMP1741 = "Bad place access for array upperbounds" ; throw new RuntimeException ( RX10_TEMP1741 ) ; }
 final int RX10_TEMP1744 = Program . getRefArrayValue1int ( upperbounds , RX10_TEMP1736 ) ; final int X10_TEMP722 = ( RX10_TEMP1744 ) ; final Region2 X10_TEMP724 = Program . createNewRegion2RA ( X10_TEMP721 , X10_TEMP722 , rRows ) ; final Dist2 X10_TEMP726 = Program . getPlaceDist2 ( X10_TEMP724 , p ) ; final Dist2 X10_TEMP728 = Program . unionDist2 ( dResult , X10_TEMP726 ) ; dResult = ( X10_TEMP728 ) ; }
 return dResult ; }
 public static ParticleRefArray1 LinearESOpenPIC2D_sortParticles ( final LinearESOpenPIC2D X10_TEMP0 , final ParticleRefArray1 particles , final Dist2 dField ) { final Dist1 RX10_TEMP0 = particles . distValue ; final Dist1 dParticles = RX10_TEMP0 ; final Region1 RX10_TEMP1 = dParticles . dReg ; final int RX10_TEMP2 = 0 ; final int RX10_TEMP3 = 1 ; int RX10_TEMP4 = place.MAX_PLACES ; RX10_TEMP4 = RX10_TEMP4 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP4 ] ; final dist ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP4 ] -> here ; final ParticleStub [ : rank==1 ] RX10_TEMP7 = ( ParticleStub [ : rank==1 ] ) ( new ParticleStub [ RX10_TEMP6 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP5 ) { final place RX10_TEMP9 = here ; final int RX10_TEMP10 = RX10_TEMP8 [0] ; final place RX10_TEMP11 = place.places ( RX10_TEMP10 ) ; final int RX10_TEMP12 = Program . getDistLocalCount1 ( dParticles , RX10_TEMP10 ) ; final int RX10_TEMP13 = RX10_TEMP12 - RX10_TEMP3 ; 
 final T137 utmp137 = new T137(RX10_TEMP13, RX10_TEMP9, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP11) {Program.thread137(utmp137); }
 }
 }
 final ParticleStub value [ : rank==1 ] RX10_TEMP17 = ( ParticleStub value [ : rank==1 ] ) ( new ParticleStub value [ RX10_TEMP5 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final ParticleStub RX10_TEMP18 = RX10_TEMP7 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final ParticleRefArray1 RX10_TEMP20 = new ParticleRefArray1 ( dParticles , RX10_TEMP17 ) ; final ParticleRefArray1 result = RX10_TEMP20 ; final Region1 RX10_TEMP21 = dParticles . dReg ; final int RX10_TEMP22 = 0 ; final int RX10_TEMP23 = 1 ; int RX10_TEMP24 = place.MAX_PLACES ; RX10_TEMP24 = RX10_TEMP24 - RX10_TEMP23 ; final region ( : rank==1 ) RX10_TEMP25 = [ 0 : RX10_TEMP24 ] ; final dist ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP24 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP27 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP26 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP28 : RX10_TEMP25 ) { final place RX10_TEMP29 = here ; final int RX10_TEMP30 = RX10_TEMP28 [0] ; final place RX10_TEMP31 = place.places ( RX10_TEMP30 ) ; final int RX10_TEMP32 = Program . getDistLocalCount1 ( dParticles , RX10_TEMP30 ) ; final int RX10_TEMP33 = RX10_TEMP32 - RX10_TEMP23 ; 
 final T138 utmp138 = new T138(RX10_TEMP33, RX10_TEMP29, RX10_TEMP28, RX10_TEMP27);
 async (RX10_TEMP31) {Program.thread138(utmp138); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP37 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP25 ] ( point ( : rank==1 ) RX10_TEMP39 ) { final intStub RX10_TEMP38 = RX10_TEMP27 [ RX10_TEMP39 ] ; return RX10_TEMP38 ; }
 ) ; final intRefArray1 RX10_TEMP40 = new intRefArray1 ( dParticles , RX10_TEMP37 ) ; final intRefArray1 indices = RX10_TEMP40 ; final int X10_TEMP6 = ( 0 ) ; final Dist1 dCount = Program . X10Util_get2DDistRank ( dField , X10_TEMP6 ) ; final Region1 RX10_TEMP41 = dCount . dReg ; final int RX10_TEMP42 = 0 ; final int RX10_TEMP43 = 1 ; int RX10_TEMP44 = place.MAX_PLACES ; RX10_TEMP44 = RX10_TEMP44 - RX10_TEMP43 ; final region ( : rank==1 ) RX10_TEMP45 = [ 0 : RX10_TEMP44 ] ; final dist ( : rank==1 ) RX10_TEMP46 = [ 0 : RX10_TEMP44 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP47 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP46 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP48 : RX10_TEMP45 ) { final place RX10_TEMP49 = here ; final int RX10_TEMP50 = RX10_TEMP48 [0] ; final place RX10_TEMP51 = place.places ( RX10_TEMP50 ) ; final int RX10_TEMP52 = Program . getDistLocalCount1 ( dCount , RX10_TEMP50 ) ; final int RX10_TEMP53 = RX10_TEMP52 - RX10_TEMP43 ; 
 final T139 utmp139 = new T139(RX10_TEMP53, RX10_TEMP49, RX10_TEMP48, RX10_TEMP47);
 async (RX10_TEMP51) {Program.thread139(utmp139); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP58 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP45 ] ( point ( : rank==1 ) RX10_TEMP60 ) { final intStub RX10_TEMP59 = RX10_TEMP47 [ RX10_TEMP60 ] ; return RX10_TEMP59 ; }
 ) ; final intRefArray1 RX10_TEMP61 = new intRefArray1 ( dCount , RX10_TEMP58 ) ; final intRefArray1 count = RX10_TEMP61 ; finish { final Dist1 X10_TEMP12 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP63 = X10_TEMP12 . dReg ; final int RX10_TEMP66 = 1 ; int RX10_TEMP64 = RX10_TEMP63 . regSize ; RX10_TEMP64 = RX10_TEMP64 - RX10_TEMP66 ; final region ( : rank==1 ) RX10_TEMP65 = [ 0 : RX10_TEMP64 ] ; for ( point ( : rank==1 ) RX10_TEMP62 : RX10_TEMP65 ) { final int RX10_TEMP67 = RX10_TEMP62 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP63 , RX10_TEMP67 ) ; final Region1 RX10_TEMP68 = X10_TEMP12 . dReg ; final int RX10_TEMP69 = Program . searchPointInRegion1 ( RX10_TEMP68 , pl ) ; final int RX10_TEMP70 = 0 ; final boolean RX10_TEMP71 = RX10_TEMP69 < RX10_TEMP70 ; if ( RX10_TEMP71 ) { final String RX10_TEMP72 = "Point pl not found in the distribution X10_TEMP12." ; throw new RuntimeException ( RX10_TEMP72 ) ; }
 final place RX10_TEMP73 = Program . getPlaceFromDist1 ( X10_TEMP12 , RX10_TEMP69 ) ; final place X10_TEMP13 = RX10_TEMP73 ; 
 final T140 utmp140 = new T140(count, dCount, indices, result, particles);
 async (X10_TEMP13) {Program.thread140(utmp140); }
 }
 }
 return result ; }
 public static intRefArray1 LinearESOpenPIC2D_parallelPrefix ( final LinearESOpenPIC2D X10_TEMP0 , final intRefArray1 data ) { final Dist1 RX10_TEMP0 = data . distValue ; final Dist1 dData = RX10_TEMP0 ; final Region1 RX10_TEMP1 = dData . dReg ; final int RX10_TEMP2 = 0 ; final int RX10_TEMP3 = 1 ; int RX10_TEMP4 = place.MAX_PLACES ; RX10_TEMP4 = RX10_TEMP4 - RX10_TEMP3 ; final region ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP4 ] ; final dist ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP4 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP7 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP6 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP8 : RX10_TEMP5 ) { final place RX10_TEMP9 = here ; final int RX10_TEMP10 = RX10_TEMP8 [0] ; final place RX10_TEMP11 = place.places ( RX10_TEMP10 ) ; final int RX10_TEMP12 = Program . getDistLocalCount1 ( dData , RX10_TEMP10 ) ; final int RX10_TEMP13 = RX10_TEMP12 - RX10_TEMP3 ; final Dist1 RX10_TEMP14 = Program . restrictDist1 ( dData , RX10_TEMP11 ) ; final Region1 RX10_TEMP15 = RX10_TEMP14 . dReg ; 
 final T141 utmp141 = new T141(RX10_TEMP15, RX10_TEMP13, RX10_TEMP9, RX10_TEMP8, RX10_TEMP7, data);
 async (RX10_TEMP11) {Program.thread141(utmp141); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP32 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP5 ] ( point ( : rank==1 ) RX10_TEMP34 ) { final intStub RX10_TEMP33 = RX10_TEMP7 [ RX10_TEMP34 ] ; return RX10_TEMP33 ; }
 ) ; final intRefArray1 RX10_TEMP35 = new intRefArray1 ( dData , RX10_TEMP32 ) ; final intRefArray1 result = RX10_TEMP35 ; final Region1 RX10_TEMP36 = dData . dReg ; final int RX10_TEMP37 = 0 ; final int RX10_TEMP38 = 1 ; int RX10_TEMP39 = place.MAX_PLACES ; RX10_TEMP39 = RX10_TEMP39 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP40 = [ 0 : RX10_TEMP39 ] ; final dist ( : rank==1 ) RX10_TEMP41 = [ 0 : RX10_TEMP39 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP42 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP41 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP43 : RX10_TEMP40 ) { final place RX10_TEMP44 = here ; final int RX10_TEMP45 = RX10_TEMP43 [0] ; final place RX10_TEMP46 = place.places ( RX10_TEMP45 ) ; final int RX10_TEMP47 = Program . getDistLocalCount1 ( dData , RX10_TEMP45 ) ; final int RX10_TEMP48 = RX10_TEMP47 - RX10_TEMP38 ; final Dist1 RX10_TEMP49 = Program . restrictDist1 ( dData , RX10_TEMP46 ) ; final Region1 RX10_TEMP50 = RX10_TEMP49 . dReg ; 
 final T142 utmp142 = new T142(RX10_TEMP50, RX10_TEMP48, RX10_TEMP44, RX10_TEMP43, RX10_TEMP42, data);
 async (RX10_TEMP46) {Program.thread142(utmp142); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP67 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP40 ] ( point ( : rank==1 ) RX10_TEMP69 ) { final intStub RX10_TEMP68 = RX10_TEMP42 [ RX10_TEMP69 ] ; return RX10_TEMP68 ; }
 ) ; final intRefArray1 RX10_TEMP70 = new intRefArray1 ( dData , RX10_TEMP67 ) ; final intRefArray1 tmp1 = RX10_TEMP70 ; final Region1 RX10_TEMP71 = dData . dReg ; final int RX10_TEMP72 = 0 ; final int RX10_TEMP73 = 1 ; int RX10_TEMP74 = place.MAX_PLACES ; RX10_TEMP74 = RX10_TEMP74 - RX10_TEMP73 ; final region ( : rank==1 ) RX10_TEMP75 = [ 0 : RX10_TEMP74 ] ; final dist ( : rank==1 ) RX10_TEMP76 = [ 0 : RX10_TEMP74 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP77 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP76 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP78 : RX10_TEMP75 ) { final place RX10_TEMP79 = here ; final int RX10_TEMP80 = RX10_TEMP78 [0] ; final place RX10_TEMP81 = place.places ( RX10_TEMP80 ) ; final int RX10_TEMP82 = Program . getDistLocalCount1 ( dData , RX10_TEMP80 ) ; final int RX10_TEMP83 = RX10_TEMP82 - RX10_TEMP73 ; 
 final T143 utmp143 = new T143(RX10_TEMP83, RX10_TEMP79, RX10_TEMP78, RX10_TEMP77);
 async (RX10_TEMP81) {Program.thread143(utmp143); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP88 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP75 ] ( point ( : rank==1 ) RX10_TEMP90 ) { final intStub RX10_TEMP89 = RX10_TEMP77 [ RX10_TEMP90 ] ; return RX10_TEMP89 ; }
 ) ; final intRefArray1 RX10_TEMP91 = new intRefArray1 ( dData , RX10_TEMP88 ) ; final intRefArray1 tmp2 = RX10_TEMP91 ; int strides = ( 1 ) ; final int X10_TEMP14 = ( place.MAX_PLACES ) ; boolean X10_TEMP18 = strides < X10_TEMP14 ; while ( X10_TEMP18 ) { final int stride = ( strides ) ; finish { final Dist1 X10_TEMP21 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP93 = X10_TEMP21 . dReg ; final int RX10_TEMP96 = 1 ; int RX10_TEMP94 = RX10_TEMP93 . regSize ; RX10_TEMP94 = RX10_TEMP94 - RX10_TEMP96 ; final region ( : rank==1 ) RX10_TEMP95 = [ 0 : RX10_TEMP94 ] ; for ( point ( : rank==1 ) RX10_TEMP92 : RX10_TEMP95 ) { final int RX10_TEMP97 = RX10_TEMP92 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP93 , RX10_TEMP97 ) ; final Region1 RX10_TEMP98 = X10_TEMP21 . dReg ; final int RX10_TEMP99 = Program . searchPointInRegion1 ( RX10_TEMP98 , pl ) ; final int RX10_TEMP100 = 0 ; final boolean RX10_TEMP101 = RX10_TEMP99 < RX10_TEMP100 ; if ( RX10_TEMP101 ) { final String RX10_TEMP102 = "Point pl not found in the distribution X10_TEMP21." ; throw new RuntimeException ( RX10_TEMP102 ) ; }
 final place RX10_TEMP103 = Program . getPlaceFromDist1 ( X10_TEMP21 , RX10_TEMP99 ) ; final place X10_TEMP22 = RX10_TEMP103 ; 
 final T144 utmp144 = new T144(pl, stride, tmp2, tmp1, result);
 async (X10_TEMP22) {Program.thread144(utmp144); }
 }
 }
 finish { final Dist1 X10_TEMP68 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP150 = X10_TEMP68 . dReg ; final int RX10_TEMP153 = 1 ; int RX10_TEMP151 = RX10_TEMP150 . regSize ; RX10_TEMP151 = RX10_TEMP151 - RX10_TEMP153 ; final region ( : rank==1 ) RX10_TEMP152 = [ 0 : RX10_TEMP151 ] ; for ( point ( : rank==1 ) RX10_TEMP149 : RX10_TEMP152 ) { final int RX10_TEMP154 = RX10_TEMP149 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP150 , RX10_TEMP154 ) ; final Region1 RX10_TEMP155 = X10_TEMP68 . dReg ; final int RX10_TEMP156 = Program . searchPointInRegion1 ( RX10_TEMP155 , pl ) ; final int RX10_TEMP157 = 0 ; final boolean RX10_TEMP158 = RX10_TEMP156 < RX10_TEMP157 ; if ( RX10_TEMP158 ) { final String RX10_TEMP159 = "Point pl not found in the distribution X10_TEMP68." ; throw new RuntimeException ( RX10_TEMP159 ) ; }
 final place RX10_TEMP160 = Program . getPlaceFromDist1 ( X10_TEMP68 , RX10_TEMP156 ) ; final place X10_TEMP69 = RX10_TEMP160 ; 
 final T145 utmp145 = new T145(pl, tmp2, tmp1);
 async (X10_TEMP69) {Program.thread145(utmp145); }
 }
 }
 final int X10_TEMP79 = ( strides + strides ) ; strides = ( X10_TEMP79 ) ; final int X10_TEMP16 = ( place.MAX_PLACES ) ; X10_TEMP18 = strides < X10_TEMP16 ; }
 return result ; }
 public static double Particle_getX ( final Particle X10_TEMP0 ) { final double X10_TEMP2 = ( X10_TEMP0 . x ) ; return X10_TEMP2 ; }
 public static double Particle_getY ( final Particle X10_TEMP0 ) { final double X10_TEMP2 = ( X10_TEMP0 . y ) ; return X10_TEMP2 ; }
 public static double Particle_getXVel ( final Particle X10_TEMP0 ) { final double X10_TEMP2 = ( X10_TEMP0 . xVel ) ; return X10_TEMP2 ; }
 public static double Particle_getYVel ( final Particle X10_TEMP0 ) { final double X10_TEMP2 = ( X10_TEMP0 . yVel ) ; return X10_TEMP2 ; }
 public static Particle Particle_setX ( final Particle X10_TEMP0 , final double x ) { double X10_TEMP6 = ( X10_TEMP0 . y ) ; double X10_TEMP7 = ( X10_TEMP0 . xVel ) ; double X10_TEMP8 = ( X10_TEMP0 . yVel ) ; int X10_TEMP9 = ( X10_TEMP0 . pid ) ; final Particle X10_TEMP11 = ( new Particle ( x , X10_TEMP6 , X10_TEMP7 , X10_TEMP8 , X10_TEMP9 ) ) ; return X10_TEMP11 ; }
 public static Particle Particle_setY ( final Particle X10_TEMP0 , final double y ) { double X10_TEMP6 = ( X10_TEMP0 . x ) ; double X10_TEMP7 = ( X10_TEMP0 . xVel ) ; double X10_TEMP8 = ( X10_TEMP0 . yVel ) ; int X10_TEMP9 = ( X10_TEMP0 . pid ) ; final Particle X10_TEMP11 = ( new Particle ( X10_TEMP6 , y , X10_TEMP7 , X10_TEMP8 , X10_TEMP9 ) ) ; return X10_TEMP11 ; }
 public static Particle Particle_setXVel ( final Particle X10_TEMP0 , final double xVel ) { double X10_TEMP6 = ( X10_TEMP0 . x ) ; double X10_TEMP7 = ( X10_TEMP0 . y ) ; double X10_TEMP8 = ( X10_TEMP0 . yVel ) ; int X10_TEMP9 = ( X10_TEMP0 . pid ) ; final Particle X10_TEMP11 = ( new Particle ( X10_TEMP6 , X10_TEMP7 , xVel , X10_TEMP8 , X10_TEMP9 ) ) ; return X10_TEMP11 ; }
 public static Particle Particle_setYVel ( final Particle X10_TEMP0 , final double yVel ) { double X10_TEMP6 = ( X10_TEMP0 . x ) ; double X10_TEMP7 = ( X10_TEMP0 . y ) ; double X10_TEMP8 = ( X10_TEMP0 . xVel ) ; int X10_TEMP9 = ( X10_TEMP0 . pid ) ; final Particle X10_TEMP11 = ( new Particle ( X10_TEMP6 , X10_TEMP7 , X10_TEMP8 , yVel , X10_TEMP9 ) ) ; return X10_TEMP11 ; }
 public static Particle Particle_setPos ( final Particle X10_TEMP0 , final double x , final double y ) { double X10_TEMP6 = ( X10_TEMP0 . xVel ) ; double X10_TEMP7 = ( X10_TEMP0 . yVel ) ; int X10_TEMP8 = ( X10_TEMP0 . pid ) ; final Particle X10_TEMP10 = ( new Particle ( x , y , X10_TEMP6 , X10_TEMP7 , X10_TEMP8 ) ) ; return X10_TEMP10 ; }
 public static Particle Particle_setVel ( final Particle X10_TEMP0 , final double xVel , final double yVel ) { double X10_TEMP6 = ( X10_TEMP0 . x ) ; double X10_TEMP7 = ( X10_TEMP0 . y ) ; int X10_TEMP8 = ( X10_TEMP0 . pid ) ; final Particle X10_TEMP10 = ( new Particle ( X10_TEMP6 , X10_TEMP7 , xVel , yVel , X10_TEMP8 ) ) ; return X10_TEMP10 ; }
 public static String Particle_toString ( final Particle X10_TEMP0 ) { final int X10_TEMP1 = ( X10_TEMP0 . pid ) ; final int X10_TEMP2 = ( 0 ) ; final boolean X10_TEMP4 = ( X10_TEMP1 >= X10_TEMP2 ) ; final boolean X10_TEMP5 = X10_TEMP4 ; final String X10_TEMP6 = ( "p" ) ; final int X10_TEMP7 = ( X10_TEMP0 . pid ) ; String X10_TEMP10 = "" ; if ( X10_TEMP5 ) { X10_TEMP10 = X10_TEMP6 + X10_TEMP7 ; }
 final String X10_TEMP11 = X10_TEMP10 ; String result = ( X10_TEMP11 ) ; final String X10_TEMP12 = ( "(" ) ; final String X10_TEMP13 = ( result + X10_TEMP12 ) ; final double X10_TEMP14 = ( X10_TEMP0 . x ) ; final String X10_TEMP15 = ( X10_TEMP13 + X10_TEMP14 ) ; final String X10_TEMP16 = ( "," ) ; final String X10_TEMP17 = ( X10_TEMP15 + X10_TEMP16 ) ; final double X10_TEMP18 = ( X10_TEMP0 . y ) ; final String X10_TEMP19 = ( X10_TEMP17 + X10_TEMP18 ) ; final String X10_TEMP20 = ( "," ) ; final String X10_TEMP21 = ( X10_TEMP19 + X10_TEMP20 ) ; final double X10_TEMP22 = ( X10_TEMP0 . xVel ) ; final String X10_TEMP23 = ( X10_TEMP21 + X10_TEMP22 ) ; final String X10_TEMP24 = ( "," ) ; final String X10_TEMP25 = ( X10_TEMP23 + X10_TEMP24 ) ; final double X10_TEMP26 = ( X10_TEMP0 . yVel ) ; final String X10_TEMP27 = ( X10_TEMP25 + X10_TEMP26 ) ; final String X10_TEMP28 = ( ")" ) ; final String X10_TEMP30 = ( X10_TEMP27 + X10_TEMP28 ) ; result = ( X10_TEMP30 ) ; return result ; }
 public static boolean Particle_particleEquals ( final Particle X10_TEMP0 , final Particle p ) { final double error = ( _X10Util_ERROR ) ; final int X10_TEMP2 = ( X10_TEMP0 . pid ) ; final int X10_TEMP3 = ( 0 ) ; final boolean X10_TEMP6 = ( X10_TEMP2 >= X10_TEMP3 ) ; final int X10_TEMP4 = ( X10_TEMP0 . pid ) ; final int X10_TEMP5 = ( p . pid ) ; final boolean X10_TEMP7 = ( X10_TEMP4 != X10_TEMP5 ) ; final boolean X10_TEMP9 = X10_TEMP6 && X10_TEMP7 ; if ( X10_TEMP9 ) { final boolean X10_TEMP11 = ( false ) ; return X10_TEMP11 ; }
 final double X10_TEMP12 = ( Program . Particle_getX ( X10_TEMP0 ) ) ; final double X10_TEMP13 = ( Program . Particle_getX ( p ) ) ; final double X10_TEMP15 = ( X10_TEMP12 - X10_TEMP13 ) ; final double X10_TEMP16 = ( Math . abs ( X10_TEMP15 ) ) ; final boolean X10_TEMP18 = ( X10_TEMP16 < error ) ; final double X10_TEMP19 = ( Program . Particle_getY ( X10_TEMP0 ) ) ; final double X10_TEMP20 = ( Program . Particle_getY ( p ) ) ; final double X10_TEMP22 = ( X10_TEMP19 - X10_TEMP20 ) ; final double X10_TEMP23 = ( Math . abs ( X10_TEMP22 ) ) ; final boolean X10_TEMP25 = ( X10_TEMP23 < error ) ; final boolean X10_TEMP33 = ( X10_TEMP18 && X10_TEMP25 ) ; final double X10_TEMP26 = ( Program . Particle_getXVel ( X10_TEMP0 ) ) ; final double X10_TEMP27 = ( Program . Particle_getXVel ( p ) ) ; final double X10_TEMP29 = ( X10_TEMP26 - X10_TEMP27 ) ; final double X10_TEMP30 = ( Math . abs ( X10_TEMP29 ) ) ; final boolean X10_TEMP32 = ( X10_TEMP30 < error ) ; final boolean X10_TEMP41 = ( X10_TEMP33 && X10_TEMP32 ) ; final double X10_TEMP34 = ( Program . Particle_getYVel ( X10_TEMP0 ) ) ; final double X10_TEMP35 = ( Program . Particle_getYVel ( p ) ) ; final double X10_TEMP37 = ( X10_TEMP34 - X10_TEMP35 ) ; final double X10_TEMP38 = ( Math . abs ( X10_TEMP37 ) ) ; final boolean X10_TEMP40 = ( X10_TEMP38 < error ) ; final boolean X10_TEMP43 = ( X10_TEMP41 && X10_TEMP40 ) ; return X10_TEMP43 ; }
 public static ComplexRefArray2 ArrayUtil_doubleToComplex ( final doubleRefArray2 src ) { final Dist2 RX10_TEMP0 = src . distValue ; final Region2 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region2 rSrc = RX10_TEMP1 ; final int X10_TEMP4 = ( 1 ) ; final Region1 rS2 = Program . X10Util_getRank2D ( rSrc , X10_TEMP4 ) ; final int X10_TEMP6 = ( rS2 . regSize ) ; final int X10_TEMP7 = ( 2 ) ; final int X10_TEMP8 = ( X10_TEMP6 % X10_TEMP7 ) ; final int X10_TEMP9 = ( 0 ) ; final boolean X10_TEMP11 = X10_TEMP8 != X10_TEMP9 ; if ( X10_TEMP11 ) { final String X10_TEMP12 = ( "Error: doubleToComplex requires the second " ) ; final String X10_TEMP13 = ( "dimension to be of even size" ) ; final String X10_TEMP15 = ( X10_TEMP12 + X10_TEMP13 ) ; System.err.println ( X10_TEMP15 ) ; final int X10_TEMP16 = 0 ; final int X10_TEMP17 = 1 ; final int X10_TEMP18 = X10_TEMP16 - X10_TEMP17 ; final Region2 X10_TEMP19 = Program . createNewRegion2RR ( X10_TEMP16 , X10_TEMP18 , X10_TEMP16 , X10_TEMP18 ) ; final place X10_TEMP20 = ( here ) ; final Dist2 X10_TEMP22 = Program . getPlaceDist2 ( X10_TEMP19 , X10_TEMP20 ) ; final Dist2 dResult = X10_TEMP22 ; final Region2 RX10_TEMP2 = dResult . dReg ; final int RX10_TEMP3 = 0 ; final int RX10_TEMP4 = 1 ; int RX10_TEMP5 = place.MAX_PLACES ; RX10_TEMP5 = RX10_TEMP5 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP6 = [ 0 : RX10_TEMP5 ] ; final dist ( : rank==1 ) RX10_TEMP7 = [ 0 : RX10_TEMP5 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP8 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP7 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP9 : RX10_TEMP6 ) { final place RX10_TEMP10 = here ; final int RX10_TEMP11 = RX10_TEMP9 [0] ; final place RX10_TEMP12 = place.places ( RX10_TEMP11 ) ; final int RX10_TEMP13 = Program . getDistLocalCount2 ( dResult , RX10_TEMP11 ) ; final int RX10_TEMP14 = RX10_TEMP13 - RX10_TEMP4 ; 
 final T146 utmp146 = new T146(RX10_TEMP14, RX10_TEMP10, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP12) {Program.thread146(utmp146); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP18 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP6 ] ( point ( : rank==1 ) RX10_TEMP20 ) { final ComplexStub RX10_TEMP19 = RX10_TEMP8 [ RX10_TEMP20 ] ; return RX10_TEMP19 ; }
 ) ; final ComplexRefArray2 RX10_TEMP21 = new ComplexRefArray2 ( dResult , RX10_TEMP18 ) ; final ComplexRefArray2 X10_TEMP25 = RX10_TEMP21 ; return X10_TEMP25 ; }
 final int X10_TEMP32 = ( 0 ) ; final int X10_TEMP27 = ( rS2 . regSize ) ; final int X10_TEMP28 = ( 2 ) ; final int X10_TEMP29 = ( X10_TEMP27 / X10_TEMP28 ) ; final int X10_TEMP30 = ( 1 ) ; final int X10_TEMP33 = ( X10_TEMP29 - X10_TEMP30 ) ; final Region1 rD2 = Program . createNewRegion1R ( X10_TEMP32 , X10_TEMP33 ) ; final Dist2 RX10_TEMP22 = src . distValue ; final Dist2 dSrc = RX10_TEMP22 ; final int X10_TEMP38 = ( 0 ) ; final Dist1 X10_TEMP41 = Program . X10Util_get2DDistRank ( dSrc , X10_TEMP38 ) ; final Dist2 dResult = Program . X10Util_extendDistRank2D ( X10_TEMP41 , rD2 ) ; final Region2 RX10_TEMP23 = dResult . dReg ; final int RX10_TEMP24 = 0 ; final int RX10_TEMP25 = 1 ; int RX10_TEMP26 = place.MAX_PLACES ; RX10_TEMP26 = RX10_TEMP26 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP27 = [ 0 : RX10_TEMP26 ] ; final dist ( : rank==1 ) RX10_TEMP28 = [ 0 : RX10_TEMP26 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP29 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP28 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP30 : RX10_TEMP27 ) { final place RX10_TEMP31 = here ; final int RX10_TEMP32 = RX10_TEMP30 [0] ; final place RX10_TEMP33 = place.places ( RX10_TEMP32 ) ; final int RX10_TEMP34 = Program . getDistLocalCount2 ( dResult , RX10_TEMP32 ) ; final int RX10_TEMP35 = RX10_TEMP34 - RX10_TEMP25 ; 
 final T147 utmp147 = new T147(RX10_TEMP35, RX10_TEMP31, RX10_TEMP30, RX10_TEMP29);
 async (RX10_TEMP33) {Program.thread147(utmp147); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP39 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP27 ] ( point ( : rank==1 ) RX10_TEMP41 ) { final ComplexStub RX10_TEMP40 = RX10_TEMP29 [ RX10_TEMP41 ] ; return RX10_TEMP40 ; }
 ) ; final ComplexRefArray2 RX10_TEMP42 = new ComplexRefArray2 ( dResult , RX10_TEMP39 ) ; final ComplexRefArray2 result = RX10_TEMP42 ; finish { final Region2 RX10_TEMP44 = dResult . dReg ; final int RX10_TEMP47 = 1 ; int RX10_TEMP45 = RX10_TEMP44 . regSize ; RX10_TEMP45 = RX10_TEMP45 - RX10_TEMP47 ; final region ( : rank==1 ) RX10_TEMP46 = [ 0 : RX10_TEMP45 ] ; for ( point ( : rank==1 ) RX10_TEMP43 : RX10_TEMP46 ) { final int RX10_TEMP48 = RX10_TEMP43 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP44 , RX10_TEMP48 ) ; final Region2 RX10_TEMP49 = dResult . dReg ; final int RX10_TEMP50 = Program . searchPointInRegion2 ( RX10_TEMP49 , pt ) ; final int RX10_TEMP51 = 0 ; final boolean RX10_TEMP52 = RX10_TEMP50 < RX10_TEMP51 ; if ( RX10_TEMP52 ) { final String RX10_TEMP53 = "Point pt not found in the distribution dResult." ; throw new RuntimeException ( RX10_TEMP53 ) ; }
 final place RX10_TEMP54 = Program . getPlaceFromDist2 ( dResult , RX10_TEMP50 ) ; final place X10_TEMP45 = RX10_TEMP54 ; 
 final T148 utmp148 = new T148(pt, result, src);
 async (X10_TEMP45) {Program.thread148(utmp148); }
 }
 }
 return result ; }
 public static doubleRefArray2 ArrayUtil_complexToDouble ( final ComplexRefArray2 src ) { final Dist2 RX10_TEMP0 = src . distValue ; final Region2 RX10_TEMP1 = RX10_TEMP0 . dReg ; final Region2 rSrc = RX10_TEMP1 ; final int X10_TEMP4 = ( 1 ) ; final Region1 rS2 = Program . X10Util_getRank2D ( rSrc , X10_TEMP4 ) ; final int X10_TEMP12 = ( 0 ) ; final int X10_TEMP7 = ( 2 ) ; final int X10_TEMP8 = ( rS2 . regSize ) ; final int X10_TEMP9 = ( X10_TEMP7 * X10_TEMP8 ) ; final int X10_TEMP10 = ( 1 ) ; final int X10_TEMP13 = ( X10_TEMP9 - X10_TEMP10 ) ; final Region1 rD2 = Program . createNewRegion1R ( X10_TEMP12 , X10_TEMP13 ) ; final Dist2 RX10_TEMP2 = src . distValue ; final Dist2 dSrc = RX10_TEMP2 ; final int X10_TEMP18 = ( 0 ) ; final Dist1 X10_TEMP21 = Program . X10Util_get2DDistRank ( dSrc , X10_TEMP18 ) ; final Dist2 dResult = Program . X10Util_extendDistRank2D ( X10_TEMP21 , rD2 ) ; final Region2 RX10_TEMP3 = dResult . dReg ; final int RX10_TEMP4 = 0 ; final int RX10_TEMP5 = 1 ; int RX10_TEMP6 = place.MAX_PLACES ; RX10_TEMP6 = RX10_TEMP6 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP7 = [ 0 : RX10_TEMP6 ] ; final dist ( : rank==1 ) RX10_TEMP8 = [ 0 : RX10_TEMP6 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP9 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP8 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP10 : RX10_TEMP7 ) { final place RX10_TEMP11 = here ; final int RX10_TEMP12 = RX10_TEMP10 [0] ; final place RX10_TEMP13 = place.places ( RX10_TEMP12 ) ; final int RX10_TEMP14 = Program . getDistLocalCount2 ( dResult , RX10_TEMP12 ) ; final int RX10_TEMP15 = RX10_TEMP14 - RX10_TEMP5 ; 
 final T149 utmp149 = new T149(RX10_TEMP15, RX10_TEMP11, RX10_TEMP10, RX10_TEMP9);
 async (RX10_TEMP13) {Program.thread149(utmp149); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP19 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP7 ] ( point ( : rank==1 ) RX10_TEMP21 ) { final doubleStub RX10_TEMP20 = RX10_TEMP9 [ RX10_TEMP21 ] ; return RX10_TEMP20 ; }
 ) ; final doubleRefArray2 RX10_TEMP22 = new doubleRefArray2 ( dResult , RX10_TEMP19 ) ; final doubleRefArray2 result = RX10_TEMP22 ; finish { final Region2 RX10_TEMP24 = dResult . dReg ; final int RX10_TEMP27 = 1 ; int RX10_TEMP25 = RX10_TEMP24 . regSize ; RX10_TEMP25 = RX10_TEMP25 - RX10_TEMP27 ; final region ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP25 ] ; for ( point ( : rank==1 ) RX10_TEMP23 : RX10_TEMP26 ) { final int RX10_TEMP28 = RX10_TEMP23 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP24 , RX10_TEMP28 ) ; final Region2 RX10_TEMP29 = dResult . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion2 ( RX10_TEMP29 , pt ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pt not found in the distribution dResult." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist2 ( dResult , RX10_TEMP30 ) ; final place X10_TEMP25 = RX10_TEMP34 ; 
 final T150 utmp150 = new T150(pt, result, src);
 async (X10_TEMP25) {Program.thread150(utmp150); }
 }
 }
 return result ; }
 public static ComplexRefArray2 ArrayUtil_transpose ( final ComplexRefArray2 data ) { final Dist2 RX10_TEMP0 = data . distValue ; final Dist2 X10_TEMP1 = RX10_TEMP0 ; final Dist2 dData = X10_TEMP1 ; final boolean X10_TEMP4 = ( Program . X10Util_isDistBlockStar ( dData ) ) ; final boolean X10_TEMP6 = ! X10_TEMP4 ; if ( X10_TEMP6 ) { final String X10_TEMP7 = ( "Transpose only works on star block" ) ; final String X10_TEMP8 = ( "distributed arrays" ) ; final String X10_TEMP10 = ( X10_TEMP7 + X10_TEMP8 ) ; Program . X10Util_println ( X10_TEMP10 ) ; final String X10_TEMP11 = ( "transpose: " ) ; final Dist2 RX10_TEMP1 = data . distValue ; final Dist2 X10_TEMP12 = RX10_TEMP1 ; final String RX10_TEMP2 = Program . toStringDist2 ( X10_TEMP12 ) ; final String X10_TEMP14 = ( X10_TEMP11 + RX10_TEMP2 ) ; throw new RuntimeException ( X10_TEMP14 ) ; }
 final Dist2 dResult = Program . X10Util_transposeBlockStar ( dData ) ; final Region2 RX10_TEMP3 = dResult . dReg ; final int RX10_TEMP4 = 0 ; final int RX10_TEMP5 = 1 ; int RX10_TEMP6 = place.MAX_PLACES ; RX10_TEMP6 = RX10_TEMP6 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP7 = [ 0 : RX10_TEMP6 ] ; final dist ( : rank==1 ) RX10_TEMP8 = [ 0 : RX10_TEMP6 ] -> here ; final ComplexStub [ : rank==1 ] RX10_TEMP9 = ( ComplexStub [ : rank==1 ] ) ( new ComplexStub [ RX10_TEMP8 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP10 : RX10_TEMP7 ) { final place RX10_TEMP11 = here ; final int RX10_TEMP12 = RX10_TEMP10 [0] ; final place RX10_TEMP13 = place.places ( RX10_TEMP12 ) ; final int RX10_TEMP14 = Program . getDistLocalCount2 ( dResult , RX10_TEMP12 ) ; final int RX10_TEMP15 = RX10_TEMP14 - RX10_TEMP5 ; 
 final T151 utmp151 = new T151(RX10_TEMP15, RX10_TEMP11, RX10_TEMP10, RX10_TEMP9);
 async (RX10_TEMP13) {Program.thread151(utmp151); }
 }
 }
 final ComplexStub value [ : rank==1 ] RX10_TEMP19 = ( ComplexStub value [ : rank==1 ] ) ( new ComplexStub value [ RX10_TEMP7 ] ( point ( : rank==1 ) RX10_TEMP21 ) { final ComplexStub RX10_TEMP20 = RX10_TEMP9 [ RX10_TEMP21 ] ; return RX10_TEMP20 ; }
 ) ; final ComplexRefArray2 RX10_TEMP22 = new ComplexRefArray2 ( dResult , RX10_TEMP19 ) ; final ComplexRefArray2 result = RX10_TEMP22 ; finish { final Dist1 X10_TEMP19 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP24 = X10_TEMP19 . dReg ; final int RX10_TEMP27 = 1 ; int RX10_TEMP25 = RX10_TEMP24 . regSize ; RX10_TEMP25 = RX10_TEMP25 - RX10_TEMP27 ; final region ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP25 ] ; for ( point ( : rank==1 ) RX10_TEMP23 : RX10_TEMP26 ) { final int RX10_TEMP28 = RX10_TEMP23 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP24 , RX10_TEMP28 ) ; final Region1 RX10_TEMP29 = X10_TEMP19 . dReg ; final int RX10_TEMP30 = Program . searchPointInRegion1 ( RX10_TEMP29 , pl ) ; final int RX10_TEMP31 = 0 ; final boolean RX10_TEMP32 = RX10_TEMP30 < RX10_TEMP31 ; if ( RX10_TEMP32 ) { final String RX10_TEMP33 = "Point pl not found in the distribution X10_TEMP19." ; throw new RuntimeException ( RX10_TEMP33 ) ; }
 final place RX10_TEMP34 = Program . getPlaceFromDist1 ( X10_TEMP19 , RX10_TEMP30 ) ; final place X10_TEMP20 = RX10_TEMP34 ; 
 final T152 utmp152 = new T152(result, dResult, dData, data);
 async (X10_TEMP20) {Program.thread152(utmp152); }
 }
 }
 return result ; }
 public static int _Timer_max_counters_init ( ) { final int X10_TEMP2 = ( 64 ) ; return X10_TEMP2 ; }
 public static void Timer_start ( final Timer X10_TEMP0 , final int n ) { final doubleRefArray1 X10_TEMP1 = X10_TEMP0 . start_time ; final double X10_TEMP4 = ( System.currentTimeMillis ( ) ) ; final double X10_TEMP5 = ( X10_TEMP4 ) ; final Point1 RX10_TEMP0 = new Point1 ( n ) ; final Dist1 RX10_TEMP1 = X10_TEMP1 . distValue ; final Region1 RX10_TEMP2 = RX10_TEMP1 . dReg ; final int RX10_TEMP3 = Program . searchPointInRegion1 ( RX10_TEMP2 , RX10_TEMP0 ) ; final int RX10_TEMP4 = 0 ; final boolean RX10_TEMP5 = RX10_TEMP3 < RX10_TEMP4 ; if ( RX10_TEMP5 ) { String RX10_TEMP6 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP6 ) ; }
 final place RX10_TEMP7 = Program . getPlaceFromDist1 ( RX10_TEMP1 , RX10_TEMP3 ) ; final place RX10_TEMP9 = here ; final boolean RX10_TEMP10 = RX10_TEMP7 != RX10_TEMP9 ; if ( RX10_TEMP10 ) { String RX10_TEMP8 = "Bad place access for array X10_TEMP1" ; throw new RuntimeException ( RX10_TEMP8 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP1 , RX10_TEMP3 , X10_TEMP5 ) ; }
 public static void Timer_stop ( final Timer X10_TEMP0 , final int n ) { final doubleRefArray1 X10_TEMP1 = X10_TEMP0 . elapsed_time ; final double X10_TEMP5 = ( System.currentTimeMillis ( ) ) ; final doubleRefArray1 X10_TEMP3 = X10_TEMP0 . start_time ; final Point1 RX10_TEMP0 = new Point1 ( n ) ; final Dist1 RX10_TEMP1 = X10_TEMP3 . distValue ; final Region1 RX10_TEMP2 = RX10_TEMP1 . dReg ; final int RX10_TEMP3 = Program . searchPointInRegion1 ( RX10_TEMP2 , RX10_TEMP0 ) ; final int RX10_TEMP4 = 0 ; final boolean RX10_TEMP5 = RX10_TEMP3 < RX10_TEMP4 ; if ( RX10_TEMP5 ) { String RX10_TEMP6 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP6 ) ; }
 final place RX10_TEMP7 = Program . getPlaceFromDist1 ( RX10_TEMP1 , RX10_TEMP3 ) ; final place RX10_TEMP9 = here ; final boolean RX10_TEMP10 = RX10_TEMP7 != RX10_TEMP9 ; if ( RX10_TEMP10 ) { String RX10_TEMP8 = "Bad place access for array X10_TEMP3" ; throw new RuntimeException ( RX10_TEMP8 ) ; }
 final double RX10_TEMP11 = Program . getRefArrayValue1double ( X10_TEMP3 , RX10_TEMP3 ) ; final double X10_TEMP6 = ( RX10_TEMP11 ) ; final double X10_TEMP8 = ( X10_TEMP5 - X10_TEMP6 ) ; final double X10_TEMP9 = ( X10_TEMP8 ) ; final Point1 RX10_TEMP12 = new Point1 ( n ) ; final Dist1 RX10_TEMP13 = X10_TEMP1 . distValue ; final Region1 RX10_TEMP14 = RX10_TEMP13 . dReg ; final int RX10_TEMP15 = Program . searchPointInRegion1 ( RX10_TEMP14 , RX10_TEMP12 ) ; final int RX10_TEMP16 = 0 ; final boolean RX10_TEMP17 = RX10_TEMP15 < RX10_TEMP16 ; if ( RX10_TEMP17 ) { String RX10_TEMP18 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP18 ) ; }
 final place RX10_TEMP19 = Program . getPlaceFromDist1 ( RX10_TEMP13 , RX10_TEMP15 ) ; final place RX10_TEMP21 = here ; final boolean RX10_TEMP22 = RX10_TEMP19 != RX10_TEMP21 ; if ( RX10_TEMP22 ) { String RX10_TEMP20 = "Bad place access for array X10_TEMP1" ; throw new RuntimeException ( RX10_TEMP20 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP1 , RX10_TEMP15 , X10_TEMP9 ) ; final doubleRefArray1 X10_TEMP10 = X10_TEMP0 . elapsed_time ; final doubleRefArray1 X10_TEMP12 = X10_TEMP0 . elapsed_time ; final Point1 RX10_TEMP23 = new Point1 ( n ) ; final Dist1 RX10_TEMP24 = X10_TEMP12 . distValue ; final Region1 RX10_TEMP25 = RX10_TEMP24 . dReg ; final int RX10_TEMP26 = Program . searchPointInRegion1 ( RX10_TEMP25 , RX10_TEMP23 ) ; final int RX10_TEMP27 = 0 ; final boolean RX10_TEMP28 = RX10_TEMP26 < RX10_TEMP27 ; if ( RX10_TEMP28 ) { String RX10_TEMP29 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP29 ) ; }
 final place RX10_TEMP30 = Program . getPlaceFromDist1 ( RX10_TEMP24 , RX10_TEMP26 ) ; final place RX10_TEMP32 = here ; final boolean RX10_TEMP33 = RX10_TEMP30 != RX10_TEMP32 ; if ( RX10_TEMP33 ) { String RX10_TEMP31 = "Bad place access for array X10_TEMP12" ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final double RX10_TEMP34 = Program . getRefArrayValue1double ( X10_TEMP12 , RX10_TEMP26 ) ; final double X10_TEMP14 = ( RX10_TEMP34 ) ; final int X10_TEMP15 = ( 1000 ) ; final double X10_TEMP17 = ( X10_TEMP14 / X10_TEMP15 ) ; final double X10_TEMP18 = ( X10_TEMP17 ) ; final Point1 RX10_TEMP35 = new Point1 ( n ) ; final Dist1 RX10_TEMP36 = X10_TEMP10 . distValue ; final Region1 RX10_TEMP37 = RX10_TEMP36 . dReg ; final int RX10_TEMP38 = Program . searchPointInRegion1 ( RX10_TEMP37 , RX10_TEMP35 ) ; final int RX10_TEMP39 = 0 ; final boolean RX10_TEMP40 = RX10_TEMP38 < RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP41 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP41 ) ; }
 final place RX10_TEMP42 = Program . getPlaceFromDist1 ( RX10_TEMP36 , RX10_TEMP38 ) ; final place RX10_TEMP44 = here ; final boolean RX10_TEMP45 = RX10_TEMP42 != RX10_TEMP44 ; if ( RX10_TEMP45 ) { String RX10_TEMP43 = "Bad place access for array X10_TEMP10" ; throw new RuntimeException ( RX10_TEMP43 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP10 , RX10_TEMP38 , X10_TEMP18 ) ; final doubleRefArray1 X10_TEMP19 = X10_TEMP0 . total_time ; final doubleRefArray1 X10_TEMP21 = X10_TEMP0 . total_time ; final Point1 RX10_TEMP46 = new Point1 ( n ) ; final Dist1 RX10_TEMP47 = X10_TEMP21 . distValue ; final Region1 RX10_TEMP48 = RX10_TEMP47 . dReg ; final int RX10_TEMP49 = Program . searchPointInRegion1 ( RX10_TEMP48 , RX10_TEMP46 ) ; final int RX10_TEMP50 = 0 ; final boolean RX10_TEMP51 = RX10_TEMP49 < RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP52 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final place RX10_TEMP53 = Program . getPlaceFromDist1 ( RX10_TEMP47 , RX10_TEMP49 ) ; final place RX10_TEMP55 = here ; final boolean RX10_TEMP56 = RX10_TEMP53 != RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP54 = "Bad place access for array X10_TEMP21" ; throw new RuntimeException ( RX10_TEMP54 ) ; }
 final double RX10_TEMP57 = Program . getRefArrayValue1double ( X10_TEMP21 , RX10_TEMP49 ) ; final double X10_TEMP25 = ( RX10_TEMP57 ) ; final doubleRefArray1 X10_TEMP23 = X10_TEMP0 . elapsed_time ; final Point1 RX10_TEMP58 = new Point1 ( n ) ; final Dist1 RX10_TEMP59 = X10_TEMP23 . distValue ; final Region1 RX10_TEMP60 = RX10_TEMP59 . dReg ; final int RX10_TEMP61 = Program . searchPointInRegion1 ( RX10_TEMP60 , RX10_TEMP58 ) ; final int RX10_TEMP62 = 0 ; final boolean RX10_TEMP63 = RX10_TEMP61 < RX10_TEMP62 ; if ( RX10_TEMP63 ) { String RX10_TEMP64 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP64 ) ; }
 final place RX10_TEMP65 = Program . getPlaceFromDist1 ( RX10_TEMP59 , RX10_TEMP61 ) ; final place RX10_TEMP67 = here ; final boolean RX10_TEMP68 = RX10_TEMP65 != RX10_TEMP67 ; if ( RX10_TEMP68 ) { String RX10_TEMP66 = "Bad place access for array X10_TEMP23" ; throw new RuntimeException ( RX10_TEMP66 ) ; }
 final double RX10_TEMP69 = Program . getRefArrayValue1double ( X10_TEMP23 , RX10_TEMP61 ) ; final double X10_TEMP26 = ( RX10_TEMP69 ) ; final double X10_TEMP28 = ( X10_TEMP25 + X10_TEMP26 ) ; final double X10_TEMP29 = ( X10_TEMP28 ) ; final Point1 RX10_TEMP70 = new Point1 ( n ) ; final Dist1 RX10_TEMP71 = X10_TEMP19 . distValue ; final Region1 RX10_TEMP72 = RX10_TEMP71 . dReg ; final int RX10_TEMP73 = Program . searchPointInRegion1 ( RX10_TEMP72 , RX10_TEMP70 ) ; final int RX10_TEMP74 = 0 ; final boolean RX10_TEMP75 = RX10_TEMP73 < RX10_TEMP74 ; if ( RX10_TEMP75 ) { String RX10_TEMP76 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP76 ) ; }
 final place RX10_TEMP77 = Program . getPlaceFromDist1 ( RX10_TEMP71 , RX10_TEMP73 ) ; final place RX10_TEMP79 = here ; final boolean RX10_TEMP80 = RX10_TEMP77 != RX10_TEMP79 ; if ( RX10_TEMP80 ) { String RX10_TEMP78 = "Bad place access for array X10_TEMP19" ; throw new RuntimeException ( RX10_TEMP78 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP19 , RX10_TEMP73 , X10_TEMP29 ) ; }
 public static double Timer_readTimer ( final Timer X10_TEMP0 , final int n ) { final doubleRefArray1 X10_TEMP1 = X10_TEMP0 . total_time ; final Point1 RX10_TEMP0 = new Point1 ( n ) ; final Dist1 RX10_TEMP1 = X10_TEMP1 . distValue ; final Region1 RX10_TEMP2 = RX10_TEMP1 . dReg ; final int RX10_TEMP3 = Program . searchPointInRegion1 ( RX10_TEMP2 , RX10_TEMP0 ) ; final int RX10_TEMP4 = 0 ; final boolean RX10_TEMP5 = RX10_TEMP3 < RX10_TEMP4 ; if ( RX10_TEMP5 ) { String RX10_TEMP6 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP6 ) ; }
 final place RX10_TEMP7 = Program . getPlaceFromDist1 ( RX10_TEMP1 , RX10_TEMP3 ) ; final place RX10_TEMP9 = here ; final boolean RX10_TEMP10 = RX10_TEMP7 != RX10_TEMP9 ; if ( RX10_TEMP10 ) { String RX10_TEMP8 = "Bad place access for array X10_TEMP1" ; throw new RuntimeException ( RX10_TEMP8 ) ; }
 final double RX10_TEMP11 = Program . getRefArrayValue1double ( X10_TEMP1 , RX10_TEMP3 ) ; final double X10_TEMP4 = ( RX10_TEMP11 ) ; return X10_TEMP4 ; }
 public static void Timer_resetTimer ( final Timer X10_TEMP0 , final int n ) { final doubleRefArray1 X10_TEMP1 = X10_TEMP0 . total_time ; final double X10_TEMP4 = ( 0 ) ; final double X10_TEMP5 = ( X10_TEMP4 ) ; final Point1 RX10_TEMP0 = new Point1 ( n ) ; final Dist1 RX10_TEMP1 = X10_TEMP1 . distValue ; final Region1 RX10_TEMP2 = RX10_TEMP1 . dReg ; final int RX10_TEMP3 = Program . searchPointInRegion1 ( RX10_TEMP2 , RX10_TEMP0 ) ; final int RX10_TEMP4 = 0 ; final boolean RX10_TEMP5 = RX10_TEMP3 < RX10_TEMP4 ; if ( RX10_TEMP5 ) { String RX10_TEMP6 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP6 ) ; }
 final place RX10_TEMP7 = Program . getPlaceFromDist1 ( RX10_TEMP1 , RX10_TEMP3 ) ; final place RX10_TEMP9 = here ; final boolean RX10_TEMP10 = RX10_TEMP7 != RX10_TEMP9 ; if ( RX10_TEMP10 ) { String RX10_TEMP8 = "Bad place access for array X10_TEMP1" ; throw new RuntimeException ( RX10_TEMP8 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP1 , RX10_TEMP3 , X10_TEMP5 ) ; final doubleRefArray1 X10_TEMP6 = X10_TEMP0 . start_time ; final double X10_TEMP9 = ( 0 ) ; final double X10_TEMP10 = ( X10_TEMP9 ) ; final Point1 RX10_TEMP11 = new Point1 ( n ) ; final Dist1 RX10_TEMP12 = X10_TEMP6 . distValue ; final Region1 RX10_TEMP13 = RX10_TEMP12 . dReg ; final int RX10_TEMP14 = Program . searchPointInRegion1 ( RX10_TEMP13 , RX10_TEMP11 ) ; final int RX10_TEMP15 = 0 ; final boolean RX10_TEMP16 = RX10_TEMP14 < RX10_TEMP15 ; if ( RX10_TEMP16 ) { String RX10_TEMP17 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP17 ) ; }
 final place RX10_TEMP18 = Program . getPlaceFromDist1 ( RX10_TEMP12 , RX10_TEMP14 ) ; final place RX10_TEMP20 = here ; final boolean RX10_TEMP21 = RX10_TEMP18 != RX10_TEMP20 ; if ( RX10_TEMP21 ) { String RX10_TEMP19 = "Bad place access for array X10_TEMP6" ; throw new RuntimeException ( RX10_TEMP19 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP6 , RX10_TEMP14 , X10_TEMP10 ) ; final doubleRefArray1 X10_TEMP11 = X10_TEMP0 . elapsed_time ; final double X10_TEMP14 = ( 0 ) ; final double X10_TEMP15 = ( X10_TEMP14 ) ; final Point1 RX10_TEMP22 = new Point1 ( n ) ; final Dist1 RX10_TEMP23 = X10_TEMP11 . distValue ; final Region1 RX10_TEMP24 = RX10_TEMP23 . dReg ; final int RX10_TEMP25 = Program . searchPointInRegion1 ( RX10_TEMP24 , RX10_TEMP22 ) ; final int RX10_TEMP26 = 0 ; final boolean RX10_TEMP27 = RX10_TEMP25 < RX10_TEMP26 ; if ( RX10_TEMP27 ) { String RX10_TEMP28 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP28 ) ; }
 final place RX10_TEMP29 = Program . getPlaceFromDist1 ( RX10_TEMP23 , RX10_TEMP25 ) ; final place RX10_TEMP31 = here ; final boolean RX10_TEMP32 = RX10_TEMP29 != RX10_TEMP31 ; if ( RX10_TEMP32 ) { String RX10_TEMP30 = "Bad place access for array X10_TEMP11" ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 Program . setRefArrayValue1double ( X10_TEMP11 , RX10_TEMP25 , X10_TEMP15 ) ; }
 public static void Timer_resetAllTimers ( final Timer X10_TEMP0 ) { int i = ( 0 ) ; boolean X10_TEMP4 = i < _Timer_max_counters ; while ( X10_TEMP4 ) { Program . Timer_resetTimer ( X10_TEMP0 , i ) ; final int X10_TEMP6 = ( i ) ; final int X10_TEMP7 = 1 ; i = i + X10_TEMP7 ; X10_TEMP4 = i < _Timer_max_counters ; }
 }
 public static double doublerefArraySum1 ( final doubleRefArray1 sumArray ) { final int maxPlaces = place.MAX_PLACES ; final int one = 1 ; final int zero = 0 ; final int maxPlacesMinusOne = maxPlaces - one ; final Region1 dReg = Program . createNewRegion1R ( zero , maxPlacesMinusOne ) ; final place source = here ; final Dist1 dSum = Program . getPlaceDist1 ( dReg , source ) ; final double initVal = 0 ; final Region1 RX10_TEMP0 = dSum . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dSum , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T153 utmp153 = new T153(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6, initVal);
 async (RX10_TEMP10) {Program.thread153(utmp153); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP17 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final doubleStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final doubleRefArray1 RX10_TEMP20 = new doubleRefArray1 ( dSum , RX10_TEMP17 ) ; final doubleRefArray1 localSumArray = RX10_TEMP20 ; final Dist1 dUnique = Program . getUniqueDist ( ) ; finish { final Region1 RX10_TEMP22 = dUnique . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; final Region1 RX10_TEMP27 = dUnique . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , p ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point p not found in the distribution dUnique." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( dUnique , RX10_TEMP28 ) ; final place nthPlace = RX10_TEMP32 ; 
 final T154 utmp154 = new T154(localSumArray, source, zero, sumArray);
 async (nthPlace) {Program.thread154(utmp154); }
 }
 }
 double globalSum = 0 ; final Dist1 RX10_TEMP63 = localSumArray . distValue ; final Region1 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP67 = 1 ; int RX10_TEMP65 = RX10_TEMP64 . regSize ; RX10_TEMP65 = RX10_TEMP65 - RX10_TEMP67 ; final region ( : rank==1 ) RX10_TEMP66 = [ 0 : RX10_TEMP65 ] ; for ( point ( : rank==1 ) RX10_TEMP62 : RX10_TEMP66 ) { final int RX10_TEMP68 = RX10_TEMP62 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP64 , RX10_TEMP68 ) ; final Dist1 RX10_TEMP69 = localSumArray . distValue ; final Region1 RX10_TEMP70 = RX10_TEMP69 . dReg ; final int RX10_TEMP71 = Program . searchPointInRegion1 ( RX10_TEMP70 , p ) ; final int RX10_TEMP72 = 0 ; final boolean RX10_TEMP73 = RX10_TEMP71 < RX10_TEMP72 ; if ( RX10_TEMP73 ) { String RX10_TEMP74 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP74 ) ; }
 final place RX10_TEMP75 = Program . getPlaceFromDist1 ( RX10_TEMP69 , RX10_TEMP71 ) ; final place RX10_TEMP77 = here ; final boolean RX10_TEMP78 = RX10_TEMP75 != RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP76 = "Bad place access for array localSumArray" ; throw new RuntimeException ( RX10_TEMP76 ) ; }
 final double RX10_TEMP79 = Program . getRefArrayValue1double ( localSumArray , RX10_TEMP71 ) ; final double localSumCurr = RX10_TEMP79 ; globalSum = globalSum + localSumCurr ; }
 return globalSum ; }
 public static int intrefArrayMax1 ( final intRefArray1 maxArray ) { final int maxPlaces = place.MAX_PLACES ; final int one = 1 ; final int zero = 0 ; final int maxPlacesMinusOne = maxPlaces - one ; final Region1 dReg = Program . createNewRegion1R ( zero , maxPlacesMinusOne ) ; final place source = here ; final Dist1 dMax = Program . getPlaceDist1 ( dReg , source ) ; final int zeroVal = 0 ; final int maxVal = 2147483647 ; final int initVal = zeroVal - maxVal ; final Region1 RX10_TEMP0 = dMax . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP6 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dMax , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T155 utmp155 = new T155(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6, initVal);
 async (RX10_TEMP10) {Program.thread155(utmp155); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP17 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final intStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final intRefArray1 RX10_TEMP20 = new intRefArray1 ( dMax , RX10_TEMP17 ) ; final intRefArray1 localMaxArray = RX10_TEMP20 ; final Dist1 dUnique = Program . getUniqueDist ( ) ; finish { final Region1 RX10_TEMP22 = dUnique . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; final Region1 RX10_TEMP27 = dUnique . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , p ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point p not found in the distribution dUnique." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( dUnique , RX10_TEMP28 ) ; final place nthPlace = RX10_TEMP32 ; 
 final T156 utmp156 = new T156(localMaxArray, initVal, source, maxArray);
 async (nthPlace) {Program.thread156(utmp156); }
 }
 }
 final Point1 RX10_TEMP62 = new Point1 ( zero ) ; final Dist1 RX10_TEMP63 = localMaxArray . distValue ; final Region1 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP65 = Program . searchPointInRegion1 ( RX10_TEMP64 , RX10_TEMP62 ) ; final int RX10_TEMP66 = 0 ; final boolean RX10_TEMP67 = RX10_TEMP65 < RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP68 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP68 ) ; }
 final place RX10_TEMP69 = Program . getPlaceFromDist1 ( RX10_TEMP63 , RX10_TEMP65 ) ; final place RX10_TEMP71 = here ; final boolean RX10_TEMP72 = RX10_TEMP69 != RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP70 = "Bad place access for array localMaxArray" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 final int RX10_TEMP73 = Program . getRefArrayValue1int ( localMaxArray , RX10_TEMP65 ) ; int globalMax = RX10_TEMP73 ; final Dist1 RX10_TEMP75 = localMaxArray . distValue ; final Region1 RX10_TEMP76 = RX10_TEMP75 . dReg ; final int RX10_TEMP79 = 1 ; int RX10_TEMP77 = RX10_TEMP76 . regSize ; RX10_TEMP77 = RX10_TEMP77 - RX10_TEMP79 ; final region ( : rank==1 ) RX10_TEMP78 = [ 0 : RX10_TEMP77 ] ; for ( point ( : rank==1 ) RX10_TEMP74 : RX10_TEMP78 ) { final int RX10_TEMP80 = RX10_TEMP74 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP76 , RX10_TEMP80 ) ; final Dist1 RX10_TEMP81 = localMaxArray . distValue ; final Region1 RX10_TEMP82 = RX10_TEMP81 . dReg ; final int RX10_TEMP83 = Program . searchPointInRegion1 ( RX10_TEMP82 , p ) ; final int RX10_TEMP84 = 0 ; final boolean RX10_TEMP85 = RX10_TEMP83 < RX10_TEMP84 ; if ( RX10_TEMP85 ) { String RX10_TEMP86 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP86 ) ; }
 final place RX10_TEMP87 = Program . getPlaceFromDist1 ( RX10_TEMP81 , RX10_TEMP83 ) ; final place RX10_TEMP89 = here ; final boolean RX10_TEMP90 = RX10_TEMP87 != RX10_TEMP89 ; if ( RX10_TEMP90 ) { String RX10_TEMP88 = "Bad place access for array localMaxArray" ; throw new RuntimeException ( RX10_TEMP88 ) ; }
 final int RX10_TEMP91 = Program . getRefArrayValue1int ( localMaxArray , RX10_TEMP83 ) ; final int localMaxCurr = RX10_TEMP91 ; final boolean isGreater = localMaxCurr > globalMax ; if ( isGreater ) { globalMax = localMaxCurr ; }
 }
 return globalMax ; }
 public static int intrefArraySum1 ( final intRefArray1 sumArray ) { final int maxPlaces = place.MAX_PLACES ; final int one = 1 ; final int zero = 0 ; final int maxPlacesMinusOne = maxPlaces - one ; final Region1 dReg = Program . createNewRegion1R ( zero , maxPlacesMinusOne ) ; final place source = here ; final Dist1 dSum = Program . getPlaceDist1 ( dReg , source ) ; final int initVal = 0 ; final Region1 RX10_TEMP0 = dSum . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP6 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( dSum , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T157 utmp157 = new T157(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6, initVal);
 async (RX10_TEMP10) {Program.thread157(utmp157); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP17 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final intStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final intRefArray1 RX10_TEMP20 = new intRefArray1 ( dSum , RX10_TEMP17 ) ; final intRefArray1 localSumArray = RX10_TEMP20 ; final Dist1 dUnique = Program . getUniqueDist ( ) ; finish { final Region1 RX10_TEMP22 = dUnique . dReg ; final int RX10_TEMP25 = 1 ; int RX10_TEMP23 = RX10_TEMP22 . regSize ; RX10_TEMP23 = RX10_TEMP23 - RX10_TEMP25 ; final region ( : rank==1 ) RX10_TEMP24 = [ 0 : RX10_TEMP23 ] ; for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP24 ) { final int RX10_TEMP26 = RX10_TEMP21 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP22 , RX10_TEMP26 ) ; final Region1 RX10_TEMP27 = dUnique . dReg ; final int RX10_TEMP28 = Program . searchPointInRegion1 ( RX10_TEMP27 , p ) ; final int RX10_TEMP29 = 0 ; final boolean RX10_TEMP30 = RX10_TEMP28 < RX10_TEMP29 ; if ( RX10_TEMP30 ) { final String RX10_TEMP31 = "Point p not found in the distribution dUnique." ; throw new RuntimeException ( RX10_TEMP31 ) ; }
 final place RX10_TEMP32 = Program . getPlaceFromDist1 ( dUnique , RX10_TEMP28 ) ; final place nthPlace = RX10_TEMP32 ; 
 final T158 utmp158 = new T158(localSumArray, source, zero, sumArray);
 async (nthPlace) {Program.thread158(utmp158); }
 }
 }
 int globalSum = 0 ; final Dist1 RX10_TEMP63 = localSumArray . distValue ; final Region1 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP67 = 1 ; int RX10_TEMP65 = RX10_TEMP64 . regSize ; RX10_TEMP65 = RX10_TEMP65 - RX10_TEMP67 ; final region ( : rank==1 ) RX10_TEMP66 = [ 0 : RX10_TEMP65 ] ; for ( point ( : rank==1 ) RX10_TEMP62 : RX10_TEMP66 ) { final int RX10_TEMP68 = RX10_TEMP62 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP64 , RX10_TEMP68 ) ; final Dist1 RX10_TEMP69 = localSumArray . distValue ; final Region1 RX10_TEMP70 = RX10_TEMP69 . dReg ; final int RX10_TEMP71 = Program . searchPointInRegion1 ( RX10_TEMP70 , p ) ; final int RX10_TEMP72 = 0 ; final boolean RX10_TEMP73 = RX10_TEMP71 < RX10_TEMP72 ; if ( RX10_TEMP73 ) { String RX10_TEMP74 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP74 ) ; }
 final place RX10_TEMP75 = Program . getPlaceFromDist1 ( RX10_TEMP69 , RX10_TEMP71 ) ; final place RX10_TEMP77 = here ; final boolean RX10_TEMP78 = RX10_TEMP75 != RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP76 = "Bad place access for array localSumArray" ; throw new RuntimeException ( RX10_TEMP76 ) ; }
 final int RX10_TEMP79 = Program . getRefArrayValue1int ( localSumArray , RX10_TEMP71 ) ; final int localSumCurr = RX10_TEMP79 ; globalSum = globalSum + localSumCurr ; }
 return globalSum ; }
 public static int constantSearchRegion1 ( final Region1 r , final Point1 target ) { final int zero = 0 ; final int one = 1 ; final int dim0 = r . dim0 ; final int low0 = r . low0 ; final int high0 = low0 + dim0 ; int pt0 = target . f0 ; final boolean lbound0 = pt0 < low0 ; final boolean hbound0 = pt0 >= high0 ; final int dim1 = 1 ; boolean outRegion = false ; outRegion = outRegion || lbound0 ; outRegion = outRegion || hbound0 ; if ( outRegion ) { int notFound = 0 ; notFound = notFound - one ; return notFound ; }
 final int stride1 = 1 ; final int stride0 = stride1 * dim1 ; pt0 = pt0 - low0 ; final int offset0 = stride0 * pt0 ; int found = 0 ; found = found + offset0 ; return found ; }
 public static int constantSearchRegion3 ( final Region3 r , final Point3 target ) { final int zero = 0 ; final int one = 1 ; final int dim0 = r . dim0 ; final int low0 = r . low0 ; final int high0 = low0 + dim0 ; int pt0 = target . f0 ; final boolean lbound0 = pt0 < low0 ; final boolean hbound0 = pt0 >= high0 ; final int dim1 = r . dim1 ; final int low1 = r . low1 ; final int high1 = low1 + dim1 ; int pt1 = target . f1 ; final boolean lbound1 = pt1 < low1 ; final boolean hbound1 = pt1 >= high1 ; final int dim2 = r . dim2 ; final int low2 = r . low2 ; final int high2 = low2 + dim2 ; int pt2 = target . f2 ; final boolean lbound2 = pt2 < low2 ; final boolean hbound2 = pt2 >= high2 ; final int dim3 = 1 ; boolean outRegion = false ; outRegion = outRegion || lbound0 ; outRegion = outRegion || hbound0 ; outRegion = outRegion || lbound1 ; outRegion = outRegion || hbound1 ; outRegion = outRegion || lbound2 ; outRegion = outRegion || hbound2 ; if ( outRegion ) { int notFound = 0 ; notFound = notFound - one ; return notFound ; }
 final int stride3 = 1 ; final int stride2 = stride3 * dim3 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; pt0 = pt0 - low0 ; final int offset0 = stride0 * pt0 ; pt1 = pt1 - low1 ; final int offset1 = stride1 * pt1 ; pt2 = pt2 - low2 ; final int offset2 = stride2 * pt2 ; int found = 0 ; found = found + offset0 ; found = found + offset1 ; found = found + offset2 ; return found ; }
 public static int constantSearchRegion2 ( final Region2 r , final Point2 target ) { final int zero = 0 ; final int one = 1 ; final int dim0 = r . dim0 ; final int low0 = r . low0 ; final int high0 = low0 + dim0 ; int pt0 = target . f0 ; final boolean lbound0 = pt0 < low0 ; final boolean hbound0 = pt0 >= high0 ; final int dim1 = r . dim1 ; final int low1 = r . low1 ; final int high1 = low1 + dim1 ; int pt1 = target . f1 ; final boolean lbound1 = pt1 < low1 ; final boolean hbound1 = pt1 >= high1 ; final int dim2 = 1 ; boolean outRegion = false ; outRegion = outRegion || lbound0 ; outRegion = outRegion || hbound0 ; outRegion = outRegion || lbound1 ; outRegion = outRegion || hbound1 ; if ( outRegion ) { int notFound = 0 ; notFound = notFound - one ; return notFound ; }
 final int stride2 = 1 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; pt0 = pt0 - low0 ; final int offset0 = stride0 * pt0 ; pt1 = pt1 - low1 ; final int offset1 = stride1 * pt1 ; int found = 0 ; found = found + offset0 ; found = found + offset1 ; return found ; }
 public static String toStringPoint1 ( final Point1 p ) { String str = "" ; final int f0 = p . f0 ; String lSq = "[" ; String rSq = "]" ; str = str + lSq ; str = str + f0 ; str = str + rSq ; return str ; }
 public static String toStringPoint2 ( final Point2 p ) { String str = "" ; final int f0 = p . f0 ; final int f1 = p . f1 ; String lSq = "[" ; String comma = "," ; String rSq = "]" ; str = str + lSq ; str = str + f0 ; str = str + comma ; str = str + f1 ; str = str + rSq ; return str ; }
 public static void setRefArrayValue2Complex ( final ComplexRefArray2 array , final int index , final Complex val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ComplexStub value [ : rank==1 ] contents = array . contents ; final ComplexStub indexStub = contents [ placeIndex ] ; final Complex [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static void setRefArrayValue1double ( final doubleRefArray1 array , final int index , final double val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final doubleStub value [ : rank==1 ] contents = array . contents ; final doubleStub indexStub = contents [ placeIndex ] ; final double [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static place getPlaceFromDist3 ( final Dist3 dn , final int index ) { final Dist d = dn . dDist ; final place value [ : rank==1 ] placeArray = d . placeArray ; final place retPlace = placeArray [ index ] ; return retPlace ; }
 public static void setRefArrayValue1Region1 ( final Region1RefArray1 array , final int index , final Region1 val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final Region1Stub value [ : rank==1 ] contents = array . contents ; final Region1Stub indexStub = contents [ placeIndex ] ; final Region1 [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static place getPlaceFromDist1 ( final Dist1 dn , final int index ) { final Dist d = dn . dDist ; final place value [ : rank==1 ] placeArray = d . placeArray ; final place retPlace = placeArray [ index ] ; return retPlace ; }
 public static place getPlaceFromDist2 ( final Dist2 dn , final int index ) { final Dist d = dn . dDist ; final place value [ : rank==1 ] placeArray = d . placeArray ; final place retPlace = placeArray [ index ] ; return retPlace ; }
 public static Particle getRefArrayValue1Particle ( final ParticleRefArray1 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ParticleStub value [ : rank==1 ] contents = array . contents ; final ParticleStub indexStub = contents [ placeIndex ] ; final Particle [ : rank==1 ] localArray = indexStub . localArray ; final Particle returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static void setRefArrayValue1Complex ( final ComplexRefArray1 array , final int index , final Complex val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ComplexStub value [ : rank==1 ] contents = array . contents ; final ComplexStub indexStub = contents [ placeIndex ] ; final Complex [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static Region1 getRank2 ( final Region2 r , final int dim ) { final int zero = 0 ; final int regRank = 2 ; final boolean cond1 = dim >= regRank ; final boolean cond2 = dim < zero ; final boolean invalidRank = cond1 || cond2 ; if ( invalidRank ) { final String errorMsgHeader = "Invalid dimension for rank projection. Got " ; final String errorMsgTrailer = ", expected value between 0 and 2" ; String errorMsg = errorMsgHeader + dim ; errorMsg = errorMsg + errorMsgTrailer ; throw new RuntimeException ( errorMsg ) ; }
 final boolean regType = r . regType ; if ( regType ) { final Region1 regularRank = Program . getRankRegular2 ( r , dim ) ; return regularRank ; }
 final Region1 arbitraryRank = Program . getRankArbitrary2 ( r , dim ) ; return arbitraryRank ; }
 public static Region1 getRankArbitrary2 ( final Region2 r , final int dim ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; final int minusOne = zero - one ; final int proj0 = 0 ; final int proj1 = 1 ; Point2 value [ : rank==1 ] regArr = r . pointArray ; final int regSize = r . regSize ; final int regSizeMinusOne = regSize - one ; final region ( : rank==1 ) regArrRegion = [ 0 : regSizeMinusOne ] ; final dist ( : rank==1 ) distArrRegion = [ 0 : regSizeMinusOne ] -> here ; int maxIndex = minusOne ; int minIndex = zero ; boolean isFirstMinIndex = true ; for ( point ( : rank==1 ) p : regArrRegion ) { final int idx = p [0] ; switch ( dim ) { case proj0 : { final Point2 tempPt = regArr [ idx ] ; final int crd = tempPt . f0 ; final boolean isMax = crd >= maxIndex ; if ( isMax ) { maxIndex = crd ; }
 final boolean lt = crd <= minIndex ; final boolean isMin = lt || isFirstMinIndex ; if ( isMin ) { isFirstMinIndex = false ; minIndex = crd ; }
 break ; }
 case proj1 : { final Point2 tempPt = regArr [ idx ] ; final int crd = tempPt . f1 ; final boolean isMax = crd >= maxIndex ; if ( isMax ) { maxIndex = crd ; }
 final boolean lt = crd <= minIndex ; final boolean isMin = lt || isFirstMinIndex ; if ( isMin ) { isFirstMinIndex = false ; minIndex = crd ; }
 break ; }
 } }
 final int regIndexSizeMinusOne = maxIndex - minIndex ; final int regIndexSize = regIndexSizeMinusOne + one ; final region ( : rank==1 ) regIndexRegion = [ 0 : regIndexSizeMinusOne ] ; final dist ( : rank==1 ) regIndexDist = [ 0 : regIndexSizeMinusOne ] -> here ; final int [ : rank==1 ] indexArr = ( int [ : rank==1 ] ) ( new int [ regIndexDist ] ( point ( : rank==1 ) p ) { return zero ; }
 ) ; for ( point ( : rank==1 ) p : regArrRegion ) { final int idx = p [0] ; switch ( dim ) { case proj0 : { final Point2 tempPt = regArr [ idx ] ; final int crd = tempPt . f0 ; final int newRegIndex = crd - minIndex ; indexArr [ newRegIndex ] = ( one ) ; break ; }
 case proj1 : { final Point2 tempPt = regArr [ idx ] ; final int crd = tempPt . f1 ; final int newRegIndex = crd - minIndex ; indexArr [ newRegIndex ] = ( one ) ; break ; }
 } }
 int newRegSize = 0 ; for ( point ( : rank==1 ) p : regIndexRegion ) { final int hit = indexArr [ p ] ; newRegSize = newRegSize + hit ; }
 final boolean isRegular = newRegSize == regIndexSize ; if ( isRegular ) { final region ( : rank==1 ) regRegularRegion = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] ptArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regRegularRegion ] ( point ( : rank==1 ) p ) { final Point1 pt = new Point1 ( zero ) ; return pt ; }
 ) ; final Region1 retRegRegular = new Region1 ( ptArray , regIndexSize , minIndex , regIndexSize ) ; return retRegRegular ; }
 final int newRegSizeMinusOne = newRegSize - one ; final region ( : rank==1 ) newRegRegion = [ 0 : newRegSizeMinusOne ] ; final dist ( : rank==1 ) newRegDist = [ 0 : newRegSizeMinusOne ] -> here ; final Point1 [ : rank==1 ] indexPointArr = ( Point1 [ : rank==1 ] ) ( new Point1 [ newRegDist ] ) ; int newArrIndex = 0 ; for ( point ( : rank==1 ) p : regIndexRegion ) { final int indx = indexArr [ p ] ; final boolean isOne = indx == one ; if ( isOne ) { final int idx = p [0] ; final int pointValue = idx + minIndex ; final Point1 tempPoint = new Point1 ( pointValue ) ; indexPointArr [ newArrIndex ] = ( tempPoint ) ; newArrIndex = newArrIndex + one ; }
 }
 final Point1 value [ : rank==1 ] indexPointValueArr = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ newRegRegion ] ( point ( : rank==1 ) p ) { final Point1 pt = indexPointArr [ p ] ; return pt ; }
 ) ; final Region1 retRegArbitrary = new Region1 ( indexPointValueArr , regIndexSize ) ; return retRegArbitrary ; }
 public static Region1 getRankRegular2 ( final Region2 r , final int dim ) { final int zero = 0 ; final int one = 1 ; final int minusOne = zero - one ; final region ( : rank==1 ) pointRegion = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] pointArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ pointRegion ] ( point ( : rank==1 ) p ) { final Point1 pt1 = new Point1 ( zero ) ; return pt1 ; }
 ) ; final int proj0 = 0 ; final int proj1 = 1 ; int low0 = 0 ; int dim0 = 0 ; switch ( dim ) { case proj0 : { low0 = r . low0 ; dim0 = r . dim0 ; break ; }
 case proj1 : { low0 = r . low1 ; dim0 = r . dim1 ; break ; }
 } final Region1 retRegRegular = new Region1 ( pointArray , dim0 , low0 , dim0 ) ; return retRegRegular ; }
 public static Region1 getRank3 ( final Region3 r , final int dim ) { final int zero = 0 ; final int regRank = 3 ; final boolean cond1 = dim >= regRank ; final boolean cond2 = dim < zero ; final boolean invalidRank = cond1 || cond2 ; if ( invalidRank ) { final String errorMsgHeader = "Invalid dimension for rank projection. Got " ; final String errorMsgTrailer = ", expected value between 0 and 3" ; String errorMsg = errorMsgHeader + dim ; errorMsg = errorMsg + errorMsgTrailer ; throw new RuntimeException ( errorMsg ) ; }
 final boolean regType = r . regType ; if ( regType ) { final Region1 regularRank = Program . getRankRegular3 ( r , dim ) ; return regularRank ; }
 final Region1 arbitraryRank = Program . getRankArbitrary3 ( r , dim ) ; return arbitraryRank ; }
 public static Region1 getRankArbitrary3 ( final Region3 r , final int dim ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; final int minusOne = zero - one ; final int proj0 = 0 ; final int proj1 = 1 ; final int proj2 = 2 ; Point3 value [ : rank==1 ] regArr = r . pointArray ; final int regSize = r . regSize ; final int regSizeMinusOne = regSize - one ; final region ( : rank==1 ) regArrRegion = [ 0 : regSizeMinusOne ] ; final dist ( : rank==1 ) distArrRegion = [ 0 : regSizeMinusOne ] -> here ; int maxIndex = minusOne ; int minIndex = zero ; boolean isFirstMinIndex = true ; for ( point ( : rank==1 ) p : regArrRegion ) { final int idx = p [0] ; switch ( dim ) { case proj0 : { final Point3 tempPt = regArr [ idx ] ; final int crd = tempPt . f0 ; final boolean isMax = crd >= maxIndex ; if ( isMax ) { maxIndex = crd ; }
 final boolean lt = crd <= minIndex ; final boolean isMin = lt || isFirstMinIndex ; if ( isMin ) { isFirstMinIndex = false ; minIndex = crd ; }
 break ; }
 case proj1 : { final Point3 tempPt = regArr [ idx ] ; final int crd = tempPt . f1 ; final boolean isMax = crd >= maxIndex ; if ( isMax ) { maxIndex = crd ; }
 final boolean lt = crd <= minIndex ; final boolean isMin = lt || isFirstMinIndex ; if ( isMin ) { isFirstMinIndex = false ; minIndex = crd ; }
 break ; }
 case proj2 : { final Point3 tempPt = regArr [ idx ] ; final int crd = tempPt . f2 ; final boolean isMax = crd >= maxIndex ; if ( isMax ) { maxIndex = crd ; }
 final boolean lt = crd <= minIndex ; final boolean isMin = lt || isFirstMinIndex ; if ( isMin ) { isFirstMinIndex = false ; minIndex = crd ; }
 break ; }
 } }
 final int regIndexSizeMinusOne = maxIndex - minIndex ; final int regIndexSize = regIndexSizeMinusOne + one ; final region ( : rank==1 ) regIndexRegion = [ 0 : regIndexSizeMinusOne ] ; final dist ( : rank==1 ) regIndexDist = [ 0 : regIndexSizeMinusOne ] -> here ; final int [ : rank==1 ] indexArr = ( int [ : rank==1 ] ) ( new int [ regIndexDist ] ( point ( : rank==1 ) p ) { return zero ; }
 ) ; for ( point ( : rank==1 ) p : regArrRegion ) { final int idx = p [0] ; switch ( dim ) { case proj0 : { final Point3 tempPt = regArr [ idx ] ; final int crd = tempPt . f0 ; final int newRegIndex = crd - minIndex ; indexArr [ newRegIndex ] = ( one ) ; break ; }
 case proj1 : { final Point3 tempPt = regArr [ idx ] ; final int crd = tempPt . f1 ; final int newRegIndex = crd - minIndex ; indexArr [ newRegIndex ] = ( one ) ; break ; }
 case proj2 : { final Point3 tempPt = regArr [ idx ] ; final int crd = tempPt . f2 ; final int newRegIndex = crd - minIndex ; indexArr [ newRegIndex ] = ( one ) ; break ; }
 } }
 int newRegSize = 0 ; for ( point ( : rank==1 ) p : regIndexRegion ) { final int hit = indexArr [ p ] ; newRegSize = newRegSize + hit ; }
 final boolean isRegular = newRegSize == regIndexSize ; if ( isRegular ) { final region ( : rank==1 ) regRegularRegion = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] ptArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regRegularRegion ] ( point ( : rank==1 ) p ) { final Point1 pt = new Point1 ( zero ) ; return pt ; }
 ) ; final Region1 retRegRegular = new Region1 ( ptArray , regIndexSize , minIndex , regIndexSize ) ; return retRegRegular ; }
 final int newRegSizeMinusOne = newRegSize - one ; final region ( : rank==1 ) newRegRegion = [ 0 : newRegSizeMinusOne ] ; final dist ( : rank==1 ) newRegDist = [ 0 : newRegSizeMinusOne ] -> here ; final Point1 [ : rank==1 ] indexPointArr = ( Point1 [ : rank==1 ] ) ( new Point1 [ newRegDist ] ) ; int newArrIndex = 0 ; for ( point ( : rank==1 ) p : regIndexRegion ) { final int indx = indexArr [ p ] ; final boolean isOne = indx == one ; if ( isOne ) { final int idx = p [0] ; final int pointValue = idx + minIndex ; final Point1 tempPoint = new Point1 ( pointValue ) ; indexPointArr [ newArrIndex ] = ( tempPoint ) ; newArrIndex = newArrIndex + one ; }
 }
 final Point1 value [ : rank==1 ] indexPointValueArr = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ newRegRegion ] ( point ( : rank==1 ) p ) { final Point1 pt = indexPointArr [ p ] ; return pt ; }
 ) ; final Region1 retRegArbitrary = new Region1 ( indexPointValueArr , regIndexSize ) ; return retRegArbitrary ; }
 public static Region1 getRankRegular3 ( final Region3 r , final int dim ) { final int zero = 0 ; final int one = 1 ; final int minusOne = zero - one ; final region ( : rank==1 ) pointRegion = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] pointArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ pointRegion ] ( point ( : rank==1 ) p ) { final Point1 pt1 = new Point1 ( zero ) ; return pt1 ; }
 ) ; final int proj0 = 0 ; final int proj1 = 1 ; final int proj2 = 2 ; int low0 = 0 ; int dim0 = 0 ; switch ( dim ) { case proj0 : { low0 = r . low0 ; dim0 = r . dim0 ; break ; }
 case proj1 : { low0 = r . low1 ; dim0 = r . dim1 ; break ; }
 case proj2 : { low0 = r . low2 ; dim0 = r . dim2 ; break ; }
 } final Region1 retRegRegular = new Region1 ( pointArray , dim0 , low0 , dim0 ) ; return retRegRegular ; }
 public static Complex getRefArrayValue2Complex ( final ComplexRefArray2 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ComplexStub value [ : rank==1 ] contents = array . contents ; final ComplexStub indexStub = contents [ placeIndex ] ; final Complex [ : rank==1 ] localArray = indexStub . localArray ; final Complex returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static Complex getRefArrayValue1Complex ( final ComplexRefArray1 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ComplexStub value [ : rank==1 ] contents = array . contents ; final ComplexStub indexStub = contents [ placeIndex ] ; final Complex [ : rank==1 ] localArray = indexStub . localArray ; final Complex returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static double getRefArrayValue1double ( final doubleRefArray1 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final doubleStub value [ : rank==1 ] contents = array . contents ; final doubleStub indexStub = contents [ placeIndex ] ; final double [ : rank==1 ] localArray = indexStub . localArray ; final double returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static int regionLow ( final Region1 r ) { final boolean regType = r . regType ; if ( regType ) { final int lw = Program . regionLowRegular ( r ) ; return lw ; }
 final int lw = Program . regionLowArbitrary ( r ) ; return lw ; }
 public static int regionLowRegular ( final Region1 r ) { final int lw = r . low0 ; return lw ; }
 public static int regionLowArbitrary ( final Region1 r ) { final int index = 0 ; final Point1 value [ : rank==1 ] array = r . pointArray ; final Point1 lowPoint = array [ index ] ; final int lw = lowPoint . f0 ; return lw ; }
 public static Dist1 restrictDist1 ( final Dist1 dn , final place p ) { final Region1 r = dn . dReg ; final boolean regType = r . regType ; if ( regType ) { final Dist1 regDist = Program . restrictDistRegular1 ( dn , p ) ; return regDist ; }
 final Dist1 arbDist = Program . restrictDistArbitrary1 ( dn , p ) ; return arbDist ; }
 public static Dist1 restrictDistRegular1 ( final Dist1 d , final place p ) { final int zero = 0 ; final int one = 1 ; final place h = here ; final Region1 dReg = d . dReg ; final Dist dDist = d . dDist ; final int dim = dReg . regSize ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) dRegReg = [ 0 : dimMinusOne ] ; final int stride1 = 1 ; final int dim1 = dReg . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = dReg . low0 ; final place value [ : rank==1 ] dPlace = ( place value [ : rank==1 ] ) ( dDist . placeArray ) ; final int value [ : rank==1 ] dCounts = ( int value [ : rank==1 ] ) ( dDist . counts ) ; final int index = p . id ; int numPoints = dCounts [ index ] ; final int rSizeNumPoints = numPoints ; final int rSize = numPoints - one ; final region ( : rank==1 ) tempReg = [ 0 : rSize ] ; final dist ( : rank==1 ) tempDist = [ 0 : rSize ] -> here ; final place value [ : rank==1 ] rPlace = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final int [ : rank==1 ] tempArray = ( int [ : rank==1 ] ) ( new int [ tempDist ] ) ; final boolean cond1 = numPoints > zero ; if ( cond1 ) { numPoints = 0 ; for ( point ( : rank==1 ) pt : dRegReg ) { final place dP = dPlace [ pt ] ; final boolean cond2 = p == dP ; if ( cond2 ) { final int i = pt [0] ; tempArray [ numPoints ] = ( i ) ; numPoints = numPoints + one ; }
 }
 }
 final Point1 value [ : rank==1 ] pointArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ tempReg ] ( point ( : rank==1 ) pt ) { final int idx = tempArray [ pt ] ; int f1 = idx / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point1 dpt = new Point1 ( f1 ) ; return dpt ; }
 ) ; final Region1 dpReg = new Region1 ( pointArray , rSizeNumPoints ) ; final Dist dpDist = new Dist ( rPlace , rSizeNumPoints ) ; final Dist1 dpDistn = new Dist1 ( dpReg , dpDist ) ; return dpDistn ; }
 public static Dist1 restrictDistArbitrary1 ( final Dist1 d , final place p ) { final int zero = 0 ; final int one = 1 ; final place h = here ; final Region1 dReg = d . dReg ; final Dist dDist = d . dDist ; final int dim = dReg . regSize ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) dRegReg = [ 0 : dimMinusOne ] ; final Point1 value [ : rank==1 ] dArray = ( Point1 value [ : rank==1 ] ) ( dReg . pointArray ) ; final place value [ : rank==1 ] dPlace = ( place value [ : rank==1 ] ) ( dDist . placeArray ) ; final int value [ : rank==1 ] dCounts = ( int value [ : rank==1 ] ) ( dDist . counts ) ; final int index = p . id ; int numPoints = dCounts [ index ] ; final int rSizeNumPoints = numPoints ; final int rSize = numPoints - one ; final region ( : rank==1 ) tempReg = [ 0 : rSize ] ; final dist ( : rank==1 ) tempDist = [ 0 : rSize ] -> here ; final place value [ : rank==1 ] rPlace = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final int [ : rank==1 ] tempArray = ( int [ : rank==1 ] ) ( new int [ tempDist ] ) ; final boolean cond1 = numPoints > zero ; if ( cond1 ) { numPoints = 0 ; for ( point ( : rank==1 ) pt : dRegReg ) { final place dP = dPlace [ pt ] ; final boolean cond2 = p == dP ; if ( cond2 ) { final int i = pt [0] ; tempArray [ numPoints ] = ( i ) ; numPoints = numPoints + one ; }
 }
 }
 final Point1 value [ : rank==1 ] pointArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ tempReg ] ( point ( : rank==1 ) pt ) { final int idx = tempArray [ pt ] ; final Point1 dpt = dArray [ idx ] ; return dpt ; }
 ) ; final Region1 dpReg = new Region1 ( pointArray , rSizeNumPoints ) ; final Dist dpDist = new Dist ( rPlace , rSizeNumPoints ) ; final Dist1 dpDistn = new Dist1 ( dpReg , dpDist ) ; return dpDistn ; }
 public static Region2 unionRegion2 ( final Region2 reg1 , final Region2 reg2 ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; int index1 = 0 ; int index2 = 0 ; int index = 0 ; final boolean regType1 = reg1 . regType ; final boolean regType2 = reg2 . regType ; Point2 value [ : rank==1 ] tempArr1 = reg1 . pointArray ; Point2 value [ : rank==1 ] tempArr2 = reg2 . pointArray ; if ( regType1 ) { final int stride2 = 1 ; final int dim2 = reg1 . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg1 . low1 ; final int dim1 = reg1 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg1 . low0 ; final int regSize1 = reg1 . regSize ; final int sizeMinusOne = regSize1 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr1 = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; }
 if ( regType2 ) { final int stride2 = 1 ; final int dim2 = reg2 . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg2 . low1 ; final int dim1 = reg2 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg2 . low0 ; final int regSize2 = reg2 . regSize ; final int sizeMinusOne = regSize2 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr2 = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; }
 final Point2 value [ : rank==1 ] arr1 = tempArr1 ; final Point2 value [ : rank==1 ] arr2 = tempArr2 ; final int size1 = reg1 . regSize ; final int size2 = reg2 . regSize ; boolean cond1 = index1 < size1 ; boolean cond2 = index2 < size2 ; boolean cond = cond1 && cond2 ; while ( cond ) { final Point2 p1 = arr1 [ index1 ] ; final Point2 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint2 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; final boolean gt = pointCompare == two ; if ( eq ) { index1 = index1 + one ; index2 = index2 + one ; }
 if ( lt ) { index1 = index1 + one ; }
 if ( gt ) { index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final int rSize = index ; final int sizeMinusOne = rSize - one ; final region ( : rank==1 ) tempReg = [ 0 : sizeMinusOne ] ; final dist ( : rank==1 ) tempDist = [ 0 : sizeMinusOne ] -> here ; final Point2 [ : rank==1 ] tempArr = new Point2 [ tempDist ] ; index1 = 0 ; index2 = 0 ; index = 0 ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; while ( cond ) { final Point2 p1 = arr1 [ index1 ] ; final Point2 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint2 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; final boolean gt = pointCompare == two ; if ( eq ) { tempArr [ index ] = ( p1 ) ; index1 = index1 + one ; index2 = index2 + one ; }
 if ( lt ) { tempArr [ index ] = ( p1 ) ; index1 = index1 + one ; }
 if ( gt ) { tempArr [ index ] = ( p2 ) ; index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { final Point2 tempArrPt = arr1 [ index1 ] ; tempArr [ index ] = ( tempArrPt ) ; index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { final Point2 tempArrPt = arr2 [ index2 ] ; tempArr [ index ] = ( tempArrPt ) ; index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final Point2 value [ : rank==1 ] arr = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ tempReg ] ( point ( : rank==1 ) pt ) { final Point2 retPoint = tempArr [ pt ] ; return retPoint ; }
 ) ; final Region2 unionReg = new Region2 ( arr , rSize ) ; return unionReg ; }
 public static Region1 unionRegion1 ( final Region1 reg1 , final Region1 reg2 ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; int index1 = 0 ; int index2 = 0 ; int index = 0 ; final boolean regType1 = reg1 . regType ; final boolean regType2 = reg2 . regType ; Point1 value [ : rank==1 ] tempArr1 = reg1 . pointArray ; Point1 value [ : rank==1 ] tempArr2 = reg2 . pointArray ; if ( regType1 ) { final int stride1 = 1 ; final int dim1 = reg1 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg1 . low0 ; final int regSize1 = reg1 . regSize ; final int sizeMinusOne = regSize1 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr1 = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point1 retPoint = new Point1 ( f1 ) ; return retPoint ; }
 ) ; }
 if ( regType2 ) { final int stride1 = 1 ; final int dim1 = reg2 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg2 . low0 ; final int regSize2 = reg2 . regSize ; final int sizeMinusOne = regSize2 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr2 = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point1 retPoint = new Point1 ( f1 ) ; return retPoint ; }
 ) ; }
 final Point1 value [ : rank==1 ] arr1 = tempArr1 ; final Point1 value [ : rank==1 ] arr2 = tempArr2 ; final int size1 = reg1 . regSize ; final int size2 = reg2 . regSize ; boolean cond1 = index1 < size1 ; boolean cond2 = index2 < size2 ; boolean cond = cond1 && cond2 ; while ( cond ) { final Point1 p1 = arr1 [ index1 ] ; final Point1 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint1 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; final boolean gt = pointCompare == two ; if ( eq ) { index1 = index1 + one ; index2 = index2 + one ; }
 if ( lt ) { index1 = index1 + one ; }
 if ( gt ) { index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final int rSize = index ; final int sizeMinusOne = rSize - one ; final region ( : rank==1 ) tempReg = [ 0 : sizeMinusOne ] ; final dist ( : rank==1 ) tempDist = [ 0 : sizeMinusOne ] -> here ; final Point1 [ : rank==1 ] tempArr = new Point1 [ tempDist ] ; index1 = 0 ; index2 = 0 ; index = 0 ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; while ( cond ) { final Point1 p1 = arr1 [ index1 ] ; final Point1 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint1 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; final boolean gt = pointCompare == two ; if ( eq ) { tempArr [ index ] = ( p1 ) ; index1 = index1 + one ; index2 = index2 + one ; }
 if ( lt ) { tempArr [ index ] = ( p1 ) ; index1 = index1 + one ; }
 if ( gt ) { tempArr [ index ] = ( p2 ) ; index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { final Point1 tempArrPt = arr1 [ index1 ] ; tempArr [ index ] = ( tempArrPt ) ; index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { final Point1 tempArrPt = arr2 [ index2 ] ; tempArr [ index ] = ( tempArrPt ) ; index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final Point1 value [ : rank==1 ] arr = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ tempReg ] ( point ( : rank==1 ) pt ) { final Point1 retPoint = tempArr [ pt ] ; return retPoint ; }
 ) ; final Region1 unionReg = new Region1 ( arr , rSize ) ; return unionReg ; }
 public static void setRefArrayValue1Particle ( final ParticleRefArray1 array , final int index , final Particle val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ParticleStub value [ : rank==1 ] contents = array . contents ; final ParticleStub indexStub = contents [ placeIndex ] ; final Particle [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static String toStringRegion1 ( final Region1 r ) { String str = "" ; final int dim = r . regSize ; final int one = 1 ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) rReg = [ 0 : dimMinusOne ] ; final boolean regType = r . regType ; if ( regType ) { final int stride1 = 1 ; final int dim1 = r . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = r . low0 ; for ( point ( : rank==1 ) pt1 : rReg ) { final int ordl = pt1 [0] ; int f1 = ordl / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; Point1 pt = new Point1 ( f1 ) ; String ptStr = Program . toStringPoint1 ( pt ) ; String lBrace = "{" ; String rBrace = "}" ; String endLine = "\n" ; String colon = ":" ; str = str + lBrace ; str = str + pt1 ; str = str + colon ; str = str + ptStr ; str = str + rBrace ; str = str + endLine ; }
 return str ; }
 else { final Point1 value [ : rank==1 ] regArray = ( Point1 value [ : rank==1 ] ) ( r . pointArray ) ; for ( point ( : rank==1 ) pt1 : rReg ) { Point1 pt = regArray [ pt1 ] ; String ptStr = Program . toStringPoint1 ( pt ) ; String lBrace = "{" ; String rBrace = "}" ; String endLine = "\n" ; String colon = ":" ; str = str + lBrace ; str = str + pt1 ; str = str + colon ; str = str + ptStr ; str = str + rBrace ; str = str + endLine ; }
 return str ; }
 }
 public static boolean regionContainsPoint1 ( final Region1 r , final Point1 target ) { final int temp = Program . searchPointInRegion1 ( r , target ) ; final int zero = 0 ; final boolean containsPt = temp >= zero ; return containsPt ; }
 public static boolean regionContainsPoint2 ( final Region2 r , final Point2 target ) { final int temp = Program . searchPointInRegion2 ( r , target ) ; final int zero = 0 ; final boolean containsPt = temp >= zero ; return containsPt ; }
 public static int getDistLocalCount2 ( final Dist2 dn , final int placeIndex ) { final Dist d = dn . dDist ; final int value [ : rank==1 ] counts = d . counts ; final int localCount = counts [ placeIndex ] ; return localCount ; }
 public static int getDistLocalCount3 ( final Dist3 dn , final int placeIndex ) { final Dist d = dn . dDist ; final int value [ : rank==1 ] counts = d . counts ; final int localCount = counts [ placeIndex ] ; return localCount ; }
 public static Region1 getRefArrayValue1Region1 ( final Region1RefArray1 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final Region1Stub value [ : rank==1 ] contents = array . contents ; final Region1Stub indexStub = contents [ placeIndex ] ; final Region1 [ : rank==1 ] localArray = indexStub . localArray ; final Region1 returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static int getDistLocalCount1 ( final Dist1 dn , final int placeIndex ) { final Dist d = dn . dDist ; final int value [ : rank==1 ] counts = d . counts ; final int localCount = counts [ placeIndex ] ; return localCount ; }
 public static Dist2 getPlaceDist2 ( final Region2 r , final place p ) { final int rSize = r . regSize ; final int one = 1 ; final int rSizeMinusOne = rSize - one ; final region ( : rank==1 ) dReg = [ 0 : rSizeMinusOne ] ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ dReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final Dist pointDist = new Dist ( vPlaceArray , rSize ) ; final Dist2 retDist = new Dist2 ( r , pointDist ) ; return retDist ; }
 public static Dist1 getPlaceDist1 ( final Region1 r , final place p ) { final int rSize = r . regSize ; final int one = 1 ; final int rSizeMinusOne = rSize - one ; final region ( : rank==1 ) dReg = [ 0 : rSizeMinusOne ] ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ dReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final Dist pointDist = new Dist ( vPlaceArray , rSize ) ; final Dist1 retDist = new Dist1 ( r , pointDist ) ; return retDist ; }
 public static Dist2 restrictDist2 ( final Dist2 dn , final place p ) { final Region2 r = dn . dReg ; final boolean regType = r . regType ; if ( regType ) { final Dist2 regDist = Program . restrictDistRegular2 ( dn , p ) ; return regDist ; }
 final Dist2 arbDist = Program . restrictDistArbitrary2 ( dn , p ) ; return arbDist ; }
 public static Dist2 restrictDistRegular2 ( final Dist2 d , final place p ) { final int zero = 0 ; final int one = 1 ; final place h = here ; final Region2 dReg = d . dReg ; final Dist dDist = d . dDist ; final int dim = dReg . regSize ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) dRegReg = [ 0 : dimMinusOne ] ; final int stride2 = 1 ; final int dim2 = dReg . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = dReg . low1 ; final int dim1 = dReg . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = dReg . low0 ; final place value [ : rank==1 ] dPlace = ( place value [ : rank==1 ] ) ( dDist . placeArray ) ; final int value [ : rank==1 ] dCounts = ( int value [ : rank==1 ] ) ( dDist . counts ) ; final int index = p . id ; int numPoints = dCounts [ index ] ; final int rSizeNumPoints = numPoints ; final int rSize = numPoints - one ; final region ( : rank==1 ) tempReg = [ 0 : rSize ] ; final dist ( : rank==1 ) tempDist = [ 0 : rSize ] -> here ; final place value [ : rank==1 ] rPlace = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final int [ : rank==1 ] tempArray = ( int [ : rank==1 ] ) ( new int [ tempDist ] ) ; final boolean cond1 = numPoints > zero ; if ( cond1 ) { numPoints = 0 ; for ( point ( : rank==1 ) pt : dRegReg ) { final place dP = dPlace [ pt ] ; final boolean cond2 = p == dP ; if ( cond2 ) { final int i = pt [0] ; tempArray [ numPoints ] = ( i ) ; numPoints = numPoints + one ; }
 }
 }
 final Point2 value [ : rank==1 ] pointArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ tempReg ] ( point ( : rank==1 ) pt ) { final int idx = tempArray [ pt ] ; int f2 = idx / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = idx / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point2 dpt = new Point2 ( f1 , f2 ) ; return dpt ; }
 ) ; final Region2 dpReg = new Region2 ( pointArray , rSizeNumPoints ) ; final Dist dpDist = new Dist ( rPlace , rSizeNumPoints ) ; final Dist2 dpDistn = new Dist2 ( dpReg , dpDist ) ; return dpDistn ; }
 public static Dist2 restrictDistArbitrary2 ( final Dist2 d , final place p ) { final int zero = 0 ; final int one = 1 ; final place h = here ; final Region2 dReg = d . dReg ; final Dist dDist = d . dDist ; final int dim = dReg . regSize ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) dRegReg = [ 0 : dimMinusOne ] ; final Point2 value [ : rank==1 ] dArray = ( Point2 value [ : rank==1 ] ) ( dReg . pointArray ) ; final place value [ : rank==1 ] dPlace = ( place value [ : rank==1 ] ) ( dDist . placeArray ) ; final int value [ : rank==1 ] dCounts = ( int value [ : rank==1 ] ) ( dDist . counts ) ; final int index = p . id ; int numPoints = dCounts [ index ] ; final int rSizeNumPoints = numPoints ; final int rSize = numPoints - one ; final region ( : rank==1 ) tempReg = [ 0 : rSize ] ; final dist ( : rank==1 ) tempDist = [ 0 : rSize ] -> here ; final place value [ : rank==1 ] rPlace = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final int [ : rank==1 ] tempArray = ( int [ : rank==1 ] ) ( new int [ tempDist ] ) ; final boolean cond1 = numPoints > zero ; if ( cond1 ) { numPoints = 0 ; for ( point ( : rank==1 ) pt : dRegReg ) { final place dP = dPlace [ pt ] ; final boolean cond2 = p == dP ; if ( cond2 ) { final int i = pt [0] ; tempArray [ numPoints ] = ( i ) ; numPoints = numPoints + one ; }
 }
 }
 final Point2 value [ : rank==1 ] pointArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ tempReg ] ( point ( : rank==1 ) pt ) { final int idx = tempArray [ pt ] ; final Point2 dpt = dArray [ idx ] ; return dpt ; }
 ) ; final Region2 dpReg = new Region2 ( pointArray , rSizeNumPoints ) ; final Dist dpDist = new Dist ( rPlace , rSizeNumPoints ) ; final Dist2 dpDistn = new Dist2 ( dpReg , dpDist ) ; return dpDistn ; }
 public static Dist3 restrictDist3 ( final Dist3 dn , final place p ) { final Region3 r = dn . dReg ; final boolean regType = r . regType ; if ( regType ) { final Dist3 regDist = Program . restrictDistRegular3 ( dn , p ) ; return regDist ; }
 final Dist3 arbDist = Program . restrictDistArbitrary3 ( dn , p ) ; return arbDist ; }
 public static Dist3 restrictDistRegular3 ( final Dist3 d , final place p ) { final int zero = 0 ; final int one = 1 ; final place h = here ; final Region3 dReg = d . dReg ; final Dist dDist = d . dDist ; final int dim = dReg . regSize ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) dRegReg = [ 0 : dimMinusOne ] ; final int stride3 = 1 ; final int dim3 = dReg . dim2 ; final int stride2 = stride3 * dim3 ; final int regLow3 = dReg . low2 ; final int dim2 = dReg . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = dReg . low1 ; final int dim1 = dReg . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = dReg . low0 ; final place value [ : rank==1 ] dPlace = ( place value [ : rank==1 ] ) ( dDist . placeArray ) ; final int value [ : rank==1 ] dCounts = ( int value [ : rank==1 ] ) ( dDist . counts ) ; final int index = p . id ; int numPoints = dCounts [ index ] ; final int rSizeNumPoints = numPoints ; final int rSize = numPoints - one ; final region ( : rank==1 ) tempReg = [ 0 : rSize ] ; final dist ( : rank==1 ) tempDist = [ 0 : rSize ] -> here ; final place value [ : rank==1 ] rPlace = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final int [ : rank==1 ] tempArray = ( int [ : rank==1 ] ) ( new int [ tempDist ] ) ; final boolean cond1 = numPoints > zero ; if ( cond1 ) { numPoints = 0 ; for ( point ( : rank==1 ) pt : dRegReg ) { final place dP = dPlace [ pt ] ; final boolean cond2 = p == dP ; if ( cond2 ) { final int i = pt [0] ; tempArray [ numPoints ] = ( i ) ; numPoints = numPoints + one ; }
 }
 }
 final Point3 value [ : rank==1 ] pointArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ tempReg ] ( point ( : rank==1 ) pt ) { final int idx = tempArray [ pt ] ; int f3 = idx / stride3 ; f3 = f3 % dim3 ; f3 = f3 + regLow3 ; int f2 = idx / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = idx / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point3 dpt = new Point3 ( f1 , f2 , f3 ) ; return dpt ; }
 ) ; final Region3 dpReg = new Region3 ( pointArray , rSizeNumPoints ) ; final Dist dpDist = new Dist ( rPlace , rSizeNumPoints ) ; final Dist3 dpDistn = new Dist3 ( dpReg , dpDist ) ; return dpDistn ; }
 public static Dist3 restrictDistArbitrary3 ( final Dist3 d , final place p ) { final int zero = 0 ; final int one = 1 ; final place h = here ; final Region3 dReg = d . dReg ; final Dist dDist = d . dDist ; final int dim = dReg . regSize ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) dRegReg = [ 0 : dimMinusOne ] ; final Point3 value [ : rank==1 ] dArray = ( Point3 value [ : rank==1 ] ) ( dReg . pointArray ) ; final place value [ : rank==1 ] dPlace = ( place value [ : rank==1 ] ) ( dDist . placeArray ) ; final int value [ : rank==1 ] dCounts = ( int value [ : rank==1 ] ) ( dDist . counts ) ; final int index = p . id ; int numPoints = dCounts [ index ] ; final int rSizeNumPoints = numPoints ; final int rSize = numPoints - one ; final region ( : rank==1 ) tempReg = [ 0 : rSize ] ; final dist ( : rank==1 ) tempDist = [ 0 : rSize ] -> here ; final place value [ : rank==1 ] rPlace = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final int [ : rank==1 ] tempArray = ( int [ : rank==1 ] ) ( new int [ tempDist ] ) ; final boolean cond1 = numPoints > zero ; if ( cond1 ) { numPoints = 0 ; for ( point ( : rank==1 ) pt : dRegReg ) { final place dP = dPlace [ pt ] ; final boolean cond2 = p == dP ; if ( cond2 ) { final int i = pt [0] ; tempArray [ numPoints ] = ( i ) ; numPoints = numPoints + one ; }
 }
 }
 final Point3 value [ : rank==1 ] pointArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ tempReg ] ( point ( : rank==1 ) pt ) { final int idx = tempArray [ pt ] ; final Point3 dpt = dArray [ idx ] ; return dpt ; }
 ) ; final Region3 dpReg = new Region3 ( pointArray , rSizeNumPoints ) ; final Dist dpDist = new Dist ( rPlace , rSizeNumPoints ) ; final Dist3 dpDistn = new Dist3 ( dpReg , dpDist ) ; return dpDistn ; }
 public static Dist3 getPlaceDist3 ( final Region3 r , final place p ) { final int rSize = r . regSize ; final int one = 1 ; final int rSizeMinusOne = rSize - one ; final region ( : rank==1 ) dReg = [ 0 : rSizeMinusOne ] ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ dReg ] ( point ( : rank==1 ) pt ) { return p ; }
 ) ; final Dist pointDist = new Dist ( vPlaceArray , rSize ) ; final Dist3 retDist = new Dist3 ( r , pointDist ) ; return retDist ; }
 public static void setRefArrayValue2double ( final doubleRefArray2 array , final int index , final double val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final doubleStub value [ : rank==1 ] contents = array . contents ; final doubleStub indexStub = contents [ placeIndex ] ; final double [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static int binarySearchRegion2 ( final Region2 r , final Point2 target ) { final Point2 value [ : rank==1 ] pointArray = ( Point2 value [ : rank==1 ] ) ( r . pointArray ) ; int start = 0 ; int end = r . regSize ; final int zero = 0 ; final int one = 1 ; final int two = 2 ; end = end - one ; int result = zero - one ; boolean notDone = start <= end ; while ( notDone ) { int mid = start + end ; mid = mid / two ; final Point2 temp = pointArray [ mid ] ; final int pointCompare = Program . comparePoint2 ( target , temp ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; if ( eq ) { return mid ; }
 else { if ( lt ) { end = mid - one ; }
 else { start = mid + one ; }
 }
 notDone = start <= end ; }
 return result ; }
 public static int binarySearchRegion1 ( final Region1 r , final Point1 target ) { final Point1 value [ : rank==1 ] pointArray = ( Point1 value [ : rank==1 ] ) ( r . pointArray ) ; int start = 0 ; int end = r . regSize ; final int zero = 0 ; final int one = 1 ; final int two = 2 ; end = end - one ; int result = zero - one ; boolean notDone = start <= end ; while ( notDone ) { int mid = start + end ; mid = mid / two ; final Point1 temp = pointArray [ mid ] ; final int pointCompare = Program . comparePoint1 ( target , temp ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; if ( eq ) { return mid ; }
 else { if ( lt ) { end = mid - one ; }
 else { start = mid + one ; }
 }
 notDone = start <= end ; }
 return result ; }
 public static void setRefArrayValue2Particle ( final ParticleRefArray2 array , final int index , final Particle val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ParticleStub value [ : rank==1 ] contents = array . contents ; final ParticleStub indexStub = contents [ placeIndex ] ; final Particle [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static int binarySearchRegion3 ( final Region3 r , final Point3 target ) { final Point3 value [ : rank==1 ] pointArray = ( Point3 value [ : rank==1 ] ) ( r . pointArray ) ; int start = 0 ; int end = r . regSize ; final int zero = 0 ; final int one = 1 ; final int two = 2 ; end = end - one ; int result = zero - one ; boolean notDone = start <= end ; while ( notDone ) { int mid = start + end ; mid = mid / two ; final Point3 temp = pointArray [ mid ] ; final int pointCompare = Program . comparePoint3 ( target , temp ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; if ( eq ) { return mid ; }
 else { if ( lt ) { end = mid - one ; }
 else { start = mid + one ; }
 }
 notDone = start <= end ; }
 return result ; }
 public static Dist1 getUniqueDist ( ) { final int one = 1 ; final int zero = 0 ; final int maxPlaces = place.MAX_PLACES ; final int rSize = maxPlaces - one ; final region ( : rank==1 ) placeRegion = [ 0 : rSize ] ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ placeRegion ] ( point ( : rank==1 ) p ) { final int i = p [0] ; final place pl1 = place.places ( i ) ; return pl1 ; }
 ) ; final int minusOne = zero - one ; final region ( : rank==1 ) pointRegion = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] pointArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ pointRegion ] ( point ( : rank==1 ) p ) { final Point1 pt1 = new Point1 ( zero ) ; return pt1 ; }
 ) ; final Region1 reg = new Region1 ( pointArray , maxPlaces , zero , maxPlaces ) ; final Dist pointDist1 = new Dist ( vPlaceArray , maxPlaces ) ; final Dist1 retDist = new Dist1 ( reg , pointDist1 ) ; return retDist ; }
 public static void setRefArrayValue3double ( final doubleRefArray3 array , final int index , final double val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist3 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final doubleStub value [ : rank==1 ] contents = array . contents ; final doubleStub indexStub = contents [ placeIndex ] ; final double [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static int regionHigh ( final Region1 r ) { final boolean regType = r . regType ; if ( regType ) { final int hgh = Program . regionHighRegular ( r ) ; return hgh ; }
 final int hgh = Program . regionHighArbitrary ( r ) ; return hgh ; }
 public static int regionHighRegular ( final Region1 r ) { final int one = 1 ; final int index = r . dim0 ; final int offset = r . low0 ; final int hgh = index - one ; final int hghOff = hgh + offset ; return hghOff ; }
 public static int regionHighArbitrary ( final Region1 r ) { final int one = 1 ; final Point1 value [ : rank==1 ] array = r . pointArray ; int index = r . regSize ; index = index - one ; final Point1 highPoint = array [ index ] ; final int hgh = highPoint . f0 ; return hgh ; }
 public static int getRefArrayValue1int ( final intRefArray1 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final intStub value [ : rank==1 ] contents = array . contents ; final intStub indexStub = contents [ placeIndex ] ; final int [ : rank==1 ] localArray = indexStub . localArray ; final int returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static int comparePoint1 ( final Point1 pt1 , final Point1 pt2 ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; int point1 = 0 ; int point2 = 0 ; boolean lt = false ; boolean gt = false ; point1 = pt1 . f0 ; point2 = pt2 . f0 ; lt = point1 < point2 ; gt = point1 > point2 ; if ( lt ) { return one ; }
 if ( gt ) { return two ; }
 return zero ; }
 public static int comparePoint2 ( final Point2 pt1 , final Point2 pt2 ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; int point1 = 0 ; int point2 = 0 ; boolean lt = false ; boolean gt = false ; point1 = pt1 . f0 ; point2 = pt2 . f0 ; lt = point1 < point2 ; gt = point1 > point2 ; if ( lt ) { return one ; }
 if ( gt ) { return two ; }
 point1 = pt1 . f1 ; point2 = pt2 . f1 ; lt = point1 < point2 ; gt = point1 > point2 ; if ( lt ) { return one ; }
 if ( gt ) { return two ; }
 return zero ; }
 public static Point2 regionOrdinalPoint2 ( final Region2 reg , final int ordl ) { final boolean regType = reg . regType ; if ( regType ) { final Point2 pt = Program . regionOrdinalPointRegular2 ( reg , ordl ) ; return pt ; }
 final Point2 pt = Program . regionOrdinalPointArbitrary2 ( reg , ordl ) ; return pt ; }
 public static Point2 regionOrdinalPointRegular2 ( final Region2 reg , final int ordl ) { final int stride2 = 1 ; final int dim2 = reg . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg . low1 ; final int dim1 = reg . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg . low0 ; int f2 = ordl / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = ordl / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point2 pt = new Point2 ( f1 , f2 ) ; return pt ; }
 public static Point2 regionOrdinalPointArbitrary2 ( final Region2 reg , final int ordl ) { final Point2 value [ : rank==1 ] pointArray = reg . pointArray ; final Point2 pt = pointArray [ ordl ] ; return pt ; }
 public static Point1 regionOrdinalPoint1 ( final Region1 reg , final int ordl ) { final boolean regType = reg . regType ; if ( regType ) { final Point1 pt = Program . regionOrdinalPointRegular1 ( reg , ordl ) ; return pt ; }
 final Point1 pt = Program . regionOrdinalPointArbitrary1 ( reg , ordl ) ; return pt ; }
 public static Point1 regionOrdinalPointRegular1 ( final Region1 reg , final int ordl ) { final int stride1 = 1 ; final int dim1 = reg . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg . low0 ; int f1 = ordl / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point1 pt = new Point1 ( f1 ) ; return pt ; }
 public static Point1 regionOrdinalPointArbitrary1 ( final Region1 reg , final int ordl ) { final Point1 value [ : rank==1 ] pointArray = reg . pointArray ; final Point1 pt = pointArray [ ordl ] ; return pt ; }
 public static int comparePoint3 ( final Point3 pt1 , final Point3 pt2 ) { final int zero = 0 ; final int one = 1 ; final int two = 2 ; int point1 = 0 ; int point2 = 0 ; boolean lt = false ; boolean gt = false ; point1 = pt1 . f0 ; point2 = pt2 . f0 ; lt = point1 < point2 ; gt = point1 > point2 ; if ( lt ) { return one ; }
 if ( gt ) { return two ; }
 point1 = pt1 . f1 ; point2 = pt2 . f1 ; lt = point1 < point2 ; gt = point1 > point2 ; if ( lt ) { return one ; }
 if ( gt ) { return two ; }
 point1 = pt1 . f2 ; point2 = pt2 . f2 ; lt = point1 < point2 ; gt = point1 > point2 ; if ( lt ) { return one ; }
 if ( gt ) { return two ; }
 return zero ; }
 public static double getRefArrayValue3double ( final doubleRefArray3 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist3 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final doubleStub value [ : rank==1 ] contents = array . contents ; final doubleStub indexStub = contents [ placeIndex ] ; final double [ : rank==1 ] localArray = indexStub . localArray ; final double returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static void setRefArrayValue1int ( final intRefArray1 array , final int index , final int val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final intStub value [ : rank==1 ] contents = array . contents ; final intStub indexStub = contents [ placeIndex ] ; final int [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static String toStringDist2 ( final Dist2 d ) { String str = "" ; final Region2 r = d . dReg ; final Dist pointDist = d . dDist ; final place value [ : rank==1 ] placeDist = pointDist . placeArray ; final int dim = r . regSize ; final int one = 1 ; final int dimMinusOne = dim - one ; final region ( : rank==1 ) rReg = [ 0 : dimMinusOne ] ; final boolean regType = r . regType ; if ( regType ) { final int stride2 = 1 ; final int dim2 = r . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = r . low1 ; final int dim1 = r . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = r . low0 ; for ( point ( : rank==1 ) pt1 : rReg ) { final int ordl = pt1 [0] ; int f2 = ordl / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = ordl / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; Point2 pt = new Point2 ( f1 , f2 ) ; String ptStr = Program . toStringPoint2 ( pt ) ; place plStr = placeDist [ pt1 ] ; String lBrace = "{" ; String arrow = "->" ; String rBrace = "}" ; String endLine = "\n" ; String colon = ":" ; str = str + lBrace ; str = str + pt1 ; str = str + colon ; str = str + ptStr ; str = str + arrow ; str = str + plStr ; str = str + rBrace ; str = str + endLine ; }
 return str ; }
 else { for ( point ( : rank==1 ) pt1 : rReg ) { Point2 value [ : rank==1 ] regArray = r . pointArray ; Point2 pt = regArray [ pt1 ] ; String ptStr = Program . toStringPoint2 ( pt ) ; place plStr = placeDist [ pt1 ] ; String lBrace = "{" ; String arrow = "->" ; String rBrace = "}" ; String endLine = "\n" ; String colon = ":" ; str = str + lBrace ; str = str + pt1 ; str = str + colon ; str = str + ptStr ; str = str + arrow ; str = str + plStr ; str = str + rBrace ; str = str + endLine ; }
 return str ; }
 }
 public static Dist1 getBlockDist1 ( final Region1 r ) { final int rSize = r . regSize ; final int zero = 0 ; final int one = 1 ; final int rSizeMinusOne = rSize - one ; final region ( : rank==1 ) dReg = [ 0 : rSizeMinusOne ] ; final dist ( : rank==1 ) dDist = [ 0 : rSizeMinusOne ] -> here ; final place [ : rank==1 ] placeArray = ( place [ : rank==1 ] ) ( new place [ dDist ] ) ; final int N = place.MAX_PLACES ; final int q = rSize % N ; final int p = rSize / N ; int blockSize = p + one ; int arraySize = q * blockSize ; int offset = 0 ; place initPlace = place.FIRST_PLACE ; Program . getCyclic ( placeArray , arraySize , initPlace , blockSize ) ; int remainingPlaces = N - q ; final boolean cond = remainingPlaces == zero ; if ( cond ) { final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ dReg ] ( point ( : rank==1 ) pt ) { final place tempPl = placeArray [ pt ] ; return tempPl ; }
 ) ; final Dist pointDist1 = new Dist ( vPlaceArray , rSize ) ; final Dist1 retDist = new Dist1 ( r , pointDist1 ) ; return retDist ; }
 offset = arraySize ; blockSize = p ; arraySize = remainingPlaces * blockSize ; initPlace = place.places ( q ) ; int chunk = blockSize ; final boolean ifCond = blockSize > arraySize ; if ( ifCond ) { chunk = arraySize ; }
 int index = offset ; int dSize = index + chunk ; dSize = dSize - one ; final int ub0 = chunk - one ; final region ( : rank==1 ) pointReg0 = [ 0 : ub0 ] ; for ( point ( : rank==1 ) pt : pointReg0 ) { final point ( : rank==1 ) tempPt = pt + [ index ] ; placeArray [ tempPt ] = ( initPlace ) ; }
 index = index + chunk ; arraySize = arraySize - chunk ; place pl = initPlace . next ( ) ; boolean whileCond = arraySize != zero ; while ( whileCond ) { final boolean tailCond = chunk > arraySize ; if ( tailCond ) { dSize = index + arraySize ; dSize = dSize - one ; final int ub = arraySize - one ; final region ( : rank==1 ) pointReg1 = [ 0 : ub ] ; for ( point ( : rank==1 ) pt : pointReg1 ) { final point ( : rank==1 ) tempPt = pt + [ index ] ; placeArray [ tempPt ] = ( pl ) ; }
 arraySize = 0 ; }
 else { dSize = index + chunk ; dSize = dSize - one ; final int ub = chunk - one ; final region ( : rank==1 ) pointReg1 = [ 0 : ub ] ; for ( point ( : rank==1 ) pt : pointReg1 ) { final point ( : rank==1 ) tempPt = pt + [ index ] ; placeArray [ tempPt ] = ( pl ) ; }
 index = index + chunk ; arraySize = arraySize - chunk ; }
 pl = pl . next ( ) ; whileCond = arraySize != zero ; }
 final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ dReg ] ( point ( : rank==1 ) pt ) { final place tempPl = placeArray [ pt ] ; return tempPl ; }
 ) ; final Dist pointDist1 = new Dist ( vPlaceArray , rSize ) ; final Dist1 retDist = new Dist1 ( r , pointDist1 ) ; return retDist ; }
 public static boolean getRefArrayValue1boolean ( final booleanRefArray1 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final booleanStub value [ : rank==1 ] contents = array . contents ; final booleanStub indexStub = contents [ placeIndex ] ; final boolean [ : rank==1 ] localArray = indexStub . localArray ; final boolean returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static Dist1 unionDist1 ( final Dist1 d1 , final Dist1 d2 ) { int index1 = 0 ; int index2 = 0 ; int index = 0 ; final int zero = 0 ; final int one = 1 ; final Region1 reg1 = d1 . dReg ; final Region1 reg2 = d2 . dReg ; final boolean regType1 = reg1 . regType ; final boolean regType2 = reg2 . regType ; Point1 value [ : rank==1 ] tempArr1 = reg1 . pointArray ; Point1 value [ : rank==1 ] tempArr2 = reg2 . pointArray ; if ( regType1 ) { final int stride1 = 1 ; final int dim1 = reg1 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg1 . low0 ; final int regSize1 = reg1 . regSize ; final int sizeMinusOne = regSize1 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr1 = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point1 retPoint = new Point1 ( f1 ) ; return retPoint ; }
 ) ; }
 if ( regType2 ) { final int stride1 = 1 ; final int dim1 = reg2 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg2 . low0 ; final int regSize2 = reg2 . regSize ; final int sizeMinusOne = regSize2 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr2 = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point1 retPoint = new Point1 ( f1 ) ; return retPoint ; }
 ) ; }
 final Point1 value [ : rank==1 ] arr1 = tempArr1 ; final Point1 value [ : rank==1 ] arr2 = tempArr2 ; final Dist dDist1 = d1 . dDist ; final place value [ : rank==1 ] dPlaceArray1 = dDist1 . placeArray ; final Dist dDist2 = d2 . dDist ; final place value [ : rank==1 ] dPlaceArray2 = dDist2 . placeArray ; final int size1 = reg1 . regSize ; final int size2 = reg2 . regSize ; final int rSize = size1 + size2 ; final int sizeMinusOne = rSize - one ; final region ( : rank==1 ) tempReg = [ 0 : sizeMinusOne ] ; final dist ( : rank==1 ) tempDist = [ 0 : sizeMinusOne ] -> here ; final Point1 [ : rank==1 ] tempArr = new Point1 [ tempDist ] ; final place [ : rank==1 ] placeArray = ( place [ : rank==1 ] ) ( new place [ tempDist ] ) ; boolean cond1 = index1 < size1 ; boolean cond2 = index2 < size2 ; boolean cond = cond1 && cond2 ; while ( cond ) { final Point1 p1 = arr1 [ index1 ] ; final Point1 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint1 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; if ( eq ) { final String errMsg = "Non-disjoint region in a disjoint union" ; throw new RuntimeException ( errMsg ) ; }
 if ( lt ) { tempArr [ index ] = ( p1 ) ; final place pPlace = dPlaceArray1 [ index1 ] ; placeArray [ index ] = ( pPlace ) ; index1 = index1 + one ; }
 else { tempArr [ index ] = ( p2 ) ; final place pPlace = dPlaceArray2 [ index2 ] ; placeArray [ index ] = ( pPlace ) ; index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { final Point1 tempArrPt = arr1 [ index1 ] ; tempArr [ index ] = ( tempArrPt ) ; final place pPlace = dPlaceArray1 [ index1 ] ; placeArray [ index ] = ( pPlace ) ; index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { final Point1 tempArrPt = arr2 [ index2 ] ; tempArr [ index ] = ( tempArrPt ) ; final place pPlace = dPlaceArray2 [ index2 ] ; placeArray [ index ] = ( pPlace ) ; index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final Point1 value [ : rank==1 ] arr = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ tempReg ] ( point ( : rank==1 ) pt ) { final Point1 retPoint = tempArr [ pt ] ; return retPoint ; }
 ) ; final Region1 unionReg = new Region1 ( arr , rSize ) ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { final place tempPl = placeArray [ pt ] ; return tempPl ; }
 ) ; final Dist pointDist = new Dist ( vPlaceArray , rSize ) ; final Dist1 unionDist = new Dist1 ( unionReg , pointDist ) ; return unionDist ; }
 public static Dist2 unionDist2 ( final Dist2 d1 , final Dist2 d2 ) { int index1 = 0 ; int index2 = 0 ; int index = 0 ; final int zero = 0 ; final int one = 1 ; final Region2 reg1 = d1 . dReg ; final Region2 reg2 = d2 . dReg ; final boolean regType1 = reg1 . regType ; final boolean regType2 = reg2 . regType ; Point2 value [ : rank==1 ] tempArr1 = reg1 . pointArray ; Point2 value [ : rank==1 ] tempArr2 = reg2 . pointArray ; if ( regType1 ) { final int stride2 = 1 ; final int dim2 = reg1 . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg1 . low1 ; final int dim1 = reg1 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg1 . low0 ; final int regSize1 = reg1 . regSize ; final int sizeMinusOne = regSize1 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr1 = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; }
 if ( regType2 ) { final int stride2 = 1 ; final int dim2 = reg2 . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg2 . low1 ; final int dim1 = reg2 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg2 . low0 ; final int regSize2 = reg2 . regSize ; final int sizeMinusOne = regSize2 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr2 = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; }
 final Point2 value [ : rank==1 ] arr1 = tempArr1 ; final Point2 value [ : rank==1 ] arr2 = tempArr2 ; final Dist dDist1 = d1 . dDist ; final place value [ : rank==1 ] dPlaceArray1 = dDist1 . placeArray ; final Dist dDist2 = d2 . dDist ; final place value [ : rank==1 ] dPlaceArray2 = dDist2 . placeArray ; final int size1 = reg1 . regSize ; final int size2 = reg2 . regSize ; final int rSize = size1 + size2 ; final int sizeMinusOne = rSize - one ; final region ( : rank==1 ) tempReg = [ 0 : sizeMinusOne ] ; final dist ( : rank==1 ) tempDist = [ 0 : sizeMinusOne ] -> here ; final Point2 [ : rank==1 ] tempArr = new Point2 [ tempDist ] ; final place [ : rank==1 ] placeArray = ( place [ : rank==1 ] ) ( new place [ tempDist ] ) ; boolean cond1 = index1 < size1 ; boolean cond2 = index2 < size2 ; boolean cond = cond1 && cond2 ; while ( cond ) { final Point2 p1 = arr1 [ index1 ] ; final Point2 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint2 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; if ( eq ) { final String errMsg = "Non-disjoint region in a disjoint union" ; throw new RuntimeException ( errMsg ) ; }
 if ( lt ) { tempArr [ index ] = ( p1 ) ; final place pPlace = dPlaceArray1 [ index1 ] ; placeArray [ index ] = ( pPlace ) ; index1 = index1 + one ; }
 else { tempArr [ index ] = ( p2 ) ; final place pPlace = dPlaceArray2 [ index2 ] ; placeArray [ index ] = ( pPlace ) ; index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { final Point2 tempArrPt = arr1 [ index1 ] ; tempArr [ index ] = ( tempArrPt ) ; final place pPlace = dPlaceArray1 [ index1 ] ; placeArray [ index ] = ( pPlace ) ; index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { final Point2 tempArrPt = arr2 [ index2 ] ; tempArr [ index ] = ( tempArrPt ) ; final place pPlace = dPlaceArray2 [ index2 ] ; placeArray [ index ] = ( pPlace ) ; index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final Point2 value [ : rank==1 ] arr = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ tempReg ] ( point ( : rank==1 ) pt ) { final Point2 retPoint = tempArr [ pt ] ; return retPoint ; }
 ) ; final Region2 unionReg = new Region2 ( arr , rSize ) ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { final place tempPl = placeArray [ pt ] ; return tempPl ; }
 ) ; final Dist pointDist = new Dist ( vPlaceArray , rSize ) ; final Dist2 unionDist = new Dist2 ( unionReg , pointDist ) ; return unionDist ; }
 public static Point3 regionOrdinalPoint3 ( final Region3 reg , final int ordl ) { final boolean regType = reg . regType ; if ( regType ) { final Point3 pt = Program . regionOrdinalPointRegular3 ( reg , ordl ) ; return pt ; }
 final Point3 pt = Program . regionOrdinalPointArbitrary3 ( reg , ordl ) ; return pt ; }
 public static Point3 regionOrdinalPointRegular3 ( final Region3 reg , final int ordl ) { final int stride3 = 1 ; final int dim3 = reg . dim2 ; final int stride2 = stride3 * dim3 ; final int regLow3 = reg . low2 ; final int dim2 = reg . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg . low1 ; final int dim1 = reg . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg . low0 ; int f3 = ordl / stride3 ; f3 = f3 % dim3 ; f3 = f3 + regLow3 ; int f2 = ordl / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = ordl / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point3 pt = new Point3 ( f1 , f2 , f3 ) ; return pt ; }
 public static Point3 regionOrdinalPointArbitrary3 ( final Region3 reg , final int ordl ) { final Point3 value [ : rank==1 ] pointArray = reg . pointArray ; final Point3 pt = pointArray [ ordl ] ; return pt ; }
 public static Dist3 unionDist3 ( final Dist3 d1 , final Dist3 d2 ) { int index1 = 0 ; int index2 = 0 ; int index = 0 ; final int zero = 0 ; final int one = 1 ; final Region3 reg1 = d1 . dReg ; final Region3 reg2 = d2 . dReg ; final boolean regType1 = reg1 . regType ; final boolean regType2 = reg2 . regType ; Point3 value [ : rank==1 ] tempArr1 = reg1 . pointArray ; Point3 value [ : rank==1 ] tempArr2 = reg2 . pointArray ; if ( regType1 ) { final int stride3 = 1 ; final int dim3 = reg1 . dim2 ; final int stride2 = stride3 * dim3 ; final int regLow3 = reg1 . low2 ; final int dim2 = reg1 . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg1 . low1 ; final int dim1 = reg1 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg1 . low0 ; final int regSize1 = reg1 . regSize ; final int sizeMinusOne = regSize1 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr1 = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f3 = p / stride3 ; f3 = f3 % dim3 ; f3 = f3 + regLow3 ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point3 retPoint = new Point3 ( f1 , f2 , f3 ) ; return retPoint ; }
 ) ; }
 if ( regType2 ) { final int stride3 = 1 ; final int dim3 = reg2 . dim2 ; final int stride2 = stride3 * dim3 ; final int regLow3 = reg2 . low2 ; final int dim2 = reg2 . dim1 ; final int stride1 = stride2 * dim2 ; final int regLow2 = reg2 . low1 ; final int dim1 = reg2 . dim0 ; final int stride0 = stride1 * dim1 ; final int regLow1 = reg2 . low0 ; final int regSize2 = reg2 . regSize ; final int sizeMinusOne = regSize2 - one ; final region ( : rank==1 ) regArr = [ 0 : sizeMinusOne ] ; tempArr2 = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f3 = p / stride3 ; f3 = f3 % dim3 ; f3 = f3 + regLow3 ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + regLow2 ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + regLow1 ; final Point3 retPoint = new Point3 ( f1 , f2 , f3 ) ; return retPoint ; }
 ) ; }
 final Point3 value [ : rank==1 ] arr1 = tempArr1 ; final Point3 value [ : rank==1 ] arr2 = tempArr2 ; final Dist dDist1 = d1 . dDist ; final place value [ : rank==1 ] dPlaceArray1 = dDist1 . placeArray ; final Dist dDist2 = d2 . dDist ; final place value [ : rank==1 ] dPlaceArray2 = dDist2 . placeArray ; final int size1 = reg1 . regSize ; final int size2 = reg2 . regSize ; final int rSize = size1 + size2 ; final int sizeMinusOne = rSize - one ; final region ( : rank==1 ) tempReg = [ 0 : sizeMinusOne ] ; final dist ( : rank==1 ) tempDist = [ 0 : sizeMinusOne ] -> here ; final Point3 [ : rank==1 ] tempArr = new Point3 [ tempDist ] ; final place [ : rank==1 ] placeArray = ( place [ : rank==1 ] ) ( new place [ tempDist ] ) ; boolean cond1 = index1 < size1 ; boolean cond2 = index2 < size2 ; boolean cond = cond1 && cond2 ; while ( cond ) { final Point3 p1 = arr1 [ index1 ] ; final Point3 p2 = arr2 [ index2 ] ; final int pointCompare = Program . comparePoint3 ( p1 , p2 ) ; final boolean eq = pointCompare == zero ; final boolean lt = pointCompare == one ; if ( eq ) { final String errMsg = "Non-disjoint region in a disjoint union" ; throw new RuntimeException ( errMsg ) ; }
 if ( lt ) { tempArr [ index ] = ( p1 ) ; final place pPlace = dPlaceArray1 [ index1 ] ; placeArray [ index ] = ( pPlace ) ; index1 = index1 + one ; }
 else { tempArr [ index ] = ( p2 ) ; final place pPlace = dPlaceArray2 [ index2 ] ; placeArray [ index ] = ( pPlace ) ; index2 = index2 + one ; }
 index = index + one ; cond1 = index1 < size1 ; cond2 = index2 < size2 ; cond = cond1 && cond2 ; }
 cond1 = index1 < size1 ; while ( cond1 ) { final Point3 tempArrPt = arr1 [ index1 ] ; tempArr [ index ] = ( tempArrPt ) ; final place pPlace = dPlaceArray1 [ index1 ] ; placeArray [ index ] = ( pPlace ) ; index1 = index1 + one ; index = index + one ; cond1 = index1 < size1 ; }
 cond2 = index2 < size2 ; while ( cond2 ) { final Point3 tempArrPt = arr2 [ index2 ] ; tempArr [ index ] = ( tempArrPt ) ; final place pPlace = dPlaceArray2 [ index2 ] ; placeArray [ index ] = ( pPlace ) ; index2 = index2 + one ; index = index + one ; cond2 = index2 < size2 ; }
 final Point3 value [ : rank==1 ] arr = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ tempReg ] ( point ( : rank==1 ) pt ) { final Point3 retPoint = tempArr [ pt ] ; return retPoint ; }
 ) ; final Region3 unionReg = new Region3 ( arr , rSize ) ; final place value [ : rank==1 ] vPlaceArray = ( place value [ : rank==1 ] ) ( new place value [ tempReg ] ( point ( : rank==1 ) pt ) { final place tempPl = placeArray [ pt ] ; return tempPl ; }
 ) ; final Dist pointDist = new Dist ( vPlaceArray , rSize ) ; final Dist3 unionDist = new Dist3 ( unionReg , pointDist ) ; return unionDist ; }
 public static void getCyclic ( final place [ : rank==1 ] placeArray , final int arraySize , final place initPlace , final int blockSize ) { final int zero = 0 ; final int one = 1 ; int N = arraySize ; int chunk = blockSize ; final boolean ifCond = blockSize > N ; if ( ifCond ) { chunk = N ; }
 int index = 0 ; int dSize = index + chunk ; dSize = dSize - one ; final region ( : rank==1 ) pointReg = [ 0 : dSize ] ; for ( point ( : rank==1 ) p : pointReg ) { placeArray [ p ] = ( initPlace ) ; }
 index = index + chunk ; N = N - chunk ; place pl = initPlace . next ( ) ; boolean whileCond = N != zero ; while ( whileCond ) { final boolean tailCond = chunk > N ; if ( tailCond ) { dSize = index + N ; dSize = dSize - one ; final int ub = N - one ; final region ( : rank==1 ) pointReg1 = [ 0 : ub ] ; for ( point ( : rank==1 ) p : pointReg1 ) { final point ( : rank==1 ) tempPt = p + [ index ] ; placeArray [ tempPt ] = ( pl ) ; }
 N = 0 ; }
 else { dSize = index + chunk ; dSize = dSize - one ; final int ub = chunk - one ; final region ( : rank==1 ) pointReg1 = [ 0 : ub ] ; for ( point ( : rank==1 ) p : pointReg1 ) { final point ( : rank==1 ) tempPt = p + [ index ] ; placeArray [ tempPt ] = ( pl ) ; }
 index = index + chunk ; N = N - chunk ; }
 pl = pl . next ( ) ; whileCond = N != zero ; }
 }
 public static void setRefArrayValue1boolean ( final booleanRefArray1 array , final int index , final boolean val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist1 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final booleanStub value [ : rank==1 ] contents = array . contents ; final booleanStub indexStub = contents [ placeIndex ] ; final boolean [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static int searchPointInRegion2 ( final Region2 r , final Point2 target ) { final boolean regType = r . regType ; if ( regType ) { final int constantSearch = Program . constantSearchRegion2 ( r , target ) ; return constantSearch ; }
 final int binarySearch = Program . binarySearchRegion2 ( r , target ) ; return binarySearch ; }
 public static int searchPointInRegion1 ( final Region1 r , final Point1 target ) { final boolean regType = r . regType ; if ( regType ) { final int constantSearch = Program . constantSearchRegion1 ( r , target ) ; return constantSearch ; }
 final int binarySearch = Program . binarySearchRegion1 ( r , target ) ; return binarySearch ; }
 public static int searchPointInRegion3 ( final Region3 r , final Point3 target ) { final boolean regType = r . regType ; if ( regType ) { final int constantSearch = Program . constantSearchRegion3 ( r , target ) ; return constantSearch ; }
 final int binarySearch = Program . binarySearchRegion3 ( r , target ) ; return binarySearch ; }
 public static void setRefArrayValue2int ( final intRefArray2 array , final int index , final int val ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final intStub value [ : rank==1 ] contents = array . contents ; final intStub indexStub = contents [ placeIndex ] ; final int [ : rank==1 ] localArray = indexStub . localArray ; localArray [ localIndex ] = ( val ) ; }
 public static Particle getRefArrayValue2Particle ( final ParticleRefArray2 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final ParticleStub value [ : rank==1 ] contents = array . contents ; final ParticleStub indexStub = contents [ placeIndex ] ; final Particle [ : rank==1 ] localArray = indexStub . localArray ; final Particle returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static double getRefArrayValue2double ( final doubleRefArray2 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final doubleStub value [ : rank==1 ] contents = array . contents ; final doubleStub indexStub = contents [ placeIndex ] ; final double [ : rank==1 ] localArray = indexStub . localArray ; final double returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static int value [ : rank==1 ] initDist ( final int [ : rank==1 ] tempArr , final region ( : rank==1 ) tempReg ) { final int value [ : rank==1 ] vTemp = ( int value [ : rank==1 ] ) ( new int value [ tempReg ] ( point ( : rank==1 ) p ) { final int tempInt = tempArr [ p ] ; return tempInt ; }
 ) ; return vTemp ; }
 public static int getRefArrayValue2int ( final intRefArray2 array , final int index ) { final place pl = here ; final int placeIndex = pl . id ; final Dist2 dArray = array . distValue ; final Dist dDist = dArray . dDist ; final int value [ : rank==1 ] runSum = dDist . runningSum ; final int localIndex = runSum [ index ] ; final intStub value [ : rank==1 ] contents = array . contents ; final intStub indexStub = contents [ placeIndex ] ; final int [ : rank==1 ] localArray = indexStub . localArray ; final int returnValue = localArray [ localIndex ] ; return returnValue ; }
 public static Region3 createNewRegion3RRA ( final int v1_0 , final int v1_1 , final int v2_0 , final int v2_1 , final Region1 v3_0 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = true ; final boolean tempBool2 = true ; final boolean tempBool3 = v3_0 . regType ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; regType = regType && tempBool3 ; final int l1 = v1_1 - v1_0 ; final int dim1 = l1 + one ; final int l2 = v2_1 - v2_0 ; final int dim2 = l2 + one ; final int l3 = v3_0 . regSize ; final int dim3 = l3 ; final int stride3 = 1 ; final int stride2 = stride3 * dim3 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) p ) { final Point3 pt = new Point3 ( zero , zero , zero ) ; return pt ; }
 ) ; final Region3 retRegEmpty = new Region3 ( ptArray , stride0 , zero , zero , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final int low3 = v3_0 . low0 ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) p ) { final Point3 pt = new Point3 ( zero , zero , zero ) ; return pt ; }
 ) ; final Region3 retRegRegular = new Region3 ( ptArray , stride0 , v1_0 , dim1 , v2_0 , dim2 , low3 , dim3 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + v1_0 ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + v2_0 ; int f3 = p / stride3 ; f3 = f3 % dim3 ; if ( tempBool3 ) { final int low3 = v3_0 . low0 ; f3 = f3 + low3 ; }
 else { final Point1 value [ : rank==1 ] rArray3 = v3_0 . pointArray ; final Point1 rArrayPt3 = rArray3 [ f3 ] ; f3 = rArrayPt3 . f0 ; }
 final Point3 retPoint = new Point3 ( f1 , f2 , f3 ) ; return retPoint ; }
 ) ; final Region3 retReg = new Region3 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region2 createNewRegion2RR ( final int v1_0 , final int v1_1 , final int v2_0 , final int v2_1 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = true ; final boolean tempBool2 = true ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; final int l1 = v1_1 - v1_0 ; final int dim1 = l1 + one ; final int l2 = v2_1 - v2_0 ; final int dim2 = l2 + one ; final int stride2 = 1 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegEmpty = new Region2 ( ptArray , stride0 , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegRegular = new Region2 ( ptArray , stride0 , v1_0 , dim1 , v2_0 , dim2 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + v1_0 ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + v2_0 ; final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; final Region2 retReg = new Region2 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region1 createNewRegion1R ( final int v1_0 , final int v1_1 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = true ; regType = regType && tempBool1 ; final int l1 = v1_1 - v1_0 ; final int dim1 = l1 + one ; final int stride1 = 1 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] ptArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) p ) { final Point1 pt = new Point1 ( zero ) ; return pt ; }
 ) ; final Region1 retRegEmpty = new Region1 ( ptArray , stride0 , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point1 value [ : rank==1 ] ptArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) p ) { final Point1 pt = new Point1 ( zero ) ; return pt ; }
 ) ; final Region1 retRegRegular = new Region1 ( ptArray , stride0 , v1_0 , dim1 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point1 value [ : rank==1 ] ptArray = ( Point1 value [ : rank==1 ] ) ( new Point1 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + v1_0 ; final Point1 retPoint = new Point1 ( f1 ) ; return retPoint ; }
 ) ; final Region1 retReg = new Region1 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region3 createNewRegion3RRR ( final int v1_0 , final int v1_1 , final int v2_0 , final int v2_1 , final int v3_0 , final int v3_1 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = true ; final boolean tempBool2 = true ; final boolean tempBool3 = true ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; regType = regType && tempBool3 ; final int l1 = v1_1 - v1_0 ; final int dim1 = l1 + one ; final int l2 = v2_1 - v2_0 ; final int dim2 = l2 + one ; final int l3 = v3_1 - v3_0 ; final int dim3 = l3 + one ; final int stride3 = 1 ; final int stride2 = stride3 * dim3 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) p ) { final Point3 pt = new Point3 ( zero , zero , zero ) ; return pt ; }
 ) ; final Region3 retRegEmpty = new Region3 ( ptArray , stride0 , zero , zero , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) p ) { final Point3 pt = new Point3 ( zero , zero , zero ) ; return pt ; }
 ) ; final Region3 retRegRegular = new Region3 ( ptArray , stride0 , v1_0 , dim1 , v2_0 , dim2 , v3_0 , dim3 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + v1_0 ; int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + v2_0 ; int f3 = p / stride3 ; f3 = f3 % dim3 ; f3 = f3 + v3_0 ; final Point3 retPoint = new Point3 ( f1 , f2 , f3 ) ; return retPoint ; }
 ) ; final Region3 retReg = new Region3 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region2 createNewRegion2AA ( final Region1 v1_0 , final Region1 v2_0 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = v1_0 . regType ; final boolean tempBool2 = v2_0 . regType ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; final int l1 = v1_0 . regSize ; final int dim1 = l1 ; final int l2 = v2_0 . regSize ; final int dim2 = l2 ; final int stride2 = 1 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegEmpty = new Region2 ( ptArray , stride0 , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final int low1 = v1_0 . low0 ; final int low2 = v2_0 . low0 ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegRegular = new Region2 ( ptArray , stride0 , low1 , dim1 , low2 , dim2 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; if ( tempBool1 ) { final int low1 = v1_0 . low0 ; f1 = f1 + low1 ; }
 else { final Point1 value [ : rank==1 ] rArray1 = v1_0 . pointArray ; final Point1 rArrayPt1 = rArray1 [ f1 ] ; f1 = rArrayPt1 . f0 ; }
 int f2 = p / stride2 ; f2 = f2 % dim2 ; if ( tempBool2 ) { final int low2 = v2_0 . low0 ; f2 = f2 + low2 ; }
 else { final Point1 value [ : rank==1 ] rArray2 = v2_0 . pointArray ; final Point1 rArrayPt2 = rArray2 [ f2 ] ; f2 = rArrayPt2 . f0 ; }
 final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; final Region2 retReg = new Region2 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region2 createNewRegion2RA ( final int v1_0 , final int v1_1 , final Region1 v2_0 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = true ; final boolean tempBool2 = v2_0 . regType ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; final int l1 = v1_1 - v1_0 ; final int dim1 = l1 + one ; final int l2 = v2_0 . regSize ; final int dim2 = l2 ; final int stride2 = 1 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegEmpty = new Region2 ( ptArray , stride0 , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final int low2 = v2_0 . low0 ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegRegular = new Region2 ( ptArray , stride0 , v1_0 , dim1 , low2 , dim2 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; f1 = f1 + v1_0 ; int f2 = p / stride2 ; f2 = f2 % dim2 ; if ( tempBool2 ) { final int low2 = v2_0 . low0 ; f2 = f2 + low2 ; }
 else { final Point1 value [ : rank==1 ] rArray2 = v2_0 . pointArray ; final Point1 rArrayPt2 = rArray2 [ f2 ] ; f2 = rArrayPt2 . f0 ; }
 final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; final Region2 retReg = new Region2 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region2 createNewRegion2AR ( final Region1 v1_0 , final int v2_0 , final int v2_1 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = v1_0 . regType ; final boolean tempBool2 = true ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; final int l1 = v1_0 . regSize ; final int dim1 = l1 ; final int l2 = v2_1 - v2_0 ; final int dim2 = l2 + one ; final int stride2 = 1 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegEmpty = new Region2 ( ptArray , stride0 , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final int low1 = v1_0 . low0 ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) p ) { final Point2 pt = new Point2 ( zero , zero ) ; return pt ; }
 ) ; final Region2 retRegRegular = new Region2 ( ptArray , stride0 , low1 , dim1 , v2_0 , dim2 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point2 value [ : rank==1 ] ptArray = ( Point2 value [ : rank==1 ] ) ( new Point2 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; if ( tempBool1 ) { final int low1 = v1_0 . low0 ; f1 = f1 + low1 ; }
 else { final Point1 value [ : rank==1 ] rArray1 = v1_0 . pointArray ; final Point1 rArrayPt1 = rArray1 [ f1 ] ; f1 = rArrayPt1 . f0 ; }
 int f2 = p / stride2 ; f2 = f2 % dim2 ; f2 = f2 + v2_0 ; final Point2 retPoint = new Point2 ( f1 , f2 ) ; return retPoint ; }
 ) ; final Region2 retReg = new Region2 ( ptArray , stride0 ) ; return retReg ; }
 }
 public static Region3 createNewRegion3AAA ( final Region1 v1_0 , final Region1 v2_0 , final Region1 v3_0 ) { final int zero = 0 ; final int one = 1 ; boolean regType = true ; final boolean tempBool1 = v1_0 . regType ; final boolean tempBool2 = v2_0 . regType ; final boolean tempBool3 = v3_0 . regType ; regType = regType && tempBool1 ; regType = regType && tempBool2 ; regType = regType && tempBool3 ; final int l1 = v1_0 . regSize ; final int dim1 = l1 ; final int l2 = v2_0 . regSize ; final int dim2 = l2 ; final int l3 = v3_0 . regSize ; final int dim3 = l3 ; final int stride3 = 1 ; final int stride2 = stride3 * dim3 ; final int stride1 = stride2 * dim2 ; final int stride0 = stride1 * dim1 ; final int rSize = stride0 - one ; final boolean cond = stride0 <= zero ; if ( cond ) { final int minusOne = zero - one ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) p ) { final Point3 pt = new Point3 ( zero , zero , zero ) ; return pt ; }
 ) ; final Region3 retRegEmpty = new Region3 ( ptArray , stride0 , zero , zero , zero , zero , zero , zero ) ; return retRegEmpty ; }
 if ( regType ) { final int minusOne = zero - one ; final int low1 = v1_0 . low0 ; final int low2 = v2_0 . low0 ; final int low3 = v3_0 . low0 ; final region ( : rank==1 ) regArr = [ 0 : minusOne ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) p ) { final Point3 pt = new Point3 ( zero , zero , zero ) ; return pt ; }
 ) ; final Region3 retRegRegular = new Region3 ( ptArray , stride0 , low1 , dim1 , low2 , dim2 , low3 , dim3 ) ; return retRegRegular ; }
 else { final region ( : rank==1 ) regArr = [ 0 : rSize ] ; final Point3 value [ : rank==1 ] ptArray = ( Point3 value [ : rank==1 ] ) ( new Point3 value [ regArr ] ( point ( : rank==1 ) pt ) { final int p = pt [0] ; int f1 = p / stride1 ; f1 = f1 % dim1 ; if ( tempBool1 ) { final int low1 = v1_0 . low0 ; f1 = f1 + low1 ; }
 else { final Point1 value [ : rank==1 ] rArray1 = v1_0 . pointArray ; final Point1 rArrayPt1 = rArray1 [ f1 ] ; f1 = rArrayPt1 . f0 ; }
 int f2 = p / stride2 ; f2 = f2 % dim2 ; if ( tempBool2 ) { final int low2 = v2_0 . low0 ; f2 = f2 + low2 ; }
 else { final Point1 value [ : rank==1 ] rArray2 = v2_0 . pointArray ; final Point1 rArrayPt2 = rArray2 [ f2 ] ; f2 = rArrayPt2 . f0 ; }
 int f3 = p / stride3 ; f3 = f3 % dim3 ; if ( tempBool3 ) { final int low3 = v3_0 . low0 ; f3 = f3 + low3 ; }
 else { final Point1 value [ : rank==1 ] rArray3 = v3_0 . pointArray ; final Point1 rArrayPt3 = rArray3 [ f3 ] ; f3 = rArrayPt3 . f0 ; }
 final Point3 retPoint = new Point3 ( f1 , f2 , f3 ) ; return retPoint ; }
 ) ; final Region3 retReg = new Region3 ( ptArray , stride0 ) ; return retReg ; }
 }

 public static void thread1(final T1 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ComplexStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP14 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP13 ] ) ; final ComplexStub RX10_TEMP15 = new ComplexStub ( RX10_TEMP14 ) ; 
 final T177 utmp177 = new T177(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread177(utmp177); }
 }
 }
 public static void thread2(final T2 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ComplexStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP14 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP13 ] ) ; final ComplexStub RX10_TEMP15 = new ComplexStub ( RX10_TEMP14 ) ; 
 final T178 utmp178 = new T178(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread178(utmp178); }
 }
 }
 public static void thread3(final T3 utmpz) {final  int RX10_TEMP32 = utmpz.RX10_TEMP32;
final  place RX10_TEMP28 = utmpz.RX10_TEMP28;
final  point ( : rank==1 ) RX10_TEMP27 = utmpz.RX10_TEMP27;
final  ComplexStub [ : rank==1 ] RX10_TEMP26 = utmpz.RX10_TEMP26;
 { final dist ( : rank==1 ) RX10_TEMP33 = [ 0 : RX10_TEMP32 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP34 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP33 ] ) ; final ComplexStub RX10_TEMP35 = new ComplexStub ( RX10_TEMP34 ) ; 
 final T179 utmp179 = new T179(RX10_TEMP35, RX10_TEMP27, RX10_TEMP26);
 async (RX10_TEMP28) {Program.thread179(utmp179); }
 }
 }
 public static void thread4(final T4 utmpz) {final  Point2 pt = utmpz.pt;
final  ComplexRefArray2 fy = utmpz.fy;
final  ComplexRefArray2 fx = utmpz.fx;
final  ComplexRefArray2 forceY = utmpz.forceY;
final  ComplexRefArray2 forceX = utmpz.forceX;
 { final Dist2 RX10_TEMP54 = fx . distValue ; final Region2 RX10_TEMP55 = RX10_TEMP54 . dReg ; final int RX10_TEMP56 = Program . searchPointInRegion2 ( RX10_TEMP55 , pt ) ; final int RX10_TEMP57 = 0 ; final boolean RX10_TEMP58 = RX10_TEMP56 < RX10_TEMP57 ; if ( RX10_TEMP58 ) { String RX10_TEMP59 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 final place RX10_TEMP60 = Program . getPlaceFromDist2 ( RX10_TEMP54 , RX10_TEMP56 ) ; final place RX10_TEMP62 = here ; final boolean RX10_TEMP63 = RX10_TEMP60 != RX10_TEMP62 ; if ( RX10_TEMP63 ) { String RX10_TEMP61 = "Bad place access for array fx" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final Complex RX10_TEMP64 = Program . getRefArrayValue2Complex ( fx , RX10_TEMP56 ) ; final Complex X10_TEMP39 = ( RX10_TEMP64 ) ; final Complex X10_TEMP40 = ( X10_TEMP39 ) ; final Dist2 RX10_TEMP65 = forceX . distValue ; final Region2 RX10_TEMP66 = RX10_TEMP65 . dReg ; final int RX10_TEMP67 = Program . searchPointInRegion2 ( RX10_TEMP66 , pt ) ; final int RX10_TEMP68 = 0 ; final boolean RX10_TEMP69 = RX10_TEMP67 < RX10_TEMP68 ; if ( RX10_TEMP69 ) { String RX10_TEMP70 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 final place RX10_TEMP71 = Program . getPlaceFromDist2 ( RX10_TEMP65 , RX10_TEMP67 ) ; final place RX10_TEMP73 = here ; final boolean RX10_TEMP74 = RX10_TEMP71 != RX10_TEMP73 ; if ( RX10_TEMP74 ) { String RX10_TEMP72 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP72 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP67 , X10_TEMP40 ) ; final Dist2 RX10_TEMP75 = fy . distValue ; final Region2 RX10_TEMP76 = RX10_TEMP75 . dReg ; final int RX10_TEMP77 = Program . searchPointInRegion2 ( RX10_TEMP76 , pt ) ; final int RX10_TEMP78 = 0 ; final boolean RX10_TEMP79 = RX10_TEMP77 < RX10_TEMP78 ; if ( RX10_TEMP79 ) { String RX10_TEMP80 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP80 ) ; }
 final place RX10_TEMP81 = Program . getPlaceFromDist2 ( RX10_TEMP75 , RX10_TEMP77 ) ; final place RX10_TEMP83 = here ; final boolean RX10_TEMP84 = RX10_TEMP81 != RX10_TEMP83 ; if ( RX10_TEMP84 ) { String RX10_TEMP82 = "Bad place access for array fy" ; throw new RuntimeException ( RX10_TEMP82 ) ; }
 final Complex RX10_TEMP85 = Program . getRefArrayValue2Complex ( fy , RX10_TEMP77 ) ; final Complex X10_TEMP44 = ( RX10_TEMP85 ) ; final Complex X10_TEMP45 = ( X10_TEMP44 ) ; final Dist2 RX10_TEMP86 = forceY . distValue ; final Region2 RX10_TEMP87 = RX10_TEMP86 . dReg ; final int RX10_TEMP88 = Program . searchPointInRegion2 ( RX10_TEMP87 , pt ) ; final int RX10_TEMP89 = 0 ; final boolean RX10_TEMP90 = RX10_TEMP88 < RX10_TEMP89 ; if ( RX10_TEMP90 ) { String RX10_TEMP91 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP91 ) ; }
 final place RX10_TEMP92 = Program . getPlaceFromDist2 ( RX10_TEMP86 , RX10_TEMP88 ) ; final place RX10_TEMP94 = here ; final boolean RX10_TEMP95 = RX10_TEMP92 != RX10_TEMP94 ; if ( RX10_TEMP95 ) { String RX10_TEMP93 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP93 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP88 , X10_TEMP45 ) ; }
 }
 public static void thread5(final T5 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP15 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { final double X10_TEMP4 = ( 0.0 ) ; return X10_TEMP4 ; }
 ) ; final doubleStub RX10_TEMP16 = new doubleStub ( RX10_TEMP15 ) ; 
 final T180 utmp180 = new T180(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread180(utmp180); }
 }
 }
 public static void thread6(final T6 utmpz) {final  Point1 pl = utmpz.pl;
final  doubleRefArray1 energy = utmpz.energy;
final  ComplexRefArray2 forceY = utmpz.forceY;
final  ComplexRefArray2 forceX = utmpz.forceX;
final  ComplexRefArray2 q = utmpz.q;
final  PoissonSolver X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP13 = ( pl . f0 ) ; final int X10_TEMP14 = ( X10_TEMP0 . x ) ; final boolean X10_TEMP16 = X10_TEMP13 <= X10_TEMP14 ; if ( X10_TEMP16 ) { final doubleRefArray3 X10_TEMP17 = X10_TEMP0 . ffg ; final Dist3 RX10_TEMP33 = X10_TEMP17 . distValue ; final Dist3 dFFG = RX10_TEMP33 ; final Region3 rLocal = Program . X10Util_get3DLRegion ( dFFG ) ; final int X10_TEMP23 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getRank3D ( rLocal , X10_TEMP23 ) ; final int X10_TEMP27 = ( 1 ) ; final Region1 rLocal2 = Program . X10Util_getRank3D ( rLocal , X10_TEMP27 ) ; final double X10_TEMP29 = ( 1.0 ) ; final int X10_TEMP30 = 0 ; double tmp3 = ( X10_TEMP30 - X10_TEMP29 ) ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = rLocal1 . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP34 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP34 [0] ; final Point1 RX10_TEMP35 = Program . regionOrdinalPoint1 ( rLocal1 , RX10_TEMP39 ) ; final int i = RX10_TEMP35 . f0 ; final int X10_TEMP33 = ( 2 ) ; final int X10_TEMP34 = ( i % X10_TEMP33 ) ; final int X10_TEMP35 = ( 0 ) ; final boolean X10_TEMP37 = ( X10_TEMP34 == X10_TEMP35 ) ; final boolean X10_TEMP38 = X10_TEMP37 ; final double X10_TEMP40 = ( 1.0 ) ; final int X10_TEMP41 = 0 ; double X10_TEMP43 = X10_TEMP41 - X10_TEMP40 ; if ( X10_TEMP38 ) { X10_TEMP43 = 1.0 ; }
 final double X10_TEMP44 = X10_TEMP43 ; tmp3 = ( X10_TEMP44 ) ; final int X10_TEMP45 = ( 0 ) ; final boolean X10_TEMP47 = i > X10_TEMP45 ; if ( X10_TEMP47 ) { final doubleRefArray3 X10_TEMP48 = X10_TEMP0 . ffg ; final int X10_TEMP52 = ( 0 ) ; final Point3 RX10_TEMP40 = new Point3 ( i , X10_TEMP52 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP41 = X10_TEMP48 . distValue ; final Region3 RX10_TEMP42 = RX10_TEMP41 . dReg ; final int RX10_TEMP43 = Program . searchPointInRegion3 ( RX10_TEMP42 , RX10_TEMP40 ) ; final int RX10_TEMP44 = 0 ; final boolean RX10_TEMP45 = RX10_TEMP43 < RX10_TEMP44 ; if ( RX10_TEMP45 ) { String RX10_TEMP46 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 final place RX10_TEMP47 = Program . getPlaceFromDist3 ( RX10_TEMP41 , RX10_TEMP43 ) ; final place RX10_TEMP49 = here ; final boolean RX10_TEMP50 = RX10_TEMP47 != RX10_TEMP49 ; if ( RX10_TEMP50 ) { String RX10_TEMP48 = "Bad place access for array X10_TEMP48" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final double RX10_TEMP51 = Program . getRefArrayValue3double ( X10_TEMP48 , RX10_TEMP43 ) ; double tmp2 = ( RX10_TEMP51 ) ; final int X10_TEMP58 = ( 1 ) ; final int X10_TEMP55 = ( X10_TEMP0 . y ) ; final int X10_TEMP56 = ( 1 ) ; final int X10_TEMP59 = ( X10_TEMP55 - X10_TEMP56 ) ; final Region1 X10_TEMP61 = Program . createNewRegion1R ( X10_TEMP58 , X10_TEMP59 ) ; final int RX10_TEMP56 = 1 ; int RX10_TEMP54 = X10_TEMP61 . regSize ; RX10_TEMP54 = RX10_TEMP54 - RX10_TEMP56 ; final region ( : rank==1 ) RX10_TEMP55 = [ 0 : RX10_TEMP54 ] ; for ( point ( : rank==1 ) RX10_TEMP52 : RX10_TEMP55 ) { final int RX10_TEMP57 = RX10_TEMP52 [0] ; final Point1 RX10_TEMP53 = Program . regionOrdinalPoint1 ( X10_TEMP61 , RX10_TEMP57 ) ; final int j1 = RX10_TEMP53 . f0 ; final int X10_TEMP62 = ( 2 ) ; final int X10_TEMP63 = ( X10_TEMP0 . y ) ; final int X10_TEMP64 = ( X10_TEMP62 * X10_TEMP63 ) ; final int j2 = ( X10_TEMP64 - j1 ) ; final place X10_TEMP66 = ( here ) ; final boolean X10_TEMP68 = ( X10_TEMP66 . isFirst ( ) ) ; final boolean X10_TEMP69 = X10_TEMP68 ; final doubleRefArray3 X10_TEMP70 = X10_TEMP0 . ffg ; final int X10_TEMP74 = ( 0 ) ; final doubleValArray2 X10_TEMP76 = X10_TEMP0 . ffg2 ; final Point2 RX10_TEMP58 = new Point2 ( j1 , _PoissonSolver_ELECX_IDX ) ; final Region2 RX10_TEMP59 = X10_TEMP76 . regionValue ; final int RX10_TEMP60 = Program . searchPointInRegion2 ( RX10_TEMP59 , RX10_TEMP58 ) ; final int RX10_TEMP61 = 0 ; final boolean RX10_TEMP62 = RX10_TEMP60 < RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP63 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final double value [ : rank==1 ] RX10_TEMP64 = ( double value [ : rank==1 ] ) ( X10_TEMP76 . contents ) ; double X10_TEMP80 = RX10_TEMP64 [ RX10_TEMP60 ] ; if ( X10_TEMP69 ) { final Point3 RX10_TEMP65 = new Point3 ( X10_TEMP74 , j1 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP66 = X10_TEMP70 . distValue ; final Region3 RX10_TEMP67 = RX10_TEMP66 . dReg ; final int RX10_TEMP68 = Program . searchPointInRegion3 ( RX10_TEMP67 , RX10_TEMP65 ) ; final int RX10_TEMP69 = 0 ; final boolean RX10_TEMP70 = RX10_TEMP68 < RX10_TEMP69 ; if ( RX10_TEMP70 ) { String RX10_TEMP71 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP71 ) ; }
 final place RX10_TEMP72 = Program . getPlaceFromDist3 ( RX10_TEMP66 , RX10_TEMP68 ) ; final place RX10_TEMP74 = here ; final boolean RX10_TEMP75 = RX10_TEMP72 != RX10_TEMP74 ; if ( RX10_TEMP75 ) { String RX10_TEMP73 = "Bad place access for array X10_TEMP70" ; throw new RuntimeException ( RX10_TEMP73 ) ; }
 final double RX10_TEMP76 = Program . getRefArrayValue3double ( X10_TEMP70 , RX10_TEMP68 ) ; X10_TEMP80 = RX10_TEMP76 ; }
 final double X10_TEMP81 = X10_TEMP80 ; final double X10_TEMP82 = ( X10_TEMP81 ) ; final double tmp0 = ( X10_TEMP82 ) ; final double tmp1 = ( tmp3 * tmp0 ) ; final int X10_TEMP85 = 0 ; final double X10_TEMP87 = ( X10_TEMP85 - tmp2 ) ; tmp2 = ( X10_TEMP87 ) ; final doubleRefArray3 X10_TEMP89 = X10_TEMP0 . ffg ; final Point3 RX10_TEMP77 = new Point3 ( i , j1 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP78 = X10_TEMP89 . distValue ; final Region3 RX10_TEMP79 = RX10_TEMP78 . dReg ; final int RX10_TEMP80 = Program . searchPointInRegion3 ( RX10_TEMP79 , RX10_TEMP77 ) ; final int RX10_TEMP81 = 0 ; final boolean RX10_TEMP82 = RX10_TEMP80 < RX10_TEMP81 ; if ( RX10_TEMP82 ) { String RX10_TEMP83 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP83 ) ; }
 final place RX10_TEMP84 = Program . getPlaceFromDist3 ( RX10_TEMP78 , RX10_TEMP80 ) ; final place RX10_TEMP86 = here ; final boolean RX10_TEMP87 = RX10_TEMP84 != RX10_TEMP86 ; if ( RX10_TEMP87 ) { String RX10_TEMP85 = "Bad place access for array X10_TEMP89" ; throw new RuntimeException ( RX10_TEMP85 ) ; }
 final double RX10_TEMP88 = Program . getRefArrayValue3double ( X10_TEMP89 , RX10_TEMP80 ) ; double X10_TEMP94 = ( RX10_TEMP88 ) ; final Complex cx = ( new Complex ( tmp1 , X10_TEMP94 ) ) ; final doubleRefArray3 X10_TEMP97 = X10_TEMP0 . ffg ; final Point3 RX10_TEMP89 = new Point3 ( i , j1 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP90 = X10_TEMP97 . distValue ; final Region3 RX10_TEMP91 = RX10_TEMP90 . dReg ; final int RX10_TEMP92 = Program . searchPointInRegion3 ( RX10_TEMP91 , RX10_TEMP89 ) ; final int RX10_TEMP93 = 0 ; final boolean RX10_TEMP94 = RX10_TEMP92 < RX10_TEMP93 ; if ( RX10_TEMP94 ) { String RX10_TEMP95 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP95 ) ; }
 final place RX10_TEMP96 = Program . getPlaceFromDist3 ( RX10_TEMP90 , RX10_TEMP92 ) ; final place RX10_TEMP98 = here ; final boolean RX10_TEMP99 = RX10_TEMP96 != RX10_TEMP98 ; if ( RX10_TEMP99 ) { String RX10_TEMP97 = "Bad place access for array X10_TEMP97" ; throw new RuntimeException ( RX10_TEMP97 ) ; }
 final double RX10_TEMP100 = Program . getRefArrayValue3double ( X10_TEMP97 , RX10_TEMP92 ) ; double X10_TEMP102 = ( RX10_TEMP100 ) ; final Complex cy = ( new Complex ( tmp2 , X10_TEMP102 ) ) ; final Point2 RX10_TEMP101 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP102 = q . distValue ; final Region2 RX10_TEMP103 = RX10_TEMP102 . dReg ; final int RX10_TEMP104 = Program . searchPointInRegion2 ( RX10_TEMP103 , RX10_TEMP101 ) ; final int RX10_TEMP105 = 0 ; final boolean RX10_TEMP106 = RX10_TEMP104 < RX10_TEMP105 ; if ( RX10_TEMP106 ) { String RX10_TEMP107 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP107 ) ; }
 final place RX10_TEMP108 = Program . getPlaceFromDist2 ( RX10_TEMP102 , RX10_TEMP104 ) ; final place RX10_TEMP110 = here ; final boolean RX10_TEMP111 = RX10_TEMP108 != RX10_TEMP110 ; if ( RX10_TEMP111 ) { String RX10_TEMP109 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP109 ) ; }
 final Complex RX10_TEMP112 = Program . getRefArrayValue2Complex ( q , RX10_TEMP104 ) ; final Complex X10_TEMP109 = ( RX10_TEMP112 ) ; final Complex X10_TEMP111 = ( Program . Complex_mult ( cx , X10_TEMP109 ) ) ; final Complex X10_TEMP112 = ( X10_TEMP111 ) ; final Point2 RX10_TEMP113 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP114 = forceX . distValue ; final Region2 RX10_TEMP115 = RX10_TEMP114 . dReg ; final int RX10_TEMP116 = Program . searchPointInRegion2 ( RX10_TEMP115 , RX10_TEMP113 ) ; final int RX10_TEMP117 = 0 ; final boolean RX10_TEMP118 = RX10_TEMP116 < RX10_TEMP117 ; if ( RX10_TEMP118 ) { String RX10_TEMP119 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP119 ) ; }
 final place RX10_TEMP120 = Program . getPlaceFromDist2 ( RX10_TEMP114 , RX10_TEMP116 ) ; final place RX10_TEMP122 = here ; final boolean RX10_TEMP123 = RX10_TEMP120 != RX10_TEMP122 ; if ( RX10_TEMP123 ) { String RX10_TEMP121 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP121 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP116 , X10_TEMP112 ) ; final Point2 RX10_TEMP124 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP125 = q . distValue ; final Region2 RX10_TEMP126 = RX10_TEMP125 . dReg ; final int RX10_TEMP127 = Program . searchPointInRegion2 ( RX10_TEMP126 , RX10_TEMP124 ) ; final int RX10_TEMP128 = 0 ; final boolean RX10_TEMP129 = RX10_TEMP127 < RX10_TEMP128 ; if ( RX10_TEMP129 ) { String RX10_TEMP130 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP130 ) ; }
 final place RX10_TEMP131 = Program . getPlaceFromDist2 ( RX10_TEMP125 , RX10_TEMP127 ) ; final place RX10_TEMP133 = here ; final boolean RX10_TEMP134 = RX10_TEMP131 != RX10_TEMP133 ; if ( RX10_TEMP134 ) { String RX10_TEMP132 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP132 ) ; }
 final Complex RX10_TEMP135 = Program . getRefArrayValue2Complex ( q , RX10_TEMP127 ) ; final Complex X10_TEMP118 = ( RX10_TEMP135 ) ; final Complex X10_TEMP120 = ( Program . Complex_mult ( cx , X10_TEMP118 ) ) ; final Complex X10_TEMP121 = ( X10_TEMP120 ) ; final Point2 RX10_TEMP136 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP137 = forceX . distValue ; final Region2 RX10_TEMP138 = RX10_TEMP137 . dReg ; final int RX10_TEMP139 = Program . searchPointInRegion2 ( RX10_TEMP138 , RX10_TEMP136 ) ; final int RX10_TEMP140 = 0 ; final boolean RX10_TEMP141 = RX10_TEMP139 < RX10_TEMP140 ; if ( RX10_TEMP141 ) { String RX10_TEMP142 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP142 ) ; }
 final place RX10_TEMP143 = Program . getPlaceFromDist2 ( RX10_TEMP137 , RX10_TEMP139 ) ; final place RX10_TEMP145 = here ; final boolean RX10_TEMP146 = RX10_TEMP143 != RX10_TEMP145 ; if ( RX10_TEMP146 ) { String RX10_TEMP144 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP144 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP139 , X10_TEMP121 ) ; final Point2 RX10_TEMP147 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP148 = q . distValue ; final Region2 RX10_TEMP149 = RX10_TEMP148 . dReg ; final int RX10_TEMP150 = Program . searchPointInRegion2 ( RX10_TEMP149 , RX10_TEMP147 ) ; final int RX10_TEMP151 = 0 ; final boolean RX10_TEMP152 = RX10_TEMP150 < RX10_TEMP151 ; if ( RX10_TEMP152 ) { String RX10_TEMP153 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP153 ) ; }
 final place RX10_TEMP154 = Program . getPlaceFromDist2 ( RX10_TEMP148 , RX10_TEMP150 ) ; final place RX10_TEMP156 = here ; final boolean RX10_TEMP157 = RX10_TEMP154 != RX10_TEMP156 ; if ( RX10_TEMP157 ) { String RX10_TEMP155 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP155 ) ; }
 final Complex RX10_TEMP158 = Program . getRefArrayValue2Complex ( q , RX10_TEMP150 ) ; final Complex X10_TEMP127 = ( RX10_TEMP158 ) ; final Complex X10_TEMP129 = ( Program . Complex_mult ( cy , X10_TEMP127 ) ) ; final Complex X10_TEMP130 = ( X10_TEMP129 ) ; final Point2 RX10_TEMP159 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP160 = forceY . distValue ; final Region2 RX10_TEMP161 = RX10_TEMP160 . dReg ; final int RX10_TEMP162 = Program . searchPointInRegion2 ( RX10_TEMP161 , RX10_TEMP159 ) ; final int RX10_TEMP163 = 0 ; final boolean RX10_TEMP164 = RX10_TEMP162 < RX10_TEMP163 ; if ( RX10_TEMP164 ) { String RX10_TEMP165 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP165 ) ; }
 final place RX10_TEMP166 = Program . getPlaceFromDist2 ( RX10_TEMP160 , RX10_TEMP162 ) ; final place RX10_TEMP168 = here ; final boolean RX10_TEMP169 = RX10_TEMP166 != RX10_TEMP168 ; if ( RX10_TEMP169 ) { String RX10_TEMP167 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP167 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP162 , X10_TEMP130 ) ; final Complex X10_TEMP134 = ( Program . Complex_getConjg ( cy ) ) ; final Point2 RX10_TEMP170 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP171 = q . distValue ; final Region2 RX10_TEMP172 = RX10_TEMP171 . dReg ; final int RX10_TEMP173 = Program . searchPointInRegion2 ( RX10_TEMP172 , RX10_TEMP170 ) ; final int RX10_TEMP174 = 0 ; final boolean RX10_TEMP175 = RX10_TEMP173 < RX10_TEMP174 ; if ( RX10_TEMP175 ) { String RX10_TEMP176 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP176 ) ; }
 final place RX10_TEMP177 = Program . getPlaceFromDist2 ( RX10_TEMP171 , RX10_TEMP173 ) ; final place RX10_TEMP179 = here ; final boolean RX10_TEMP180 = RX10_TEMP177 != RX10_TEMP179 ; if ( RX10_TEMP180 ) { String RX10_TEMP178 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP178 ) ; }
 final Complex RX10_TEMP181 = Program . getRefArrayValue2Complex ( q , RX10_TEMP173 ) ; final Complex X10_TEMP138 = ( RX10_TEMP181 ) ; final Complex X10_TEMP140 = ( Program . Complex_mult ( X10_TEMP134 , X10_TEMP138 ) ) ; final Complex X10_TEMP141 = ( X10_TEMP140 ) ; final Point2 RX10_TEMP182 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP183 = forceY . distValue ; final Region2 RX10_TEMP184 = RX10_TEMP183 . dReg ; final int RX10_TEMP185 = Program . searchPointInRegion2 ( RX10_TEMP184 , RX10_TEMP182 ) ; final int RX10_TEMP186 = 0 ; final boolean RX10_TEMP187 = RX10_TEMP185 < RX10_TEMP186 ; if ( RX10_TEMP187 ) { String RX10_TEMP188 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP188 ) ; }
 final place RX10_TEMP189 = Program . getPlaceFromDist2 ( RX10_TEMP183 , RX10_TEMP185 ) ; final place RX10_TEMP191 = here ; final boolean RX10_TEMP192 = RX10_TEMP189 != RX10_TEMP191 ; if ( RX10_TEMP192 ) { String RX10_TEMP190 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP190 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP185 , X10_TEMP141 ) ; final Dist1 RX10_TEMP193 = energy . distValue ; final Region1 RX10_TEMP194 = RX10_TEMP193 . dReg ; final int RX10_TEMP195 = Program . searchPointInRegion1 ( RX10_TEMP194 , pl ) ; final int RX10_TEMP196 = 0 ; final boolean RX10_TEMP197 = RX10_TEMP195 < RX10_TEMP196 ; if ( RX10_TEMP197 ) { String RX10_TEMP198 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP198 ) ; }
 final place RX10_TEMP199 = Program . getPlaceFromDist1 ( RX10_TEMP193 , RX10_TEMP195 ) ; final place RX10_TEMP201 = here ; final boolean RX10_TEMP202 = RX10_TEMP199 != RX10_TEMP201 ; if ( RX10_TEMP202 ) { String RX10_TEMP200 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP200 ) ; }
 final double RX10_TEMP203 = Program . getRefArrayValue1double ( energy , RX10_TEMP195 ) ; final double X10_TEMP161 = ( RX10_TEMP203 ) ; final doubleRefArray3 X10_TEMP144 = X10_TEMP0 . ffg ; final Point3 RX10_TEMP204 = new Point3 ( i , j1 , _PoissonSolver_GREENS_IDX ) ; final Dist3 RX10_TEMP205 = X10_TEMP144 . distValue ; final Region3 RX10_TEMP206 = RX10_TEMP205 . dReg ; final int RX10_TEMP207 = Program . searchPointInRegion3 ( RX10_TEMP206 , RX10_TEMP204 ) ; final int RX10_TEMP208 = 0 ; final boolean RX10_TEMP209 = RX10_TEMP207 < RX10_TEMP208 ; if ( RX10_TEMP209 ) { String RX10_TEMP210 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP210 ) ; }
 final place RX10_TEMP211 = Program . getPlaceFromDist3 ( RX10_TEMP205 , RX10_TEMP207 ) ; final place RX10_TEMP213 = here ; final boolean RX10_TEMP214 = RX10_TEMP211 != RX10_TEMP213 ; if ( RX10_TEMP214 ) { String RX10_TEMP212 = "Bad place access for array X10_TEMP144" ; throw new RuntimeException ( RX10_TEMP212 ) ; }
 final double RX10_TEMP215 = Program . getRefArrayValue3double ( X10_TEMP144 , RX10_TEMP207 ) ; final double X10_TEMP158 = ( RX10_TEMP215 ) ; final Point2 RX10_TEMP216 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP217 = q . distValue ; final Region2 RX10_TEMP218 = RX10_TEMP217 . dReg ; final int RX10_TEMP219 = Program . searchPointInRegion2 ( RX10_TEMP218 , RX10_TEMP216 ) ; final int RX10_TEMP220 = 0 ; final boolean RX10_TEMP221 = RX10_TEMP219 < RX10_TEMP220 ; if ( RX10_TEMP221 ) { String RX10_TEMP222 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP222 ) ; }
 final place RX10_TEMP223 = Program . getPlaceFromDist2 ( RX10_TEMP217 , RX10_TEMP219 ) ; final place RX10_TEMP225 = here ; final boolean RX10_TEMP226 = RX10_TEMP223 != RX10_TEMP225 ; if ( RX10_TEMP226 ) { String RX10_TEMP224 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP224 ) ; }
 final Complex RX10_TEMP227 = Program . getRefArrayValue2Complex ( q , RX10_TEMP219 ) ; final Complex X10_TEMP150 = ( RX10_TEMP227 ) ; final double X10_TEMP154 = ( Program . Complex_multConjg ( X10_TEMP150 ) ) ; final Point2 RX10_TEMP228 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP229 = q . distValue ; final Region2 RX10_TEMP230 = RX10_TEMP229 . dReg ; final int RX10_TEMP231 = Program . searchPointInRegion2 ( RX10_TEMP230 , RX10_TEMP228 ) ; final int RX10_TEMP232 = 0 ; final boolean RX10_TEMP233 = RX10_TEMP231 < RX10_TEMP232 ; if ( RX10_TEMP233 ) { String RX10_TEMP234 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP234 ) ; }
 final place RX10_TEMP235 = Program . getPlaceFromDist2 ( RX10_TEMP229 , RX10_TEMP231 ) ; final place RX10_TEMP237 = here ; final boolean RX10_TEMP238 = RX10_TEMP235 != RX10_TEMP237 ; if ( RX10_TEMP238 ) { String RX10_TEMP236 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP236 ) ; }
 final Complex RX10_TEMP239 = Program . getRefArrayValue2Complex ( q , RX10_TEMP231 ) ; final Complex X10_TEMP153 = ( RX10_TEMP239 ) ; final double X10_TEMP155 = ( Program . Complex_multConjg ( X10_TEMP153 ) ) ; final double X10_TEMP157 = ( X10_TEMP154 + X10_TEMP155 ) ; final double X10_TEMP160 = ( X10_TEMP158 * X10_TEMP157 ) ; final double X10_TEMP163 = ( X10_TEMP161 + X10_TEMP160 ) ; final double X10_TEMP164 = ( X10_TEMP163 ) ; final Dist1 RX10_TEMP240 = energy . distValue ; final Region1 RX10_TEMP241 = RX10_TEMP240 . dReg ; final int RX10_TEMP242 = Program . searchPointInRegion1 ( RX10_TEMP241 , pl ) ; final int RX10_TEMP243 = 0 ; final boolean RX10_TEMP244 = RX10_TEMP242 < RX10_TEMP243 ; if ( RX10_TEMP244 ) { String RX10_TEMP245 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP245 ) ; }
 final place RX10_TEMP246 = Program . getPlaceFromDist1 ( RX10_TEMP240 , RX10_TEMP242 ) ; final place RX10_TEMP248 = here ; final boolean RX10_TEMP249 = RX10_TEMP246 != RX10_TEMP248 ; if ( RX10_TEMP249 ) { String RX10_TEMP247 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP247 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP242 , X10_TEMP164 ) ; }
 final place X10_TEMP165 = ( here ) ; final boolean X10_TEMP167 = ( X10_TEMP165 . isFirst ( ) ) ; final boolean X10_TEMP168 = X10_TEMP167 ; final doubleRefArray3 X10_TEMP169 = X10_TEMP0 . ffg ; final int X10_TEMP173 = ( 0 ) ; final int X10_TEMP174 = ( 0 ) ; final doubleValArray2 X10_TEMP176 = X10_TEMP0 . ffg2 ; final int X10_TEMP179 = ( 0 ) ; final Point2 RX10_TEMP250 = new Point2 ( X10_TEMP179 , _PoissonSolver_ELECX_IDX ) ; final Region2 RX10_TEMP251 = X10_TEMP176 . regionValue ; final int RX10_TEMP252 = Program . searchPointInRegion2 ( RX10_TEMP251 , RX10_TEMP250 ) ; final int RX10_TEMP253 = 0 ; final boolean RX10_TEMP254 = RX10_TEMP252 < RX10_TEMP253 ; if ( RX10_TEMP254 ) { String RX10_TEMP255 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP255 ) ; }
 final double value [ : rank==1 ] RX10_TEMP256 = ( double value [ : rank==1 ] ) ( X10_TEMP176 . contents ) ; double X10_TEMP181 = RX10_TEMP256 [ RX10_TEMP252 ] ; if ( X10_TEMP168 ) { final Point3 RX10_TEMP257 = new Point3 ( X10_TEMP173 , X10_TEMP174 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP258 = X10_TEMP169 . distValue ; final Region3 RX10_TEMP259 = RX10_TEMP258 . dReg ; final int RX10_TEMP260 = Program . searchPointInRegion3 ( RX10_TEMP259 , RX10_TEMP257 ) ; final int RX10_TEMP261 = 0 ; final boolean RX10_TEMP262 = RX10_TEMP260 < RX10_TEMP261 ; if ( RX10_TEMP262 ) { String RX10_TEMP263 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP263 ) ; }
 final place RX10_TEMP264 = Program . getPlaceFromDist3 ( RX10_TEMP258 , RX10_TEMP260 ) ; final place RX10_TEMP266 = here ; final boolean RX10_TEMP267 = RX10_TEMP264 != RX10_TEMP266 ; if ( RX10_TEMP267 ) { String RX10_TEMP265 = "Bad place access for array X10_TEMP169" ; throw new RuntimeException ( RX10_TEMP265 ) ; }
 final double RX10_TEMP268 = Program . getRefArrayValue3double ( X10_TEMP169 , RX10_TEMP260 ) ; X10_TEMP181 = RX10_TEMP268 ; }
 final double X10_TEMP182 = X10_TEMP181 ; final double X10_TEMP183 = ( X10_TEMP182 ) ; double tmp0 = ( X10_TEMP183 ) ; double tmp1 = ( tmp3 * tmp0 ) ; final doubleRefArray3 X10_TEMP187 = X10_TEMP0 . ffg ; final int X10_TEMP191 = ( 0 ) ; final Point3 RX10_TEMP269 = new Point3 ( i , X10_TEMP191 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP270 = X10_TEMP187 . distValue ; final Region3 RX10_TEMP271 = RX10_TEMP270 . dReg ; final int RX10_TEMP272 = Program . searchPointInRegion3 ( RX10_TEMP271 , RX10_TEMP269 ) ; final int RX10_TEMP273 = 0 ; final boolean RX10_TEMP274 = RX10_TEMP272 < RX10_TEMP273 ; if ( RX10_TEMP274 ) { String RX10_TEMP275 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP275 ) ; }
 final place RX10_TEMP276 = Program . getPlaceFromDist3 ( RX10_TEMP270 , RX10_TEMP272 ) ; final place RX10_TEMP278 = here ; final boolean RX10_TEMP279 = RX10_TEMP276 != RX10_TEMP278 ; if ( RX10_TEMP279 ) { String RX10_TEMP277 = "Bad place access for array X10_TEMP187" ; throw new RuntimeException ( RX10_TEMP277 ) ; }
 final double RX10_TEMP280 = Program . getRefArrayValue3double ( X10_TEMP187 , RX10_TEMP272 ) ; double X10_TEMP193 = ( RX10_TEMP280 ) ; final Complex x0 = ( new Complex ( tmp1 , X10_TEMP193 ) ) ; final int X10_TEMP197 = ( 0 ) ; final int X10_TEMP200 = ( 0 ) ; final Point2 RX10_TEMP281 = new Point2 ( i , X10_TEMP200 ) ; final Dist2 RX10_TEMP282 = q . distValue ; final Region2 RX10_TEMP283 = RX10_TEMP282 . dReg ; final int RX10_TEMP284 = Program . searchPointInRegion2 ( RX10_TEMP283 , RX10_TEMP281 ) ; final int RX10_TEMP285 = 0 ; final boolean RX10_TEMP286 = RX10_TEMP284 < RX10_TEMP285 ; if ( RX10_TEMP286 ) { String RX10_TEMP287 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP287 ) ; }
 final place RX10_TEMP288 = Program . getPlaceFromDist2 ( RX10_TEMP282 , RX10_TEMP284 ) ; final place RX10_TEMP290 = here ; final boolean RX10_TEMP291 = RX10_TEMP288 != RX10_TEMP290 ; if ( RX10_TEMP291 ) { String RX10_TEMP289 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP289 ) ; }
 final Complex RX10_TEMP292 = Program . getRefArrayValue2Complex ( q , RX10_TEMP284 ) ; final Complex X10_TEMP202 = ( RX10_TEMP292 ) ; final Complex X10_TEMP204 = ( Program . Complex_mult ( x0 , X10_TEMP202 ) ) ; final Complex X10_TEMP205 = ( X10_TEMP204 ) ; final Point2 RX10_TEMP293 = new Point2 ( i , X10_TEMP197 ) ; final Dist2 RX10_TEMP294 = forceX . distValue ; final Region2 RX10_TEMP295 = RX10_TEMP294 . dReg ; final int RX10_TEMP296 = Program . searchPointInRegion2 ( RX10_TEMP295 , RX10_TEMP293 ) ; final int RX10_TEMP297 = 0 ; final boolean RX10_TEMP298 = RX10_TEMP296 < RX10_TEMP297 ; if ( RX10_TEMP298 ) { String RX10_TEMP299 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP299 ) ; }
 final place RX10_TEMP300 = Program . getPlaceFromDist2 ( RX10_TEMP294 , RX10_TEMP296 ) ; final place RX10_TEMP302 = here ; final boolean RX10_TEMP303 = RX10_TEMP300 != RX10_TEMP302 ; if ( RX10_TEMP303 ) { String RX10_TEMP301 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP301 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP296 , X10_TEMP205 ) ; final int X10_TEMP208 = ( 0 ) ; final int X10_TEMP211 = ( 0 ) ; final Point2 RX10_TEMP304 = new Point2 ( i , X10_TEMP211 ) ; final Dist2 RX10_TEMP305 = q . distValue ; final Region2 RX10_TEMP306 = RX10_TEMP305 . dReg ; final int RX10_TEMP307 = Program . searchPointInRegion2 ( RX10_TEMP306 , RX10_TEMP304 ) ; final int RX10_TEMP308 = 0 ; final boolean RX10_TEMP309 = RX10_TEMP307 < RX10_TEMP308 ; if ( RX10_TEMP309 ) { String RX10_TEMP310 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP310 ) ; }
 final place RX10_TEMP311 = Program . getPlaceFromDist2 ( RX10_TEMP305 , RX10_TEMP307 ) ; final place RX10_TEMP313 = here ; final boolean RX10_TEMP314 = RX10_TEMP311 != RX10_TEMP313 ; if ( RX10_TEMP314 ) { String RX10_TEMP312 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP312 ) ; }
 final Complex RX10_TEMP315 = Program . getRefArrayValue2Complex ( q , RX10_TEMP307 ) ; final Complex X10_TEMP212 = ( RX10_TEMP315 ) ; final doubleRefArray3 X10_TEMP213 = X10_TEMP0 . ffg ; final int X10_TEMP217 = ( 0 ) ; final Point3 RX10_TEMP316 = new Point3 ( i , X10_TEMP217 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP317 = X10_TEMP213 . distValue ; final Region3 RX10_TEMP318 = RX10_TEMP317 . dReg ; final int RX10_TEMP319 = Program . searchPointInRegion3 ( RX10_TEMP318 , RX10_TEMP316 ) ; final int RX10_TEMP320 = 0 ; final boolean RX10_TEMP321 = RX10_TEMP319 < RX10_TEMP320 ; if ( RX10_TEMP321 ) { String RX10_TEMP322 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP322 ) ; }
 final place RX10_TEMP323 = Program . getPlaceFromDist3 ( RX10_TEMP317 , RX10_TEMP319 ) ; final place RX10_TEMP325 = here ; final boolean RX10_TEMP326 = RX10_TEMP323 != RX10_TEMP325 ; if ( RX10_TEMP326 ) { String RX10_TEMP324 = "Bad place access for array X10_TEMP213" ; throw new RuntimeException ( RX10_TEMP324 ) ; }
 final double RX10_TEMP327 = Program . getRefArrayValue3double ( X10_TEMP213 , RX10_TEMP319 ) ; final double X10_TEMP219 = ( RX10_TEMP327 ) ; final Complex X10_TEMP221 = ( Program . Complex_multS ( X10_TEMP212 , X10_TEMP219 ) ) ; final Complex X10_TEMP222 = ( X10_TEMP221 ) ; final Point2 RX10_TEMP328 = new Point2 ( i , X10_TEMP208 ) ; final Dist2 RX10_TEMP329 = forceY . distValue ; final Region2 RX10_TEMP330 = RX10_TEMP329 . dReg ; final int RX10_TEMP331 = Program . searchPointInRegion2 ( RX10_TEMP330 , RX10_TEMP328 ) ; final int RX10_TEMP332 = 0 ; final boolean RX10_TEMP333 = RX10_TEMP331 < RX10_TEMP332 ; if ( RX10_TEMP333 ) { String RX10_TEMP334 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP334 ) ; }
 final place RX10_TEMP335 = Program . getPlaceFromDist2 ( RX10_TEMP329 , RX10_TEMP331 ) ; final place RX10_TEMP337 = here ; final boolean RX10_TEMP338 = RX10_TEMP335 != RX10_TEMP337 ; if ( RX10_TEMP338 ) { String RX10_TEMP336 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP336 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP331 , X10_TEMP222 ) ; final Dist1 RX10_TEMP339 = energy . distValue ; final Region1 RX10_TEMP340 = RX10_TEMP339 . dReg ; final int RX10_TEMP341 = Program . searchPointInRegion1 ( RX10_TEMP340 , pl ) ; final int RX10_TEMP342 = 0 ; final boolean RX10_TEMP343 = RX10_TEMP341 < RX10_TEMP342 ; if ( RX10_TEMP343 ) { String RX10_TEMP344 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP344 ) ; }
 final place RX10_TEMP345 = Program . getPlaceFromDist1 ( RX10_TEMP339 , RX10_TEMP341 ) ; final place RX10_TEMP347 = here ; final boolean RX10_TEMP348 = RX10_TEMP345 != RX10_TEMP347 ; if ( RX10_TEMP348 ) { String RX10_TEMP346 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP346 ) ; }
 final double RX10_TEMP349 = Program . getRefArrayValue1double ( energy , RX10_TEMP341 ) ; final double X10_TEMP238 = ( RX10_TEMP349 ) ; final doubleRefArray3 X10_TEMP225 = X10_TEMP0 . ffg ; final int X10_TEMP229 = ( 0 ) ; final Point3 RX10_TEMP350 = new Point3 ( i , X10_TEMP229 , _PoissonSolver_GREENS_IDX ) ; final Dist3 RX10_TEMP351 = X10_TEMP225 . distValue ; final Region3 RX10_TEMP352 = RX10_TEMP351 . dReg ; final int RX10_TEMP353 = Program . searchPointInRegion3 ( RX10_TEMP352 , RX10_TEMP350 ) ; final int RX10_TEMP354 = 0 ; final boolean RX10_TEMP355 = RX10_TEMP353 < RX10_TEMP354 ; if ( RX10_TEMP355 ) { String RX10_TEMP356 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP356 ) ; }
 final place RX10_TEMP357 = Program . getPlaceFromDist3 ( RX10_TEMP351 , RX10_TEMP353 ) ; final place RX10_TEMP359 = here ; final boolean RX10_TEMP360 = RX10_TEMP357 != RX10_TEMP359 ; if ( RX10_TEMP360 ) { String RX10_TEMP358 = "Bad place access for array X10_TEMP225" ; throw new RuntimeException ( RX10_TEMP358 ) ; }
 final double RX10_TEMP361 = Program . getRefArrayValue3double ( X10_TEMP225 , RX10_TEMP353 ) ; final double X10_TEMP234 = ( RX10_TEMP361 ) ; final int X10_TEMP232 = ( 0 ) ; final Point2 RX10_TEMP362 = new Point2 ( i , X10_TEMP232 ) ; final Dist2 RX10_TEMP363 = q . distValue ; final Region2 RX10_TEMP364 = RX10_TEMP363 . dReg ; final int RX10_TEMP365 = Program . searchPointInRegion2 ( RX10_TEMP364 , RX10_TEMP362 ) ; final int RX10_TEMP366 = 0 ; final boolean RX10_TEMP367 = RX10_TEMP365 < RX10_TEMP366 ; if ( RX10_TEMP367 ) { String RX10_TEMP368 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP368 ) ; }
 final place RX10_TEMP369 = Program . getPlaceFromDist2 ( RX10_TEMP363 , RX10_TEMP365 ) ; final place RX10_TEMP371 = here ; final boolean RX10_TEMP372 = RX10_TEMP369 != RX10_TEMP371 ; if ( RX10_TEMP372 ) { String RX10_TEMP370 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP370 ) ; }
 final Complex RX10_TEMP373 = Program . getRefArrayValue2Complex ( q , RX10_TEMP365 ) ; final Complex X10_TEMP233 = ( RX10_TEMP373 ) ; final double X10_TEMP235 = ( Program . Complex_multConjg ( X10_TEMP233 ) ) ; final double X10_TEMP237 = ( X10_TEMP234 * X10_TEMP235 ) ; final double X10_TEMP240 = ( X10_TEMP238 + X10_TEMP237 ) ; final double X10_TEMP241 = ( X10_TEMP240 ) ; final Dist1 RX10_TEMP374 = energy . distValue ; final Region1 RX10_TEMP375 = RX10_TEMP374 . dReg ; final int RX10_TEMP376 = Program . searchPointInRegion1 ( RX10_TEMP375 , pl ) ; final int RX10_TEMP377 = 0 ; final boolean RX10_TEMP378 = RX10_TEMP376 < RX10_TEMP377 ; if ( RX10_TEMP378 ) { String RX10_TEMP379 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP379 ) ; }
 final place RX10_TEMP380 = Program . getPlaceFromDist1 ( RX10_TEMP374 , RX10_TEMP376 ) ; final place RX10_TEMP382 = here ; final boolean RX10_TEMP383 = RX10_TEMP380 != RX10_TEMP382 ; if ( RX10_TEMP383 ) { String RX10_TEMP381 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP381 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP376 , X10_TEMP241 ) ; final place X10_TEMP242 = ( here ) ; final boolean X10_TEMP244 = ( X10_TEMP242 . isFirst ( ) ) ; final boolean X10_TEMP245 = X10_TEMP244 ; final doubleRefArray3 X10_TEMP246 = X10_TEMP0 . ffg ; final int X10_TEMP250 = ( 0 ) ; final int X10_TEMP251 = ( X10_TEMP0 . y ) ; final doubleValArray2 X10_TEMP253 = X10_TEMP0 . ffg2 ; final int X10_TEMP256 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP384 = new Point2 ( X10_TEMP256 , _PoissonSolver_ELECX_IDX ) ; final Region2 RX10_TEMP385 = X10_TEMP253 . regionValue ; final int RX10_TEMP386 = Program . searchPointInRegion2 ( RX10_TEMP385 , RX10_TEMP384 ) ; final int RX10_TEMP387 = 0 ; final boolean RX10_TEMP388 = RX10_TEMP386 < RX10_TEMP387 ; if ( RX10_TEMP388 ) { String RX10_TEMP389 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP389 ) ; }
 final double value [ : rank==1 ] RX10_TEMP390 = ( double value [ : rank==1 ] ) ( X10_TEMP253 . contents ) ; double X10_TEMP258 = RX10_TEMP390 [ RX10_TEMP386 ] ; if ( X10_TEMP245 ) { final Point3 RX10_TEMP391 = new Point3 ( X10_TEMP250 , X10_TEMP251 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP392 = X10_TEMP246 . distValue ; final Region3 RX10_TEMP393 = RX10_TEMP392 . dReg ; final int RX10_TEMP394 = Program . searchPointInRegion3 ( RX10_TEMP393 , RX10_TEMP391 ) ; final int RX10_TEMP395 = 0 ; final boolean RX10_TEMP396 = RX10_TEMP394 < RX10_TEMP395 ; if ( RX10_TEMP396 ) { String RX10_TEMP397 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP397 ) ; }
 final place RX10_TEMP398 = Program . getPlaceFromDist3 ( RX10_TEMP392 , RX10_TEMP394 ) ; final place RX10_TEMP400 = here ; final boolean RX10_TEMP401 = RX10_TEMP398 != RX10_TEMP400 ; if ( RX10_TEMP401 ) { String RX10_TEMP399 = "Bad place access for array X10_TEMP246" ; throw new RuntimeException ( RX10_TEMP399 ) ; }
 final double RX10_TEMP402 = Program . getRefArrayValue3double ( X10_TEMP246 , RX10_TEMP394 ) ; X10_TEMP258 = RX10_TEMP402 ; }
 final double X10_TEMP259 = X10_TEMP258 ; final double X10_TEMP260 = ( X10_TEMP259 ) ; tmp0 = ( X10_TEMP260 ) ; final double X10_TEMP263 = ( tmp3 * tmp0 ) ; tmp1 = ( X10_TEMP263 ) ; final doubleRefArray3 X10_TEMP265 = X10_TEMP0 . ffg ; final int X10_TEMP269 = ( X10_TEMP0 . y ) ; final Point3 RX10_TEMP403 = new Point3 ( i , X10_TEMP269 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP404 = X10_TEMP265 . distValue ; final Region3 RX10_TEMP405 = RX10_TEMP404 . dReg ; final int RX10_TEMP406 = Program . searchPointInRegion3 ( RX10_TEMP405 , RX10_TEMP403 ) ; final int RX10_TEMP407 = 0 ; final boolean RX10_TEMP408 = RX10_TEMP406 < RX10_TEMP407 ; if ( RX10_TEMP408 ) { String RX10_TEMP409 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP409 ) ; }
 final place RX10_TEMP410 = Program . getPlaceFromDist3 ( RX10_TEMP404 , RX10_TEMP406 ) ; final place RX10_TEMP412 = here ; final boolean RX10_TEMP413 = RX10_TEMP410 != RX10_TEMP412 ; if ( RX10_TEMP413 ) { String RX10_TEMP411 = "Bad place access for array X10_TEMP265" ; throw new RuntimeException ( RX10_TEMP411 ) ; }
 final double RX10_TEMP414 = Program . getRefArrayValue3double ( X10_TEMP265 , RX10_TEMP406 ) ; double X10_TEMP271 = ( RX10_TEMP414 ) ; final Complex xNY = ( new Complex ( tmp1 , X10_TEMP271 ) ) ; final int X10_TEMP275 = ( X10_TEMP0 . y ) ; final int X10_TEMP278 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP415 = new Point2 ( i , X10_TEMP278 ) ; final Dist2 RX10_TEMP416 = q . distValue ; final Region2 RX10_TEMP417 = RX10_TEMP416 . dReg ; final int RX10_TEMP418 = Program . searchPointInRegion2 ( RX10_TEMP417 , RX10_TEMP415 ) ; final int RX10_TEMP419 = 0 ; final boolean RX10_TEMP420 = RX10_TEMP418 < RX10_TEMP419 ; if ( RX10_TEMP420 ) { String RX10_TEMP421 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP421 ) ; }
 final place RX10_TEMP422 = Program . getPlaceFromDist2 ( RX10_TEMP416 , RX10_TEMP418 ) ; final place RX10_TEMP424 = here ; final boolean RX10_TEMP425 = RX10_TEMP422 != RX10_TEMP424 ; if ( RX10_TEMP425 ) { String RX10_TEMP423 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP423 ) ; }
 final Complex RX10_TEMP426 = Program . getRefArrayValue2Complex ( q , RX10_TEMP418 ) ; final Complex X10_TEMP280 = ( RX10_TEMP426 ) ; final Complex X10_TEMP282 = ( Program . Complex_mult ( xNY , X10_TEMP280 ) ) ; final Complex X10_TEMP283 = ( X10_TEMP282 ) ; final Point2 RX10_TEMP427 = new Point2 ( i , X10_TEMP275 ) ; final Dist2 RX10_TEMP428 = forceX . distValue ; final Region2 RX10_TEMP429 = RX10_TEMP428 . dReg ; final int RX10_TEMP430 = Program . searchPointInRegion2 ( RX10_TEMP429 , RX10_TEMP427 ) ; final int RX10_TEMP431 = 0 ; final boolean RX10_TEMP432 = RX10_TEMP430 < RX10_TEMP431 ; if ( RX10_TEMP432 ) { String RX10_TEMP433 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP433 ) ; }
 final place RX10_TEMP434 = Program . getPlaceFromDist2 ( RX10_TEMP428 , RX10_TEMP430 ) ; final place RX10_TEMP436 = here ; final boolean RX10_TEMP437 = RX10_TEMP434 != RX10_TEMP436 ; if ( RX10_TEMP437 ) { String RX10_TEMP435 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP435 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP430 , X10_TEMP283 ) ; final int X10_TEMP286 = ( X10_TEMP0 . y ) ; final int X10_TEMP289 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP438 = new Point2 ( i , X10_TEMP289 ) ; final Dist2 RX10_TEMP439 = q . distValue ; final Region2 RX10_TEMP440 = RX10_TEMP439 . dReg ; final int RX10_TEMP441 = Program . searchPointInRegion2 ( RX10_TEMP440 , RX10_TEMP438 ) ; final int RX10_TEMP442 = 0 ; final boolean RX10_TEMP443 = RX10_TEMP441 < RX10_TEMP442 ; if ( RX10_TEMP443 ) { String RX10_TEMP444 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP444 ) ; }
 final place RX10_TEMP445 = Program . getPlaceFromDist2 ( RX10_TEMP439 , RX10_TEMP441 ) ; final place RX10_TEMP447 = here ; final boolean RX10_TEMP448 = RX10_TEMP445 != RX10_TEMP447 ; if ( RX10_TEMP448 ) { String RX10_TEMP446 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP446 ) ; }
 final Complex RX10_TEMP449 = Program . getRefArrayValue2Complex ( q , RX10_TEMP441 ) ; final Complex X10_TEMP290 = ( RX10_TEMP449 ) ; final doubleRefArray3 X10_TEMP291 = X10_TEMP0 . ffg ; final int X10_TEMP295 = ( X10_TEMP0 . y ) ; final Point3 RX10_TEMP450 = new Point3 ( i , X10_TEMP295 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP451 = X10_TEMP291 . distValue ; final Region3 RX10_TEMP452 = RX10_TEMP451 . dReg ; final int RX10_TEMP453 = Program . searchPointInRegion3 ( RX10_TEMP452 , RX10_TEMP450 ) ; final int RX10_TEMP454 = 0 ; final boolean RX10_TEMP455 = RX10_TEMP453 < RX10_TEMP454 ; if ( RX10_TEMP455 ) { String RX10_TEMP456 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP456 ) ; }
 final place RX10_TEMP457 = Program . getPlaceFromDist3 ( RX10_TEMP451 , RX10_TEMP453 ) ; final place RX10_TEMP459 = here ; final boolean RX10_TEMP460 = RX10_TEMP457 != RX10_TEMP459 ; if ( RX10_TEMP460 ) { String RX10_TEMP458 = "Bad place access for array X10_TEMP291" ; throw new RuntimeException ( RX10_TEMP458 ) ; }
 final double RX10_TEMP461 = Program . getRefArrayValue3double ( X10_TEMP291 , RX10_TEMP453 ) ; final double X10_TEMP297 = ( RX10_TEMP461 ) ; final Complex X10_TEMP299 = ( Program . Complex_multS ( X10_TEMP290 , X10_TEMP297 ) ) ; final Complex X10_TEMP300 = ( X10_TEMP299 ) ; final Point2 RX10_TEMP462 = new Point2 ( i , X10_TEMP286 ) ; final Dist2 RX10_TEMP463 = forceY . distValue ; final Region2 RX10_TEMP464 = RX10_TEMP463 . dReg ; final int RX10_TEMP465 = Program . searchPointInRegion2 ( RX10_TEMP464 , RX10_TEMP462 ) ; final int RX10_TEMP466 = 0 ; final boolean RX10_TEMP467 = RX10_TEMP465 < RX10_TEMP466 ; if ( RX10_TEMP467 ) { String RX10_TEMP468 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP468 ) ; }
 final place RX10_TEMP469 = Program . getPlaceFromDist2 ( RX10_TEMP463 , RX10_TEMP465 ) ; final place RX10_TEMP471 = here ; final boolean RX10_TEMP472 = RX10_TEMP469 != RX10_TEMP471 ; if ( RX10_TEMP472 ) { String RX10_TEMP470 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP470 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP465 , X10_TEMP300 ) ; final Dist1 RX10_TEMP473 = energy . distValue ; final Region1 RX10_TEMP474 = RX10_TEMP473 . dReg ; final int RX10_TEMP475 = Program . searchPointInRegion1 ( RX10_TEMP474 , pl ) ; final int RX10_TEMP476 = 0 ; final boolean RX10_TEMP477 = RX10_TEMP475 < RX10_TEMP476 ; if ( RX10_TEMP477 ) { String RX10_TEMP478 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP478 ) ; }
 final place RX10_TEMP479 = Program . getPlaceFromDist1 ( RX10_TEMP473 , RX10_TEMP475 ) ; final place RX10_TEMP481 = here ; final boolean RX10_TEMP482 = RX10_TEMP479 != RX10_TEMP481 ; if ( RX10_TEMP482 ) { String RX10_TEMP480 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP480 ) ; }
 final double RX10_TEMP483 = Program . getRefArrayValue1double ( energy , RX10_TEMP475 ) ; final double X10_TEMP316 = ( RX10_TEMP483 ) ; final doubleRefArray3 X10_TEMP303 = X10_TEMP0 . ffg ; final int X10_TEMP307 = ( X10_TEMP0 . y ) ; final Point3 RX10_TEMP484 = new Point3 ( i , X10_TEMP307 , _PoissonSolver_GREENS_IDX ) ; final Dist3 RX10_TEMP485 = X10_TEMP303 . distValue ; final Region3 RX10_TEMP486 = RX10_TEMP485 . dReg ; final int RX10_TEMP487 = Program . searchPointInRegion3 ( RX10_TEMP486 , RX10_TEMP484 ) ; final int RX10_TEMP488 = 0 ; final boolean RX10_TEMP489 = RX10_TEMP487 < RX10_TEMP488 ; if ( RX10_TEMP489 ) { String RX10_TEMP490 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP490 ) ; }
 final place RX10_TEMP491 = Program . getPlaceFromDist3 ( RX10_TEMP485 , RX10_TEMP487 ) ; final place RX10_TEMP493 = here ; final boolean RX10_TEMP494 = RX10_TEMP491 != RX10_TEMP493 ; if ( RX10_TEMP494 ) { String RX10_TEMP492 = "Bad place access for array X10_TEMP303" ; throw new RuntimeException ( RX10_TEMP492 ) ; }
 final double RX10_TEMP495 = Program . getRefArrayValue3double ( X10_TEMP303 , RX10_TEMP487 ) ; final double X10_TEMP312 = ( RX10_TEMP495 ) ; final int X10_TEMP310 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP496 = new Point2 ( i , X10_TEMP310 ) ; final Dist2 RX10_TEMP497 = q . distValue ; final Region2 RX10_TEMP498 = RX10_TEMP497 . dReg ; final int RX10_TEMP499 = Program . searchPointInRegion2 ( RX10_TEMP498 , RX10_TEMP496 ) ; final int RX10_TEMP500 = 0 ; final boolean RX10_TEMP501 = RX10_TEMP499 < RX10_TEMP500 ; if ( RX10_TEMP501 ) { String RX10_TEMP502 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP502 ) ; }
 final place RX10_TEMP503 = Program . getPlaceFromDist2 ( RX10_TEMP497 , RX10_TEMP499 ) ; final place RX10_TEMP505 = here ; final boolean RX10_TEMP506 = RX10_TEMP503 != RX10_TEMP505 ; if ( RX10_TEMP506 ) { String RX10_TEMP504 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP504 ) ; }
 final Complex RX10_TEMP507 = Program . getRefArrayValue2Complex ( q , RX10_TEMP499 ) ; final Complex X10_TEMP311 = ( RX10_TEMP507 ) ; final double X10_TEMP313 = ( Program . Complex_multConjg ( X10_TEMP311 ) ) ; final double X10_TEMP315 = ( X10_TEMP312 * X10_TEMP313 ) ; final double X10_TEMP318 = ( X10_TEMP316 + X10_TEMP315 ) ; final double X10_TEMP319 = ( X10_TEMP318 ) ; final Dist1 RX10_TEMP508 = energy . distValue ; final Region1 RX10_TEMP509 = RX10_TEMP508 . dReg ; final int RX10_TEMP510 = Program . searchPointInRegion1 ( RX10_TEMP509 , pl ) ; final int RX10_TEMP511 = 0 ; final boolean RX10_TEMP512 = RX10_TEMP510 < RX10_TEMP511 ; if ( RX10_TEMP512 ) { String RX10_TEMP513 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP513 ) ; }
 final place RX10_TEMP514 = Program . getPlaceFromDist1 ( RX10_TEMP508 , RX10_TEMP510 ) ; final place RX10_TEMP516 = here ; final boolean RX10_TEMP517 = RX10_TEMP514 != RX10_TEMP516 ; if ( RX10_TEMP517 ) { String RX10_TEMP515 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP515 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP510 , X10_TEMP319 ) ; }
 }
 final place X10_TEMP320 = ( here ) ; final boolean X10_TEMP322 = X10_TEMP320 . isFirst ( ) ; if ( X10_TEMP322 ) { final doubleRefArray3 X10_TEMP323 = X10_TEMP0 . ffg ; final int X10_TEMP327 = ( 0 ) ; final int X10_TEMP328 = ( 0 ) ; final Point3 RX10_TEMP518 = new Point3 ( X10_TEMP327 , X10_TEMP328 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP519 = X10_TEMP323 . distValue ; final Region3 RX10_TEMP520 = RX10_TEMP519 . dReg ; final int RX10_TEMP521 = Program . searchPointInRegion3 ( RX10_TEMP520 , RX10_TEMP518 ) ; final int RX10_TEMP522 = 0 ; final boolean RX10_TEMP523 = RX10_TEMP521 < RX10_TEMP522 ; if ( RX10_TEMP523 ) { String RX10_TEMP524 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP524 ) ; }
 final place RX10_TEMP525 = Program . getPlaceFromDist3 ( RX10_TEMP519 , RX10_TEMP521 ) ; final place RX10_TEMP527 = here ; final boolean RX10_TEMP528 = RX10_TEMP525 != RX10_TEMP527 ; if ( RX10_TEMP528 ) { String RX10_TEMP526 = "Bad place access for array X10_TEMP323" ; throw new RuntimeException ( RX10_TEMP526 ) ; }
 final double RX10_TEMP529 = Program . getRefArrayValue3double ( X10_TEMP323 , RX10_TEMP521 ) ; final double X10_TEMP330 = ( RX10_TEMP529 ) ; tmp3 = ( X10_TEMP330 ) ; final int X10_TEMP335 = ( 1 ) ; final int X10_TEMP332 = ( X10_TEMP0 . y ) ; final int X10_TEMP333 = ( 1 ) ; final int X10_TEMP336 = ( X10_TEMP332 - X10_TEMP333 ) ; final Region1 X10_TEMP338 = Program . createNewRegion1R ( X10_TEMP335 , X10_TEMP336 ) ; final int RX10_TEMP534 = 1 ; int RX10_TEMP532 = X10_TEMP338 . regSize ; RX10_TEMP532 = RX10_TEMP532 - RX10_TEMP534 ; final region ( : rank==1 ) RX10_TEMP533 = [ 0 : RX10_TEMP532 ] ; for ( point ( : rank==1 ) RX10_TEMP530 : RX10_TEMP533 ) { final int RX10_TEMP535 = RX10_TEMP530 [0] ; final Point1 RX10_TEMP531 = Program . regionOrdinalPoint1 ( X10_TEMP338 , RX10_TEMP535 ) ; final int j = RX10_TEMP531 . f0 ; final int X10_TEMP339 = 0 ; final double X10_TEMP341 = ( X10_TEMP339 - tmp3 ) ; tmp3 = ( X10_TEMP341 ) ; final doubleRefArray3 X10_TEMP343 = X10_TEMP0 . ffg ; final int X10_TEMP347 = ( 0 ) ; final Point3 RX10_TEMP536 = new Point3 ( X10_TEMP347 , j , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP537 = X10_TEMP343 . distValue ; final Region3 RX10_TEMP538 = RX10_TEMP537 . dReg ; final int RX10_TEMP539 = Program . searchPointInRegion3 ( RX10_TEMP538 , RX10_TEMP536 ) ; final int RX10_TEMP540 = 0 ; final boolean RX10_TEMP541 = RX10_TEMP539 < RX10_TEMP540 ; if ( RX10_TEMP541 ) { String RX10_TEMP542 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP542 ) ; }
 final place RX10_TEMP543 = Program . getPlaceFromDist3 ( RX10_TEMP537 , RX10_TEMP539 ) ; final place RX10_TEMP545 = here ; final boolean RX10_TEMP546 = RX10_TEMP543 != RX10_TEMP545 ; if ( RX10_TEMP546 ) { String RX10_TEMP544 = "Bad place access for array X10_TEMP343" ; throw new RuntimeException ( RX10_TEMP544 ) ; }
 final double RX10_TEMP547 = Program . getRefArrayValue3double ( X10_TEMP343 , RX10_TEMP539 ) ; double X10_TEMP349 = ( RX10_TEMP547 ) ; final Complex s = ( new Complex ( tmp3 , X10_TEMP349 ) ) ; final int X10_TEMP353 = ( 0 ) ; final int X10_TEMP356 = ( 0 ) ; final Point2 RX10_TEMP548 = new Point2 ( X10_TEMP356 , j ) ; final Dist2 RX10_TEMP549 = q . distValue ; final Region2 RX10_TEMP550 = RX10_TEMP549 . dReg ; final int RX10_TEMP551 = Program . searchPointInRegion2 ( RX10_TEMP550 , RX10_TEMP548 ) ; final int RX10_TEMP552 = 0 ; final boolean RX10_TEMP553 = RX10_TEMP551 < RX10_TEMP552 ; if ( RX10_TEMP553 ) { String RX10_TEMP554 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP554 ) ; }
 final place RX10_TEMP555 = Program . getPlaceFromDist2 ( RX10_TEMP549 , RX10_TEMP551 ) ; final place RX10_TEMP557 = here ; final boolean RX10_TEMP558 = RX10_TEMP555 != RX10_TEMP557 ; if ( RX10_TEMP558 ) { String RX10_TEMP556 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP556 ) ; }
 final Complex RX10_TEMP559 = Program . getRefArrayValue2Complex ( q , RX10_TEMP551 ) ; final Complex X10_TEMP357 = ( RX10_TEMP559 ) ; final doubleRefArray3 X10_TEMP358 = X10_TEMP0 . ffg ; final int X10_TEMP362 = ( 0 ) ; final Point3 RX10_TEMP560 = new Point3 ( X10_TEMP362 , j , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP561 = X10_TEMP358 . distValue ; final Region3 RX10_TEMP562 = RX10_TEMP561 . dReg ; final int RX10_TEMP563 = Program . searchPointInRegion3 ( RX10_TEMP562 , RX10_TEMP560 ) ; final int RX10_TEMP564 = 0 ; final boolean RX10_TEMP565 = RX10_TEMP563 < RX10_TEMP564 ; if ( RX10_TEMP565 ) { String RX10_TEMP566 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP566 ) ; }
 final place RX10_TEMP567 = Program . getPlaceFromDist3 ( RX10_TEMP561 , RX10_TEMP563 ) ; final place RX10_TEMP569 = here ; final boolean RX10_TEMP570 = RX10_TEMP567 != RX10_TEMP569 ; if ( RX10_TEMP570 ) { String RX10_TEMP568 = "Bad place access for array X10_TEMP358" ; throw new RuntimeException ( RX10_TEMP568 ) ; }
 final double RX10_TEMP571 = Program . getRefArrayValue3double ( X10_TEMP358 , RX10_TEMP563 ) ; final double X10_TEMP364 = ( RX10_TEMP571 ) ; final Complex X10_TEMP366 = ( Program . Complex_multS ( X10_TEMP357 , X10_TEMP364 ) ) ; final Complex X10_TEMP367 = ( X10_TEMP366 ) ; final Point2 RX10_TEMP572 = new Point2 ( X10_TEMP353 , j ) ; final Dist2 RX10_TEMP573 = forceX . distValue ; final Region2 RX10_TEMP574 = RX10_TEMP573 . dReg ; final int RX10_TEMP575 = Program . searchPointInRegion2 ( RX10_TEMP574 , RX10_TEMP572 ) ; final int RX10_TEMP576 = 0 ; final boolean RX10_TEMP577 = RX10_TEMP575 < RX10_TEMP576 ; if ( RX10_TEMP577 ) { String RX10_TEMP578 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP578 ) ; }
 final place RX10_TEMP579 = Program . getPlaceFromDist2 ( RX10_TEMP573 , RX10_TEMP575 ) ; final place RX10_TEMP581 = here ; final boolean RX10_TEMP582 = RX10_TEMP579 != RX10_TEMP581 ; if ( RX10_TEMP582 ) { String RX10_TEMP580 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP580 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP575 , X10_TEMP367 ) ; final int X10_TEMP370 = ( 0 ) ; final int X10_TEMP373 = ( 0 ) ; final Point2 RX10_TEMP583 = new Point2 ( X10_TEMP373 , j ) ; final Dist2 RX10_TEMP584 = q . distValue ; final Region2 RX10_TEMP585 = RX10_TEMP584 . dReg ; final int RX10_TEMP586 = Program . searchPointInRegion2 ( RX10_TEMP585 , RX10_TEMP583 ) ; final int RX10_TEMP587 = 0 ; final boolean RX10_TEMP588 = RX10_TEMP586 < RX10_TEMP587 ; if ( RX10_TEMP588 ) { String RX10_TEMP589 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP589 ) ; }
 final place RX10_TEMP590 = Program . getPlaceFromDist2 ( RX10_TEMP584 , RX10_TEMP586 ) ; final place RX10_TEMP592 = here ; final boolean RX10_TEMP593 = RX10_TEMP590 != RX10_TEMP592 ; if ( RX10_TEMP593 ) { String RX10_TEMP591 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP591 ) ; }
 final Complex RX10_TEMP594 = Program . getRefArrayValue2Complex ( q , RX10_TEMP586 ) ; final Complex X10_TEMP375 = ( RX10_TEMP594 ) ; final Complex X10_TEMP377 = ( Program . Complex_mult ( s , X10_TEMP375 ) ) ; final Complex X10_TEMP378 = ( X10_TEMP377 ) ; final Point2 RX10_TEMP595 = new Point2 ( X10_TEMP370 , j ) ; final Dist2 RX10_TEMP596 = forceY . distValue ; final Region2 RX10_TEMP597 = RX10_TEMP596 . dReg ; final int RX10_TEMP598 = Program . searchPointInRegion2 ( RX10_TEMP597 , RX10_TEMP595 ) ; final int RX10_TEMP599 = 0 ; final boolean RX10_TEMP600 = RX10_TEMP598 < RX10_TEMP599 ; if ( RX10_TEMP600 ) { String RX10_TEMP601 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP601 ) ; }
 final place RX10_TEMP602 = Program . getPlaceFromDist2 ( RX10_TEMP596 , RX10_TEMP598 ) ; final place RX10_TEMP604 = here ; final boolean RX10_TEMP605 = RX10_TEMP602 != RX10_TEMP604 ; if ( RX10_TEMP605 ) { String RX10_TEMP603 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP603 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP598 , X10_TEMP378 ) ; final Dist1 RX10_TEMP606 = energy . distValue ; final Region1 RX10_TEMP607 = RX10_TEMP606 . dReg ; final int RX10_TEMP608 = Program . searchPointInRegion1 ( RX10_TEMP607 , pl ) ; final int RX10_TEMP609 = 0 ; final boolean RX10_TEMP610 = RX10_TEMP608 < RX10_TEMP609 ; if ( RX10_TEMP610 ) { String RX10_TEMP611 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP611 ) ; }
 final place RX10_TEMP612 = Program . getPlaceFromDist1 ( RX10_TEMP606 , RX10_TEMP608 ) ; final place RX10_TEMP614 = here ; final boolean RX10_TEMP615 = RX10_TEMP612 != RX10_TEMP614 ; if ( RX10_TEMP615 ) { String RX10_TEMP613 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP613 ) ; }
 final double RX10_TEMP616 = Program . getRefArrayValue1double ( energy , RX10_TEMP608 ) ; final double X10_TEMP394 = ( RX10_TEMP616 ) ; final doubleRefArray3 X10_TEMP381 = X10_TEMP0 . ffg ; final int X10_TEMP385 = ( 0 ) ; final Point3 RX10_TEMP617 = new Point3 ( X10_TEMP385 , j , _PoissonSolver_GREENS_IDX ) ; final Dist3 RX10_TEMP618 = X10_TEMP381 . distValue ; final Region3 RX10_TEMP619 = RX10_TEMP618 . dReg ; final int RX10_TEMP620 = Program . searchPointInRegion3 ( RX10_TEMP619 , RX10_TEMP617 ) ; final int RX10_TEMP621 = 0 ; final boolean RX10_TEMP622 = RX10_TEMP620 < RX10_TEMP621 ; if ( RX10_TEMP622 ) { String RX10_TEMP623 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP623 ) ; }
 final place RX10_TEMP624 = Program . getPlaceFromDist3 ( RX10_TEMP618 , RX10_TEMP620 ) ; final place RX10_TEMP626 = here ; final boolean RX10_TEMP627 = RX10_TEMP624 != RX10_TEMP626 ; if ( RX10_TEMP627 ) { String RX10_TEMP625 = "Bad place access for array X10_TEMP381" ; throw new RuntimeException ( RX10_TEMP625 ) ; }
 final double RX10_TEMP628 = Program . getRefArrayValue3double ( X10_TEMP381 , RX10_TEMP620 ) ; final double X10_TEMP390 = ( RX10_TEMP628 ) ; final int X10_TEMP388 = ( 0 ) ; final Point2 RX10_TEMP629 = new Point2 ( X10_TEMP388 , j ) ; final Dist2 RX10_TEMP630 = q . distValue ; final Region2 RX10_TEMP631 = RX10_TEMP630 . dReg ; final int RX10_TEMP632 = Program . searchPointInRegion2 ( RX10_TEMP631 , RX10_TEMP629 ) ; final int RX10_TEMP633 = 0 ; final boolean RX10_TEMP634 = RX10_TEMP632 < RX10_TEMP633 ; if ( RX10_TEMP634 ) { String RX10_TEMP635 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP635 ) ; }
 final place RX10_TEMP636 = Program . getPlaceFromDist2 ( RX10_TEMP630 , RX10_TEMP632 ) ; final place RX10_TEMP638 = here ; final boolean RX10_TEMP639 = RX10_TEMP636 != RX10_TEMP638 ; if ( RX10_TEMP639 ) { String RX10_TEMP637 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP637 ) ; }
 final Complex RX10_TEMP640 = Program . getRefArrayValue2Complex ( q , RX10_TEMP632 ) ; final Complex X10_TEMP389 = ( RX10_TEMP640 ) ; final double X10_TEMP391 = ( Program . Complex_multConjg ( X10_TEMP389 ) ) ; final double X10_TEMP393 = ( X10_TEMP390 * X10_TEMP391 ) ; final double X10_TEMP396 = ( X10_TEMP394 + X10_TEMP393 ) ; final double X10_TEMP397 = ( X10_TEMP396 ) ; final Dist1 RX10_TEMP641 = energy . distValue ; final Region1 RX10_TEMP642 = RX10_TEMP641 . dReg ; final int RX10_TEMP643 = Program . searchPointInRegion1 ( RX10_TEMP642 , pl ) ; final int RX10_TEMP644 = 0 ; final boolean RX10_TEMP645 = RX10_TEMP643 < RX10_TEMP644 ; if ( RX10_TEMP645 ) { String RX10_TEMP646 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP646 ) ; }
 final place RX10_TEMP647 = Program . getPlaceFromDist1 ( RX10_TEMP641 , RX10_TEMP643 ) ; final place RX10_TEMP649 = here ; final boolean RX10_TEMP650 = RX10_TEMP647 != RX10_TEMP649 ; if ( RX10_TEMP650 ) { String RX10_TEMP648 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP648 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP643 , X10_TEMP397 ) ; }
 final doubleValArray2 X10_TEMP398 = X10_TEMP0 . ffg2 ; final int X10_TEMP401 = ( 0 ) ; final Point2 RX10_TEMP651 = new Point2 ( X10_TEMP401 , _PoissonSolver_ELECY_IDX ) ; final Region2 RX10_TEMP652 = X10_TEMP398 . regionValue ; final int RX10_TEMP653 = Program . searchPointInRegion2 ( RX10_TEMP652 , RX10_TEMP651 ) ; final int RX10_TEMP654 = 0 ; final boolean RX10_TEMP655 = RX10_TEMP653 < RX10_TEMP654 ; if ( RX10_TEMP655 ) { String RX10_TEMP656 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP656 ) ; }
 final double value [ : rank==1 ] RX10_TEMP657 = ( double value [ : rank==1 ] ) ( X10_TEMP398 . contents ) ; final double X10_TEMP403 = ( RX10_TEMP657 [ RX10_TEMP653 ] ) ; tmp3 = ( X10_TEMP403 ) ; final int X10_TEMP408 = ( 1 ) ; final int X10_TEMP405 = ( X10_TEMP0 . y ) ; final int X10_TEMP406 = ( 1 ) ; final int X10_TEMP409 = ( X10_TEMP405 - X10_TEMP406 ) ; final Region1 X10_TEMP411 = Program . createNewRegion1R ( X10_TEMP408 , X10_TEMP409 ) ; final int RX10_TEMP662 = 1 ; int RX10_TEMP660 = X10_TEMP411 . regSize ; RX10_TEMP660 = RX10_TEMP660 - RX10_TEMP662 ; final region ( : rank==1 ) RX10_TEMP661 = [ 0 : RX10_TEMP660 ] ; for ( point ( : rank==1 ) RX10_TEMP658 : RX10_TEMP661 ) { final int RX10_TEMP663 = RX10_TEMP658 [0] ; final Point1 RX10_TEMP659 = Program . regionOrdinalPoint1 ( X10_TEMP411 , RX10_TEMP663 ) ; final int j1 = RX10_TEMP659 . f0 ; final int X10_TEMP412 = 0 ; final double X10_TEMP414 = ( X10_TEMP412 - tmp3 ) ; tmp3 = ( X10_TEMP414 ) ; final int X10_TEMP415 = ( 2 ) ; final int X10_TEMP416 = ( X10_TEMP0 . y ) ; final int X10_TEMP417 = ( X10_TEMP415 * X10_TEMP416 ) ; final int j2 = ( X10_TEMP417 - j1 ) ; final doubleValArray2 X10_TEMP420 = X10_TEMP0 . ffg2 ; final Point2 RX10_TEMP664 = new Point2 ( j1 , _PoissonSolver_ELECY_IDX ) ; final Region2 RX10_TEMP665 = X10_TEMP420 . regionValue ; final int RX10_TEMP666 = Program . searchPointInRegion2 ( RX10_TEMP665 , RX10_TEMP664 ) ; final int RX10_TEMP667 = 0 ; final boolean RX10_TEMP668 = RX10_TEMP666 < RX10_TEMP667 ; if ( RX10_TEMP668 ) { String RX10_TEMP669 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP669 ) ; }
 final double value [ : rank==1 ] RX10_TEMP670 = ( double value [ : rank==1 ] ) ( X10_TEMP420 . contents ) ; double X10_TEMP424 = ( RX10_TEMP670 [ RX10_TEMP666 ] ) ; final Complex s = ( new Complex ( tmp3 , X10_TEMP424 ) ) ; final int X10_TEMP428 = ( 0 ) ; final int X10_TEMP431 = ( 0 ) ; final Point2 RX10_TEMP671 = new Point2 ( X10_TEMP431 , j2 ) ; final Dist2 RX10_TEMP672 = q . distValue ; final Region2 RX10_TEMP673 = RX10_TEMP672 . dReg ; final int RX10_TEMP674 = Program . searchPointInRegion2 ( RX10_TEMP673 , RX10_TEMP671 ) ; final int RX10_TEMP675 = 0 ; final boolean RX10_TEMP676 = RX10_TEMP674 < RX10_TEMP675 ; if ( RX10_TEMP676 ) { String RX10_TEMP677 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP677 ) ; }
 final place RX10_TEMP678 = Program . getPlaceFromDist2 ( RX10_TEMP672 , RX10_TEMP674 ) ; final place RX10_TEMP680 = here ; final boolean RX10_TEMP681 = RX10_TEMP678 != RX10_TEMP680 ; if ( RX10_TEMP681 ) { String RX10_TEMP679 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP679 ) ; }
 final Complex RX10_TEMP682 = Program . getRefArrayValue2Complex ( q , RX10_TEMP674 ) ; final Complex X10_TEMP432 = ( RX10_TEMP682 ) ; final doubleRefArray3 X10_TEMP433 = X10_TEMP0 . ffg ; final int X10_TEMP437 = ( 0 ) ; final Point3 RX10_TEMP683 = new Point3 ( X10_TEMP437 , j1 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP684 = X10_TEMP433 . distValue ; final Region3 RX10_TEMP685 = RX10_TEMP684 . dReg ; final int RX10_TEMP686 = Program . searchPointInRegion3 ( RX10_TEMP685 , RX10_TEMP683 ) ; final int RX10_TEMP687 = 0 ; final boolean RX10_TEMP688 = RX10_TEMP686 < RX10_TEMP687 ; if ( RX10_TEMP688 ) { String RX10_TEMP689 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP689 ) ; }
 final place RX10_TEMP690 = Program . getPlaceFromDist3 ( RX10_TEMP684 , RX10_TEMP686 ) ; final place RX10_TEMP692 = here ; final boolean RX10_TEMP693 = RX10_TEMP690 != RX10_TEMP692 ; if ( RX10_TEMP693 ) { String RX10_TEMP691 = "Bad place access for array X10_TEMP433" ; throw new RuntimeException ( RX10_TEMP691 ) ; }
 final double RX10_TEMP694 = Program . getRefArrayValue3double ( X10_TEMP433 , RX10_TEMP686 ) ; final double X10_TEMP439 = ( RX10_TEMP694 ) ; final Complex X10_TEMP441 = ( Program . Complex_multS ( X10_TEMP432 , X10_TEMP439 ) ) ; final Complex X10_TEMP442 = ( X10_TEMP441 ) ; final Point2 RX10_TEMP695 = new Point2 ( X10_TEMP428 , j2 ) ; final Dist2 RX10_TEMP696 = forceX . distValue ; final Region2 RX10_TEMP697 = RX10_TEMP696 . dReg ; final int RX10_TEMP698 = Program . searchPointInRegion2 ( RX10_TEMP697 , RX10_TEMP695 ) ; final int RX10_TEMP699 = 0 ; final boolean RX10_TEMP700 = RX10_TEMP698 < RX10_TEMP699 ; if ( RX10_TEMP700 ) { String RX10_TEMP701 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP701 ) ; }
 final place RX10_TEMP702 = Program . getPlaceFromDist2 ( RX10_TEMP696 , RX10_TEMP698 ) ; final place RX10_TEMP704 = here ; final boolean RX10_TEMP705 = RX10_TEMP702 != RX10_TEMP704 ; if ( RX10_TEMP705 ) { String RX10_TEMP703 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP703 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP698 , X10_TEMP442 ) ; final int X10_TEMP445 = ( 0 ) ; final int X10_TEMP448 = ( 0 ) ; final Point2 RX10_TEMP706 = new Point2 ( X10_TEMP448 , j2 ) ; final Dist2 RX10_TEMP707 = q . distValue ; final Region2 RX10_TEMP708 = RX10_TEMP707 . dReg ; final int RX10_TEMP709 = Program . searchPointInRegion2 ( RX10_TEMP708 , RX10_TEMP706 ) ; final int RX10_TEMP710 = 0 ; final boolean RX10_TEMP711 = RX10_TEMP709 < RX10_TEMP710 ; if ( RX10_TEMP711 ) { String RX10_TEMP712 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP712 ) ; }
 final place RX10_TEMP713 = Program . getPlaceFromDist2 ( RX10_TEMP707 , RX10_TEMP709 ) ; final place RX10_TEMP715 = here ; final boolean RX10_TEMP716 = RX10_TEMP713 != RX10_TEMP715 ; if ( RX10_TEMP716 ) { String RX10_TEMP714 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP714 ) ; }
 final Complex RX10_TEMP717 = Program . getRefArrayValue2Complex ( q , RX10_TEMP709 ) ; final Complex X10_TEMP450 = ( RX10_TEMP717 ) ; final Complex X10_TEMP452 = ( Program . Complex_mult ( s , X10_TEMP450 ) ) ; final Complex X10_TEMP453 = ( X10_TEMP452 ) ; final Point2 RX10_TEMP718 = new Point2 ( X10_TEMP445 , j2 ) ; final Dist2 RX10_TEMP719 = forceY . distValue ; final Region2 RX10_TEMP720 = RX10_TEMP719 . dReg ; final int RX10_TEMP721 = Program . searchPointInRegion2 ( RX10_TEMP720 , RX10_TEMP718 ) ; final int RX10_TEMP722 = 0 ; final boolean RX10_TEMP723 = RX10_TEMP721 < RX10_TEMP722 ; if ( RX10_TEMP723 ) { String RX10_TEMP724 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP724 ) ; }
 final place RX10_TEMP725 = Program . getPlaceFromDist2 ( RX10_TEMP719 , RX10_TEMP721 ) ; final place RX10_TEMP727 = here ; final boolean RX10_TEMP728 = RX10_TEMP725 != RX10_TEMP727 ; if ( RX10_TEMP728 ) { String RX10_TEMP726 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP726 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP721 , X10_TEMP453 ) ; final Dist1 RX10_TEMP729 = energy . distValue ; final Region1 RX10_TEMP730 = RX10_TEMP729 . dReg ; final int RX10_TEMP731 = Program . searchPointInRegion1 ( RX10_TEMP730 , pl ) ; final int RX10_TEMP732 = 0 ; final boolean RX10_TEMP733 = RX10_TEMP731 < RX10_TEMP732 ; if ( RX10_TEMP733 ) { String RX10_TEMP734 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP734 ) ; }
 final place RX10_TEMP735 = Program . getPlaceFromDist1 ( RX10_TEMP729 , RX10_TEMP731 ) ; final place RX10_TEMP737 = here ; final boolean RX10_TEMP738 = RX10_TEMP735 != RX10_TEMP737 ; if ( RX10_TEMP738 ) { String RX10_TEMP736 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP736 ) ; }
 final double RX10_TEMP739 = Program . getRefArrayValue1double ( energy , RX10_TEMP731 ) ; final double X10_TEMP467 = ( RX10_TEMP739 ) ; final doubleValArray2 X10_TEMP456 = X10_TEMP0 . ffg2 ; final Point2 RX10_TEMP740 = new Point2 ( j1 , _PoissonSolver_GREENS_IDX ) ; final Region2 RX10_TEMP741 = X10_TEMP456 . regionValue ; final int RX10_TEMP742 = Program . searchPointInRegion2 ( RX10_TEMP741 , RX10_TEMP740 ) ; final int RX10_TEMP743 = 0 ; final boolean RX10_TEMP744 = RX10_TEMP742 < RX10_TEMP743 ; if ( RX10_TEMP744 ) { String RX10_TEMP745 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP745 ) ; }
 final double value [ : rank==1 ] RX10_TEMP746 = ( double value [ : rank==1 ] ) ( X10_TEMP456 . contents ) ; final double X10_TEMP463 = ( RX10_TEMP746 [ RX10_TEMP742 ] ) ; final int X10_TEMP461 = ( 0 ) ; final Point2 RX10_TEMP747 = new Point2 ( X10_TEMP461 , j2 ) ; final Dist2 RX10_TEMP748 = q . distValue ; final Region2 RX10_TEMP749 = RX10_TEMP748 . dReg ; final int RX10_TEMP750 = Program . searchPointInRegion2 ( RX10_TEMP749 , RX10_TEMP747 ) ; final int RX10_TEMP751 = 0 ; final boolean RX10_TEMP752 = RX10_TEMP750 < RX10_TEMP751 ; if ( RX10_TEMP752 ) { String RX10_TEMP753 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP753 ) ; }
 final place RX10_TEMP754 = Program . getPlaceFromDist2 ( RX10_TEMP748 , RX10_TEMP750 ) ; final place RX10_TEMP756 = here ; final boolean RX10_TEMP757 = RX10_TEMP754 != RX10_TEMP756 ; if ( RX10_TEMP757 ) { String RX10_TEMP755 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP755 ) ; }
 final Complex RX10_TEMP758 = Program . getRefArrayValue2Complex ( q , RX10_TEMP750 ) ; final Complex X10_TEMP462 = ( RX10_TEMP758 ) ; final double X10_TEMP464 = ( Program . Complex_multConjg ( X10_TEMP462 ) ) ; final double X10_TEMP466 = ( X10_TEMP463 * X10_TEMP464 ) ; final double X10_TEMP469 = ( X10_TEMP467 + X10_TEMP466 ) ; final double X10_TEMP470 = ( X10_TEMP469 ) ; final Dist1 RX10_TEMP759 = energy . distValue ; final Region1 RX10_TEMP760 = RX10_TEMP759 . dReg ; final int RX10_TEMP761 = Program . searchPointInRegion1 ( RX10_TEMP760 , pl ) ; final int RX10_TEMP762 = 0 ; final boolean RX10_TEMP763 = RX10_TEMP761 < RX10_TEMP762 ; if ( RX10_TEMP763 ) { String RX10_TEMP764 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP764 ) ; }
 final place RX10_TEMP765 = Program . getPlaceFromDist1 ( RX10_TEMP759 , RX10_TEMP761 ) ; final place RX10_TEMP767 = here ; final boolean RX10_TEMP768 = RX10_TEMP765 != RX10_TEMP767 ; if ( RX10_TEMP768 ) { String RX10_TEMP766 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP766 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP761 , X10_TEMP470 ) ; }
 final int X10_TEMP473 = ( 0 ) ; final int X10_TEMP474 = ( 0 ) ; final Point2 RX10_TEMP769 = new Point2 ( X10_TEMP473 , X10_TEMP474 ) ; final Dist2 RX10_TEMP770 = q . distValue ; final Region2 RX10_TEMP771 = RX10_TEMP770 . dReg ; final int RX10_TEMP772 = Program . searchPointInRegion2 ( RX10_TEMP771 , RX10_TEMP769 ) ; final int RX10_TEMP773 = 0 ; final boolean RX10_TEMP774 = RX10_TEMP772 < RX10_TEMP773 ; if ( RX10_TEMP774 ) { String RX10_TEMP775 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP775 ) ; }
 final place RX10_TEMP776 = Program . getPlaceFromDist2 ( RX10_TEMP770 , RX10_TEMP772 ) ; final place RX10_TEMP778 = here ; final boolean RX10_TEMP779 = RX10_TEMP776 != RX10_TEMP778 ; if ( RX10_TEMP779 ) { String RX10_TEMP777 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP777 ) ; }
 final Complex RX10_TEMP780 = Program . getRefArrayValue2Complex ( q , RX10_TEMP772 ) ; final Complex X10_TEMP475 = ( RX10_TEMP780 ) ; final double q00R = ( Program . Complex_getReal ( X10_TEMP475 ) ) ; final int X10_TEMP479 = ( 0 ) ; final int X10_TEMP480 = ( 0 ) ; final Point2 RX10_TEMP781 = new Point2 ( X10_TEMP479 , X10_TEMP480 ) ; final Dist2 RX10_TEMP782 = q . distValue ; final Region2 RX10_TEMP783 = RX10_TEMP782 . dReg ; final int RX10_TEMP784 = Program . searchPointInRegion2 ( RX10_TEMP783 , RX10_TEMP781 ) ; final int RX10_TEMP785 = 0 ; final boolean RX10_TEMP786 = RX10_TEMP784 < RX10_TEMP785 ; if ( RX10_TEMP786 ) { String RX10_TEMP787 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP787 ) ; }
 final place RX10_TEMP788 = Program . getPlaceFromDist2 ( RX10_TEMP782 , RX10_TEMP784 ) ; final place RX10_TEMP790 = here ; final boolean RX10_TEMP791 = RX10_TEMP788 != RX10_TEMP790 ; if ( RX10_TEMP791 ) { String RX10_TEMP789 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP789 ) ; }
 final Complex RX10_TEMP792 = Program . getRefArrayValue2Complex ( q , RX10_TEMP784 ) ; final Complex X10_TEMP481 = ( RX10_TEMP792 ) ; final double q00I = ( Program . Complex_getImag ( X10_TEMP481 ) ) ; final int X10_TEMP485 = ( 0 ) ; final int X10_TEMP486 = ( 0 ) ; final doubleRefArray3 X10_TEMP487 = X10_TEMP0 . ffg ; final int X10_TEMP491 = ( 0 ) ; final int X10_TEMP492 = ( 0 ) ; final Point3 RX10_TEMP793 = new Point3 ( X10_TEMP491 , X10_TEMP492 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP794 = X10_TEMP487 . distValue ; final Region3 RX10_TEMP795 = RX10_TEMP794 . dReg ; final int RX10_TEMP796 = Program . searchPointInRegion3 ( RX10_TEMP795 , RX10_TEMP793 ) ; final int RX10_TEMP797 = 0 ; final boolean RX10_TEMP798 = RX10_TEMP796 < RX10_TEMP797 ; if ( RX10_TEMP798 ) { String RX10_TEMP799 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP799 ) ; }
 final place RX10_TEMP800 = Program . getPlaceFromDist3 ( RX10_TEMP794 , RX10_TEMP796 ) ; final place RX10_TEMP802 = here ; final boolean RX10_TEMP803 = RX10_TEMP800 != RX10_TEMP802 ; if ( RX10_TEMP803 ) { String RX10_TEMP801 = "Bad place access for array X10_TEMP487" ; throw new RuntimeException ( RX10_TEMP801 ) ; }
 final double RX10_TEMP804 = Program . getRefArrayValue3double ( X10_TEMP487 , RX10_TEMP796 ) ; final double X10_TEMP493 = ( RX10_TEMP804 ) ; double X10_TEMP501 = ( X10_TEMP493 * q00R ) ; final doubleValArray2 X10_TEMP495 = X10_TEMP0 . ffg2 ; final int X10_TEMP498 = ( 0 ) ; final Point2 RX10_TEMP805 = new Point2 ( X10_TEMP498 , _PoissonSolver_ELECX_IDX ) ; final Region2 RX10_TEMP806 = X10_TEMP495 . regionValue ; final int RX10_TEMP807 = Program . searchPointInRegion2 ( RX10_TEMP806 , RX10_TEMP805 ) ; final int RX10_TEMP808 = 0 ; final boolean RX10_TEMP809 = RX10_TEMP807 < RX10_TEMP808 ; if ( RX10_TEMP809 ) { String RX10_TEMP810 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP810 ) ; }
 final double value [ : rank==1 ] RX10_TEMP811 = ( double value [ : rank==1 ] ) ( X10_TEMP495 . contents ) ; final double X10_TEMP499 = ( RX10_TEMP811 [ RX10_TEMP807 ] ) ; double X10_TEMP502 = ( X10_TEMP499 * q00I ) ; final Complex X10_TEMP504 = ( new Complex ( X10_TEMP501 , X10_TEMP502 ) ) ; final Complex X10_TEMP505 = ( X10_TEMP504 ) ; final Point2 RX10_TEMP812 = new Point2 ( X10_TEMP485 , X10_TEMP486 ) ; final Dist2 RX10_TEMP813 = forceX . distValue ; final Region2 RX10_TEMP814 = RX10_TEMP813 . dReg ; final int RX10_TEMP815 = Program . searchPointInRegion2 ( RX10_TEMP814 , RX10_TEMP812 ) ; final int RX10_TEMP816 = 0 ; final boolean RX10_TEMP817 = RX10_TEMP815 < RX10_TEMP816 ; if ( RX10_TEMP817 ) { String RX10_TEMP818 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP818 ) ; }
 final place RX10_TEMP819 = Program . getPlaceFromDist2 ( RX10_TEMP813 , RX10_TEMP815 ) ; final place RX10_TEMP821 = here ; final boolean RX10_TEMP822 = RX10_TEMP819 != RX10_TEMP821 ; if ( RX10_TEMP822 ) { String RX10_TEMP820 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP820 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP815 , X10_TEMP505 ) ; final int X10_TEMP508 = ( 0 ) ; final int X10_TEMP509 = ( 0 ) ; final doubleRefArray3 X10_TEMP510 = X10_TEMP0 . ffg ; final int X10_TEMP514 = ( 0 ) ; final int X10_TEMP515 = ( 0 ) ; final Point3 RX10_TEMP823 = new Point3 ( X10_TEMP514 , X10_TEMP515 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP824 = X10_TEMP510 . distValue ; final Region3 RX10_TEMP825 = RX10_TEMP824 . dReg ; final int RX10_TEMP826 = Program . searchPointInRegion3 ( RX10_TEMP825 , RX10_TEMP823 ) ; final int RX10_TEMP827 = 0 ; final boolean RX10_TEMP828 = RX10_TEMP826 < RX10_TEMP827 ; if ( RX10_TEMP828 ) { String RX10_TEMP829 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP829 ) ; }
 final place RX10_TEMP830 = Program . getPlaceFromDist3 ( RX10_TEMP824 , RX10_TEMP826 ) ; final place RX10_TEMP832 = here ; final boolean RX10_TEMP833 = RX10_TEMP830 != RX10_TEMP832 ; if ( RX10_TEMP833 ) { String RX10_TEMP831 = "Bad place access for array X10_TEMP510" ; throw new RuntimeException ( RX10_TEMP831 ) ; }
 final double RX10_TEMP834 = Program . getRefArrayValue3double ( X10_TEMP510 , RX10_TEMP826 ) ; final double X10_TEMP516 = ( RX10_TEMP834 ) ; double X10_TEMP524 = ( X10_TEMP516 * q00R ) ; final doubleValArray2 X10_TEMP518 = X10_TEMP0 . ffg2 ; final int X10_TEMP521 = ( 0 ) ; final Point2 RX10_TEMP835 = new Point2 ( X10_TEMP521 , _PoissonSolver_ELECY_IDX ) ; final Region2 RX10_TEMP836 = X10_TEMP518 . regionValue ; final int RX10_TEMP837 = Program . searchPointInRegion2 ( RX10_TEMP836 , RX10_TEMP835 ) ; final int RX10_TEMP838 = 0 ; final boolean RX10_TEMP839 = RX10_TEMP837 < RX10_TEMP838 ; if ( RX10_TEMP839 ) { String RX10_TEMP840 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP840 ) ; }
 final double value [ : rank==1 ] RX10_TEMP841 = ( double value [ : rank==1 ] ) ( X10_TEMP518 . contents ) ; final double X10_TEMP522 = ( RX10_TEMP841 [ RX10_TEMP837 ] ) ; double X10_TEMP525 = ( X10_TEMP522 * q00I ) ; final Complex X10_TEMP527 = ( new Complex ( X10_TEMP524 , X10_TEMP525 ) ) ; final Complex X10_TEMP528 = ( X10_TEMP527 ) ; final Point2 RX10_TEMP842 = new Point2 ( X10_TEMP508 , X10_TEMP509 ) ; final Dist2 RX10_TEMP843 = forceY . distValue ; final Region2 RX10_TEMP844 = RX10_TEMP843 . dReg ; final int RX10_TEMP845 = Program . searchPointInRegion2 ( RX10_TEMP844 , RX10_TEMP842 ) ; final int RX10_TEMP846 = 0 ; final boolean RX10_TEMP847 = RX10_TEMP845 < RX10_TEMP846 ; if ( RX10_TEMP847 ) { String RX10_TEMP848 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP848 ) ; }
 final place RX10_TEMP849 = Program . getPlaceFromDist2 ( RX10_TEMP843 , RX10_TEMP845 ) ; final place RX10_TEMP851 = here ; final boolean RX10_TEMP852 = RX10_TEMP849 != RX10_TEMP851 ; if ( RX10_TEMP852 ) { String RX10_TEMP850 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP850 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP845 , X10_TEMP528 ) ; final Dist1 RX10_TEMP853 = energy . distValue ; final Region1 RX10_TEMP854 = RX10_TEMP853 . dReg ; final int RX10_TEMP855 = Program . searchPointInRegion1 ( RX10_TEMP854 , pl ) ; final int RX10_TEMP856 = 0 ; final boolean RX10_TEMP857 = RX10_TEMP855 < RX10_TEMP856 ; if ( RX10_TEMP857 ) { String RX10_TEMP858 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP858 ) ; }
 final place RX10_TEMP859 = Program . getPlaceFromDist1 ( RX10_TEMP853 , RX10_TEMP855 ) ; final place RX10_TEMP861 = here ; final boolean RX10_TEMP862 = RX10_TEMP859 != RX10_TEMP861 ; if ( RX10_TEMP862 ) { String RX10_TEMP860 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP860 ) ; }
 final double RX10_TEMP863 = Program . getRefArrayValue1double ( energy , RX10_TEMP855 ) ; final double X10_TEMP558 = ( RX10_TEMP863 ) ; final double X10_TEMP557 = ( 0.5 ) ; final doubleRefArray3 X10_TEMP531 = X10_TEMP0 . ffg ; final int X10_TEMP535 = ( 0 ) ; final int X10_TEMP536 = ( 0 ) ; final Point3 RX10_TEMP864 = new Point3 ( X10_TEMP535 , X10_TEMP536 , _PoissonSolver_GREENS_IDX ) ; final Dist3 RX10_TEMP865 = X10_TEMP531 . distValue ; final Region3 RX10_TEMP866 = RX10_TEMP865 . dReg ; final int RX10_TEMP867 = Program . searchPointInRegion3 ( RX10_TEMP866 , RX10_TEMP864 ) ; final int RX10_TEMP868 = 0 ; final boolean RX10_TEMP869 = RX10_TEMP867 < RX10_TEMP868 ; if ( RX10_TEMP869 ) { String RX10_TEMP870 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP870 ) ; }
 final place RX10_TEMP871 = Program . getPlaceFromDist3 ( RX10_TEMP865 , RX10_TEMP867 ) ; final place RX10_TEMP873 = here ; final boolean RX10_TEMP874 = RX10_TEMP871 != RX10_TEMP873 ; if ( RX10_TEMP874 ) { String RX10_TEMP872 = "Bad place access for array X10_TEMP531" ; throw new RuntimeException ( RX10_TEMP872 ) ; }
 final double RX10_TEMP875 = Program . getRefArrayValue3double ( X10_TEMP531 , RX10_TEMP867 ) ; final double X10_TEMP540 = ( RX10_TEMP875 ) ; final int X10_TEMP539 = ( 2 ) ; final double X10_TEMP541 = ( Math . pow ( q00R , X10_TEMP539 ) ) ; final double X10_TEMP543 = ( X10_TEMP540 * X10_TEMP541 ) ; final doubleValArray2 X10_TEMP544 = X10_TEMP0 . ffg2 ; final int X10_TEMP547 = ( 0 ) ; final Point2 RX10_TEMP876 = new Point2 ( X10_TEMP547 , _PoissonSolver_GREENS_IDX ) ; final Region2 RX10_TEMP877 = X10_TEMP544 . regionValue ; final int RX10_TEMP878 = Program . searchPointInRegion2 ( RX10_TEMP877 , RX10_TEMP876 ) ; final int RX10_TEMP879 = 0 ; final boolean RX10_TEMP880 = RX10_TEMP878 < RX10_TEMP879 ; if ( RX10_TEMP880 ) { String RX10_TEMP881 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP881 ) ; }
 final double value [ : rank==1 ] RX10_TEMP882 = ( double value [ : rank==1 ] ) ( X10_TEMP544 . contents ) ; final double X10_TEMP551 = ( RX10_TEMP882 [ RX10_TEMP878 ] ) ; final int X10_TEMP550 = ( 2 ) ; final double X10_TEMP552 = ( Math . pow ( q00I , X10_TEMP550 ) ) ; final double X10_TEMP554 = ( X10_TEMP551 * X10_TEMP552 ) ; final double X10_TEMP556 = ( X10_TEMP543 + X10_TEMP554 ) ; final double X10_TEMP559 = ( X10_TEMP557 * X10_TEMP556 ) ; final double X10_TEMP561 = ( X10_TEMP558 + X10_TEMP559 ) ; final double X10_TEMP562 = ( X10_TEMP561 ) ; final Dist1 RX10_TEMP883 = energy . distValue ; final Region1 RX10_TEMP884 = RX10_TEMP883 . dReg ; final int RX10_TEMP885 = Program . searchPointInRegion1 ( RX10_TEMP884 , pl ) ; final int RX10_TEMP886 = 0 ; final boolean RX10_TEMP887 = RX10_TEMP885 < RX10_TEMP886 ; if ( RX10_TEMP887 ) { String RX10_TEMP888 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP888 ) ; }
 final place RX10_TEMP889 = Program . getPlaceFromDist1 ( RX10_TEMP883 , RX10_TEMP885 ) ; final place RX10_TEMP891 = here ; final boolean RX10_TEMP892 = RX10_TEMP889 != RX10_TEMP891 ; if ( RX10_TEMP892 ) { String RX10_TEMP890 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP890 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP885 , X10_TEMP562 ) ; final int X10_TEMP565 = ( 0 ) ; final int X10_TEMP566 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP893 = new Point2 ( X10_TEMP565 , X10_TEMP566 ) ; final Dist2 RX10_TEMP894 = q . distValue ; final Region2 RX10_TEMP895 = RX10_TEMP894 . dReg ; final int RX10_TEMP896 = Program . searchPointInRegion2 ( RX10_TEMP895 , RX10_TEMP893 ) ; final int RX10_TEMP897 = 0 ; final boolean RX10_TEMP898 = RX10_TEMP896 < RX10_TEMP897 ; if ( RX10_TEMP898 ) { String RX10_TEMP899 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP899 ) ; }
 final place RX10_TEMP900 = Program . getPlaceFromDist2 ( RX10_TEMP894 , RX10_TEMP896 ) ; final place RX10_TEMP902 = here ; final boolean RX10_TEMP903 = RX10_TEMP900 != RX10_TEMP902 ; if ( RX10_TEMP903 ) { String RX10_TEMP901 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP901 ) ; }
 final Complex RX10_TEMP904 = Program . getRefArrayValue2Complex ( q , RX10_TEMP896 ) ; final Complex X10_TEMP567 = ( RX10_TEMP904 ) ; final double q0NYR = ( Program . Complex_getReal ( X10_TEMP567 ) ) ; final int X10_TEMP571 = ( 0 ) ; final int X10_TEMP572 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP905 = new Point2 ( X10_TEMP571 , X10_TEMP572 ) ; final Dist2 RX10_TEMP906 = q . distValue ; final Region2 RX10_TEMP907 = RX10_TEMP906 . dReg ; final int RX10_TEMP908 = Program . searchPointInRegion2 ( RX10_TEMP907 , RX10_TEMP905 ) ; final int RX10_TEMP909 = 0 ; final boolean RX10_TEMP910 = RX10_TEMP908 < RX10_TEMP909 ; if ( RX10_TEMP910 ) { String RX10_TEMP911 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP911 ) ; }
 final place RX10_TEMP912 = Program . getPlaceFromDist2 ( RX10_TEMP906 , RX10_TEMP908 ) ; final place RX10_TEMP914 = here ; final boolean RX10_TEMP915 = RX10_TEMP912 != RX10_TEMP914 ; if ( RX10_TEMP915 ) { String RX10_TEMP913 = "Bad place access for array q" ; throw new RuntimeException ( RX10_TEMP913 ) ; }
 final Complex RX10_TEMP916 = Program . getRefArrayValue2Complex ( q , RX10_TEMP908 ) ; final Complex X10_TEMP573 = ( RX10_TEMP916 ) ; final double q0NYI = ( Program . Complex_getImag ( X10_TEMP573 ) ) ; final int X10_TEMP577 = ( 0 ) ; final int X10_TEMP578 = ( X10_TEMP0 . y ) ; final doubleRefArray3 X10_TEMP579 = X10_TEMP0 . ffg ; final int X10_TEMP583 = ( 0 ) ; final int X10_TEMP584 = ( X10_TEMP0 . y ) ; final Point3 RX10_TEMP917 = new Point3 ( X10_TEMP583 , X10_TEMP584 , _PoissonSolver_ELECX_IDX ) ; final Dist3 RX10_TEMP918 = X10_TEMP579 . distValue ; final Region3 RX10_TEMP919 = RX10_TEMP918 . dReg ; final int RX10_TEMP920 = Program . searchPointInRegion3 ( RX10_TEMP919 , RX10_TEMP917 ) ; final int RX10_TEMP921 = 0 ; final boolean RX10_TEMP922 = RX10_TEMP920 < RX10_TEMP921 ; if ( RX10_TEMP922 ) { String RX10_TEMP923 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP923 ) ; }
 final place RX10_TEMP924 = Program . getPlaceFromDist3 ( RX10_TEMP918 , RX10_TEMP920 ) ; final place RX10_TEMP926 = here ; final boolean RX10_TEMP927 = RX10_TEMP924 != RX10_TEMP926 ; if ( RX10_TEMP927 ) { String RX10_TEMP925 = "Bad place access for array X10_TEMP579" ; throw new RuntimeException ( RX10_TEMP925 ) ; }
 final double RX10_TEMP928 = Program . getRefArrayValue3double ( X10_TEMP579 , RX10_TEMP920 ) ; final double X10_TEMP585 = ( RX10_TEMP928 ) ; double X10_TEMP593 = ( X10_TEMP585 * q0NYR ) ; final doubleValArray2 X10_TEMP587 = X10_TEMP0 . ffg2 ; final int X10_TEMP590 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP929 = new Point2 ( X10_TEMP590 , _PoissonSolver_ELECX_IDX ) ; final Region2 RX10_TEMP930 = X10_TEMP587 . regionValue ; final int RX10_TEMP931 = Program . searchPointInRegion2 ( RX10_TEMP930 , RX10_TEMP929 ) ; final int RX10_TEMP932 = 0 ; final boolean RX10_TEMP933 = RX10_TEMP931 < RX10_TEMP932 ; if ( RX10_TEMP933 ) { String RX10_TEMP934 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP934 ) ; }
 final double value [ : rank==1 ] RX10_TEMP935 = ( double value [ : rank==1 ] ) ( X10_TEMP587 . contents ) ; final double X10_TEMP591 = ( RX10_TEMP935 [ RX10_TEMP931 ] ) ; double X10_TEMP594 = ( X10_TEMP591 * q0NYI ) ; final Complex X10_TEMP596 = ( new Complex ( X10_TEMP593 , X10_TEMP594 ) ) ; final Complex X10_TEMP597 = ( X10_TEMP596 ) ; final Point2 RX10_TEMP936 = new Point2 ( X10_TEMP577 , X10_TEMP578 ) ; final Dist2 RX10_TEMP937 = forceX . distValue ; final Region2 RX10_TEMP938 = RX10_TEMP937 . dReg ; final int RX10_TEMP939 = Program . searchPointInRegion2 ( RX10_TEMP938 , RX10_TEMP936 ) ; final int RX10_TEMP940 = 0 ; final boolean RX10_TEMP941 = RX10_TEMP939 < RX10_TEMP940 ; if ( RX10_TEMP941 ) { String RX10_TEMP942 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP942 ) ; }
 final place RX10_TEMP943 = Program . getPlaceFromDist2 ( RX10_TEMP937 , RX10_TEMP939 ) ; final place RX10_TEMP945 = here ; final boolean RX10_TEMP946 = RX10_TEMP943 != RX10_TEMP945 ; if ( RX10_TEMP946 ) { String RX10_TEMP944 = "Bad place access for array forceX" ; throw new RuntimeException ( RX10_TEMP944 ) ; }
 Program . setRefArrayValue2Complex ( forceX , RX10_TEMP939 , X10_TEMP597 ) ; final int X10_TEMP600 = ( 0 ) ; final int X10_TEMP601 = ( X10_TEMP0 . y ) ; final doubleRefArray3 X10_TEMP602 = X10_TEMP0 . ffg ; final int X10_TEMP606 = ( 0 ) ; final int X10_TEMP607 = ( X10_TEMP0 . y ) ; final Point3 RX10_TEMP947 = new Point3 ( X10_TEMP606 , X10_TEMP607 , _PoissonSolver_ELECY_IDX ) ; final Dist3 RX10_TEMP948 = X10_TEMP602 . distValue ; final Region3 RX10_TEMP949 = RX10_TEMP948 . dReg ; final int RX10_TEMP950 = Program . searchPointInRegion3 ( RX10_TEMP949 , RX10_TEMP947 ) ; final int RX10_TEMP951 = 0 ; final boolean RX10_TEMP952 = RX10_TEMP950 < RX10_TEMP951 ; if ( RX10_TEMP952 ) { String RX10_TEMP953 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP953 ) ; }
 final place RX10_TEMP954 = Program . getPlaceFromDist3 ( RX10_TEMP948 , RX10_TEMP950 ) ; final place RX10_TEMP956 = here ; final boolean RX10_TEMP957 = RX10_TEMP954 != RX10_TEMP956 ; if ( RX10_TEMP957 ) { String RX10_TEMP955 = "Bad place access for array X10_TEMP602" ; throw new RuntimeException ( RX10_TEMP955 ) ; }
 final double RX10_TEMP958 = Program . getRefArrayValue3double ( X10_TEMP602 , RX10_TEMP950 ) ; final double X10_TEMP608 = ( RX10_TEMP958 ) ; double X10_TEMP616 = ( X10_TEMP608 * q0NYR ) ; final doubleValArray2 X10_TEMP610 = X10_TEMP0 . ffg2 ; final int X10_TEMP613 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP959 = new Point2 ( X10_TEMP613 , _PoissonSolver_ELECY_IDX ) ; final Region2 RX10_TEMP960 = X10_TEMP610 . regionValue ; final int RX10_TEMP961 = Program . searchPointInRegion2 ( RX10_TEMP960 , RX10_TEMP959 ) ; final int RX10_TEMP962 = 0 ; final boolean RX10_TEMP963 = RX10_TEMP961 < RX10_TEMP962 ; if ( RX10_TEMP963 ) { String RX10_TEMP964 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP964 ) ; }
 final double value [ : rank==1 ] RX10_TEMP965 = ( double value [ : rank==1 ] ) ( X10_TEMP610 . contents ) ; final double X10_TEMP614 = ( RX10_TEMP965 [ RX10_TEMP961 ] ) ; double X10_TEMP617 = ( X10_TEMP614 * q0NYI ) ; final Complex X10_TEMP619 = ( new Complex ( X10_TEMP616 , X10_TEMP617 ) ) ; final Complex X10_TEMP620 = ( X10_TEMP619 ) ; final Point2 RX10_TEMP966 = new Point2 ( X10_TEMP600 , X10_TEMP601 ) ; final Dist2 RX10_TEMP967 = forceY . distValue ; final Region2 RX10_TEMP968 = RX10_TEMP967 . dReg ; final int RX10_TEMP969 = Program . searchPointInRegion2 ( RX10_TEMP968 , RX10_TEMP966 ) ; final int RX10_TEMP970 = 0 ; final boolean RX10_TEMP971 = RX10_TEMP969 < RX10_TEMP970 ; if ( RX10_TEMP971 ) { String RX10_TEMP972 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP972 ) ; }
 final place RX10_TEMP973 = Program . getPlaceFromDist2 ( RX10_TEMP967 , RX10_TEMP969 ) ; final place RX10_TEMP975 = here ; final boolean RX10_TEMP976 = RX10_TEMP973 != RX10_TEMP975 ; if ( RX10_TEMP976 ) { String RX10_TEMP974 = "Bad place access for array forceY" ; throw new RuntimeException ( RX10_TEMP974 ) ; }
 Program . setRefArrayValue2Complex ( forceY , RX10_TEMP969 , X10_TEMP620 ) ; final Dist1 RX10_TEMP977 = energy . distValue ; final Region1 RX10_TEMP978 = RX10_TEMP977 . dReg ; final int RX10_TEMP979 = Program . searchPointInRegion1 ( RX10_TEMP978 , pl ) ; final int RX10_TEMP980 = 0 ; final boolean RX10_TEMP981 = RX10_TEMP979 < RX10_TEMP980 ; if ( RX10_TEMP981 ) { String RX10_TEMP982 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP982 ) ; }
 final place RX10_TEMP983 = Program . getPlaceFromDist1 ( RX10_TEMP977 , RX10_TEMP979 ) ; final place RX10_TEMP985 = here ; final boolean RX10_TEMP986 = RX10_TEMP983 != RX10_TEMP985 ; if ( RX10_TEMP986 ) { String RX10_TEMP984 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP984 ) ; }
 final double RX10_TEMP987 = Program . getRefArrayValue1double ( energy , RX10_TEMP979 ) ; final double X10_TEMP650 = ( RX10_TEMP987 ) ; final double X10_TEMP649 = ( 0.5 ) ; final doubleRefArray3 X10_TEMP623 = X10_TEMP0 . ffg ; final int X10_TEMP627 = ( 0 ) ; final int X10_TEMP628 = ( X10_TEMP0 . y ) ; final Point3 RX10_TEMP988 = new Point3 ( X10_TEMP627 , X10_TEMP628 , _PoissonSolver_GREENS_IDX ) ; final Dist3 RX10_TEMP989 = X10_TEMP623 . distValue ; final Region3 RX10_TEMP990 = RX10_TEMP989 . dReg ; final int RX10_TEMP991 = Program . searchPointInRegion3 ( RX10_TEMP990 , RX10_TEMP988 ) ; final int RX10_TEMP992 = 0 ; final boolean RX10_TEMP993 = RX10_TEMP991 < RX10_TEMP992 ; if ( RX10_TEMP993 ) { String RX10_TEMP994 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP994 ) ; }
 final place RX10_TEMP995 = Program . getPlaceFromDist3 ( RX10_TEMP989 , RX10_TEMP991 ) ; final place RX10_TEMP997 = here ; final boolean RX10_TEMP998 = RX10_TEMP995 != RX10_TEMP997 ; if ( RX10_TEMP998 ) { String RX10_TEMP996 = "Bad place access for array X10_TEMP623" ; throw new RuntimeException ( RX10_TEMP996 ) ; }
 final double RX10_TEMP999 = Program . getRefArrayValue3double ( X10_TEMP623 , RX10_TEMP991 ) ; final double X10_TEMP632 = ( RX10_TEMP999 ) ; final int X10_TEMP631 = ( 2 ) ; final double X10_TEMP633 = ( Math . pow ( q0NYR , X10_TEMP631 ) ) ; final double X10_TEMP635 = ( X10_TEMP632 * X10_TEMP633 ) ; final doubleValArray2 X10_TEMP636 = X10_TEMP0 . ffg2 ; final int X10_TEMP639 = ( X10_TEMP0 . y ) ; final Point2 RX10_TEMP1000 = new Point2 ( X10_TEMP639 , _PoissonSolver_GREENS_IDX ) ; final Region2 RX10_TEMP1001 = X10_TEMP636 . regionValue ; final int RX10_TEMP1002 = Program . searchPointInRegion2 ( RX10_TEMP1001 , RX10_TEMP1000 ) ; final int RX10_TEMP1003 = 0 ; final boolean RX10_TEMP1004 = RX10_TEMP1002 < RX10_TEMP1003 ; if ( RX10_TEMP1004 ) { String RX10_TEMP1005 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1005 ) ; }
 final double value [ : rank==1 ] RX10_TEMP1006 = ( double value [ : rank==1 ] ) ( X10_TEMP636 . contents ) ; final double X10_TEMP643 = ( RX10_TEMP1006 [ RX10_TEMP1002 ] ) ; final int X10_TEMP642 = ( 2 ) ; final double X10_TEMP644 = ( Math . pow ( q0NYI , X10_TEMP642 ) ) ; final double X10_TEMP646 = ( X10_TEMP643 * X10_TEMP644 ) ; final double X10_TEMP648 = ( X10_TEMP635 + X10_TEMP646 ) ; final double X10_TEMP651 = ( X10_TEMP649 * X10_TEMP648 ) ; final double X10_TEMP653 = ( X10_TEMP650 + X10_TEMP651 ) ; final double X10_TEMP654 = ( X10_TEMP653 ) ; final Dist1 RX10_TEMP1007 = energy . distValue ; final Region1 RX10_TEMP1008 = RX10_TEMP1007 . dReg ; final int RX10_TEMP1009 = Program . searchPointInRegion1 ( RX10_TEMP1008 , pl ) ; final int RX10_TEMP1010 = 0 ; final boolean RX10_TEMP1011 = RX10_TEMP1009 < RX10_TEMP1010 ; if ( RX10_TEMP1011 ) { String RX10_TEMP1012 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1012 ) ; }
 final place RX10_TEMP1013 = Program . getPlaceFromDist1 ( RX10_TEMP1007 , RX10_TEMP1009 ) ; final place RX10_TEMP1015 = here ; final boolean RX10_TEMP1016 = RX10_TEMP1013 != RX10_TEMP1015 ; if ( RX10_TEMP1016 ) { String RX10_TEMP1014 = "Bad place access for array energy" ; throw new RuntimeException ( RX10_TEMP1014 ) ; }
 Program . setRefArrayValue1double ( energy , RX10_TEMP1009 , X10_TEMP654 ) ; }
 }
 }
 }
 public static void thread7(final T7 utmpz) {final  int RX10_TEMP27 = utmpz.RX10_TEMP27;
final  place RX10_TEMP23 = utmpz.RX10_TEMP23;
final  point ( : rank==1 ) RX10_TEMP22 = utmpz.RX10_TEMP22;
final  booleanStub [ : rank==1 ] RX10_TEMP21 = utmpz.RX10_TEMP21;
 { final dist ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP27 ] -> here ; final boolean [ : rank==1 ] RX10_TEMP30 = ( boolean [ : rank==1 ] ) ( new boolean [ RX10_TEMP29 ] ( point ( : rank==1 ) RX10_TEMP28 ) { final boolean X10_TEMP42 = true ; return X10_TEMP42 ; }
 ) ; final booleanStub RX10_TEMP31 = new booleanStub ( RX10_TEMP30 ) ; 
 final T181 utmp181 = new T181(RX10_TEMP31, RX10_TEMP22, RX10_TEMP21);
 async (RX10_TEMP23) {Program.thread181(utmp181); }
 }
 }
 public static void thread8(final T8 utmpz) {final  Point1 X10_TEMP43 = utmpz.X10_TEMP43;
final  booleanRefArray1 X10_TEMP40 = utmpz.X10_TEMP40;
final  boolean X10_TEMP35 = utmpz.X10_TEMP35;
final  int X10_TEMP34 = utmpz.X10_TEMP34;
final  Region1 rRefLocal = utmpz.rRefLocal;
 { final boolean RX10_TEMP41 = Program . regionContainsPoint1 ( rRefLocal , X10_TEMP43 ) ; boolean X10_TEMP44 = RX10_TEMP41 ; X10_TEMP44 = ! X10_TEMP44 ; if ( X10_TEMP44 ) { final Point1 RX10_TEMP42 = new Point1 ( X10_TEMP34 ) ; final Dist1 RX10_TEMP43 = X10_TEMP40 . distValue ; final Region1 RX10_TEMP44 = RX10_TEMP43 . dReg ; final int RX10_TEMP45 = Program . searchPointInRegion1 ( RX10_TEMP44 , RX10_TEMP42 ) ; final int RX10_TEMP46 = 0 ; final boolean RX10_TEMP47 = RX10_TEMP45 < RX10_TEMP46 ; if ( RX10_TEMP47 ) { String RX10_TEMP48 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final place RX10_TEMP49 = Program . getPlaceFromDist1 ( RX10_TEMP43 , RX10_TEMP45 ) ; final place RX10_TEMP51 = here ; final boolean RX10_TEMP52 = RX10_TEMP49 != RX10_TEMP51 ; if ( RX10_TEMP52 ) { String RX10_TEMP50 = "Bad place access for array X10_TEMP40" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 Program . setRefArrayValue1boolean ( X10_TEMP40 , RX10_TEMP45 , X10_TEMP35 ) ; }
 }
 }
 public static void thread9(final T9 utmpz) {final  int RX10_TEMP77 = utmpz.RX10_TEMP77;
final  place RX10_TEMP73 = utmpz.RX10_TEMP73;
final  point ( : rank==1 ) RX10_TEMP72 = utmpz.RX10_TEMP72;
final  booleanStub [ : rank==1 ] RX10_TEMP71 = utmpz.RX10_TEMP71;
 { final dist ( : rank==1 ) RX10_TEMP79 = [ 0 : RX10_TEMP77 ] -> here ; final boolean [ : rank==1 ] RX10_TEMP80 = ( boolean [ : rank==1 ] ) ( new boolean [ RX10_TEMP79 ] ( point ( : rank==1 ) RX10_TEMP78 ) { final boolean X10_TEMP67 = true ; return X10_TEMP67 ; }
 ) ; final booleanStub RX10_TEMP81 = new booleanStub ( RX10_TEMP80 ) ; 
 final T182 utmp182 = new T182(RX10_TEMP81, RX10_TEMP72, RX10_TEMP71);
 async (RX10_TEMP73) {Program.thread182(utmp182); }
 }
 }
 public static void thread10(final T10 utmpz) {final  Point1 X10_TEMP68 = utmpz.X10_TEMP68;
final  booleanRefArray1 X10_TEMP65 = utmpz.X10_TEMP65;
final  boolean X10_TEMP60 = utmpz.X10_TEMP60;
final  int X10_TEMP59 = utmpz.X10_TEMP59;
final  Region1 r2 = utmpz.r2;
 { final boolean RX10_TEMP91 = Program . regionContainsPoint1 ( r2 , X10_TEMP68 ) ; boolean X10_TEMP69 = RX10_TEMP91 ; X10_TEMP69 = ! X10_TEMP69 ; if ( X10_TEMP69 ) { final Point1 RX10_TEMP92 = new Point1 ( X10_TEMP59 ) ; final Dist1 RX10_TEMP93 = X10_TEMP65 . distValue ; final Region1 RX10_TEMP94 = RX10_TEMP93 . dReg ; final int RX10_TEMP95 = Program . searchPointInRegion1 ( RX10_TEMP94 , RX10_TEMP92 ) ; final int RX10_TEMP96 = 0 ; final boolean RX10_TEMP97 = RX10_TEMP95 < RX10_TEMP96 ; if ( RX10_TEMP97 ) { String RX10_TEMP98 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP98 ) ; }
 final place RX10_TEMP99 = Program . getPlaceFromDist1 ( RX10_TEMP93 , RX10_TEMP95 ) ; final place RX10_TEMP101 = here ; final boolean RX10_TEMP102 = RX10_TEMP99 != RX10_TEMP101 ; if ( RX10_TEMP102 ) { String RX10_TEMP100 = "Bad place access for array X10_TEMP65" ; throw new RuntimeException ( RX10_TEMP100 ) ; }
 Program . setRefArrayValue1boolean ( X10_TEMP65 , RX10_TEMP95 , X10_TEMP60 ) ; }
 }
 }
 public static void thread11(final T11 utmpz) {final  int RX10_TEMP27 = utmpz.RX10_TEMP27;
final  place RX10_TEMP23 = utmpz.RX10_TEMP23;
final  point ( : rank==1 ) RX10_TEMP22 = utmpz.RX10_TEMP22;
final  booleanStub [ : rank==1 ] RX10_TEMP21 = utmpz.RX10_TEMP21;
 { final dist ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP27 ] -> here ; final boolean [ : rank==1 ] RX10_TEMP30 = ( boolean [ : rank==1 ] ) ( new boolean [ RX10_TEMP29 ] ( point ( : rank==1 ) RX10_TEMP28 ) { final boolean X10_TEMP42 = true ; return X10_TEMP42 ; }
 ) ; final booleanStub RX10_TEMP31 = new booleanStub ( RX10_TEMP30 ) ; 
 final T183 utmp183 = new T183(RX10_TEMP31, RX10_TEMP22, RX10_TEMP21);
 async (RX10_TEMP23) {Program.thread183(utmp183); }
 }
 }
 public static void thread12(final T12 utmpz) {final  Point1 X10_TEMP43 = utmpz.X10_TEMP43;
final  booleanRefArray1 X10_TEMP40 = utmpz.X10_TEMP40;
final  boolean X10_TEMP35 = utmpz.X10_TEMP35;
final  int X10_TEMP34 = utmpz.X10_TEMP34;
final  Region1 r1 = utmpz.r1;
 { final boolean RX10_TEMP41 = Program . regionContainsPoint1 ( r1 , X10_TEMP43 ) ; boolean X10_TEMP44 = RX10_TEMP41 ; X10_TEMP44 = ! X10_TEMP44 ; if ( X10_TEMP44 ) { final Point1 RX10_TEMP42 = new Point1 ( X10_TEMP34 ) ; final Dist1 RX10_TEMP43 = X10_TEMP40 . distValue ; final Region1 RX10_TEMP44 = RX10_TEMP43 . dReg ; final int RX10_TEMP45 = Program . searchPointInRegion1 ( RX10_TEMP44 , RX10_TEMP42 ) ; final int RX10_TEMP46 = 0 ; final boolean RX10_TEMP47 = RX10_TEMP45 < RX10_TEMP46 ; if ( RX10_TEMP47 ) { String RX10_TEMP48 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final place RX10_TEMP49 = Program . getPlaceFromDist1 ( RX10_TEMP43 , RX10_TEMP45 ) ; final place RX10_TEMP51 = here ; final boolean RX10_TEMP52 = RX10_TEMP49 != RX10_TEMP51 ; if ( RX10_TEMP52 ) { String RX10_TEMP50 = "Bad place access for array X10_TEMP40" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 Program . setRefArrayValue1boolean ( X10_TEMP40 , RX10_TEMP45 , X10_TEMP35 ) ; }
 }
 }
 public static void thread13(final T13 utmpz) {final  int RX10_TEMP77 = utmpz.RX10_TEMP77;
final  place RX10_TEMP73 = utmpz.RX10_TEMP73;
final  point ( : rank==1 ) RX10_TEMP72 = utmpz.RX10_TEMP72;
final  booleanStub [ : rank==1 ] RX10_TEMP71 = utmpz.RX10_TEMP71;
 { final dist ( : rank==1 ) RX10_TEMP79 = [ 0 : RX10_TEMP77 ] -> here ; final boolean [ : rank==1 ] RX10_TEMP80 = ( boolean [ : rank==1 ] ) ( new boolean [ RX10_TEMP79 ] ( point ( : rank==1 ) RX10_TEMP78 ) { final boolean X10_TEMP61 = true ; return X10_TEMP61 ; }
 ) ; final booleanStub RX10_TEMP81 = new booleanStub ( RX10_TEMP80 ) ; 
 final T184 utmp184 = new T184(RX10_TEMP81, RX10_TEMP72, RX10_TEMP71);
 async (RX10_TEMP73) {Program.thread184(utmp184); }
 }
 }
 public static void thread14(final T14 utmpz) {final  Point1 X10_TEMP62 = utmpz.X10_TEMP62;
final  booleanRefArray1 X10_TEMP59 = utmpz.X10_TEMP59;
final  boolean X10_TEMP54 = utmpz.X10_TEMP54;
final  int X10_TEMP53 = utmpz.X10_TEMP53;
final  Region1 rRefLocal = utmpz.rRefLocal;
 { final boolean RX10_TEMP91 = Program . regionContainsPoint1 ( rRefLocal , X10_TEMP62 ) ; boolean X10_TEMP63 = RX10_TEMP91 ; X10_TEMP63 = ! X10_TEMP63 ; if ( X10_TEMP63 ) { final Point1 RX10_TEMP92 = new Point1 ( X10_TEMP53 ) ; final Dist1 RX10_TEMP93 = X10_TEMP59 . distValue ; final Region1 RX10_TEMP94 = RX10_TEMP93 . dReg ; final int RX10_TEMP95 = Program . searchPointInRegion1 ( RX10_TEMP94 , RX10_TEMP92 ) ; final int RX10_TEMP96 = 0 ; final boolean RX10_TEMP97 = RX10_TEMP95 < RX10_TEMP96 ; if ( RX10_TEMP97 ) { String RX10_TEMP98 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP98 ) ; }
 final place RX10_TEMP99 = Program . getPlaceFromDist1 ( RX10_TEMP93 , RX10_TEMP95 ) ; final place RX10_TEMP101 = here ; final boolean RX10_TEMP102 = RX10_TEMP99 != RX10_TEMP101 ; if ( RX10_TEMP102 ) { String RX10_TEMP100 = "Bad place access for array X10_TEMP59" ; throw new RuntimeException ( RX10_TEMP100 ) ; }
 Program . setRefArrayValue1boolean ( X10_TEMP59 , RX10_TEMP95 , X10_TEMP54 ) ; }
 }
 }
 public static void thread15(final T15 utmpz) {final  int RX10_TEMP20 = utmpz.RX10_TEMP20;
final  place RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  booleanStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { final dist ( : rank==1 ) RX10_TEMP21 = [ 0 : RX10_TEMP20 ] -> here ; final boolean [ : rank==1 ] RX10_TEMP22 = ( boolean [ : rank==1 ] ) ( new boolean [ RX10_TEMP21 ] ) ; final booleanStub RX10_TEMP23 = new booleanStub ( RX10_TEMP22 ) ; 
 final T185 utmp185 = new T185(RX10_TEMP23, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP16) {Program.thread185(utmp185); }
 }
 }
 public static void thread16(final T16 utmpz) {final  booleanRefArray1 result = utmpz.result;
final  place pHere = utmpz.pHere;
final  Point1 pt = utmpz.pt;
final  booleanRefArray1 b = utmpz.b;
 { final Dist1 RX10_TEMP35 = b . distValue ; final Region1 RX10_TEMP36 = RX10_TEMP35 . dReg ; final int RX10_TEMP37 = Program . searchPointInRegion1 ( RX10_TEMP36 , pt ) ; final int RX10_TEMP38 = 0 ; final boolean RX10_TEMP39 = RX10_TEMP37 < RX10_TEMP38 ; if ( RX10_TEMP39 ) { String RX10_TEMP40 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 final place RX10_TEMP41 = Program . getPlaceFromDist1 ( RX10_TEMP35 , RX10_TEMP37 ) ; final place RX10_TEMP43 = here ; final boolean RX10_TEMP44 = RX10_TEMP41 != RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP42 = "Bad place access for array b" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final boolean RX10_TEMP45 = Program . getRefArrayValue1boolean ( b , RX10_TEMP37 ) ; final boolean val = ( RX10_TEMP45 ) ; 
 final T186 utmp186 = new T186(val, result);
 async (pHere) {Program.thread186(utmp186); }
 }
 }
 public static void thread17(final T17 utmpz) {final  int RX10_TEMP20 = utmpz.RX10_TEMP20;
final  place RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  ComplexStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { final dist ( : rank==1 ) RX10_TEMP21 = [ 0 : RX10_TEMP20 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP22 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP21 ] ) ; final ComplexStub RX10_TEMP23 = new ComplexStub ( RX10_TEMP22 ) ; 
 final T187 utmp187 = new T187(RX10_TEMP23, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP16) {Program.thread187(utmp187); }
 }
 }
 public static void thread18(final T18 utmpz) {final  ComplexRefArray1 result = utmpz.result;
final  place pHere = utmpz.pHere;
final  Point1 pt = utmpz.pt;
final  ComplexRefArray1 c = utmpz.c;
 { final Dist1 RX10_TEMP35 = c . distValue ; final Region1 RX10_TEMP36 = RX10_TEMP35 . dReg ; final int RX10_TEMP37 = Program . searchPointInRegion1 ( RX10_TEMP36 , pt ) ; final int RX10_TEMP38 = 0 ; final boolean RX10_TEMP39 = RX10_TEMP37 < RX10_TEMP38 ; if ( RX10_TEMP39 ) { String RX10_TEMP40 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 final place RX10_TEMP41 = Program . getPlaceFromDist1 ( RX10_TEMP35 , RX10_TEMP37 ) ; final place RX10_TEMP43 = here ; final boolean RX10_TEMP44 = RX10_TEMP41 != RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP42 = "Bad place access for array c" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final Complex RX10_TEMP45 = Program . getRefArrayValue1Complex ( c , RX10_TEMP37 ) ; final Complex val = ( RX10_TEMP45 ) ; 
 final T188 utmp188 = new T188(val, result);
 async (pHere) {Program.thread188(utmp188); }
 }
 }
 public static void thread19(final T19 utmpz) {final  int RX10_TEMP20 = utmpz.RX10_TEMP20;
final  place RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  intStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { final dist ( : rank==1 ) RX10_TEMP21 = [ 0 : RX10_TEMP20 ] -> here ; final int [ : rank==1 ] RX10_TEMP22 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP21 ] ) ; final intStub RX10_TEMP23 = new intStub ( RX10_TEMP22 ) ; 
 final T189 utmp189 = new T189(RX10_TEMP23, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP16) {Program.thread189(utmp189); }
 }
 }
 public static void thread20(final T20 utmpz) {final  intRefArray1 result = utmpz.result;
final  place pHere = utmpz.pHere;
final  Point1 pt = utmpz.pt;
final  intRefArray1 i = utmpz.i;
 { final Dist1 RX10_TEMP35 = i . distValue ; final Region1 RX10_TEMP36 = RX10_TEMP35 . dReg ; final int RX10_TEMP37 = Program . searchPointInRegion1 ( RX10_TEMP36 , pt ) ; final int RX10_TEMP38 = 0 ; final boolean RX10_TEMP39 = RX10_TEMP37 < RX10_TEMP38 ; if ( RX10_TEMP39 ) { String RX10_TEMP40 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 final place RX10_TEMP41 = Program . getPlaceFromDist1 ( RX10_TEMP35 , RX10_TEMP37 ) ; final place RX10_TEMP43 = here ; final boolean RX10_TEMP44 = RX10_TEMP41 != RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP42 = "Bad place access for array i" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final int RX10_TEMP45 = Program . getRefArrayValue1int ( i , RX10_TEMP37 ) ; final int val = ( RX10_TEMP45 ) ; 
 final T190 utmp190 = new T190(val, result);
 async (pHere) {Program.thread190(utmp190); }
 }
 }
 public static void thread21(final T21 utmpz) {final  int RX10_TEMP20 = utmpz.RX10_TEMP20;
final  place RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  doubleStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { final dist ( : rank==1 ) RX10_TEMP21 = [ 0 : RX10_TEMP20 ] -> here ; final double [ : rank==1 ] RX10_TEMP22 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP21 ] ) ; final doubleStub RX10_TEMP23 = new doubleStub ( RX10_TEMP22 ) ; 
 final T191 utmp191 = new T191(RX10_TEMP23, RX10_TEMP15, RX10_TEMP14);
 async (RX10_TEMP16) {Program.thread191(utmp191); }
 }
 }
 public static void thread22(final T22 utmpz) {final  doubleRefArray1 result = utmpz.result;
final  place pHere = utmpz.pHere;
final  Point1 pt = utmpz.pt;
final  doubleRefArray1 d = utmpz.d;
 { final Dist1 RX10_TEMP35 = d . distValue ; final Region1 RX10_TEMP36 = RX10_TEMP35 . dReg ; final int RX10_TEMP37 = Program . searchPointInRegion1 ( RX10_TEMP36 , pt ) ; final int RX10_TEMP38 = 0 ; final boolean RX10_TEMP39 = RX10_TEMP37 < RX10_TEMP38 ; if ( RX10_TEMP39 ) { String RX10_TEMP40 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 final place RX10_TEMP41 = Program . getPlaceFromDist1 ( RX10_TEMP35 , RX10_TEMP37 ) ; final place RX10_TEMP43 = here ; final boolean RX10_TEMP44 = RX10_TEMP41 != RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP42 = "Bad place access for array d" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final double RX10_TEMP45 = Program . getRefArrayValue1double ( d , RX10_TEMP37 ) ; final double val = ( RX10_TEMP45 ) ; 
 final T192 utmp192 = new T192(val, result);
 async (pHere) {Program.thread192(utmp192); }
 }
 }
 public static void thread23(final T23 utmpz) {final  int r1Length = utmpz.r1Length;
final  int nBits = utmpz.nBits;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final Dist2 RX10_TEMP12 = f . distValue ; final Dist2 dF = RX10_TEMP12 ; final int X10_TEMP31 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dF , X10_TEMP31 ) ; final int X10_TEMP36 = ( 0 ) ; final int X10_TEMP34 = ( 1 ) ; final int X10_TEMP37 = ( r1Length - X10_TEMP34 ) ; final Region1 X10_TEMP39 = Program . createNewRegion1R ( X10_TEMP36 , X10_TEMP37 ) ; final place X10_TEMP40 = here ; final int RX10_TEMP17 = 1 ; int RX10_TEMP15 = X10_TEMP39 . regSize ; RX10_TEMP15 = RX10_TEMP15 - RX10_TEMP17 ; final region ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP15 ] ; for ( point ( : rank==1 ) RX10_TEMP13 : RX10_TEMP16 ) { final int RX10_TEMP18 = RX10_TEMP13 [0] ; final Point1 RX10_TEMP14 = Program . regionOrdinalPoint1 ( X10_TEMP39 , RX10_TEMP18 ) ; final int j1 = RX10_TEMP14 . f0 ; 
 final T193 utmp193 = new T193(j1, rLocal1, nBits, f, X10_TEMP0);
 async (X10_TEMP40) {Program.thread193(utmp193); }
 }
 }
 }
 public static void thread24(final T24 utmpz) {final  int kmr = utmpz.kmr;
final  int nxhh = utmpz.nxhh;
final  int nxh = utmpz.nxh;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final Dist2 RX10_TEMP12 = f . distValue ; final Dist2 dF = RX10_TEMP12 ; final Region2 rLocal = Program . X10Util_get2DLRegion ( dF ) ; final int X10_TEMP21 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getRank2D ( rLocal , X10_TEMP21 ) ; final Region2 X10_TEMP27 = Program . createNewRegion2AR ( rLocal1 , nxhh , nxhh ) ; final place X10_TEMP28 = here ; final int RX10_TEMP16 = 1 ; int RX10_TEMP14 = X10_TEMP27 . regSize ; RX10_TEMP14 = RX10_TEMP14 - RX10_TEMP16 ; final region ( : rank==1 ) RX10_TEMP15 = [ 0 : RX10_TEMP14 ] ; for ( point ( : rank==1 ) RX10_TEMP13 : RX10_TEMP15 ) { final int RX10_TEMP17 = RX10_TEMP13 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP27 , RX10_TEMP17 ) ; 
 final T194 utmp194 = new T194(pt, f);
 async (X10_TEMP28) {Program.thread194(utmp194); }
 }
 final int X10_TEMP59 = ( 1 ) ; final int X10_TEMP57 = ( 1 ) ; final int X10_TEMP60 = ( nxhh - X10_TEMP57 ) ; final Region1 X10_TEMP62 = Program . createNewRegion1R ( X10_TEMP59 , X10_TEMP60 ) ; final int RX10_TEMP66 = 1 ; int RX10_TEMP64 = X10_TEMP62 . regSize ; RX10_TEMP64 = RX10_TEMP64 - RX10_TEMP66 ; final region ( : rank==1 ) RX10_TEMP65 = [ 0 : RX10_TEMP64 ] ; for ( point ( : rank==1 ) RX10_TEMP62 : RX10_TEMP65 ) { final int RX10_TEMP67 = RX10_TEMP62 [0] ; final Point1 RX10_TEMP63 = Program . regionOrdinalPoint1 ( X10_TEMP62 , RX10_TEMP67 ) ; final int j1 = RX10_TEMP63 . f0 ; final int j2 = ( nxh - j1 ) ; final ComplexValArray1 X10_TEMP64 = X10_TEMP0 . tableSineCosine ; final int X10_TEMP66 = ( kmr * j1 ) ; final Point1 RX10_TEMP68 = new Point1 ( X10_TEMP66 ) ; final Region1 RX10_TEMP69 = X10_TEMP64 . regionValue ; final int RX10_TEMP70 = Program . searchPointInRegion1 ( RX10_TEMP69 , RX10_TEMP68 ) ; final int RX10_TEMP71 = 0 ; final boolean RX10_TEMP72 = RX10_TEMP70 < RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP73 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP73 ) ; }
 final Complex value [ : rank==1 ] RX10_TEMP74 = ( Complex value [ : rank==1 ] ) ( X10_TEMP64 . contents ) ; final Complex t0 = ( RX10_TEMP74 [ RX10_TEMP70 ] ) ; double X10_TEMP70 = ( Program . Complex_getImag ( t0 ) ) ; double X10_TEMP71 = ( Program . Complex_getReal ( t0 ) ) ; final Complex t1 = ( new Complex ( X10_TEMP70 , X10_TEMP71 ) ) ; final place X10_TEMP74 = here ; final int RX10_TEMP79 = 1 ; int RX10_TEMP77 = rLocal1 . regSize ; RX10_TEMP77 = RX10_TEMP77 - RX10_TEMP79 ; final region ( : rank==1 ) RX10_TEMP78 = [ 0 : RX10_TEMP77 ] ; for ( point ( : rank==1 ) RX10_TEMP75 : RX10_TEMP78 ) { final int RX10_TEMP80 = RX10_TEMP75 [0] ; final Point1 RX10_TEMP76 = Program . regionOrdinalPoint1 ( rLocal1 , RX10_TEMP80 ) ; final int i = RX10_TEMP76 . f0 ; 
 final T195 utmp195 = new T195(i, t1, j2, j1, f);
 async (X10_TEMP74) {Program.thread195(utmp195); }
 }
 }
 }
 }
 public static void thread25(final T25 utmpz) {final  int kmr = utmpz.kmr;
final  int nxhh = utmpz.nxhh;
final  int nxh = utmpz.nxh;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final Dist2 RX10_TEMP12 = f . distValue ; final Dist2 dF = RX10_TEMP12 ; final int X10_TEMP20 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dF , X10_TEMP20 ) ; final int X10_TEMP25 = ( 1 ) ; final int X10_TEMP23 = ( 1 ) ; final int X10_TEMP26 = ( nxhh - X10_TEMP23 ) ; final Region1 X10_TEMP28 = Program . createNewRegion1R ( X10_TEMP25 , X10_TEMP26 ) ; final place X10_TEMP29 = here ; final int RX10_TEMP17 = 1 ; int RX10_TEMP15 = X10_TEMP28 . regSize ; RX10_TEMP15 = RX10_TEMP15 - RX10_TEMP17 ; final region ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP15 ] ; for ( point ( : rank==1 ) RX10_TEMP13 : RX10_TEMP16 ) { final int RX10_TEMP18 = RX10_TEMP13 [0] ; final Point1 RX10_TEMP14 = Program . regionOrdinalPoint1 ( X10_TEMP28 , RX10_TEMP18 ) ; final int j1 = RX10_TEMP14 . f0 ; 
 final T196 utmp196 = new T196(j1, rLocal1, kmr, nxh, f, X10_TEMP0);
 async (X10_TEMP29) {Program.thread196(utmp196); }
 }
 final Region2 X10_TEMP87 = Program . createNewRegion2AR ( rLocal1 , nxhh , nxhh ) ; final place X10_TEMP88 = here ; final int RX10_TEMP93 = 1 ; int RX10_TEMP91 = X10_TEMP87 . regSize ; RX10_TEMP91 = RX10_TEMP91 - RX10_TEMP93 ; final region ( : rank==1 ) RX10_TEMP92 = [ 0 : RX10_TEMP91 ] ; for ( point ( : rank==1 ) RX10_TEMP90 : RX10_TEMP92 ) { final int RX10_TEMP94 = RX10_TEMP90 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP87 , RX10_TEMP94 ) ; 
 final T197 utmp197 = new T197(pt, f, X10_TEMP0);
 async (X10_TEMP88) {Program.thread197(utmp197); }
 }
 }
 }
 public static void thread26(final T26 utmpz) {final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP10 = ( 1 ) ; final int X10_TEMP4 = ( X10_TEMP0 . length1 ) ; final int X10_TEMP5 = ( 2 ) ; final int X10_TEMP7 = ( X10_TEMP4 / X10_TEMP5 ) ; final int X10_TEMP8 = ( 1 ) ; final int X10_TEMP11 = ( X10_TEMP7 - X10_TEMP8 ) ; final Region1 X10_TEMP13 = Program . createNewRegion1R ( X10_TEMP10 , X10_TEMP11 ) ; final place X10_TEMP14 = here ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = X10_TEMP13 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 RX10_TEMP1 = Program . regionOrdinalPoint1 ( X10_TEMP13 , RX10_TEMP5 ) ; final int j1 = RX10_TEMP1 . f0 ; 
 final T198 utmp198 = new T198(j1, f, X10_TEMP0);
 async (X10_TEMP14) {Program.thread198(utmp198); }
 }
 }
 }
 public static void thread27(final T27 utmpz) {final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP10 = ( 1 ) ; final int X10_TEMP4 = ( X10_TEMP0 . length1 ) ; final int X10_TEMP5 = ( 2 ) ; final int X10_TEMP7 = ( X10_TEMP4 / X10_TEMP5 ) ; final int X10_TEMP8 = ( 1 ) ; final int X10_TEMP11 = ( X10_TEMP7 - X10_TEMP8 ) ; final Region1 X10_TEMP13 = Program . createNewRegion1R ( X10_TEMP10 , X10_TEMP11 ) ; final place X10_TEMP14 = here ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = X10_TEMP13 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 RX10_TEMP1 = Program . regionOrdinalPoint1 ( X10_TEMP13 , RX10_TEMP5 ) ; final int j1 = RX10_TEMP1 . f0 ; 
 final T199 utmp199 = new T199(j1, f, X10_TEMP0);
 async (X10_TEMP14) {Program.thread199(utmp199); }
 }
 }
 }
 public static void thread28(final T28 utmpz) {final  int kmr = utmpz.kmr;
final  int km = utmpz.km;
final  int width = utmpz.width;
final  int stride = utmpz.stride;
final  boolean inverse = utmpz.inverse;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP65 = ( 0 ) ; final int X10_TEMP63 = ( 1 ) ; final int X10_TEMP66 = ( km - X10_TEMP63 ) ; final Region1 X10_TEMP68 = Program . createNewRegion1R ( X10_TEMP65 , X10_TEMP66 ) ; final int RX10_TEMP21 = 1 ; int RX10_TEMP19 = X10_TEMP68 . regSize ; RX10_TEMP19 = RX10_TEMP19 - RX10_TEMP21 ; final region ( : rank==1 ) RX10_TEMP20 = [ 0 : RX10_TEMP19 ] ; for ( point ( : rank==1 ) RX10_TEMP17 : RX10_TEMP20 ) { final int RX10_TEMP22 = RX10_TEMP17 [0] ; final Point1 RX10_TEMP18 = Program . regionOrdinalPoint1 ( X10_TEMP68 , RX10_TEMP22 ) ; final int k = RX10_TEMP18 . f0 ; final int lb = ( width * k ) ; final int mb = ( lb + stride ) ; finish { final int X10_TEMP74 = ( 0 ) ; final int X10_TEMP72 = ( 1 ) ; final int X10_TEMP75 = ( stride - X10_TEMP72 ) ; final Region1 X10_TEMP77 = Program . createNewRegion1R ( X10_TEMP74 , X10_TEMP75 ) ; final place X10_TEMP78 = here ; final int RX10_TEMP27 = 1 ; int RX10_TEMP25 = X10_TEMP77 . regSize ; RX10_TEMP25 = RX10_TEMP25 - RX10_TEMP27 ; final region ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP25 ] ; for ( point ( : rank==1 ) RX10_TEMP23 : RX10_TEMP26 ) { final int RX10_TEMP28 = RX10_TEMP23 [0] ; final Point1 RX10_TEMP24 = Program . regionOrdinalPoint1 ( X10_TEMP77 , RX10_TEMP28 ) ; final int j = RX10_TEMP24 . f0 ; 
 final T200 utmp200 = new T200(j, mb, lb, kmr, inverse, f, X10_TEMP0);
 async (X10_TEMP78) {Program.thread200(utmp200); }
 }
 }
 }
 }
 }
 public static void thread29(final T29 utmpz) {final  int RX10_TEMP54 = utmpz.RX10_TEMP54;
final  place RX10_TEMP50 = utmpz.RX10_TEMP50;
final  point ( : rank==1 ) RX10_TEMP49 = utmpz.RX10_TEMP49;
final  doubleStub [ : rank==1 ] RX10_TEMP48 = utmpz.RX10_TEMP48;
 { final dist ( : rank==1 ) RX10_TEMP55 = [ 0 : RX10_TEMP54 ] -> here ; final double [ : rank==1 ] RX10_TEMP56 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP55 ] ) ; final doubleStub RX10_TEMP57 = new doubleStub ( RX10_TEMP56 ) ; 
 final T201 utmp201 = new T201(RX10_TEMP57, RX10_TEMP49, RX10_TEMP48);
 async (RX10_TEMP50) {Program.thread201(utmp201); }
 }
 }
 public static void thread30(final T30 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T202 utmp202 = new T202(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread202(utmp202); }
 }
 }
 public static void thread31(final T31 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T203 utmp203 = new T203(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread203(utmp203); }
 }
 }
 public static void thread32(final T32 utmpz) {final  Point1 pl = utmpz.pl;
final  double y0 = utmpz.y0;
final  double x0 = utmpz.x0;
final  double bny = utmpz.bny;
final  double bnx = utmpz.bnx;
final  double any = utmpz.any;
final  double anx = utmpz.anx;
final  double edgely = utmpz.edgely;
final  double edgelx = utmpz.edgelx;
final  int particlesPerPlace = utmpz.particlesPerPlace;
final  doubleRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
final  double BIG = utmpz.BIG;
final  double ERROR = utmpz.ERROR;
final  int MAX_ITER = utmpz.MAX_ITER;
final  int Y = utmpz.Y;
final  int X = utmpz.X;
final  LinearESOpenPIC2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP104 = ( 0 ) ; final Region1 rLocal = Program . X10Util_getLRank2D ( dResult , X10_TEMP104 ) ; final int RX10_TEMP32 = rLocal . regSize ; final int RX10_TEMP33 = 0 ; final boolean RX10_TEMP34 = RX10_TEMP32 <= RX10_TEMP33 ; if ( RX10_TEMP34 ) { final String RX10_TEMP35 = "Operation low() not defined on empty region rLocal" ; throw new RuntimeException ( RX10_TEMP35 ) ; }
 final int offset = ( Program . regionLow ( rLocal ) ) ; final int X10_TEMP108 = ( pl . f0 ) ; final int koff = ( particlesPerPlace * X10_TEMP108 ) ; final int noff = ( offset ) ; int kc = ( koff / _LinearESOpenPIC2D_PARTICLE_XDENSITY ) ; double yt0 = ( edgely ) ; final double X10_TEMP123 = ( 0.5 ) ; final double X10_TEMP117 = ( 0.0 ) ; final double X10_TEMP118 = ( 0.0 ) ; final double X10_TEMP119 = ( 0.0 ) ; final double X10_TEMP120 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , yt0 , X10_TEMP117 , X10_TEMP118 , X10_TEMP119 ) ) ; final double X10_TEMP122 = ( bny * X10_TEMP120 ) ; final double X10_TEMP124 = ( X10_TEMP123 / X10_TEMP122 ) ; double yt = ( yt0 + X10_TEMP124 ) ; final int X10_TEMP129 = ( 0 ) ; final int X10_TEMP127 = ( 1 ) ; final int X10_TEMP130 = ( kc - X10_TEMP127 ) ; final Region1 X10_TEMP132 = Program . createNewRegion1R ( X10_TEMP129 , X10_TEMP130 ) ; final int RX10_TEMP39 = 1 ; int RX10_TEMP37 = X10_TEMP132 . regSize ; RX10_TEMP37 = RX10_TEMP37 - RX10_TEMP39 ; final region ( : rank==1 ) RX10_TEMP38 = [ 0 : RX10_TEMP37 ] ; for ( point ( : rank==1 ) RX10_TEMP36 : RX10_TEMP38 ) { final int RX10_TEMP40 = RX10_TEMP36 [0] ; final Point1 k = Program . regionOrdinalPoint1 ( X10_TEMP132 , RX10_TEMP40 ) ; final int X10_TEMP134 = ( k . f0 ) ; final double X10_TEMP135 = ( X10_TEMP134 + y0 ) ; final int X10_TEMP136 = ( 1 ) ; double yn = ( X10_TEMP135 + X10_TEMP136 ) ; final int X10_TEMP139 = ( k . f0 ) ; final int X10_TEMP140 = ( 0 ) ; final boolean X10_TEMP142 = X10_TEMP139 > X10_TEMP140 ; if ( X10_TEMP142 ) { final double X10_TEMP153 = ( 1.0 ) ; final double X10_TEMP147 = ( 0.0 ) ; final double X10_TEMP148 = ( 0.0 ) ; final double X10_TEMP149 = ( 0.0 ) ; final double X10_TEMP150 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , yt , X10_TEMP147 , X10_TEMP148 , X10_TEMP149 ) ) ; final double X10_TEMP152 = ( bny * X10_TEMP150 ) ; final double X10_TEMP155 = ( X10_TEMP153 / X10_TEMP152 ) ; final double X10_TEMP157 = ( yt + X10_TEMP155 ) ; yt = ( X10_TEMP157 ) ; }
 final double X10_TEMP162 = ( Program . X10Util_minDouble ( yt , any ) ) ; final double X10_TEMP164 = ( Program . X10Util_maxDouble ( edgely , X10_TEMP162 ) ) ; yt = ( X10_TEMP164 ) ; final double X10_TEMP169 = ( 0.0 ) ; final double X10_TEMP170 = ( 0.0 ) ; final double X10_TEMP171 = ( 0.0 ) ; final double X10_TEMP172 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , yt , X10_TEMP169 , X10_TEMP170 , X10_TEMP171 ) ) ; final double X10_TEMP173 = ( bny * X10_TEMP172 ) ; double f = ( X10_TEMP173 - yn ) ; double absf = ( Math . abs ( f ) ) ; int i = ( 0 ) ; boolean X10_TEMP180 = absf >= ERROR ; while ( X10_TEMP180 ) { final boolean X10_TEMP182 = absf < BIG ; if ( X10_TEMP182 ) { final double X10_TEMP187 = ( 0.0 ) ; final double X10_TEMP188 = ( 0.0 ) ; final double X10_TEMP189 = ( 0.0 ) ; final double X10_TEMP190 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , yt , X10_TEMP187 , X10_TEMP188 , X10_TEMP189 ) ) ; double fp = ( bny * X10_TEMP190 ) ; yt0 = ( yt ) ; final double X10_TEMP194 = ( f / fp ) ; final double X10_TEMP197 = ( yt - X10_TEMP194 ) ; final double X10_TEMP199 = ( Program . X10Util_minDouble ( X10_TEMP197 , any ) ) ; final double X10_TEMP201 = ( Program . X10Util_maxDouble ( edgely , X10_TEMP199 ) ) ; yt = ( X10_TEMP201 ) ; }
 else { final double X10_TEMP202 = ( 0.0 ) ; final boolean X10_TEMP204 = f > X10_TEMP202 ; if ( X10_TEMP204 ) { final double X10_TEMP207 = ( 0.5 ) ; final double X10_TEMP206 = ( yt - yt0 ) ; final double X10_TEMP209 = ( X10_TEMP207 * X10_TEMP206 ) ; final double X10_TEMP211 = ( yt0 + X10_TEMP209 ) ; yt = ( X10_TEMP211 ) ; }
 else { final double X10_TEMP212 = ( yt + yt ) ; final double X10_TEMP214 = ( X10_TEMP212 - yt0 ) ; yt = ( X10_TEMP214 ) ; }
 }
 final boolean X10_TEMP216 = i >= MAX_ITER ; if ( X10_TEMP216 ) { final String X10_TEMP218 = ( "1: Newton iteration max exceeded" ) ; System.err.println ( X10_TEMP218 ) ; break ; }
 else { final double X10_TEMP223 = ( 0.0 ) ; final double X10_TEMP224 = ( 0.0 ) ; final double X10_TEMP225 = ( 0.0 ) ; final double X10_TEMP226 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , yt , X10_TEMP223 , X10_TEMP224 , X10_TEMP225 ) ) ; final double X10_TEMP227 = ( bny * X10_TEMP226 ) ; final double X10_TEMP229 = ( X10_TEMP227 - yn ) ; f = ( X10_TEMP229 ) ; final double X10_TEMP232 = ( Math . abs ( f ) ) ; absf = ( X10_TEMP232 ) ; }
 final int X10_TEMP233 = ( i ) ; final int X10_TEMP234 = 1 ; i = i + X10_TEMP234 ; X10_TEMP180 = absf >= ERROR ; }
 yt0 = ( yt ) ; }
 final int X10_TEMP236 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY * kc ) ; int jc = ( koff - X10_TEMP236 ) ; double xt0 = ( edgelx ) ; final double X10_TEMP249 = ( 0.5 ) ; final double X10_TEMP243 = ( 0.0 ) ; final double X10_TEMP244 = ( 0.0 ) ; final double X10_TEMP245 = ( 0.0 ) ; final double X10_TEMP246 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , xt0 , X10_TEMP243 , X10_TEMP244 , X10_TEMP245 ) ) ; final double X10_TEMP248 = ( bnx * X10_TEMP246 ) ; final double X10_TEMP250 = ( X10_TEMP249 / X10_TEMP248 ) ; double xt = ( xt0 + X10_TEMP250 ) ; final int X10_TEMP255 = ( 0 ) ; final int X10_TEMP253 = ( 1 ) ; final int X10_TEMP256 = ( jc - X10_TEMP253 ) ; final Region1 X10_TEMP258 = Program . createNewRegion1R ( X10_TEMP255 , X10_TEMP256 ) ; final int RX10_TEMP44 = 1 ; int RX10_TEMP42 = X10_TEMP258 . regSize ; RX10_TEMP42 = RX10_TEMP42 - RX10_TEMP44 ; final region ( : rank==1 ) RX10_TEMP43 = [ 0 : RX10_TEMP42 ] ; for ( point ( : rank==1 ) RX10_TEMP41 : RX10_TEMP43 ) { final int RX10_TEMP45 = RX10_TEMP41 [0] ; final Point1 j = Program . regionOrdinalPoint1 ( X10_TEMP258 , RX10_TEMP45 ) ; final int X10_TEMP260 = ( j . f0 ) ; final double X10_TEMP261 = ( X10_TEMP260 + x0 ) ; final int X10_TEMP262 = ( 1 ) ; double xn = ( X10_TEMP261 + X10_TEMP262 ) ; final int X10_TEMP265 = ( j . f0 ) ; final int X10_TEMP266 = ( 0 ) ; final boolean X10_TEMP268 = X10_TEMP265 > X10_TEMP266 ; if ( X10_TEMP268 ) { final double X10_TEMP279 = ( 1.0 ) ; final double X10_TEMP273 = ( 0.0 ) ; final double X10_TEMP274 = ( 0.0 ) ; final double X10_TEMP275 = ( 0.0 ) ; final double X10_TEMP276 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , xt , X10_TEMP273 , X10_TEMP274 , X10_TEMP275 ) ) ; final double X10_TEMP278 = ( bnx * X10_TEMP276 ) ; final double X10_TEMP281 = ( X10_TEMP279 / X10_TEMP278 ) ; final double X10_TEMP283 = ( xt + X10_TEMP281 ) ; xt = ( X10_TEMP283 ) ; }
 final double X10_TEMP288 = ( Program . X10Util_minDouble ( xt , anx ) ) ; final double X10_TEMP290 = ( Program . X10Util_maxDouble ( edgelx , X10_TEMP288 ) ) ; xt = ( X10_TEMP290 ) ; final double X10_TEMP295 = ( 0.0 ) ; final double X10_TEMP296 = ( 0.0 ) ; final double X10_TEMP297 = ( 0.0 ) ; final double X10_TEMP298 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , xt , X10_TEMP295 , X10_TEMP296 , X10_TEMP297 ) ) ; final double X10_TEMP299 = ( bnx * X10_TEMP298 ) ; double f = ( X10_TEMP299 - xn ) ; double absf = ( Math . abs ( f ) ) ; int i = ( 0 ) ; boolean X10_TEMP306 = absf >= ERROR ; while ( X10_TEMP306 ) { final boolean X10_TEMP308 = absf < BIG ; if ( X10_TEMP308 ) { final double X10_TEMP313 = ( 0.0 ) ; final double X10_TEMP314 = ( 0.0 ) ; final double X10_TEMP315 = ( 0.0 ) ; final double X10_TEMP316 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , xt , X10_TEMP313 , X10_TEMP314 , X10_TEMP315 ) ) ; double fp = ( bnx * X10_TEMP316 ) ; xt0 = ( xt ) ; final double X10_TEMP320 = ( f / fp ) ; final double X10_TEMP323 = ( xt - X10_TEMP320 ) ; final double X10_TEMP325 = ( Program . X10Util_minDouble ( X10_TEMP323 , anx ) ) ; final double X10_TEMP327 = ( Program . X10Util_maxDouble ( edgelx , X10_TEMP325 ) ) ; xt = ( X10_TEMP327 ) ; }
 else { final double X10_TEMP328 = ( 0.0 ) ; final boolean X10_TEMP330 = f > X10_TEMP328 ; if ( X10_TEMP330 ) { final double X10_TEMP333 = ( 0.5 ) ; final double X10_TEMP332 = ( xt - xt0 ) ; final double X10_TEMP334 = ( X10_TEMP333 * X10_TEMP332 ) ; final double X10_TEMP336 = ( xt0 + X10_TEMP334 ) ; xt = ( X10_TEMP336 ) ; }
 else { final double X10_TEMP337 = ( xt + xt ) ; final double X10_TEMP339 = ( X10_TEMP337 - xt0 ) ; xt = ( X10_TEMP339 ) ; }
 }
 final boolean X10_TEMP341 = i >= MAX_ITER ; if ( X10_TEMP341 ) { final String X10_TEMP343 = ( "2: Newton iteration max exceeded" ) ; System.err.println ( X10_TEMP343 ) ; break ; }
 else { final double X10_TEMP348 = ( 0.0 ) ; final double X10_TEMP349 = ( 0.0 ) ; final double X10_TEMP350 = ( 0.0 ) ; final double X10_TEMP351 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , xt , X10_TEMP348 , X10_TEMP349 , X10_TEMP350 ) ) ; final double X10_TEMP352 = ( bnx * X10_TEMP351 ) ; final double X10_TEMP354 = ( X10_TEMP352 - xn ) ; f = ( X10_TEMP354 ) ; final double X10_TEMP357 = ( Math . abs ( f ) ) ; absf = ( X10_TEMP357 ) ; }
 final int X10_TEMP358 = ( i ) ; final int X10_TEMP359 = 1 ; i = i + X10_TEMP359 ; X10_TEMP306 = absf >= ERROR ; }
 xt0 = ( xt ) ; }
 final int X10_TEMP361 = ( kc ) ; final int X10_TEMP362 = 1 ; kc = kc + X10_TEMP362 ; final int X10_TEMP369 = ( 0 ) ; final int X10_TEMP366 = ( Program . X10Util_minInt ( particlesPerPlace , _LinearESOpenPIC2D_PARTICLE_XDENSITY ) ) ; final int X10_TEMP367 = ( 1 ) ; final int X10_TEMP370 = ( X10_TEMP366 - X10_TEMP367 ) ; final Region1 X10_TEMP372 = Program . createNewRegion1R ( X10_TEMP369 , X10_TEMP370 ) ; final int RX10_TEMP50 = 1 ; int RX10_TEMP48 = X10_TEMP372 . regSize ; RX10_TEMP48 = RX10_TEMP48 - RX10_TEMP50 ; final region ( : rank==1 ) RX10_TEMP49 = [ 0 : RX10_TEMP48 ] ; for ( point ( : rank==1 ) RX10_TEMP46 : RX10_TEMP49 ) { final int RX10_TEMP51 = RX10_TEMP46 [0] ; final Point1 RX10_TEMP47 = Program . regionOrdinalPoint1 ( X10_TEMP372 , RX10_TEMP51 ) ; final int n = RX10_TEMP47 . f0 ; int nn = ( n + koff ) ; int k = ( nn / _LinearESOpenPIC2D_PARTICLE_XDENSITY ) ; int j = ( nn % _LinearESOpenPIC2D_PARTICLE_XDENSITY ) ; final double X10_TEMP376 = ( j + x0 ) ; final int X10_TEMP377 = ( 1 ) ; double xn = ( X10_TEMP376 + X10_TEMP377 ) ; final int X10_TEMP379 = ( 0 ) ; final boolean X10_TEMP381 = j == X10_TEMP379 ; if ( X10_TEMP381 ) { xt0 = ( edgelx ) ; final double X10_TEMP393 = ( 0.5 ) ; final double X10_TEMP387 = ( 0.0 ) ; final double X10_TEMP388 = ( 0.0 ) ; final double X10_TEMP389 = ( 0.0 ) ; final double X10_TEMP390 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , xt0 , X10_TEMP387 , X10_TEMP388 , X10_TEMP389 ) ) ; final double X10_TEMP392 = ( bnx * X10_TEMP390 ) ; final double X10_TEMP394 = ( X10_TEMP393 / X10_TEMP392 ) ; final double X10_TEMP396 = ( xt0 + X10_TEMP394 ) ; xt = ( X10_TEMP396 ) ; }
 else { final double X10_TEMP407 = ( 1.0 ) ; final double X10_TEMP401 = ( 0.0 ) ; final double X10_TEMP402 = ( 0.0 ) ; final double X10_TEMP403 = ( 0.0 ) ; final double X10_TEMP404 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , xt , X10_TEMP401 , X10_TEMP402 , X10_TEMP403 ) ) ; final double X10_TEMP406 = ( bnx * X10_TEMP404 ) ; final double X10_TEMP409 = ( X10_TEMP407 / X10_TEMP406 ) ; final double X10_TEMP411 = ( xt + X10_TEMP409 ) ; xt = ( X10_TEMP411 ) ; }
 final double X10_TEMP416 = ( Program . X10Util_minDouble ( xt , anx ) ) ; final double X10_TEMP418 = ( Program . X10Util_maxDouble ( edgelx , X10_TEMP416 ) ) ; xt = ( X10_TEMP418 ) ; final double X10_TEMP423 = ( 0.0 ) ; final double X10_TEMP424 = ( 0.0 ) ; final double X10_TEMP425 = ( 0.0 ) ; final double X10_TEMP426 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , xt0 , X10_TEMP423 , X10_TEMP424 , X10_TEMP425 ) ) ; final double X10_TEMP427 = ( bnx * X10_TEMP426 ) ; double f = ( X10_TEMP427 - xn ) ; double absf = ( Math . abs ( f ) ) ; int i = ( 0 ) ; boolean X10_TEMP434 = absf >= ERROR ; while ( X10_TEMP434 ) { final boolean X10_TEMP436 = absf < BIG ; if ( X10_TEMP436 ) { final double X10_TEMP441 = ( 0.0 ) ; final double X10_TEMP442 = ( 0.0 ) ; final double X10_TEMP443 = ( 0.0 ) ; final double X10_TEMP444 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , xt , X10_TEMP441 , X10_TEMP442 , X10_TEMP443 ) ) ; double fp = ( bnx * X10_TEMP444 ) ; xt0 = ( xt ) ; final double X10_TEMP448 = ( f / fp ) ; final double X10_TEMP451 = ( xt - X10_TEMP448 ) ; final double X10_TEMP453 = ( Program . X10Util_minDouble ( X10_TEMP451 , anx ) ) ; final double X10_TEMP455 = ( Program . X10Util_maxDouble ( edgelx , X10_TEMP453 ) ) ; xt = ( X10_TEMP455 ) ; }
 else { final double X10_TEMP456 = ( 0.0 ) ; final boolean X10_TEMP458 = f > X10_TEMP456 ; if ( X10_TEMP458 ) { final double X10_TEMP461 = ( 0.5 ) ; final double X10_TEMP460 = ( xt - xt0 ) ; final double X10_TEMP462 = ( X10_TEMP461 * X10_TEMP460 ) ; final double X10_TEMP464 = ( xt0 + X10_TEMP462 ) ; xt = ( X10_TEMP464 ) ; }
 else { final double X10_TEMP465 = ( xt + xt ) ; final double X10_TEMP467 = ( X10_TEMP465 - xt0 ) ; xt = ( X10_TEMP467 ) ; }
 }
 final boolean X10_TEMP469 = i >= MAX_ITER ; if ( X10_TEMP469 ) { final String X10_TEMP471 = ( "3: Newton iteration max exceeded" ) ; System.err.println ( X10_TEMP471 ) ; break ; }
 else { final double X10_TEMP476 = ( 0.0 ) ; final double X10_TEMP477 = ( 0.0 ) ; final double X10_TEMP478 = ( 0.0 ) ; final double X10_TEMP479 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , xt , X10_TEMP476 , X10_TEMP477 , X10_TEMP478 ) ) ; final double X10_TEMP480 = ( bnx * X10_TEMP479 ) ; final double X10_TEMP482 = ( X10_TEMP480 - xn ) ; f = ( X10_TEMP482 ) ; final double X10_TEMP485 = ( Math . abs ( f ) ) ; absf = ( X10_TEMP485 ) ; }
 final int X10_TEMP486 = ( i ) ; final int X10_TEMP487 = 1 ; i = i + X10_TEMP487 ; X10_TEMP434 = absf >= ERROR ; }
 final int X10_TEMP490 = ( n + noff ) ; final double X10_TEMP492 = ( xt ) ; final Point2 RX10_TEMP52 = new Point2 ( X10_TEMP490 , X ) ; final Dist2 RX10_TEMP53 = result . distValue ; final Region2 RX10_TEMP54 = RX10_TEMP53 . dReg ; final int RX10_TEMP55 = Program . searchPointInRegion2 ( RX10_TEMP54 , RX10_TEMP52 ) ; final int RX10_TEMP56 = 0 ; final boolean RX10_TEMP57 = RX10_TEMP55 < RX10_TEMP56 ; if ( RX10_TEMP57 ) { String RX10_TEMP58 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP58 ) ; }
 final place RX10_TEMP59 = Program . getPlaceFromDist2 ( RX10_TEMP53 , RX10_TEMP55 ) ; final place RX10_TEMP61 = here ; final boolean RX10_TEMP62 = RX10_TEMP59 != RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP60 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP60 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP55 , X10_TEMP492 ) ; }
 final int X10_TEMP496 = ( 0 ) ; final int X10_TEMP494 = ( 1 ) ; final int X10_TEMP497 = ( particlesPerPlace - X10_TEMP494 ) ; final Region1 X10_TEMP499 = Program . createNewRegion1R ( X10_TEMP496 , X10_TEMP497 ) ; final int RX10_TEMP67 = 1 ; int RX10_TEMP65 = X10_TEMP499 . regSize ; RX10_TEMP65 = RX10_TEMP65 - RX10_TEMP67 ; final region ( : rank==1 ) RX10_TEMP66 = [ 0 : RX10_TEMP65 ] ; for ( point ( : rank==1 ) RX10_TEMP63 : RX10_TEMP66 ) { final int RX10_TEMP68 = RX10_TEMP63 [0] ; final Point1 RX10_TEMP64 = Program . regionOrdinalPoint1 ( X10_TEMP499 , RX10_TEMP68 ) ; final int n = RX10_TEMP64 . f0 ; int nn = ( n + koff ) ; final int X10_TEMP501 = ( nn / _LinearESOpenPIC2D_PARTICLE_XDENSITY ) ; final int X10_TEMP502 = ( 1 ) ; int k = ( X10_TEMP501 + X10_TEMP502 ) ; final int X10_TEMP504 = ( _LinearESOpenPIC2D_PARTICLE_XDENSITY * k ) ; int j = ( nn - X10_TEMP504 ) ; final int X10_TEMP507 = ( n % _LinearESOpenPIC2D_PARTICLE_XDENSITY ) ; nn = ( X10_TEMP507 ) ; final boolean X10_TEMP509 = k == kc ; if ( X10_TEMP509 ) { double yn = ( k + y0 ) ; final int X10_TEMP511 = ( 1 ) ; final boolean X10_TEMP513 = k > X10_TEMP511 ; if ( X10_TEMP513 ) { final double X10_TEMP524 = ( 1.0 ) ; final double X10_TEMP518 = ( 0.0 ) ; final double X10_TEMP519 = ( 0.0 ) ; final double X10_TEMP520 = ( 0.0 ) ; final double X10_TEMP521 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , yt , X10_TEMP518 , X10_TEMP519 , X10_TEMP520 ) ) ; final double X10_TEMP523 = ( bny * X10_TEMP521 ) ; final double X10_TEMP526 = ( X10_TEMP524 / X10_TEMP523 ) ; final double X10_TEMP528 = ( yt + X10_TEMP526 ) ; yt = ( X10_TEMP528 ) ; }
 final double X10_TEMP533 = ( Program . X10Util_minDouble ( yt , any ) ) ; final double X10_TEMP535 = ( Program . X10Util_maxDouble ( edgelx , X10_TEMP533 ) ) ; yt = ( X10_TEMP535 ) ; final double X10_TEMP540 = ( 0.0 ) ; final double X10_TEMP541 = ( 0.0 ) ; final double X10_TEMP542 = ( 0.0 ) ; final double X10_TEMP543 = ( Program . LinearESOpenPIC2D_linearDensityIntegral ( X10_TEMP0 , yt , X10_TEMP540 , X10_TEMP541 , X10_TEMP542 ) ) ; final double X10_TEMP544 = ( bny * X10_TEMP543 ) ; double f = ( X10_TEMP544 - yn ) ; double absf = ( Math . abs ( f ) ) ; int i = ( 0 ) ; boolean X10_TEMP551 = absf >= ERROR ; while ( X10_TEMP551 ) { final boolean X10_TEMP553 = absf < BIG ; if ( X10_TEMP553 ) { final double X10_TEMP558 = ( 0.0 ) ; final double X10_TEMP559 = ( 0.0 ) ; final double X10_TEMP560 = ( 0.0 ) ; final double X10_TEMP561 = ( Program . LinearESOpenPIC2D_linearDensityFn ( X10_TEMP0 , yt , X10_TEMP558 , X10_TEMP559 , X10_TEMP560 ) ) ; double fp = ( bny * X10_TEMP561 ) ; yt0 = ( yt ) ; final double X10_TEMP565 = ( f / fp ) ; final double X10_TEMP568 = ( yt - X10_TEMP565 ) ; final double X10_TEMP570 = ( Program . X10Util_minDouble ( X10_TEMP568 , any ) ) ; final double X10_TEMP572 = ( Program . X10Util_maxDouble ( edgely , X10_TEMP570 ) ) ; yt = ( X10_TEMP572 ) ; }
 else { final double X10_TEMP573 = ( 0.0 ) ; final boolean X10_TEMP575 = f > X10_TEMP573 ; if ( X10_TEMP575 ) { final double X10_TEMP578 = ( 0.5 ) ; final double X10_TEMP577 = ( yt - yt0 ) ; final double X10_TEMP579 = ( X10_TEMP578 * X10_TEMP577 ) ; final double X10_TEMP581 = ( yt0 + X10_TEMP579 ) ; yt = ( X10_TEMP581 ) ; }
 else { final double X10_TEMP582 = ( yt + yt ) ; final double X10_TEMP584 = ( X10_TEMP582 - yt0 ) ; yt = ( X10_TEMP584 ) ; }
 }
 final boolean X10_TEMP586 = i >= MAX_ITER ; if ( X10_TEMP586 ) { final String X10_TEMP588 = ( "4: Newton iteration max exceeded" ) ; System.err.println ( X10_TEMP588 ) ; break ; }
 else { final double X10_TEMP593 = ( 0.0 ) ; final double X10_TEMP594 = ( 0.0 ) ; final double X10_TEMP595 = ( 0.0 ) ; final double X10_TEMP596 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , yt , X10_TEMP593 , X10_TEMP594 , X10_TEMP595 ) ) ; final double X10_TEMP597 = ( bny * X10_TEMP596 ) ; final double X10_TEMP599 = ( X10_TEMP597 - yn ) ; f = ( X10_TEMP599 ) ; final double X10_TEMP602 = ( Math . abs ( f ) ) ; absf = ( X10_TEMP602 ) ; }
 final int X10_TEMP603 = ( i ) ; final int X10_TEMP604 = 1 ; i = i + X10_TEMP604 ; X10_TEMP551 = absf >= ERROR ; }
 final int X10_TEMP605 = ( kc ) ; final int X10_TEMP606 = 1 ; kc = kc + X10_TEMP606 ; yt0 = ( yt ) ; }
 final int X10_TEMP610 = ( n + noff ) ; final int X10_TEMP613 = ( nn + noff ) ; final Point2 RX10_TEMP69 = new Point2 ( X10_TEMP613 , X ) ; final Dist2 RX10_TEMP70 = result . distValue ; final Region2 RX10_TEMP71 = RX10_TEMP70 . dReg ; final int RX10_TEMP72 = Program . searchPointInRegion2 ( RX10_TEMP71 , RX10_TEMP69 ) ; final int RX10_TEMP73 = 0 ; final boolean RX10_TEMP74 = RX10_TEMP72 < RX10_TEMP73 ; if ( RX10_TEMP74 ) { String RX10_TEMP75 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP75 ) ; }
 final place RX10_TEMP76 = Program . getPlaceFromDist2 ( RX10_TEMP70 , RX10_TEMP72 ) ; final place RX10_TEMP78 = here ; final boolean RX10_TEMP79 = RX10_TEMP76 != RX10_TEMP78 ; if ( RX10_TEMP79 ) { String RX10_TEMP77 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP77 ) ; }
 final double RX10_TEMP80 = Program . getRefArrayValue2double ( result , RX10_TEMP72 ) ; final double X10_TEMP615 = ( RX10_TEMP80 ) ; final double X10_TEMP616 = ( X10_TEMP615 ) ; final Point2 RX10_TEMP81 = new Point2 ( X10_TEMP610 , X ) ; final Dist2 RX10_TEMP82 = result . distValue ; final Region2 RX10_TEMP83 = RX10_TEMP82 . dReg ; final int RX10_TEMP84 = Program . searchPointInRegion2 ( RX10_TEMP83 , RX10_TEMP81 ) ; final int RX10_TEMP85 = 0 ; final boolean RX10_TEMP86 = RX10_TEMP84 < RX10_TEMP85 ; if ( RX10_TEMP86 ) { String RX10_TEMP87 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP87 ) ; }
 final place RX10_TEMP88 = Program . getPlaceFromDist2 ( RX10_TEMP82 , RX10_TEMP84 ) ; final place RX10_TEMP90 = here ; final boolean RX10_TEMP91 = RX10_TEMP88 != RX10_TEMP90 ; if ( RX10_TEMP91 ) { String RX10_TEMP89 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP89 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP84 , X10_TEMP616 ) ; final int X10_TEMP619 = ( n + noff ) ; final double X10_TEMP621 = ( yt ) ; final Point2 RX10_TEMP92 = new Point2 ( X10_TEMP619 , Y ) ; final Dist2 RX10_TEMP93 = result . distValue ; final Region2 RX10_TEMP94 = RX10_TEMP93 . dReg ; final int RX10_TEMP95 = Program . searchPointInRegion2 ( RX10_TEMP94 , RX10_TEMP92 ) ; final int RX10_TEMP96 = 0 ; final boolean RX10_TEMP97 = RX10_TEMP95 < RX10_TEMP96 ; if ( RX10_TEMP97 ) { String RX10_TEMP98 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP98 ) ; }
 final place RX10_TEMP99 = Program . getPlaceFromDist2 ( RX10_TEMP93 , RX10_TEMP95 ) ; final place RX10_TEMP101 = here ; final boolean RX10_TEMP102 = RX10_TEMP99 != RX10_TEMP101 ; if ( RX10_TEMP102 ) { String RX10_TEMP100 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP100 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP95 , X10_TEMP621 ) ; }
 }
 }
 public static void thread33(final T33 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T204 utmp204 = new T204(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread204(utmp204); }
 }
 }
 public static void thread34(final T34 utmpz) {final  double vy = utmpz.vy;
final  double vx = utmpz.vx;
final  int idx = utmpz.idx;
final  doubleRefArray2 result = utmpz.result;
final  int Y = utmpz.Y;
final  int X = utmpz.X;
 { final double X10_TEMP48 = ( vx ) ; final Point2 RX10_TEMP39 = new Point2 ( idx , X ) ; final Dist2 RX10_TEMP40 = result . distValue ; final Region2 RX10_TEMP41 = RX10_TEMP40 . dReg ; final int RX10_TEMP42 = Program . searchPointInRegion2 ( RX10_TEMP41 , RX10_TEMP39 ) ; final int RX10_TEMP43 = 0 ; final boolean RX10_TEMP44 = RX10_TEMP42 < RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP45 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP45 ) ; }
 final place RX10_TEMP46 = Program . getPlaceFromDist2 ( RX10_TEMP40 , RX10_TEMP42 ) ; final place RX10_TEMP48 = here ; final boolean RX10_TEMP49 = RX10_TEMP46 != RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP47 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP42 , X10_TEMP48 ) ; final double X10_TEMP52 = ( vy ) ; final Point2 RX10_TEMP50 = new Point2 ( idx , Y ) ; final Dist2 RX10_TEMP51 = result . distValue ; final Region2 RX10_TEMP52 = RX10_TEMP51 . dReg ; final int RX10_TEMP53 = Program . searchPointInRegion2 ( RX10_TEMP52 , RX10_TEMP50 ) ; final int RX10_TEMP54 = 0 ; final boolean RX10_TEMP55 = RX10_TEMP53 < RX10_TEMP54 ; if ( RX10_TEMP55 ) { String RX10_TEMP56 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP56 ) ; }
 final place RX10_TEMP57 = Program . getPlaceFromDist2 ( RX10_TEMP51 , RX10_TEMP53 ) ; final place RX10_TEMP59 = here ; final boolean RX10_TEMP60 = RX10_TEMP57 != RX10_TEMP59 ; if ( RX10_TEMP60 ) { String RX10_TEMP58 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP58 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP53 , X10_TEMP52 ) ; }
 }
 public static void thread35(final T35 utmpz) {final  int RX10_TEMP73 = utmpz.RX10_TEMP73;
final  place RX10_TEMP69 = utmpz.RX10_TEMP69;
final  point ( : rank==1 ) RX10_TEMP68 = utmpz.RX10_TEMP68;
final  intStub [ : rank==1 ] RX10_TEMP67 = utmpz.RX10_TEMP67;
 { final dist ( : rank==1 ) RX10_TEMP75 = [ 0 : RX10_TEMP73 ] -> here ; final int [ : rank==1 ] RX10_TEMP76 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP75 ] ( point ( : rank==1 ) RX10_TEMP74 ) { final int X10_TEMP58 = ( 0 ) ; return X10_TEMP58 ; }
 ) ; final intStub RX10_TEMP77 = new intStub ( RX10_TEMP76 ) ; 
 final T205 utmp205 = new T205(RX10_TEMP77, RX10_TEMP68, RX10_TEMP67);
 async (RX10_TEMP69) {Program.thread205(utmp205); }
 }
 }
 public static void thread36(final T36 utmpz) {final  int RX10_TEMP94 = utmpz.RX10_TEMP94;
final  place RX10_TEMP90 = utmpz.RX10_TEMP90;
final  point ( : rank==1 ) RX10_TEMP89 = utmpz.RX10_TEMP89;
final  doubleStub [ : rank==1 ] RX10_TEMP88 = utmpz.RX10_TEMP88;
 { final dist ( : rank==1 ) RX10_TEMP96 = [ 0 : RX10_TEMP94 ] -> here ; final double [ : rank==1 ] RX10_TEMP97 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP96 ] ( point ( : rank==1 ) RX10_TEMP95 ) { final double X10_TEMP61 = ( 0.0 ) ; return X10_TEMP61 ; }
 ) ; final doubleStub RX10_TEMP98 = new doubleStub ( RX10_TEMP97 ) ; 
 final T206 utmp206 = new T206(RX10_TEMP98, RX10_TEMP89, RX10_TEMP88);
 async (RX10_TEMP90) {Program.thread206(utmp206); }
 }
 }
 public static void thread37(final T37 utmpz) {final  int RX10_TEMP115 = utmpz.RX10_TEMP115;
final  place RX10_TEMP111 = utmpz.RX10_TEMP111;
final  point ( : rank==1 ) RX10_TEMP110 = utmpz.RX10_TEMP110;
final  doubleStub [ : rank==1 ] RX10_TEMP109 = utmpz.RX10_TEMP109;
 { final dist ( : rank==1 ) RX10_TEMP117 = [ 0 : RX10_TEMP115 ] -> here ; final double [ : rank==1 ] RX10_TEMP118 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP117 ] ( point ( : rank==1 ) RX10_TEMP116 ) { final double X10_TEMP64 = ( 0.0 ) ; return X10_TEMP64 ; }
 ) ; final doubleStub RX10_TEMP119 = new doubleStub ( RX10_TEMP118 ) ; 
 final T207 utmp207 = new T207(RX10_TEMP119, RX10_TEMP110, RX10_TEMP109);
 async (RX10_TEMP111) {Program.thread207(utmp207); }
 }
 }
 public static void thread38(final T38 utmpz) {final  Point1 pl = utmpz.pl;
final  doubleRefArray1 sumY = utmpz.sumY;
final  doubleRefArray1 sumX = utmpz.sumX;
final  intRefArray1 numParticles = utmpz.numParticles;
final  doubleRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
final  int Y = utmpz.Y;
final  int X = utmpz.X;
 { final int X10_TEMP71 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dResult , X10_TEMP71 ) ; final Region2 X10_TEMP77 = Program . createNewRegion2AR ( rLocal1 , X , X ) ; final int RX10_TEMP139 = 1 ; int RX10_TEMP137 = X10_TEMP77 . regSize ; RX10_TEMP137 = RX10_TEMP137 - RX10_TEMP139 ; final region ( : rank==1 ) RX10_TEMP138 = [ 0 : RX10_TEMP137 ] ; for ( point ( : rank==1 ) RX10_TEMP136 : RX10_TEMP138 ) { final int RX10_TEMP140 = RX10_TEMP136 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP77 , RX10_TEMP140 ) ; final Dist1 RX10_TEMP141 = sumX . distValue ; final Region1 RX10_TEMP142 = RX10_TEMP141 . dReg ; final int RX10_TEMP143 = Program . searchPointInRegion1 ( RX10_TEMP142 , pl ) ; final int RX10_TEMP144 = 0 ; final boolean RX10_TEMP145 = RX10_TEMP143 < RX10_TEMP144 ; if ( RX10_TEMP145 ) { String RX10_TEMP146 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP146 ) ; }
 final place RX10_TEMP147 = Program . getPlaceFromDist1 ( RX10_TEMP141 , RX10_TEMP143 ) ; final place RX10_TEMP149 = here ; final boolean RX10_TEMP150 = RX10_TEMP147 != RX10_TEMP149 ; if ( RX10_TEMP150 ) { String RX10_TEMP148 = "Bad place access for array sumX" ; throw new RuntimeException ( RX10_TEMP148 ) ; }
 final double RX10_TEMP151 = Program . getRefArrayValue1double ( sumX , RX10_TEMP143 ) ; final double X10_TEMP81 = ( RX10_TEMP151 ) ; final Dist2 RX10_TEMP152 = result . distValue ; final Region2 RX10_TEMP153 = RX10_TEMP152 . dReg ; final int RX10_TEMP154 = Program . searchPointInRegion2 ( RX10_TEMP153 , pt ) ; final int RX10_TEMP155 = 0 ; final boolean RX10_TEMP156 = RX10_TEMP154 < RX10_TEMP155 ; if ( RX10_TEMP156 ) { String RX10_TEMP157 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP157 ) ; }
 final place RX10_TEMP158 = Program . getPlaceFromDist2 ( RX10_TEMP152 , RX10_TEMP154 ) ; final place RX10_TEMP160 = here ; final boolean RX10_TEMP161 = RX10_TEMP158 != RX10_TEMP160 ; if ( RX10_TEMP161 ) { String RX10_TEMP159 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP159 ) ; }
 final double RX10_TEMP162 = Program . getRefArrayValue2double ( result , RX10_TEMP154 ) ; final double X10_TEMP82 = ( RX10_TEMP162 ) ; final double X10_TEMP84 = ( X10_TEMP81 + X10_TEMP82 ) ; final double X10_TEMP85 = ( X10_TEMP84 ) ; final Dist1 RX10_TEMP163 = sumX . distValue ; final Region1 RX10_TEMP164 = RX10_TEMP163 . dReg ; final int RX10_TEMP165 = Program . searchPointInRegion1 ( RX10_TEMP164 , pl ) ; final int RX10_TEMP166 = 0 ; final boolean RX10_TEMP167 = RX10_TEMP165 < RX10_TEMP166 ; if ( RX10_TEMP167 ) { String RX10_TEMP168 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP168 ) ; }
 final place RX10_TEMP169 = Program . getPlaceFromDist1 ( RX10_TEMP163 , RX10_TEMP165 ) ; final place RX10_TEMP171 = here ; final boolean RX10_TEMP172 = RX10_TEMP169 != RX10_TEMP171 ; if ( RX10_TEMP172 ) { String RX10_TEMP170 = "Bad place access for array sumX" ; throw new RuntimeException ( RX10_TEMP170 ) ; }
 Program . setRefArrayValue1double ( sumX , RX10_TEMP165 , X10_TEMP85 ) ; final Dist1 RX10_TEMP173 = numParticles . distValue ; final Region1 RX10_TEMP174 = RX10_TEMP173 . dReg ; final int RX10_TEMP175 = Program . searchPointInRegion1 ( RX10_TEMP174 , pl ) ; final int RX10_TEMP176 = 0 ; final boolean RX10_TEMP177 = RX10_TEMP175 < RX10_TEMP176 ; if ( RX10_TEMP177 ) { String RX10_TEMP178 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP178 ) ; }
 final place RX10_TEMP179 = Program . getPlaceFromDist1 ( RX10_TEMP173 , RX10_TEMP175 ) ; final place RX10_TEMP181 = here ; final boolean RX10_TEMP182 = RX10_TEMP179 != RX10_TEMP181 ; if ( RX10_TEMP182 ) { String RX10_TEMP180 = "Bad place access for array numParticles" ; throw new RuntimeException ( RX10_TEMP180 ) ; }
 final int RX10_TEMP183 = Program . getRefArrayValue1int ( numParticles , RX10_TEMP175 ) ; final int X10_TEMP88 = ( RX10_TEMP183 ) ; final int X10_TEMP89 = ( 1 ) ; final int X10_TEMP91 = ( X10_TEMP88 + X10_TEMP89 ) ; final int X10_TEMP92 = ( X10_TEMP91 ) ; final Dist1 RX10_TEMP184 = numParticles . distValue ; final Region1 RX10_TEMP185 = RX10_TEMP184 . dReg ; final int RX10_TEMP186 = Program . searchPointInRegion1 ( RX10_TEMP185 , pl ) ; final int RX10_TEMP187 = 0 ; final boolean RX10_TEMP188 = RX10_TEMP186 < RX10_TEMP187 ; if ( RX10_TEMP188 ) { String RX10_TEMP189 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP189 ) ; }
 final place RX10_TEMP190 = Program . getPlaceFromDist1 ( RX10_TEMP184 , RX10_TEMP186 ) ; final place RX10_TEMP192 = here ; final boolean RX10_TEMP193 = RX10_TEMP190 != RX10_TEMP192 ; if ( RX10_TEMP193 ) { String RX10_TEMP191 = "Bad place access for array numParticles" ; throw new RuntimeException ( RX10_TEMP191 ) ; }
 Program . setRefArrayValue1int ( numParticles , RX10_TEMP186 , X10_TEMP92 ) ; }
 final Region2 X10_TEMP97 = Program . createNewRegion2AR ( rLocal1 , Y , Y ) ; final int RX10_TEMP197 = 1 ; int RX10_TEMP195 = X10_TEMP97 . regSize ; RX10_TEMP195 = RX10_TEMP195 - RX10_TEMP197 ; final region ( : rank==1 ) RX10_TEMP196 = [ 0 : RX10_TEMP195 ] ; for ( point ( : rank==1 ) RX10_TEMP194 : RX10_TEMP196 ) { final int RX10_TEMP198 = RX10_TEMP194 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP97 , RX10_TEMP198 ) ; final Dist1 RX10_TEMP199 = sumY . distValue ; final Region1 RX10_TEMP200 = RX10_TEMP199 . dReg ; final int RX10_TEMP201 = Program . searchPointInRegion1 ( RX10_TEMP200 , pl ) ; final int RX10_TEMP202 = 0 ; final boolean RX10_TEMP203 = RX10_TEMP201 < RX10_TEMP202 ; if ( RX10_TEMP203 ) { String RX10_TEMP204 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP204 ) ; }
 final place RX10_TEMP205 = Program . getPlaceFromDist1 ( RX10_TEMP199 , RX10_TEMP201 ) ; final place RX10_TEMP207 = here ; final boolean RX10_TEMP208 = RX10_TEMP205 != RX10_TEMP207 ; if ( RX10_TEMP208 ) { String RX10_TEMP206 = "Bad place access for array sumY" ; throw new RuntimeException ( RX10_TEMP206 ) ; }
 final double RX10_TEMP209 = Program . getRefArrayValue1double ( sumY , RX10_TEMP201 ) ; final double X10_TEMP101 = ( RX10_TEMP209 ) ; final Dist2 RX10_TEMP210 = result . distValue ; final Region2 RX10_TEMP211 = RX10_TEMP210 . dReg ; final int RX10_TEMP212 = Program . searchPointInRegion2 ( RX10_TEMP211 , pt ) ; final int RX10_TEMP213 = 0 ; final boolean RX10_TEMP214 = RX10_TEMP212 < RX10_TEMP213 ; if ( RX10_TEMP214 ) { String RX10_TEMP215 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP215 ) ; }
 final place RX10_TEMP216 = Program . getPlaceFromDist2 ( RX10_TEMP210 , RX10_TEMP212 ) ; final place RX10_TEMP218 = here ; final boolean RX10_TEMP219 = RX10_TEMP216 != RX10_TEMP218 ; if ( RX10_TEMP219 ) { String RX10_TEMP217 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP217 ) ; }
 final double RX10_TEMP220 = Program . getRefArrayValue2double ( result , RX10_TEMP212 ) ; final double X10_TEMP102 = ( RX10_TEMP220 ) ; final double X10_TEMP104 = ( X10_TEMP101 + X10_TEMP102 ) ; final double X10_TEMP105 = ( X10_TEMP104 ) ; final Dist1 RX10_TEMP221 = sumY . distValue ; final Region1 RX10_TEMP222 = RX10_TEMP221 . dReg ; final int RX10_TEMP223 = Program . searchPointInRegion1 ( RX10_TEMP222 , pl ) ; final int RX10_TEMP224 = 0 ; final boolean RX10_TEMP225 = RX10_TEMP223 < RX10_TEMP224 ; if ( RX10_TEMP225 ) { String RX10_TEMP226 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP226 ) ; }
 final place RX10_TEMP227 = Program . getPlaceFromDist1 ( RX10_TEMP221 , RX10_TEMP223 ) ; final place RX10_TEMP229 = here ; final boolean RX10_TEMP230 = RX10_TEMP227 != RX10_TEMP229 ; if ( RX10_TEMP230 ) { String RX10_TEMP228 = "Bad place access for array sumY" ; throw new RuntimeException ( RX10_TEMP228 ) ; }
 Program . setRefArrayValue1double ( sumY , RX10_TEMP223 , X10_TEMP105 ) ; }
 }
 }
 public static void thread39(final T39 utmpz) {final  double driftY = utmpz.driftY;
final  double driftX = utmpz.driftX;
final  doubleRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
final  int Y = utmpz.Y;
final  int X = utmpz.X;
 { final int X10_TEMP118 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dResult , X10_TEMP118 ) ; final Region2 X10_TEMP124 = Program . createNewRegion2AR ( rLocal1 , X , X ) ; final place X10_TEMP125 = here ; final int RX10_TEMP246 = 1 ; int RX10_TEMP244 = X10_TEMP124 . regSize ; RX10_TEMP244 = RX10_TEMP244 - RX10_TEMP246 ; final region ( : rank==1 ) RX10_TEMP245 = [ 0 : RX10_TEMP244 ] ; for ( point ( : rank==1 ) RX10_TEMP243 : RX10_TEMP245 ) { final int RX10_TEMP247 = RX10_TEMP243 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP124 , RX10_TEMP247 ) ; 
 final T208 utmp208 = new T208(pt, driftX, result);
 async (X10_TEMP125) {Program.thread208(utmp208); }
 }
 final Region2 X10_TEMP136 = Program . createNewRegion2AR ( rLocal1 , Y , Y ) ; final place X10_TEMP137 = here ; final int RX10_TEMP272 = 1 ; int RX10_TEMP270 = X10_TEMP136 . regSize ; RX10_TEMP270 = RX10_TEMP270 - RX10_TEMP272 ; final region ( : rank==1 ) RX10_TEMP271 = [ 0 : RX10_TEMP270 ] ; for ( point ( : rank==1 ) RX10_TEMP269 : RX10_TEMP271 ) { final int RX10_TEMP273 = RX10_TEMP269 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP136 , RX10_TEMP273 ) ; 
 final T209 utmp209 = new T209(pt, driftY, result);
 async (X10_TEMP137) {Program.thread209(utmp209); }
 }
 }
 }
 public static void thread40(final T40 utmpz) {final  Region1 RX10_TEMP14 = utmpz.RX10_TEMP14;
final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ParticleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
final  doubleRefArray2 velocity = utmpz.velocity;
final  doubleRefArray2 position = utmpz.position;
 { final dist ( : rank==1 ) RX10_TEMP66 = [ 0 : RX10_TEMP12 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP67 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP66 ] ( point ( : rank==1 ) RX10_TEMP15 ) { final int RX10_TEMP17 = RX10_TEMP15 [0] ; final Point1 RX10_TEMP16 = Program . regionOrdinalPoint1 ( RX10_TEMP14 , RX10_TEMP17 ) ; final int i = RX10_TEMP16 . f0 ; final int X10_TEMP12 = ( 0 ) ; final Point2 RX10_TEMP18 = new Point2 ( i , X10_TEMP12 ) ; final Dist2 RX10_TEMP19 = position . distValue ; final Region2 RX10_TEMP20 = RX10_TEMP19 . dReg ; final int RX10_TEMP21 = Program . searchPointInRegion2 ( RX10_TEMP20 , RX10_TEMP18 ) ; final int RX10_TEMP22 = 0 ; final boolean RX10_TEMP23 = RX10_TEMP21 < RX10_TEMP22 ; if ( RX10_TEMP23 ) { String RX10_TEMP24 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final place RX10_TEMP25 = Program . getPlaceFromDist2 ( RX10_TEMP19 , RX10_TEMP21 ) ; final place RX10_TEMP27 = here ; final boolean RX10_TEMP28 = RX10_TEMP25 != RX10_TEMP27 ; if ( RX10_TEMP28 ) { String RX10_TEMP26 = "Bad place access for array position" ; throw new RuntimeException ( RX10_TEMP26 ) ; }
 final double RX10_TEMP29 = Program . getRefArrayValue2double ( position , RX10_TEMP21 ) ; double X10_TEMP26 = ( RX10_TEMP29 ) ; final int X10_TEMP16 = ( 1 ) ; final Point2 RX10_TEMP30 = new Point2 ( i , X10_TEMP16 ) ; final Dist2 RX10_TEMP31 = position . distValue ; final Region2 RX10_TEMP32 = RX10_TEMP31 . dReg ; final int RX10_TEMP33 = Program . searchPointInRegion2 ( RX10_TEMP32 , RX10_TEMP30 ) ; final int RX10_TEMP34 = 0 ; final boolean RX10_TEMP35 = RX10_TEMP33 < RX10_TEMP34 ; if ( RX10_TEMP35 ) { String RX10_TEMP36 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 final place RX10_TEMP37 = Program . getPlaceFromDist2 ( RX10_TEMP31 , RX10_TEMP33 ) ; final place RX10_TEMP39 = here ; final boolean RX10_TEMP40 = RX10_TEMP37 != RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP38 = "Bad place access for array position" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 final double RX10_TEMP41 = Program . getRefArrayValue2double ( position , RX10_TEMP33 ) ; double X10_TEMP27 = ( RX10_TEMP41 ) ; final int X10_TEMP20 = ( 0 ) ; final Point2 RX10_TEMP42 = new Point2 ( i , X10_TEMP20 ) ; final Dist2 RX10_TEMP43 = velocity . distValue ; final Region2 RX10_TEMP44 = RX10_TEMP43 . dReg ; final int RX10_TEMP45 = Program . searchPointInRegion2 ( RX10_TEMP44 , RX10_TEMP42 ) ; final int RX10_TEMP46 = 0 ; final boolean RX10_TEMP47 = RX10_TEMP45 < RX10_TEMP46 ; if ( RX10_TEMP47 ) { String RX10_TEMP48 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final place RX10_TEMP49 = Program . getPlaceFromDist2 ( RX10_TEMP43 , RX10_TEMP45 ) ; final place RX10_TEMP51 = here ; final boolean RX10_TEMP52 = RX10_TEMP49 != RX10_TEMP51 ; if ( RX10_TEMP52 ) { String RX10_TEMP50 = "Bad place access for array velocity" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 final double RX10_TEMP53 = Program . getRefArrayValue2double ( velocity , RX10_TEMP45 ) ; double X10_TEMP28 = ( RX10_TEMP53 ) ; final int X10_TEMP24 = ( 1 ) ; final Point2 RX10_TEMP54 = new Point2 ( i , X10_TEMP24 ) ; final Dist2 RX10_TEMP55 = velocity . distValue ; final Region2 RX10_TEMP56 = RX10_TEMP55 . dReg ; final int RX10_TEMP57 = Program . searchPointInRegion2 ( RX10_TEMP56 , RX10_TEMP54 ) ; final int RX10_TEMP58 = 0 ; final boolean RX10_TEMP59 = RX10_TEMP57 < RX10_TEMP58 ; if ( RX10_TEMP59 ) { String RX10_TEMP60 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP60 ) ; }
 final place RX10_TEMP61 = Program . getPlaceFromDist2 ( RX10_TEMP55 , RX10_TEMP57 ) ; final place RX10_TEMP63 = here ; final boolean RX10_TEMP64 = RX10_TEMP61 != RX10_TEMP63 ; if ( RX10_TEMP64 ) { String RX10_TEMP62 = "Bad place access for array velocity" ; throw new RuntimeException ( RX10_TEMP62 ) ; }
 final double RX10_TEMP65 = Program . getRefArrayValue2double ( velocity , RX10_TEMP57 ) ; double X10_TEMP29 = ( RX10_TEMP65 ) ; final Particle X10_TEMP31 = ( new Particle ( X10_TEMP26 , X10_TEMP27 , X10_TEMP28 , X10_TEMP29 ) ) ; return X10_TEMP31 ; }
 ) ; final ParticleStub RX10_TEMP68 = new ParticleStub ( RX10_TEMP67 ) ; 
 final T210 utmp210 = new T210(RX10_TEMP68, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread210(utmp210); }
 }
 }
 public static void thread41(final T41 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  Region1Stub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final Region1 [ : rank==1 ] RX10_TEMP14 = ( Region1 [ : rank==1 ] ) ( new Region1 [ RX10_TEMP13 ] ) ; final Region1Stub RX10_TEMP15 = new Region1Stub ( RX10_TEMP14 ) ; 
 final T211 utmp211 = new T211(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread211(utmp211); }
 }
 }
 public static void thread42(final T42 utmpz) {final  Point1 pl = utmpz.pl;
final  Region1RefArray1 yRegions = utmpz.yRegions;
final  double nParticlesAve = utmpz.nParticlesAve;
final  double y0 = utmpz.y0;
final  double y = utmpz.y;
final  double edgely = utmpz.edgely;
final  LinearESOpenPIC2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final double X10_TEMP39 = ( pl . f0 ) ; final double anpl = ( X10_TEMP39 * nParticlesAve ) ; final int X10_TEMP42 = ( pl . f0 ) ; final int X10_TEMP43 = ( 1 ) ; final int X10_TEMP45 = ( X10_TEMP42 + X10_TEMP43 ) ; final double anpr = ( X10_TEMP45 * nParticlesAve ) ; double total = ( 0.0 ) ; double tmp = ( 0.0 ) ; double y1 = ( edgely ) ; boolean X10_TEMP50 = false ; do { tmp = ( total ) ; final double X10_TEMP56 = ( 0.0 ) ; final double X10_TEMP57 = ( 0.0 ) ; final double X10_TEMP58 = ( 0.0 ) ; final double X10_TEMP59 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , y1 , X10_TEMP56 , X10_TEMP57 , X10_TEMP58 ) ) ; final double X10_TEMP61 = ( X10_TEMP59 - y0 ) ; total = ( X10_TEMP61 ) ; final double X10_TEMP62 = ( 1.0 ) ; final double X10_TEMP64 = ( y1 + X10_TEMP62 ) ; y1 = ( X10_TEMP64 ) ; final boolean X10_TEMP65 = ( total < anpl ) ; final boolean X10_TEMP66 = ( y1 <= y ) ; X10_TEMP50 = X10_TEMP65 && X10_TEMP66 ; }
 while ( X10_TEMP50 ) ; final boolean X10_TEMP69 = ( total > tmp ) ; final boolean X10_TEMP70 = X10_TEMP69 ; final double X10_TEMP71 = ( 2.0 ) ; final double X10_TEMP73 = ( y1 - X10_TEMP71 ) ; final double X10_TEMP75 = ( anpl - tmp ) ; final double X10_TEMP77 = ( total - tmp ) ; final double X10_TEMP78 = ( X10_TEMP75 / X10_TEMP77 ) ; final double X10_TEMP80 = ( X10_TEMP73 + X10_TEMP78 ) ; final double X10_TEMP82 = ( 1.0 ) ; final double X10_TEMP84 = ( y1 - X10_TEMP82 ) ; double X10_TEMP86 = X10_TEMP84 ; if ( X10_TEMP70 ) { X10_TEMP86 = X10_TEMP80 ; }
 final double X10_TEMP87 = X10_TEMP86 ; final double X10_TEMP88 = ( X10_TEMP87 ) ; double lb = ( X10_TEMP88 ) ; final place X10_TEMP90 = ( here ) ; final boolean X10_TEMP92 = X10_TEMP90 . isFirst ( ) ; if ( X10_TEMP92 ) { final double X10_TEMP94 = ( 0.0 ) ; lb = ( X10_TEMP94 ) ; }
 boolean X10_TEMP95 = false ; do { tmp = ( total ) ; final double X10_TEMP101 = ( 0.0 ) ; final double X10_TEMP102 = ( 0.0 ) ; final double X10_TEMP103 = ( 0.0 ) ; final double X10_TEMP104 = ( Program . LinearESOpenPIC2D_linearDensityFnIntegral ( X10_TEMP0 , y1 , X10_TEMP101 , X10_TEMP102 , X10_TEMP103 ) ) ; final double X10_TEMP106 = ( X10_TEMP104 - y0 ) ; total = ( X10_TEMP106 ) ; final double X10_TEMP107 = ( 1.0 ) ; final double X10_TEMP109 = ( y1 + X10_TEMP107 ) ; y1 = ( X10_TEMP109 ) ; final boolean X10_TEMP110 = ( total < anpr ) ; final boolean X10_TEMP111 = ( y1 <= y ) ; X10_TEMP95 = X10_TEMP110 && X10_TEMP111 ; }
 while ( X10_TEMP95 ) ; final double X10_TEMP113 = ( 2.0 ) ; final double X10_TEMP115 = ( y1 - X10_TEMP113 ) ; final double X10_TEMP117 = ( anpr - tmp ) ; final double X10_TEMP119 = ( total - tmp ) ; final double X10_TEMP120 = ( X10_TEMP117 / X10_TEMP119 ) ; double ub = ( X10_TEMP115 + X10_TEMP120 ) ; final place X10_TEMP122 = ( here ) ; final boolean X10_TEMP124 = X10_TEMP122 . isLast ( ) ; if ( X10_TEMP124 ) { ub = ( y ) ; }
 final double X10_TEMP127 = ( 0.5 ) ; final double X10_TEMP129 = ( lb + X10_TEMP127 ) ; final int X10_TEMP139 = ( ( int ) X10_TEMP129 ) ; final double X10_TEMP131 = ( 0.5 ) ; final double X10_TEMP133 = ( ub + X10_TEMP131 ) ; final int X10_TEMP134 = ( ( int ) X10_TEMP133 ) ; final int X10_TEMP135 = ( 1 ) ; final int X10_TEMP137 = ( X10_TEMP134 - X10_TEMP135 ) ; final Region1 X10_TEMP141 = Program . createNewRegion1R ( X10_TEMP139 , X10_TEMP137 ) ; final Region1 X10_TEMP142 = X10_TEMP141 ; final Dist1 RX10_TEMP32 = yRegions . distValue ; final Region1 RX10_TEMP33 = RX10_TEMP32 . dReg ; final int RX10_TEMP34 = Program . searchPointInRegion1 ( RX10_TEMP33 , pl ) ; final int RX10_TEMP35 = 0 ; final boolean RX10_TEMP36 = RX10_TEMP34 < RX10_TEMP35 ; if ( RX10_TEMP36 ) { String RX10_TEMP37 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP37 ) ; }
 final place RX10_TEMP38 = Program . getPlaceFromDist1 ( RX10_TEMP32 , RX10_TEMP34 ) ; final place RX10_TEMP40 = here ; final boolean RX10_TEMP41 = RX10_TEMP38 != RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP39 = "Bad place access for array yRegions" ; throw new RuntimeException ( RX10_TEMP39 ) ; }
 Program . setRefArrayValue1Region1 ( yRegions , RX10_TEMP34 , X10_TEMP142 ) ; }
 }
 public static void thread43(final T43 utmpz) {final  int RX10_TEMP54 = utmpz.RX10_TEMP54;
final  place RX10_TEMP50 = utmpz.RX10_TEMP50;
final  point ( : rank==1 ) RX10_TEMP49 = utmpz.RX10_TEMP49;
final  Region1Stub [ : rank==1 ] RX10_TEMP48 = utmpz.RX10_TEMP48;
 { final dist ( : rank==1 ) RX10_TEMP55 = [ 0 : RX10_TEMP54 ] -> here ; final Region1 [ : rank==1 ] RX10_TEMP56 = ( Region1 [ : rank==1 ] ) ( new Region1 [ RX10_TEMP55 ] ) ; final Region1Stub RX10_TEMP57 = new Region1Stub ( RX10_TEMP56 ) ; 
 final T212 utmp212 = new T212(RX10_TEMP57, RX10_TEMP49, RX10_TEMP48);
 async (RX10_TEMP50) {Program.thread212(utmp212); }
 }
 }
 public static void thread44(final T44 utmpz) {final  Point1 pl = utmpz.pl;
final  Region1RefArray1 rBuffer = utmpz.rBuffer;
final  place pHere = utmpz.pHere;
final  Region1RefArray1 yRegions = utmpz.yRegions;
 { final Dist1 RX10_TEMP74 = yRegions . distValue ; final Region1 RX10_TEMP75 = RX10_TEMP74 . dReg ; final int RX10_TEMP76 = Program . searchPointInRegion1 ( RX10_TEMP75 , pl ) ; final int RX10_TEMP77 = 0 ; final boolean RX10_TEMP78 = RX10_TEMP76 < RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP79 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP79 ) ; }
 final place RX10_TEMP80 = Program . getPlaceFromDist1 ( RX10_TEMP74 , RX10_TEMP76 ) ; final place RX10_TEMP82 = here ; final boolean RX10_TEMP83 = RX10_TEMP80 != RX10_TEMP82 ; if ( RX10_TEMP83 ) { String RX10_TEMP81 = "Bad place access for array yRegions" ; throw new RuntimeException ( RX10_TEMP81 ) ; }
 final Region1 RX10_TEMP84 = Program . getRefArrayValue1Region1 ( yRegions , RX10_TEMP76 ) ; final Region1 X10_TEMP160 = RX10_TEMP84 ; final Region1 r = X10_TEMP160 ; 
 final T213 utmp213 = new T213(r, pl, rBuffer);
 async (pHere) {Program.thread213(utmp213); }
 }
 }
 public static void thread45(final T45 utmpz) {final  int RX10_TEMP13 = utmpz.RX10_TEMP13;
final  place RX10_TEMP9 = utmpz.RX10_TEMP9;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { final dist ( : rank==1 ) RX10_TEMP15 = [ 0 : RX10_TEMP13 ] -> here ; final double [ : rank==1 ] RX10_TEMP16 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP15 ] ( point ( : rank==1 ) RX10_TEMP14 ) { final double X10_TEMP8 = ( 0.0 ) ; return X10_TEMP8 ; }
 ) ; final doubleStub RX10_TEMP17 = new doubleStub ( RX10_TEMP16 ) ; 
 final T214 utmp214 = new T214(RX10_TEMP17, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP9) {Program.thread214(utmp214); }
 }
 }
 public static void thread46(final T46 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 chargeDensity = utmpz.chargeDensity;
final  doubleRefArray2 ionBackground = utmpz.ionBackground;
 { final Dist2 RX10_TEMP34 = chargeDensity . distValue ; final Region2 RX10_TEMP35 = RX10_TEMP34 . dReg ; final int RX10_TEMP36 = Program . searchPointInRegion2 ( RX10_TEMP35 , pt ) ; final int RX10_TEMP37 = 0 ; final boolean RX10_TEMP38 = RX10_TEMP36 < RX10_TEMP37 ; if ( RX10_TEMP38 ) { String RX10_TEMP39 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP39 ) ; }
 final place RX10_TEMP40 = Program . getPlaceFromDist2 ( RX10_TEMP34 , RX10_TEMP36 ) ; final place RX10_TEMP42 = here ; final boolean RX10_TEMP43 = RX10_TEMP40 != RX10_TEMP42 ; if ( RX10_TEMP43 ) { String RX10_TEMP41 = "Bad place access for array chargeDensity" ; throw new RuntimeException ( RX10_TEMP41 ) ; }
 final double RX10_TEMP44 = Program . getRefArrayValue2double ( chargeDensity , RX10_TEMP36 ) ; final double X10_TEMP21 = ( RX10_TEMP44 ) ; final Dist2 RX10_TEMP45 = ionBackground . distValue ; final Region2 RX10_TEMP46 = RX10_TEMP45 . dReg ; final int RX10_TEMP47 = Program . searchPointInRegion2 ( RX10_TEMP46 , pt ) ; final int RX10_TEMP48 = 0 ; final boolean RX10_TEMP49 = RX10_TEMP47 < RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP50 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 final place RX10_TEMP51 = Program . getPlaceFromDist2 ( RX10_TEMP45 , RX10_TEMP47 ) ; final place RX10_TEMP53 = here ; final boolean RX10_TEMP54 = RX10_TEMP51 != RX10_TEMP53 ; if ( RX10_TEMP54 ) { String RX10_TEMP52 = "Bad place access for array ionBackground" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final double RX10_TEMP55 = Program . getRefArrayValue2double ( ionBackground , RX10_TEMP47 ) ; final double X10_TEMP22 = ( RX10_TEMP55 ) ; final double X10_TEMP24 = ( X10_TEMP21 + X10_TEMP22 ) ; final double X10_TEMP25 = ( X10_TEMP24 ) ; final Dist2 RX10_TEMP56 = chargeDensity . distValue ; final Region2 RX10_TEMP57 = RX10_TEMP56 . dReg ; final int RX10_TEMP58 = Program . searchPointInRegion2 ( RX10_TEMP57 , pt ) ; final int RX10_TEMP59 = 0 ; final boolean RX10_TEMP60 = RX10_TEMP58 < RX10_TEMP59 ; if ( RX10_TEMP60 ) { String RX10_TEMP61 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final place RX10_TEMP62 = Program . getPlaceFromDist2 ( RX10_TEMP56 , RX10_TEMP58 ) ; final place RX10_TEMP64 = here ; final boolean RX10_TEMP65 = RX10_TEMP62 != RX10_TEMP64 ; if ( RX10_TEMP65 ) { String RX10_TEMP63 = "Bad place access for array chargeDensity" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 Program . setRefArrayValue2double ( chargeDensity , RX10_TEMP58 , X10_TEMP25 ) ; }
 }
 public static void thread47(final T47 utmpz) {final  int RX10_TEMP80 = utmpz.RX10_TEMP80;
final  place RX10_TEMP76 = utmpz.RX10_TEMP76;
final  point ( : rank==1 ) RX10_TEMP75 = utmpz.RX10_TEMP75;
final  doubleStub [ : rank==1 ] RX10_TEMP74 = utmpz.RX10_TEMP74;
 { final dist ( : rank==1 ) RX10_TEMP81 = [ 0 : RX10_TEMP80 ] -> here ; final double [ : rank==1 ] RX10_TEMP82 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP81 ] ) ; final doubleStub RX10_TEMP83 = new doubleStub ( RX10_TEMP82 ) ; 
 final T215 utmp215 = new T215(RX10_TEMP83, RX10_TEMP75, RX10_TEMP74);
 async (RX10_TEMP76) {Program.thread215(utmp215); }
 }
 }
 public static void thread48(final T48 utmpz) {final  int RX10_TEMP100 = utmpz.RX10_TEMP100;
final  place RX10_TEMP96 = utmpz.RX10_TEMP96;
final  point ( : rank==1 ) RX10_TEMP95 = utmpz.RX10_TEMP95;
final  doubleStub [ : rank==1 ] RX10_TEMP94 = utmpz.RX10_TEMP94;
 { final dist ( : rank==1 ) RX10_TEMP101 = [ 0 : RX10_TEMP100 ] -> here ; final double [ : rank==1 ] RX10_TEMP102 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP101 ] ) ; final doubleStub RX10_TEMP103 = new doubleStub ( RX10_TEMP102 ) ; 
 final T216 utmp216 = new T216(RX10_TEMP103, RX10_TEMP95, RX10_TEMP94);
 async (RX10_TEMP96) {Program.thread216(utmp216); }
 }
 }
 public static void thread49(final T49 utmpz) {final  int RX10_TEMP156 = utmpz.RX10_TEMP156;
final  place RX10_TEMP152 = utmpz.RX10_TEMP152;
final  point ( : rank==1 ) RX10_TEMP151 = utmpz.RX10_TEMP151;
final  doubleStub [ : rank==1 ] RX10_TEMP150 = utmpz.RX10_TEMP150;
 { final dist ( : rank==1 ) RX10_TEMP157 = [ 0 : RX10_TEMP156 ] -> here ; final double [ : rank==1 ] RX10_TEMP158 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP157 ] ) ; final doubleStub RX10_TEMP159 = new doubleStub ( RX10_TEMP158 ) ; 
 final T217 utmp217 = new T217(RX10_TEMP159, RX10_TEMP151, RX10_TEMP150);
 async (RX10_TEMP152) {Program.thread217(utmp217); }
 }
 }
 public static void thread50(final T50 utmpz) {final  int RX10_TEMP28 = utmpz.RX10_TEMP28;
final  place RX10_TEMP24 = utmpz.RX10_TEMP24;
final  point ( : rank==1 ) RX10_TEMP23 = utmpz.RX10_TEMP23;
final  doubleStub [ : rank==1 ] RX10_TEMP22 = utmpz.RX10_TEMP22;
 { final dist ( : rank==1 ) RX10_TEMP30 = [ 0 : RX10_TEMP28 ] -> here ; final double [ : rank==1 ] RX10_TEMP31 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP30 ] ( point ( : rank==1 ) RX10_TEMP29 ) { final double X10_TEMP38 = ( 0.0 ) ; return X10_TEMP38 ; }
 ) ; final doubleStub RX10_TEMP32 = new doubleStub ( RX10_TEMP31 ) ; 
 final T218 utmp218 = new T218(RX10_TEMP32, RX10_TEMP23, RX10_TEMP22);
 async (RX10_TEMP24) {Program.thread218(utmp218); }
 }
 }
 public static void thread51(final T51 utmpz) {final  double charge = utmpz.charge;
final  doubleRefArray2 guards = utmpz.guards;
final  doubleRefArray2 fieldCharge = utmpz.fieldCharge;
final  ParticleRefArray1 particles = utmpz.particles;
 { final Dist2 RX10_TEMP12 = fieldCharge . distValue ; final Dist2 dFC = RX10_TEMP12 ; final Region2 rLocalFC = Program . X10Util_get2DLRegion ( dFC ) ; final Dist2 RX10_TEMP13 = guards . distValue ; final Dist2 dG = RX10_TEMP13 ; final Region2 rLocalG = Program . X10Util_get2DLRegion ( dG ) ; final Region2 X10_TEMP11 = Program . unionRegion2 ( rLocalFC , rLocalG ) ; final place X10_TEMP12 = ( here ) ; final Dist2 X10_TEMP14 = Program . getPlaceDist2 ( X10_TEMP11 , X10_TEMP12 ) ; final Dist2 dLocal = X10_TEMP14 ; final Region2 RX10_TEMP14 = dLocal . dReg ; final int RX10_TEMP15 = 0 ; final int RX10_TEMP16 = 1 ; int RX10_TEMP17 = place.MAX_PLACES ; RX10_TEMP17 = RX10_TEMP17 - RX10_TEMP16 ; final region ( : rank==1 ) RX10_TEMP18 = [ 0 : RX10_TEMP17 ] ; final dist ( : rank==1 ) RX10_TEMP19 = [ 0 : RX10_TEMP17 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP20 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP19 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP21 : RX10_TEMP18 ) { final place RX10_TEMP22 = here ; final int RX10_TEMP23 = RX10_TEMP21 [0] ; final place RX10_TEMP24 = place.places ( RX10_TEMP23 ) ; final int RX10_TEMP25 = Program . getDistLocalCount2 ( dLocal , RX10_TEMP23 ) ; final int RX10_TEMP26 = RX10_TEMP25 - RX10_TEMP16 ; 
 final T219 utmp219 = new T219(RX10_TEMP26, RX10_TEMP22, RX10_TEMP21, RX10_TEMP20);
 async (RX10_TEMP24) {Program.thread219(utmp219); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP31 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP18 ] ( point ( : rank==1 ) RX10_TEMP33 ) { final doubleStub RX10_TEMP32 = RX10_TEMP20 [ RX10_TEMP33 ] ; return RX10_TEMP32 ; }
 ) ; final doubleRefArray2 RX10_TEMP34 = new doubleRefArray2 ( dLocal , RX10_TEMP31 ) ; final doubleRefArray2 localCharge = RX10_TEMP34 ; final Dist1 RX10_TEMP35 = particles . distValue ; final Dist1 X10_TEMP19 = RX10_TEMP35 ; final place X10_TEMP20 = ( here ) ; final Dist1 X10_TEMP22 = Program . restrictDist1 ( X10_TEMP19 , X10_TEMP20 ) ; final Region1 RX10_TEMP37 = X10_TEMP22 . dReg ; final int RX10_TEMP40 = 1 ; int RX10_TEMP38 = RX10_TEMP37 . regSize ; RX10_TEMP38 = RX10_TEMP38 - RX10_TEMP40 ; final region ( : rank==1 ) RX10_TEMP39 = [ 0 : RX10_TEMP38 ] ; for ( point ( : rank==1 ) RX10_TEMP36 : RX10_TEMP39 ) { final int RX10_TEMP41 = RX10_TEMP36 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP37 , RX10_TEMP41 ) ; final Dist1 RX10_TEMP42 = particles . distValue ; final Region1 RX10_TEMP43 = RX10_TEMP42 . dReg ; final int RX10_TEMP44 = Program . searchPointInRegion1 ( RX10_TEMP43 , pt ) ; final int RX10_TEMP45 = 0 ; final boolean RX10_TEMP46 = RX10_TEMP44 < RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP47 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final place RX10_TEMP48 = Program . getPlaceFromDist1 ( RX10_TEMP42 , RX10_TEMP44 ) ; final place RX10_TEMP50 = here ; final boolean RX10_TEMP51 = RX10_TEMP48 != RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP49 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP49 ) ; }
 final Particle RX10_TEMP52 = Program . getRefArrayValue1Particle ( particles , RX10_TEMP44 ) ; final Particle p = ( RX10_TEMP52 ) ; final double X10_TEMP25 = ( Program . Particle_getX ( p ) ) ; final int x = ( ( int ) X10_TEMP25 ) ; final double X10_TEMP27 = ( Program . Particle_getY ( p ) ) ; final int y = ( ( int ) X10_TEMP27 ) ; final double X10_TEMP29 = ( Program . Particle_getX ( p ) ) ; final double dx = ( X10_TEMP29 - x ) ; final double X10_TEMP31 = ( Program . Particle_getY ( p ) ) ; final double dy = ( X10_TEMP31 - y ) ; final int X10_TEMP33 = ( 1 ) ; final int X10_TEMP37 = ( y + X10_TEMP33 ) ; final int X10_TEMP35 = ( 1 ) ; final int X10_TEMP38 = ( x + X10_TEMP35 ) ; final int X10_TEMP39 = ( 1 ) ; final int X10_TEMP43 = ( y + X10_TEMP39 ) ; final int X10_TEMP41 = ( 1 ) ; final int X10_TEMP44 = ( x + X10_TEMP41 ) ; final Point2 RX10_TEMP53 = new Point2 ( X10_TEMP43 , X10_TEMP44 ) ; final Dist2 RX10_TEMP54 = localCharge . distValue ; final Region2 RX10_TEMP55 = RX10_TEMP54 . dReg ; final int RX10_TEMP56 = Program . searchPointInRegion2 ( RX10_TEMP55 , RX10_TEMP53 ) ; final int RX10_TEMP57 = 0 ; final boolean RX10_TEMP58 = RX10_TEMP56 < RX10_TEMP57 ; if ( RX10_TEMP58 ) { String RX10_TEMP59 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 final place RX10_TEMP60 = Program . getPlaceFromDist2 ( RX10_TEMP54 , RX10_TEMP56 ) ; final place RX10_TEMP62 = here ; final boolean RX10_TEMP63 = RX10_TEMP60 != RX10_TEMP62 ; if ( RX10_TEMP63 ) { String RX10_TEMP61 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final double RX10_TEMP64 = Program . getRefArrayValue2double ( localCharge , RX10_TEMP56 ) ; final double X10_TEMP48 = ( RX10_TEMP64 ) ; final double X10_TEMP45 = ( charge * dx ) ; final double X10_TEMP47 = ( X10_TEMP45 * dy ) ; final double X10_TEMP50 = ( X10_TEMP48 + X10_TEMP47 ) ; final double X10_TEMP51 = ( X10_TEMP50 ) ; final Point2 RX10_TEMP65 = new Point2 ( X10_TEMP37 , X10_TEMP38 ) ; final Dist2 RX10_TEMP66 = localCharge . distValue ; final Region2 RX10_TEMP67 = RX10_TEMP66 . dReg ; final int RX10_TEMP68 = Program . searchPointInRegion2 ( RX10_TEMP67 , RX10_TEMP65 ) ; final int RX10_TEMP69 = 0 ; final boolean RX10_TEMP70 = RX10_TEMP68 < RX10_TEMP69 ; if ( RX10_TEMP70 ) { String RX10_TEMP71 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP71 ) ; }
 final place RX10_TEMP72 = Program . getPlaceFromDist2 ( RX10_TEMP66 , RX10_TEMP68 ) ; final place RX10_TEMP74 = here ; final boolean RX10_TEMP75 = RX10_TEMP72 != RX10_TEMP74 ; if ( RX10_TEMP75 ) { String RX10_TEMP73 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP73 ) ; }
 Program . setRefArrayValue2double ( localCharge , RX10_TEMP68 , X10_TEMP51 ) ; final int X10_TEMP52 = ( 1 ) ; final int X10_TEMP55 = ( y + X10_TEMP52 ) ; final int X10_TEMP56 = ( 1 ) ; final int X10_TEMP59 = ( y + X10_TEMP56 ) ; final Point2 RX10_TEMP76 = new Point2 ( X10_TEMP59 , x ) ; final Dist2 RX10_TEMP77 = localCharge . distValue ; final Region2 RX10_TEMP78 = RX10_TEMP77 . dReg ; final int RX10_TEMP79 = Program . searchPointInRegion2 ( RX10_TEMP78 , RX10_TEMP76 ) ; final int RX10_TEMP80 = 0 ; final boolean RX10_TEMP81 = RX10_TEMP79 < RX10_TEMP80 ; if ( RX10_TEMP81 ) { String RX10_TEMP82 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP82 ) ; }
 final place RX10_TEMP83 = Program . getPlaceFromDist2 ( RX10_TEMP77 , RX10_TEMP79 ) ; final place RX10_TEMP85 = here ; final boolean RX10_TEMP86 = RX10_TEMP83 != RX10_TEMP85 ; if ( RX10_TEMP86 ) { String RX10_TEMP84 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP84 ) ; }
 final double RX10_TEMP87 = Program . getRefArrayValue2double ( localCharge , RX10_TEMP79 ) ; final double X10_TEMP66 = ( RX10_TEMP87 ) ; final double X10_TEMP60 = ( 1.0 ) ; final double X10_TEMP62 = ( X10_TEMP60 - dx ) ; final double X10_TEMP63 = ( charge * X10_TEMP62 ) ; final double X10_TEMP65 = ( X10_TEMP63 * dy ) ; final double X10_TEMP68 = ( X10_TEMP66 + X10_TEMP65 ) ; final double X10_TEMP69 = ( X10_TEMP68 ) ; final Point2 RX10_TEMP88 = new Point2 ( X10_TEMP55 , x ) ; final Dist2 RX10_TEMP89 = localCharge . distValue ; final Region2 RX10_TEMP90 = RX10_TEMP89 . dReg ; final int RX10_TEMP91 = Program . searchPointInRegion2 ( RX10_TEMP90 , RX10_TEMP88 ) ; final int RX10_TEMP92 = 0 ; final boolean RX10_TEMP93 = RX10_TEMP91 < RX10_TEMP92 ; if ( RX10_TEMP93 ) { String RX10_TEMP94 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP94 ) ; }
 final place RX10_TEMP95 = Program . getPlaceFromDist2 ( RX10_TEMP89 , RX10_TEMP91 ) ; final place RX10_TEMP97 = here ; final boolean RX10_TEMP98 = RX10_TEMP95 != RX10_TEMP97 ; if ( RX10_TEMP98 ) { String RX10_TEMP96 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP96 ) ; }
 Program . setRefArrayValue2double ( localCharge , RX10_TEMP91 , X10_TEMP69 ) ; final int X10_TEMP71 = ( 1 ) ; final int X10_TEMP73 = ( x + X10_TEMP71 ) ; final int X10_TEMP75 = ( 1 ) ; final int X10_TEMP77 = ( x + X10_TEMP75 ) ; final Point2 RX10_TEMP99 = new Point2 ( y , X10_TEMP77 ) ; final Dist2 RX10_TEMP100 = localCharge . distValue ; final Region2 RX10_TEMP101 = RX10_TEMP100 . dReg ; final int RX10_TEMP102 = Program . searchPointInRegion2 ( RX10_TEMP101 , RX10_TEMP99 ) ; final int RX10_TEMP103 = 0 ; final boolean RX10_TEMP104 = RX10_TEMP102 < RX10_TEMP103 ; if ( RX10_TEMP104 ) { String RX10_TEMP105 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP105 ) ; }
 final place RX10_TEMP106 = Program . getPlaceFromDist2 ( RX10_TEMP100 , RX10_TEMP102 ) ; final place RX10_TEMP108 = here ; final boolean RX10_TEMP109 = RX10_TEMP106 != RX10_TEMP108 ; if ( RX10_TEMP109 ) { String RX10_TEMP107 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP107 ) ; }
 final double RX10_TEMP110 = Program . getRefArrayValue2double ( localCharge , RX10_TEMP102 ) ; final double X10_TEMP84 = ( RX10_TEMP110 ) ; final double X10_TEMP81 = ( charge * dx ) ; final double X10_TEMP78 = ( 1.0 ) ; final double X10_TEMP80 = ( X10_TEMP78 - dy ) ; final double X10_TEMP83 = ( X10_TEMP81 * X10_TEMP80 ) ; final double X10_TEMP86 = ( X10_TEMP84 + X10_TEMP83 ) ; final double X10_TEMP87 = ( X10_TEMP86 ) ; final Point2 RX10_TEMP111 = new Point2 ( y , X10_TEMP73 ) ; final Dist2 RX10_TEMP112 = localCharge . distValue ; final Region2 RX10_TEMP113 = RX10_TEMP112 . dReg ; final int RX10_TEMP114 = Program . searchPointInRegion2 ( RX10_TEMP113 , RX10_TEMP111 ) ; final int RX10_TEMP115 = 0 ; final boolean RX10_TEMP116 = RX10_TEMP114 < RX10_TEMP115 ; if ( RX10_TEMP116 ) { String RX10_TEMP117 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP117 ) ; }
 final place RX10_TEMP118 = Program . getPlaceFromDist2 ( RX10_TEMP112 , RX10_TEMP114 ) ; final place RX10_TEMP120 = here ; final boolean RX10_TEMP121 = RX10_TEMP118 != RX10_TEMP120 ; if ( RX10_TEMP121 ) { String RX10_TEMP119 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP119 ) ; }
 Program . setRefArrayValue2double ( localCharge , RX10_TEMP114 , X10_TEMP87 ) ; final Point2 RX10_TEMP122 = new Point2 ( y , x ) ; final Dist2 RX10_TEMP123 = localCharge . distValue ; final Region2 RX10_TEMP124 = RX10_TEMP123 . dReg ; final int RX10_TEMP125 = Program . searchPointInRegion2 ( RX10_TEMP124 , RX10_TEMP122 ) ; final int RX10_TEMP126 = 0 ; final boolean RX10_TEMP127 = RX10_TEMP125 < RX10_TEMP126 ; if ( RX10_TEMP127 ) { String RX10_TEMP128 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP128 ) ; }
 final place RX10_TEMP129 = Program . getPlaceFromDist2 ( RX10_TEMP123 , RX10_TEMP125 ) ; final place RX10_TEMP131 = here ; final boolean RX10_TEMP132 = RX10_TEMP129 != RX10_TEMP131 ; if ( RX10_TEMP132 ) { String RX10_TEMP130 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP130 ) ; }
 final double RX10_TEMP133 = Program . getRefArrayValue2double ( localCharge , RX10_TEMP125 ) ; final double X10_TEMP101 = ( RX10_TEMP133 ) ; final double X10_TEMP92 = ( 1.0 ) ; final double X10_TEMP94 = ( X10_TEMP92 - dx ) ; final double X10_TEMP98 = ( charge * X10_TEMP94 ) ; final double X10_TEMP95 = ( 1.0 ) ; final double X10_TEMP97 = ( X10_TEMP95 - dy ) ; final double X10_TEMP100 = ( X10_TEMP98 * X10_TEMP97 ) ; final double X10_TEMP103 = ( X10_TEMP101 + X10_TEMP100 ) ; final double X10_TEMP104 = ( X10_TEMP103 ) ; final Point2 RX10_TEMP134 = new Point2 ( y , x ) ; final Dist2 RX10_TEMP135 = localCharge . distValue ; final Region2 RX10_TEMP136 = RX10_TEMP135 . dReg ; final int RX10_TEMP137 = Program . searchPointInRegion2 ( RX10_TEMP136 , RX10_TEMP134 ) ; final int RX10_TEMP138 = 0 ; final boolean RX10_TEMP139 = RX10_TEMP137 < RX10_TEMP138 ; if ( RX10_TEMP139 ) { String RX10_TEMP140 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP140 ) ; }
 final place RX10_TEMP141 = Program . getPlaceFromDist2 ( RX10_TEMP135 , RX10_TEMP137 ) ; final place RX10_TEMP143 = here ; final boolean RX10_TEMP144 = RX10_TEMP141 != RX10_TEMP143 ; if ( RX10_TEMP144 ) { String RX10_TEMP142 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP142 ) ; }
 Program . setRefArrayValue2double ( localCharge , RX10_TEMP137 , X10_TEMP104 ) ; }
 finish { final Dist2 RX10_TEMP145 = fieldCharge . distValue ; final Dist2 X10_TEMP105 = RX10_TEMP145 ; final place X10_TEMP106 = ( here ) ; final Dist2 X10_TEMP108 = Program . restrictDist2 ( X10_TEMP105 , X10_TEMP106 ) ; final place X10_TEMP109 = here ; final Region2 RX10_TEMP147 = X10_TEMP108 . dReg ; final int RX10_TEMP150 = 1 ; int RX10_TEMP148 = RX10_TEMP147 . regSize ; RX10_TEMP148 = RX10_TEMP148 - RX10_TEMP150 ; final region ( : rank==1 ) RX10_TEMP149 = [ 0 : RX10_TEMP148 ] ; for ( point ( : rank==1 ) RX10_TEMP146 : RX10_TEMP149 ) { final int RX10_TEMP151 = RX10_TEMP146 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP147 , RX10_TEMP151 ) ; 
 final T220 utmp220 = new T220(pt, localCharge, fieldCharge);
 async (X10_TEMP109) {Program.thread220(utmp220); }
 }
 final Dist2 RX10_TEMP173 = guards . distValue ; final Dist2 X10_TEMP115 = RX10_TEMP173 ; final place X10_TEMP116 = ( here ) ; final Dist2 X10_TEMP118 = Program . restrictDist2 ( X10_TEMP115 , X10_TEMP116 ) ; final place X10_TEMP119 = here ; final Region2 RX10_TEMP175 = X10_TEMP118 . dReg ; final int RX10_TEMP178 = 1 ; int RX10_TEMP176 = RX10_TEMP175 . regSize ; RX10_TEMP176 = RX10_TEMP176 - RX10_TEMP178 ; final region ( : rank==1 ) RX10_TEMP177 = [ 0 : RX10_TEMP176 ] ; for ( point ( : rank==1 ) RX10_TEMP174 : RX10_TEMP177 ) { final int RX10_TEMP179 = RX10_TEMP174 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP175 , RX10_TEMP179 ) ; 
 final T221 utmp221 = new T221(pt, localCharge, guards);
 async (X10_TEMP119) {Program.thread221(utmp221); }
 }
 }
 }
 }
 public static void thread52(final T52 utmpz) {final  doubleRefArray2 guards = utmpz.guards;
final  doubleRefArray2 data = utmpz.data;
 { final Dist2 RX10_TEMP13 = guards . distValue ; final Dist2 dG = RX10_TEMP13 ; final Region2 rLocalG = Program . X10Util_get2DLRegion ( dG ) ; final place X10_TEMP9 = ( here ) ; final boolean X10_TEMP10 = ( X10_TEMP9 . isLast ( ) ) ; final boolean X10_TEMP12 = ! X10_TEMP10 ; if ( X10_TEMP12 ) { final Region2 RX10_TEMP14 = rLocalG ; final int RX10_TEMP29 = rLocalG . regSize ; final int RX10_TEMP30 = 1 ; final int RX10_TEMP31 = RX10_TEMP29 - RX10_TEMP30 ; final region ( : rank==1 ) RX10_TEMP28 = [ 0 : RX10_TEMP31 ] ; final double value [ : rank==1 ] RX10_TEMP32 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP28 ] ( point ( : rank==1 ) RX10_TEMP15 ) { final int RX10_TEMP16 = RX10_TEMP15 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP14 , RX10_TEMP16 ) ; final Dist2 RX10_TEMP17 = guards . distValue ; final Region2 RX10_TEMP18 = RX10_TEMP17 . dReg ; final int RX10_TEMP19 = Program . searchPointInRegion2 ( RX10_TEMP18 , pt ) ; final int RX10_TEMP20 = 0 ; final boolean RX10_TEMP21 = RX10_TEMP19 < RX10_TEMP20 ; if ( RX10_TEMP21 ) { String RX10_TEMP22 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP22 ) ; }
 final place RX10_TEMP23 = Program . getPlaceFromDist2 ( RX10_TEMP17 , RX10_TEMP19 ) ; final place RX10_TEMP25 = here ; final boolean RX10_TEMP26 = RX10_TEMP23 != RX10_TEMP25 ; if ( RX10_TEMP26 ) { String RX10_TEMP24 = "Bad place access for array guards" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final double RX10_TEMP27 = Program . getRefArrayValue2double ( guards , RX10_TEMP19 ) ; final double X10_TEMP15 = ( RX10_TEMP27 ) ; return X10_TEMP15 ; }
 ) ; final doubleValArray2 RX10_TEMP33 = new doubleValArray2 ( rLocalG , RX10_TEMP32 ) ; final doubleValArray2 X10_TEMP16 = RX10_TEMP33 ; final doubleValArray2 sBuffer = X10_TEMP16 ; finish { final place X10_TEMP18 = ( here ) ; final place X10_TEMP20 = X10_TEMP18 . next ( ) ; 
 final T222 utmp222 = new T222(sBuffer, rLocalG, data);
 async (X10_TEMP20) {Program.thread222(utmp222); }
 }
 }
 final place X10_TEMP48 = here ; final int RX10_TEMP76 = 1 ; int RX10_TEMP74 = rLocalG . regSize ; RX10_TEMP74 = RX10_TEMP74 - RX10_TEMP76 ; final region ( : rank==1 ) RX10_TEMP75 = [ 0 : RX10_TEMP74 ] ; for ( point ( : rank==1 ) RX10_TEMP73 : RX10_TEMP75 ) { final int RX10_TEMP77 = RX10_TEMP73 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( rLocalG , RX10_TEMP77 ) ; 
 final T223 utmp223 = new T223(pt, guards);
 async (X10_TEMP48) {Program.thread223(utmp223); }
 }
 }
 }
 public static void thread53(final T53 utmpz) {final  int RX10_TEMP14 = utmpz.RX10_TEMP14;
final  place RX10_TEMP10 = utmpz.RX10_TEMP10;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  doubleStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { final dist ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP14 ] -> here ; final double [ : rank==1 ] RX10_TEMP17 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP16 ] ( point ( : rank==1 ) RX10_TEMP15 ) { final double X10_TEMP32 = ( 0.0 ) ; return X10_TEMP32 ; }
 ) ; final doubleStub RX10_TEMP18 = new doubleStub ( RX10_TEMP17 ) ; 
 final T224 utmp224 = new T224(RX10_TEMP18, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP10) {Program.thread224(utmp224); }
 }
 }
 public static void thread54(final T54 utmpz) {final  Point1 pl = utmpz.pl;
final  doubleRefArray2 result = utmpz.result;
final  doubleRefArray2 data = utmpz.data;
 { final int X10_TEMP38 = ( pl . f0 ) ; final int X10_TEMP39 = ( 2 ) ; final int X10_TEMP41 = ( X10_TEMP38 / X10_TEMP39 ) ; final place pDst = ( place.places ( X10_TEMP41 ) ) ; final Dist2 RX10_TEMP35 = data . distValue ; final Dist2 dData = RX10_TEMP35 ; final Region2 rLocal = Program . X10Util_get2DLRegion ( dData ) ; final Region2 RX10_TEMP36 = rLocal ; final int RX10_TEMP51 = rLocal . regSize ; final int RX10_TEMP52 = 1 ; final int RX10_TEMP53 = RX10_TEMP51 - RX10_TEMP52 ; final region ( : rank==1 ) RX10_TEMP50 = [ 0 : RX10_TEMP53 ] ; final double value [ : rank==1 ] RX10_TEMP54 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP50 ] ( point ( : rank==1 ) RX10_TEMP37 ) { final int RX10_TEMP38 = RX10_TEMP37 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP36 , RX10_TEMP38 ) ; final Dist2 RX10_TEMP39 = data . distValue ; final Region2 RX10_TEMP40 = RX10_TEMP39 . dReg ; final int RX10_TEMP41 = Program . searchPointInRegion2 ( RX10_TEMP40 , pt ) ; final int RX10_TEMP42 = 0 ; final boolean RX10_TEMP43 = RX10_TEMP41 < RX10_TEMP42 ; if ( RX10_TEMP43 ) { String RX10_TEMP44 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 final place RX10_TEMP45 = Program . getPlaceFromDist2 ( RX10_TEMP39 , RX10_TEMP41 ) ; final place RX10_TEMP47 = here ; final boolean RX10_TEMP48 = RX10_TEMP45 != RX10_TEMP47 ; if ( RX10_TEMP48 ) { String RX10_TEMP46 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 final double RX10_TEMP49 = Program . getRefArrayValue2double ( data , RX10_TEMP41 ) ; final double X10_TEMP48 = ( RX10_TEMP49 ) ; return X10_TEMP48 ; }
 ) ; final doubleValArray2 RX10_TEMP55 = new doubleValArray2 ( rLocal , RX10_TEMP54 ) ; final doubleValArray2 X10_TEMP49 = RX10_TEMP55 ; final doubleValArray2 sBuffer = X10_TEMP49 ; 
 final T225 utmp225 = new T225(sBuffer, rLocal, result);
 async (pDst) {Program.thread225(utmp225); }
 }
 }
 public static void thread55(final T55 utmpz) {final  int RX10_TEMP14 = utmpz.RX10_TEMP14;
final  place RX10_TEMP10 = utmpz.RX10_TEMP10;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  doubleStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { final dist ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP14 ] -> here ; final double [ : rank==1 ] RX10_TEMP17 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP16 ] ( point ( : rank==1 ) RX10_TEMP15 ) { final double X10_TEMP34 = ( 0.0 ) ; return X10_TEMP34 ; }
 ) ; final doubleStub RX10_TEMP18 = new doubleStub ( RX10_TEMP17 ) ; 
 final T226 utmp226 = new T226(RX10_TEMP18, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP10) {Program.thread226(utmp226); }
 }
 }
 public static void thread56(final T56 utmpz) {final  int RX10_TEMP35 = utmpz.RX10_TEMP35;
final  place RX10_TEMP31 = utmpz.RX10_TEMP31;
final  point ( : rank==1 ) RX10_TEMP30 = utmpz.RX10_TEMP30;
final  doubleStub [ : rank==1 ] RX10_TEMP29 = utmpz.RX10_TEMP29;
 { final dist ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP35 ] -> here ; final double [ : rank==1 ] RX10_TEMP38 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP37 ] ( point ( : rank==1 ) RX10_TEMP36 ) { final double X10_TEMP37 = ( 0.0 ) ; return X10_TEMP37 ; }
 ) ; final doubleStub RX10_TEMP39 = new doubleStub ( RX10_TEMP38 ) ; 
 final T227 utmp227 = new T227(RX10_TEMP39, RX10_TEMP30, RX10_TEMP29);
 async (RX10_TEMP31) {Program.thread227(utmp227); }
 }
 }
 public static void thread57(final T57 utmpz) {final  int RX10_TEMP56 = utmpz.RX10_TEMP56;
final  place RX10_TEMP52 = utmpz.RX10_TEMP52;
final  point ( : rank==1 ) RX10_TEMP51 = utmpz.RX10_TEMP51;
final  intStub [ : rank==1 ] RX10_TEMP50 = utmpz.RX10_TEMP50;
 { final dist ( : rank==1 ) RX10_TEMP58 = [ 0 : RX10_TEMP56 ] -> here ; final int [ : rank==1 ] RX10_TEMP59 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP58 ] ( point ( : rank==1 ) RX10_TEMP57 ) { final int X10_TEMP40 = ( 0 ) ; return X10_TEMP40 ; }
 ) ; final intStub RX10_TEMP60 = new intStub ( RX10_TEMP59 ) ; 
 final T228 utmp228 = new T228(RX10_TEMP60, RX10_TEMP51, RX10_TEMP50);
 async (RX10_TEMP52) {Program.thread228(utmp228); }
 }
 }
 public static void thread58(final T58 utmpz) {final  int RX10_TEMP77 = utmpz.RX10_TEMP77;
final  place RX10_TEMP73 = utmpz.RX10_TEMP73;
final  point ( : rank==1 ) RX10_TEMP72 = utmpz.RX10_TEMP72;
final  intStub [ : rank==1 ] RX10_TEMP71 = utmpz.RX10_TEMP71;
 { final dist ( : rank==1 ) RX10_TEMP79 = [ 0 : RX10_TEMP77 ] -> here ; final int [ : rank==1 ] RX10_TEMP80 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP79 ] ( point ( : rank==1 ) RX10_TEMP78 ) { final int X10_TEMP43 = ( 0 ) ; return X10_TEMP43 ; }
 ) ; final intStub RX10_TEMP81 = new intStub ( RX10_TEMP80 ) ; 
 final T229 utmp229 = new T229(RX10_TEMP81, RX10_TEMP72, RX10_TEMP71);
 async (RX10_TEMP73) {Program.thread229(utmp229); }
 }
 }
 public static void thread59(final T59 utmpz) {final  int RX10_TEMP98 = utmpz.RX10_TEMP98;
final  place RX10_TEMP94 = utmpz.RX10_TEMP94;
final  point ( : rank==1 ) RX10_TEMP93 = utmpz.RX10_TEMP93;
final  intStub [ : rank==1 ] RX10_TEMP92 = utmpz.RX10_TEMP92;
 { final dist ( : rank==1 ) RX10_TEMP100 = [ 0 : RX10_TEMP98 ] -> here ; final int [ : rank==1 ] RX10_TEMP101 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP100 ] ( point ( : rank==1 ) RX10_TEMP99 ) { final int X10_TEMP46 = ( 0 ) ; return X10_TEMP46 ; }
 ) ; final intStub RX10_TEMP102 = new intStub ( RX10_TEMP101 ) ; 
 final T230 utmp230 = new T230(RX10_TEMP102, RX10_TEMP93, RX10_TEMP92);
 async (RX10_TEMP94) {Program.thread230(utmp230); }
 }
 }
 public static void thread60(final T60 utmpz) {final  int RX10_TEMP119 = utmpz.RX10_TEMP119;
final  place RX10_TEMP115 = utmpz.RX10_TEMP115;
final  point ( : rank==1 ) RX10_TEMP114 = utmpz.RX10_TEMP114;
final  intStub [ : rank==1 ] RX10_TEMP113 = utmpz.RX10_TEMP113;
 { final dist ( : rank==1 ) RX10_TEMP121 = [ 0 : RX10_TEMP119 ] -> here ; final int [ : rank==1 ] RX10_TEMP122 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP121 ] ( point ( : rank==1 ) RX10_TEMP120 ) { final int X10_TEMP49 = ( 0 ) ; return X10_TEMP49 ; }
 ) ; final intStub RX10_TEMP123 = new intStub ( RX10_TEMP122 ) ; 
 final T231 utmp231 = new T231(RX10_TEMP123, RX10_TEMP114, RX10_TEMP113);
 async (RX10_TEMP115) {Program.thread231(utmp231); }
 }
 }
 public static void thread61(final T61 utmpz) {final  int RX10_TEMP140 = utmpz.RX10_TEMP140;
final  place RX10_TEMP136 = utmpz.RX10_TEMP136;
final  point ( : rank==1 ) RX10_TEMP135 = utmpz.RX10_TEMP135;
final  intStub [ : rank==1 ] RX10_TEMP134 = utmpz.RX10_TEMP134;
 { final dist ( : rank==1 ) RX10_TEMP142 = [ 0 : RX10_TEMP140 ] -> here ; final int [ : rank==1 ] RX10_TEMP143 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP142 ] ( point ( : rank==1 ) RX10_TEMP141 ) { final int X10_TEMP52 = ( 0 ) ; return X10_TEMP52 ; }
 ) ; final intStub RX10_TEMP144 = new intStub ( RX10_TEMP143 ) ; 
 final T232 utmp232 = new T232(RX10_TEMP144, RX10_TEMP135, RX10_TEMP134);
 async (RX10_TEMP136) {Program.thread232(utmp232); }
 }
 }
 public static void thread62(final T62 utmpz) {final  int RX10_TEMP161 = utmpz.RX10_TEMP161;
final  place RX10_TEMP157 = utmpz.RX10_TEMP157;
final  point ( : rank==1 ) RX10_TEMP156 = utmpz.RX10_TEMP156;
final  intStub [ : rank==1 ] RX10_TEMP155 = utmpz.RX10_TEMP155;
 { final dist ( : rank==1 ) RX10_TEMP163 = [ 0 : RX10_TEMP161 ] -> here ; final int [ : rank==1 ] RX10_TEMP164 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP163 ] ( point ( : rank==1 ) RX10_TEMP162 ) { final int X10_TEMP55 = ( 0 ) ; return X10_TEMP55 ; }
 ) ; final intStub RX10_TEMP165 = new intStub ( RX10_TEMP164 ) ; 
 final T233 utmp233 = new T233(RX10_TEMP165, RX10_TEMP156, RX10_TEMP155);
 async (RX10_TEMP157) {Program.thread233(utmp233); }
 }
 }
 public static void thread63(final T63 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 sizes = utmpz.sizes;
final  intRefArray1 offsets = utmpz.offsets;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  doubleRefArray2 data = utmpz.data;
 { final Dist2 RX10_TEMP182 = data . distValue ; final Dist2 dData = RX10_TEMP182 ; final Region2 rLocal = Program . X10Util_get2DLRegion ( dData ) ; final int X10_TEMP66 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getRank2D ( rLocal , X10_TEMP66 ) ; final int X10_TEMP68 = ( rLocal1 . regSize ) ; final int X10_TEMP69 = ( 0 ) ; final boolean X10_TEMP70 = ( X10_TEMP68 == X10_TEMP69 ) ; final boolean X10_TEMP72 = _X10Util_ENABLE_CHECKS && X10_TEMP70 ; if ( X10_TEMP72 ) { final String X10_TEMP74 = ( "Region empty -- should not happen" ) ; throw new RuntimeException ( X10_TEMP74 ) ; }
 final int RX10_TEMP183 = rLocal1 . regSize ; final int RX10_TEMP184 = 0 ; final boolean RX10_TEMP185 = RX10_TEMP183 <= RX10_TEMP184 ; if ( RX10_TEMP185 ) { final String RX10_TEMP186 = "Operation low() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP186 ) ; }
 final int offset = ( Program . regionLow ( rLocal1 ) ) ; final place X10_TEMP77 = here ; final int RX10_TEMP191 = 1 ; int RX10_TEMP189 = rLocal . regSize ; RX10_TEMP189 = RX10_TEMP189 - RX10_TEMP191 ; final region ( : rank==1 ) RX10_TEMP190 = [ 0 : RX10_TEMP189 ] ; for ( point ( : rank==1 ) RX10_TEMP187 : RX10_TEMP190 ) { final int RX10_TEMP192 = RX10_TEMP187 [0] ; final Point2 RX10_TEMP188 = Program . regionOrdinalPoint2 ( rLocal , RX10_TEMP192 ) ; final int i = RX10_TEMP188 . f0 ; final int j = RX10_TEMP188 . f1 ; 
 final T234 utmp234 = new T234(j, i, offset, pl, srcBuffer, data);
 async (X10_TEMP77) {Program.thread234(utmp234); }
 }
 final int X10_TEMP89 = ( rLocal1 . regSize ) ; final int X10_TEMP90 = ( X10_TEMP89 ) ; final Point1 RX10_TEMP216 = new Point1 ( pl ) ; final Dist1 RX10_TEMP217 = sizes . distValue ; final Region1 RX10_TEMP218 = RX10_TEMP217 . dReg ; final int RX10_TEMP219 = Program . searchPointInRegion1 ( RX10_TEMP218 , RX10_TEMP216 ) ; final int RX10_TEMP220 = 0 ; final boolean RX10_TEMP221 = RX10_TEMP219 < RX10_TEMP220 ; if ( RX10_TEMP221 ) { String RX10_TEMP222 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP222 ) ; }
 final place RX10_TEMP223 = Program . getPlaceFromDist1 ( RX10_TEMP217 , RX10_TEMP219 ) ; final place RX10_TEMP225 = here ; final boolean RX10_TEMP226 = RX10_TEMP223 != RX10_TEMP225 ; if ( RX10_TEMP226 ) { String RX10_TEMP224 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP224 ) ; }
 Program . setRefArrayValue1int ( sizes , RX10_TEMP219 , X10_TEMP90 ) ; final int X10_TEMP93 = ( offset ) ; final Point1 RX10_TEMP227 = new Point1 ( pl ) ; final Dist1 RX10_TEMP228 = offsets . distValue ; final Region1 RX10_TEMP229 = RX10_TEMP228 . dReg ; final int RX10_TEMP230 = Program . searchPointInRegion1 ( RX10_TEMP229 , RX10_TEMP227 ) ; final int RX10_TEMP231 = 0 ; final boolean RX10_TEMP232 = RX10_TEMP230 < RX10_TEMP231 ; if ( RX10_TEMP232 ) { String RX10_TEMP233 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP233 ) ; }
 final place RX10_TEMP234 = Program . getPlaceFromDist1 ( RX10_TEMP228 , RX10_TEMP230 ) ; final place RX10_TEMP236 = here ; final boolean RX10_TEMP237 = RX10_TEMP234 != RX10_TEMP236 ; if ( RX10_TEMP237 ) { String RX10_TEMP235 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP235 ) ; }
 Program . setRefArrayValue1int ( offsets , RX10_TEMP230 , X10_TEMP93 ) ; }
 }
 public static void thread64(final T64 utmpz) {final  Point1 pl = utmpz.pl;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 outLt = utmpz.outLt;
final  intRefArray1 sizes = utmpz.sizes;
final  intRefArray1 offsets = utmpz.offsets;
final  Dist2 dDst = utmpz.dDst;
 { final Region2 rLocalD = Program . X10Util_get2DLRegion ( dDst ) ; final int X10_TEMP105 = ( 0 ) ; final Region1 rLocalD1 = Program . X10Util_getRank2D ( rLocalD , X10_TEMP105 ) ; final int X10_TEMP107 = ( rLocalD1 . regSize ) ; final int X10_TEMP108 = ( 0 ) ; final boolean X10_TEMP109 = ( X10_TEMP107 == X10_TEMP108 ) ; final boolean X10_TEMP111 = _X10Util_ENABLE_CHECKS && X10_TEMP109 ; if ( X10_TEMP111 ) { final String X10_TEMP112 = ( "Region empty -- " ) ; final String X10_TEMP113 = ( "cannot to move grids" ) ; final String X10_TEMP115 = ( X10_TEMP112 + X10_TEMP113 ) ; throw new RuntimeException ( X10_TEMP115 ) ; }
 final int X10_TEMP118 = ( 0 ) ; final int X10_TEMP119 = ( X10_TEMP118 ) ; final Dist1 RX10_TEMP250 = outLt . distValue ; final Region1 RX10_TEMP251 = RX10_TEMP250 . dReg ; final int RX10_TEMP252 = Program . searchPointInRegion1 ( RX10_TEMP251 , pl ) ; final int RX10_TEMP253 = 0 ; final boolean RX10_TEMP254 = RX10_TEMP252 < RX10_TEMP253 ; if ( RX10_TEMP254 ) { String RX10_TEMP255 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP255 ) ; }
 final place RX10_TEMP256 = Program . getPlaceFromDist1 ( RX10_TEMP250 , RX10_TEMP252 ) ; final place RX10_TEMP258 = here ; final boolean RX10_TEMP259 = RX10_TEMP256 != RX10_TEMP258 ; if ( RX10_TEMP259 ) { String RX10_TEMP257 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP257 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP252 , X10_TEMP119 ) ; final int X10_TEMP122 = ( 0 ) ; final int X10_TEMP123 = ( X10_TEMP122 ) ; final Dist1 RX10_TEMP260 = outRt . distValue ; final Region1 RX10_TEMP261 = RX10_TEMP260 . dReg ; final int RX10_TEMP262 = Program . searchPointInRegion1 ( RX10_TEMP261 , pl ) ; final int RX10_TEMP263 = 0 ; final boolean RX10_TEMP264 = RX10_TEMP262 < RX10_TEMP263 ; if ( RX10_TEMP264 ) { String RX10_TEMP265 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP265 ) ; }
 final place RX10_TEMP266 = Program . getPlaceFromDist1 ( RX10_TEMP260 , RX10_TEMP262 ) ; final place RX10_TEMP268 = here ; final boolean RX10_TEMP269 = RX10_TEMP266 != RX10_TEMP268 ; if ( RX10_TEMP269 ) { String RX10_TEMP267 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP267 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP262 , X10_TEMP123 ) ; final int RX10_TEMP270 = rLocalD1 . regSize ; final int RX10_TEMP271 = 0 ; final boolean RX10_TEMP272 = RX10_TEMP270 <= RX10_TEMP271 ; if ( RX10_TEMP272 ) { final String RX10_TEMP273 = "Operation low() not defined on empty region rLocalD1" ; throw new RuntimeException ( RX10_TEMP273 ) ; }
 final int lBorder = ( Program . regionLow ( rLocalD1 ) ) ; final int RX10_TEMP274 = rLocalD1 . regSize ; final int RX10_TEMP275 = 0 ; final boolean RX10_TEMP276 = RX10_TEMP274 <= RX10_TEMP275 ; if ( RX10_TEMP276 ) { final String RX10_TEMP277 = "Operation high() not defined on empty region rLocalD1" ; throw new RuntimeException ( RX10_TEMP277 ) ; }
 final int X10_TEMP125 = ( Program . regionHigh ( rLocalD1 ) ) ; final int X10_TEMP126 = ( 1 ) ; final int rBorder = ( X10_TEMP125 + X10_TEMP126 ) ; final int X10_TEMP133 = ( 0 ) ; final Dist1 RX10_TEMP278 = sizes . distValue ; final Region1 RX10_TEMP279 = RX10_TEMP278 . dReg ; final int RX10_TEMP280 = Program . searchPointInRegion1 ( RX10_TEMP279 , pl ) ; final int RX10_TEMP281 = 0 ; final boolean RX10_TEMP282 = RX10_TEMP280 < RX10_TEMP281 ; if ( RX10_TEMP282 ) { String RX10_TEMP283 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP283 ) ; }
 final place RX10_TEMP284 = Program . getPlaceFromDist1 ( RX10_TEMP278 , RX10_TEMP280 ) ; final place RX10_TEMP286 = here ; final boolean RX10_TEMP287 = RX10_TEMP284 != RX10_TEMP286 ; if ( RX10_TEMP287 ) { String RX10_TEMP285 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP285 ) ; }
 final int RX10_TEMP288 = Program . getRefArrayValue1int ( sizes , RX10_TEMP280 ) ; final int X10_TEMP130 = ( RX10_TEMP288 ) ; final int X10_TEMP131 = ( 1 ) ; final int X10_TEMP134 = ( X10_TEMP130 - X10_TEMP131 ) ; final Region1 X10_TEMP136 = Program . createNewRegion1R ( X10_TEMP133 , X10_TEMP134 ) ; final int RX10_TEMP293 = 1 ; int RX10_TEMP291 = X10_TEMP136 . regSize ; RX10_TEMP291 = RX10_TEMP291 - RX10_TEMP293 ; final region ( : rank==1 ) RX10_TEMP292 = [ 0 : RX10_TEMP291 ] ; for ( point ( : rank==1 ) RX10_TEMP289 : RX10_TEMP292 ) { final int RX10_TEMP294 = RX10_TEMP289 [0] ; final Point1 RX10_TEMP290 = Program . regionOrdinalPoint1 ( X10_TEMP136 , RX10_TEMP294 ) ; final int i1 = RX10_TEMP290 . f0 ; final Dist1 RX10_TEMP295 = offsets . distValue ; final Region1 RX10_TEMP296 = RX10_TEMP295 . dReg ; final int RX10_TEMP297 = Program . searchPointInRegion1 ( RX10_TEMP296 , pl ) ; final int RX10_TEMP298 = 0 ; final boolean RX10_TEMP299 = RX10_TEMP297 < RX10_TEMP298 ; if ( RX10_TEMP299 ) { String RX10_TEMP300 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP300 ) ; }
 final place RX10_TEMP301 = Program . getPlaceFromDist1 ( RX10_TEMP295 , RX10_TEMP297 ) ; final place RX10_TEMP303 = here ; final boolean RX10_TEMP304 = RX10_TEMP301 != RX10_TEMP303 ; if ( RX10_TEMP304 ) { String RX10_TEMP302 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP302 ) ; }
 final int RX10_TEMP305 = Program . getRefArrayValue1int ( offsets , RX10_TEMP297 ) ; final int X10_TEMP138 = ( RX10_TEMP305 ) ; final int i2 = ( i1 + X10_TEMP138 ) ; final boolean X10_TEMP141 = i2 >= rBorder ; if ( X10_TEMP141 ) { final Dist1 RX10_TEMP306 = outRt . distValue ; final Region1 RX10_TEMP307 = RX10_TEMP306 . dReg ; final int RX10_TEMP308 = Program . searchPointInRegion1 ( RX10_TEMP307 , pl ) ; final int RX10_TEMP309 = 0 ; final boolean RX10_TEMP310 = RX10_TEMP308 < RX10_TEMP309 ; if ( RX10_TEMP310 ) { String RX10_TEMP311 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP311 ) ; }
 final place RX10_TEMP312 = Program . getPlaceFromDist1 ( RX10_TEMP306 , RX10_TEMP308 ) ; final place RX10_TEMP314 = here ; final boolean RX10_TEMP315 = RX10_TEMP312 != RX10_TEMP314 ; if ( RX10_TEMP315 ) { String RX10_TEMP313 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP313 ) ; }
 final int RX10_TEMP316 = Program . getRefArrayValue1int ( outRt , RX10_TEMP308 ) ; final int X10_TEMP144 = ( RX10_TEMP316 ) ; final int X10_TEMP145 = ( 1 ) ; final int X10_TEMP147 = ( X10_TEMP144 + X10_TEMP145 ) ; final int X10_TEMP148 = ( X10_TEMP147 ) ; final Dist1 RX10_TEMP317 = outRt . distValue ; final Region1 RX10_TEMP318 = RX10_TEMP317 . dReg ; final int RX10_TEMP319 = Program . searchPointInRegion1 ( RX10_TEMP318 , pl ) ; final int RX10_TEMP320 = 0 ; final boolean RX10_TEMP321 = RX10_TEMP319 < RX10_TEMP320 ; if ( RX10_TEMP321 ) { String RX10_TEMP322 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP322 ) ; }
 final place RX10_TEMP323 = Program . getPlaceFromDist1 ( RX10_TEMP317 , RX10_TEMP319 ) ; final place RX10_TEMP325 = here ; final boolean RX10_TEMP326 = RX10_TEMP323 != RX10_TEMP325 ; if ( RX10_TEMP326 ) { String RX10_TEMP324 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP324 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP319 , X10_TEMP148 ) ; }
 else { final boolean X10_TEMP150 = i2 < lBorder ; if ( X10_TEMP150 ) { final Dist1 RX10_TEMP327 = outLt . distValue ; final Region1 RX10_TEMP328 = RX10_TEMP327 . dReg ; final int RX10_TEMP329 = Program . searchPointInRegion1 ( RX10_TEMP328 , pl ) ; final int RX10_TEMP330 = 0 ; final boolean RX10_TEMP331 = RX10_TEMP329 < RX10_TEMP330 ; if ( RX10_TEMP331 ) { String RX10_TEMP332 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP332 ) ; }
 final place RX10_TEMP333 = Program . getPlaceFromDist1 ( RX10_TEMP327 , RX10_TEMP329 ) ; final place RX10_TEMP335 = here ; final boolean RX10_TEMP336 = RX10_TEMP333 != RX10_TEMP335 ; if ( RX10_TEMP336 ) { String RX10_TEMP334 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP334 ) ; }
 final int RX10_TEMP337 = Program . getRefArrayValue1int ( outLt , RX10_TEMP329 ) ; final int X10_TEMP153 = ( RX10_TEMP337 ) ; final int X10_TEMP154 = ( 1 ) ; final int X10_TEMP156 = ( X10_TEMP153 + X10_TEMP154 ) ; final int X10_TEMP157 = ( X10_TEMP156 ) ; final Dist1 RX10_TEMP338 = outLt . distValue ; final Region1 RX10_TEMP339 = RX10_TEMP338 . dReg ; final int RX10_TEMP340 = Program . searchPointInRegion1 ( RX10_TEMP339 , pl ) ; final int RX10_TEMP341 = 0 ; final boolean RX10_TEMP342 = RX10_TEMP340 < RX10_TEMP341 ; if ( RX10_TEMP342 ) { String RX10_TEMP343 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP343 ) ; }
 final place RX10_TEMP344 = Program . getPlaceFromDist1 ( RX10_TEMP338 , RX10_TEMP340 ) ; final place RX10_TEMP346 = here ; final boolean RX10_TEMP347 = RX10_TEMP344 != RX10_TEMP346 ; if ( RX10_TEMP347 ) { String RX10_TEMP345 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP345 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP340 , X10_TEMP157 ) ; }
 }
 }
 }
 }
 public static void thread65(final T65 utmpz) {final  int RX10_TEMP360 = utmpz.RX10_TEMP360;
final  place RX10_TEMP356 = utmpz.RX10_TEMP356;
final  point ( : rank==1 ) RX10_TEMP355 = utmpz.RX10_TEMP355;
final  intStub [ : rank==1 ] RX10_TEMP354 = utmpz.RX10_TEMP354;
 { final dist ( : rank==1 ) RX10_TEMP362 = [ 0 : RX10_TEMP360 ] -> here ; final int [ : rank==1 ] RX10_TEMP363 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP362 ] ( point ( : rank==1 ) RX10_TEMP361 ) { final int X10_TEMP161 = ( 0 ) ; return X10_TEMP161 ; }
 ) ; final intStub RX10_TEMP364 = new intStub ( RX10_TEMP363 ) ; 
 final T235 utmp235 = new T235(RX10_TEMP364, RX10_TEMP355, RX10_TEMP354);
 async (RX10_TEMP356) {Program.thread235(utmp235); }
 }
 }
 public static void thread66(final T66 utmpz) {final  int RX10_TEMP381 = utmpz.RX10_TEMP381;
final  place RX10_TEMP377 = utmpz.RX10_TEMP377;
final  point ( : rank==1 ) RX10_TEMP376 = utmpz.RX10_TEMP376;
final  intStub [ : rank==1 ] RX10_TEMP375 = utmpz.RX10_TEMP375;
 { final dist ( : rank==1 ) RX10_TEMP383 = [ 0 : RX10_TEMP381 ] -> here ; final int [ : rank==1 ] RX10_TEMP384 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP383 ] ( point ( : rank==1 ) RX10_TEMP382 ) { final int X10_TEMP164 = ( 0 ) ; return X10_TEMP164 ; }
 ) ; final intStub RX10_TEMP385 = new intStub ( RX10_TEMP384 ) ; 
 final T236 utmp236 = new T236(RX10_TEMP385, RX10_TEMP376, RX10_TEMP375);
 async (RX10_TEMP377) {Program.thread236(utmp236); }
 }
 }
 public static void thread67(final T67 utmpz) {final  Point1 pl = utmpz.pl;
final  intRefArray1 inRt = utmpz.inRt;
final  intRefArray1 inLt = utmpz.inLt;
 { final int X10_TEMP171 = ( 0 ) ; final int X10_TEMP172 = ( X10_TEMP171 ) ; final Dist1 RX10_TEMP402 = inLt . distValue ; final Region1 RX10_TEMP403 = RX10_TEMP402 . dReg ; final int RX10_TEMP404 = Program . searchPointInRegion1 ( RX10_TEMP403 , pl ) ; final int RX10_TEMP405 = 0 ; final boolean RX10_TEMP406 = RX10_TEMP404 < RX10_TEMP405 ; if ( RX10_TEMP406 ) { String RX10_TEMP407 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP407 ) ; }
 final place RX10_TEMP408 = Program . getPlaceFromDist1 ( RX10_TEMP402 , RX10_TEMP404 ) ; final place RX10_TEMP410 = here ; final boolean RX10_TEMP411 = RX10_TEMP408 != RX10_TEMP410 ; if ( RX10_TEMP411 ) { String RX10_TEMP409 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP409 ) ; }
 Program . setRefArrayValue1int ( inLt , RX10_TEMP404 , X10_TEMP172 ) ; final int X10_TEMP175 = ( 0 ) ; final int X10_TEMP176 = ( X10_TEMP175 ) ; final Dist1 RX10_TEMP412 = inRt . distValue ; final Region1 RX10_TEMP413 = RX10_TEMP412 . dReg ; final int RX10_TEMP414 = Program . searchPointInRegion1 ( RX10_TEMP413 , pl ) ; final int RX10_TEMP415 = 0 ; final boolean RX10_TEMP416 = RX10_TEMP414 < RX10_TEMP415 ; if ( RX10_TEMP416 ) { String RX10_TEMP417 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP417 ) ; }
 final place RX10_TEMP418 = Program . getPlaceFromDist1 ( RX10_TEMP412 , RX10_TEMP414 ) ; final place RX10_TEMP420 = here ; final boolean RX10_TEMP421 = RX10_TEMP418 != RX10_TEMP420 ; if ( RX10_TEMP421 ) { String RX10_TEMP419 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP419 ) ; }
 Program . setRefArrayValue1int ( inRt , RX10_TEMP414 , X10_TEMP176 ) ; }
 }
 public static void thread68(final T68 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 inLt = utmpz.inLt;
final  intRefArray1 sizes = utmpz.sizes;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  Region1 rRank2 = utmpz.rRank2;
 { final Point1 RX10_TEMP434 = new Point1 ( pl ) ; final Dist1 RX10_TEMP435 = outRt . distValue ; final Region1 RX10_TEMP436 = RX10_TEMP435 . dReg ; final int RX10_TEMP437 = Program . searchPointInRegion1 ( RX10_TEMP436 , RX10_TEMP434 ) ; final int RX10_TEMP438 = 0 ; final boolean RX10_TEMP439 = RX10_TEMP437 < RX10_TEMP438 ; if ( RX10_TEMP439 ) { String RX10_TEMP440 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP440 ) ; }
 final place RX10_TEMP441 = Program . getPlaceFromDist1 ( RX10_TEMP435 , RX10_TEMP437 ) ; final place RX10_TEMP443 = here ; final boolean RX10_TEMP444 = RX10_TEMP441 != RX10_TEMP443 ; if ( RX10_TEMP444 ) { String RX10_TEMP442 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP442 ) ; }
 final int RX10_TEMP445 = Program . getRefArrayValue1int ( outRt , RX10_TEMP437 ) ; final int X10_TEMP182 = ( RX10_TEMP445 ) ; final int X10_TEMP183 = ( 0 ) ; final boolean X10_TEMP185 = X10_TEMP182 > X10_TEMP183 ; if ( X10_TEMP185 ) { final Point1 RX10_TEMP446 = new Point1 ( pl ) ; final Dist1 RX10_TEMP447 = outRt . distValue ; final Region1 RX10_TEMP448 = RX10_TEMP447 . dReg ; final int RX10_TEMP449 = Program . searchPointInRegion1 ( RX10_TEMP448 , RX10_TEMP446 ) ; final int RX10_TEMP450 = 0 ; final boolean RX10_TEMP451 = RX10_TEMP449 < RX10_TEMP450 ; if ( RX10_TEMP451 ) { String RX10_TEMP452 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP452 ) ; }
 final place RX10_TEMP453 = Program . getPlaceFromDist1 ( RX10_TEMP447 , RX10_TEMP449 ) ; final place RX10_TEMP455 = here ; final boolean RX10_TEMP456 = RX10_TEMP453 != RX10_TEMP455 ; if ( RX10_TEMP456 ) { String RX10_TEMP454 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP454 ) ; }
 final int RX10_TEMP457 = Program . getRefArrayValue1int ( outRt , RX10_TEMP449 ) ; final int bsize = ( RX10_TEMP457 ) ; final int X10_TEMP191 = ( 0 ) ; final int X10_TEMP189 = ( 1 ) ; final int X10_TEMP192 = ( bsize - X10_TEMP189 ) ; final Region2 rBuffer = Program . createNewRegion2RA ( X10_TEMP191 , X10_TEMP192 , rRank2 ) ; final Region2 RX10_TEMP458 = rBuffer ; final int RX10_TEMP499 = rBuffer . regSize ; final int RX10_TEMP500 = 1 ; final int RX10_TEMP501 = RX10_TEMP499 - RX10_TEMP500 ; final region ( : rank==1 ) RX10_TEMP498 = [ 0 : RX10_TEMP501 ] ; final double value [ : rank==1 ] RX10_TEMP502 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP498 ] ( point ( : rank==1 ) RX10_TEMP459 ) { final int RX10_TEMP461 = RX10_TEMP459 [0] ; final Point2 RX10_TEMP460 = Program . regionOrdinalPoint2 ( RX10_TEMP458 , RX10_TEMP461 ) ; final int i = RX10_TEMP460 . f0 ; final int j = RX10_TEMP460 . f1 ; final Point1 RX10_TEMP462 = new Point1 ( pl ) ; final Dist1 RX10_TEMP463 = sizes . distValue ; final Region1 RX10_TEMP464 = RX10_TEMP463 . dReg ; final int RX10_TEMP465 = Program . searchPointInRegion1 ( RX10_TEMP464 , RX10_TEMP462 ) ; final int RX10_TEMP466 = 0 ; final boolean RX10_TEMP467 = RX10_TEMP465 < RX10_TEMP466 ; if ( RX10_TEMP467 ) { String RX10_TEMP468 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP468 ) ; }
 final place RX10_TEMP469 = Program . getPlaceFromDist1 ( RX10_TEMP463 , RX10_TEMP465 ) ; final place RX10_TEMP471 = here ; final boolean RX10_TEMP472 = RX10_TEMP469 != RX10_TEMP471 ; if ( RX10_TEMP472 ) { String RX10_TEMP470 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP470 ) ; }
 final int RX10_TEMP473 = Program . getRefArrayValue1int ( sizes , RX10_TEMP465 ) ; final int X10_TEMP197 = ( RX10_TEMP473 ) ; final int X10_TEMP199 = ( i + X10_TEMP197 ) ; final Point1 RX10_TEMP474 = new Point1 ( pl ) ; final Dist1 RX10_TEMP475 = outRt . distValue ; final Region1 RX10_TEMP476 = RX10_TEMP475 . dReg ; final int RX10_TEMP477 = Program . searchPointInRegion1 ( RX10_TEMP476 , RX10_TEMP474 ) ; final int RX10_TEMP478 = 0 ; final boolean RX10_TEMP479 = RX10_TEMP477 < RX10_TEMP478 ; if ( RX10_TEMP479 ) { String RX10_TEMP480 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP480 ) ; }
 final place RX10_TEMP481 = Program . getPlaceFromDist1 ( RX10_TEMP475 , RX10_TEMP477 ) ; final place RX10_TEMP483 = here ; final boolean RX10_TEMP484 = RX10_TEMP481 != RX10_TEMP483 ; if ( RX10_TEMP484 ) { String RX10_TEMP482 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP482 ) ; }
 final int RX10_TEMP485 = Program . getRefArrayValue1int ( outRt , RX10_TEMP477 ) ; final int X10_TEMP200 = ( RX10_TEMP485 ) ; final int X10_TEMP203 = ( X10_TEMP199 - X10_TEMP200 ) ; final Point3 RX10_TEMP486 = new Point3 ( pl , X10_TEMP203 , j ) ; final Dist3 RX10_TEMP487 = srcBuffer . distValue ; final Region3 RX10_TEMP488 = RX10_TEMP487 . dReg ; final int RX10_TEMP489 = Program . searchPointInRegion3 ( RX10_TEMP488 , RX10_TEMP486 ) ; final int RX10_TEMP490 = 0 ; final boolean RX10_TEMP491 = RX10_TEMP489 < RX10_TEMP490 ; if ( RX10_TEMP491 ) { String RX10_TEMP492 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP492 ) ; }
 final place RX10_TEMP493 = Program . getPlaceFromDist3 ( RX10_TEMP487 , RX10_TEMP489 ) ; final place RX10_TEMP495 = here ; final boolean RX10_TEMP496 = RX10_TEMP493 != RX10_TEMP495 ; if ( RX10_TEMP496 ) { String RX10_TEMP494 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP494 ) ; }
 final double RX10_TEMP497 = Program . getRefArrayValue3double ( srcBuffer , RX10_TEMP489 ) ; final double X10_TEMP205 = ( RX10_TEMP497 ) ; return X10_TEMP205 ; }
 ) ; final doubleValArray2 RX10_TEMP503 = new doubleValArray2 ( rBuffer , RX10_TEMP502 ) ; final doubleValArray2 X10_TEMP206 = RX10_TEMP503 ; final doubleValArray2 sBuffer = X10_TEMP206 ; final place X10_TEMP208 = ( here ) ; final place X10_TEMP210 = X10_TEMP208 . next ( ) ; 
 final T237 utmp237 = new T237(sBuffer, rBuffer, bsize, inLt, dstBuffer);
 async (X10_TEMP210) {Program.thread237(utmp237); }
 }
 }
 }
 public static void thread69(final T69 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 pr = utmpz.pr;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 inLt = utmpz.inLt;
final  intRefArray1 sizes = utmpz.sizes;
final  intRefArray1 offsets = utmpz.offsets;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  Region1 rRank2 = utmpz.rRank2;
final  int MAX_ROWS = utmpz.MAX_ROWS;
 { final Point1 RX10_TEMP551 = new Point1 ( pl ) ; final Dist1 RX10_TEMP552 = sizes . distValue ; final Region1 RX10_TEMP553 = RX10_TEMP552 . dReg ; final int RX10_TEMP554 = Program . searchPointInRegion1 ( RX10_TEMP553 , RX10_TEMP551 ) ; final int RX10_TEMP555 = 0 ; final boolean RX10_TEMP556 = RX10_TEMP554 < RX10_TEMP555 ; if ( RX10_TEMP556 ) { String RX10_TEMP557 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP557 ) ; }
 final place RX10_TEMP558 = Program . getPlaceFromDist1 ( RX10_TEMP552 , RX10_TEMP554 ) ; final place RX10_TEMP560 = here ; final boolean RX10_TEMP561 = RX10_TEMP558 != RX10_TEMP560 ; if ( RX10_TEMP561 ) { String RX10_TEMP559 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP559 ) ; }
 final int RX10_TEMP562 = Program . getRefArrayValue1int ( sizes , RX10_TEMP554 ) ; final int X10_TEMP235 = ( RX10_TEMP562 ) ; final Point1 RX10_TEMP563 = new Point1 ( pl ) ; final Dist1 RX10_TEMP564 = outRt . distValue ; final Region1 RX10_TEMP565 = RX10_TEMP564 . dReg ; final int RX10_TEMP566 = Program . searchPointInRegion1 ( RX10_TEMP565 , RX10_TEMP563 ) ; final int RX10_TEMP567 = 0 ; final boolean RX10_TEMP568 = RX10_TEMP566 < RX10_TEMP567 ; if ( RX10_TEMP568 ) { String RX10_TEMP569 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP569 ) ; }
 final place RX10_TEMP570 = Program . getPlaceFromDist1 ( RX10_TEMP564 , RX10_TEMP566 ) ; final place RX10_TEMP572 = here ; final boolean RX10_TEMP573 = RX10_TEMP570 != RX10_TEMP572 ; if ( RX10_TEMP573 ) { String RX10_TEMP571 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP571 ) ; }
 final int RX10_TEMP574 = Program . getRefArrayValue1int ( outRt , RX10_TEMP566 ) ; final int X10_TEMP236 = ( RX10_TEMP574 ) ; final int X10_TEMP238 = ( X10_TEMP235 - X10_TEMP236 ) ; final int X10_TEMP239 = ( X10_TEMP238 ) ; final Point1 RX10_TEMP575 = new Point1 ( pl ) ; final Dist1 RX10_TEMP576 = sizes . distValue ; final Region1 RX10_TEMP577 = RX10_TEMP576 . dReg ; final int RX10_TEMP578 = Program . searchPointInRegion1 ( RX10_TEMP577 , RX10_TEMP575 ) ; final int RX10_TEMP579 = 0 ; final boolean RX10_TEMP580 = RX10_TEMP578 < RX10_TEMP579 ; if ( RX10_TEMP580 ) { String RX10_TEMP581 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP581 ) ; }
 final place RX10_TEMP582 = Program . getPlaceFromDist1 ( RX10_TEMP576 , RX10_TEMP578 ) ; final place RX10_TEMP584 = here ; final boolean RX10_TEMP585 = RX10_TEMP582 != RX10_TEMP584 ; if ( RX10_TEMP585 ) { String RX10_TEMP583 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP583 ) ; }
 Program . setRefArrayValue1int ( sizes , RX10_TEMP578 , X10_TEMP239 ) ; final Point1 RX10_TEMP586 = new Point1 ( pl ) ; final Dist1 RX10_TEMP587 = sizes . distValue ; final Region1 RX10_TEMP588 = RX10_TEMP587 . dReg ; final int RX10_TEMP589 = Program . searchPointInRegion1 ( RX10_TEMP588 , RX10_TEMP586 ) ; final int RX10_TEMP590 = 0 ; final boolean RX10_TEMP591 = RX10_TEMP589 < RX10_TEMP590 ; if ( RX10_TEMP591 ) { String RX10_TEMP592 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP592 ) ; }
 final place RX10_TEMP593 = Program . getPlaceFromDist1 ( RX10_TEMP587 , RX10_TEMP589 ) ; final place RX10_TEMP595 = here ; final boolean RX10_TEMP596 = RX10_TEMP593 != RX10_TEMP595 ; if ( RX10_TEMP596 ) { String RX10_TEMP594 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP594 ) ; }
 final int RX10_TEMP597 = Program . getRefArrayValue1int ( sizes , RX10_TEMP589 ) ; final int X10_TEMP243 = ( RX10_TEMP597 ) ; final Point1 RX10_TEMP598 = new Point1 ( pl ) ; final Dist1 RX10_TEMP599 = inLt . distValue ; final Region1 RX10_TEMP600 = RX10_TEMP599 . dReg ; final int RX10_TEMP601 = Program . searchPointInRegion1 ( RX10_TEMP600 , RX10_TEMP598 ) ; final int RX10_TEMP602 = 0 ; final boolean RX10_TEMP603 = RX10_TEMP601 < RX10_TEMP602 ; if ( RX10_TEMP603 ) { String RX10_TEMP604 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP604 ) ; }
 final place RX10_TEMP605 = Program . getPlaceFromDist1 ( RX10_TEMP599 , RX10_TEMP601 ) ; final place RX10_TEMP607 = here ; final boolean RX10_TEMP608 = RX10_TEMP605 != RX10_TEMP607 ; if ( RX10_TEMP608 ) { String RX10_TEMP606 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP606 ) ; }
 final int RX10_TEMP609 = Program . getRefArrayValue1int ( inLt , RX10_TEMP601 ) ; final int X10_TEMP244 = ( RX10_TEMP609 ) ; final int X10_TEMP245 = ( X10_TEMP243 + X10_TEMP244 ) ; final int X10_TEMP248 = ( X10_TEMP245 - MAX_ROWS ) ; final int X10_TEMP249 = ( 0 ) ; final int X10_TEMP251 = ( Program . X10Util_maxInt ( X10_TEMP248 , X10_TEMP249 ) ) ; final int X10_TEMP252 = ( X10_TEMP251 ) ; final Point1 RX10_TEMP610 = new Point1 ( pl ) ; final Dist1 RX10_TEMP611 = outRt . distValue ; final Region1 RX10_TEMP612 = RX10_TEMP611 . dReg ; final int RX10_TEMP613 = Program . searchPointInRegion1 ( RX10_TEMP612 , RX10_TEMP610 ) ; final int RX10_TEMP614 = 0 ; final boolean RX10_TEMP615 = RX10_TEMP613 < RX10_TEMP614 ; if ( RX10_TEMP615 ) { String RX10_TEMP616 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP616 ) ; }
 final place RX10_TEMP617 = Program . getPlaceFromDist1 ( RX10_TEMP611 , RX10_TEMP613 ) ; final place RX10_TEMP619 = here ; final boolean RX10_TEMP620 = RX10_TEMP617 != RX10_TEMP619 ; if ( RX10_TEMP620 ) { String RX10_TEMP618 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP618 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP613 , X10_TEMP252 ) ; final Point1 RX10_TEMP621 = new Point1 ( pl ) ; final Dist1 RX10_TEMP622 = sizes . distValue ; final Region1 RX10_TEMP623 = RX10_TEMP622 . dReg ; final int RX10_TEMP624 = Program . searchPointInRegion1 ( RX10_TEMP623 , RX10_TEMP621 ) ; final int RX10_TEMP625 = 0 ; final boolean RX10_TEMP626 = RX10_TEMP624 < RX10_TEMP625 ; if ( RX10_TEMP626 ) { String RX10_TEMP627 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP627 ) ; }
 final place RX10_TEMP628 = Program . getPlaceFromDist1 ( RX10_TEMP622 , RX10_TEMP624 ) ; final place RX10_TEMP630 = here ; final boolean RX10_TEMP631 = RX10_TEMP628 != RX10_TEMP630 ; if ( RX10_TEMP631 ) { String RX10_TEMP629 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP629 ) ; }
 final int RX10_TEMP632 = Program . getRefArrayValue1int ( sizes , RX10_TEMP624 ) ; final int X10_TEMP256 = ( RX10_TEMP632 ) ; final Point1 RX10_TEMP633 = new Point1 ( pl ) ; final Dist1 RX10_TEMP634 = outRt . distValue ; final Region1 RX10_TEMP635 = RX10_TEMP634 . dReg ; final int RX10_TEMP636 = Program . searchPointInRegion1 ( RX10_TEMP635 , RX10_TEMP633 ) ; final int RX10_TEMP637 = 0 ; final boolean RX10_TEMP638 = RX10_TEMP636 < RX10_TEMP637 ; if ( RX10_TEMP638 ) { String RX10_TEMP639 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP639 ) ; }
 final place RX10_TEMP640 = Program . getPlaceFromDist1 ( RX10_TEMP634 , RX10_TEMP636 ) ; final place RX10_TEMP642 = here ; final boolean RX10_TEMP643 = RX10_TEMP640 != RX10_TEMP642 ; if ( RX10_TEMP643 ) { String RX10_TEMP641 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP641 ) ; }
 final int RX10_TEMP644 = Program . getRefArrayValue1int ( outRt , RX10_TEMP636 ) ; final int X10_TEMP257 = ( RX10_TEMP644 ) ; final int X10_TEMP259 = ( X10_TEMP256 - X10_TEMP257 ) ; final int X10_TEMP260 = ( X10_TEMP259 ) ; final Point1 RX10_TEMP645 = new Point1 ( pl ) ; final Dist1 RX10_TEMP646 = sizes . distValue ; final Region1 RX10_TEMP647 = RX10_TEMP646 . dReg ; final int RX10_TEMP648 = Program . searchPointInRegion1 ( RX10_TEMP647 , RX10_TEMP645 ) ; final int RX10_TEMP649 = 0 ; final boolean RX10_TEMP650 = RX10_TEMP648 < RX10_TEMP649 ; if ( RX10_TEMP650 ) { String RX10_TEMP651 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP651 ) ; }
 final place RX10_TEMP652 = Program . getPlaceFromDist1 ( RX10_TEMP646 , RX10_TEMP648 ) ; final place RX10_TEMP654 = here ; final boolean RX10_TEMP655 = RX10_TEMP652 != RX10_TEMP654 ; if ( RX10_TEMP655 ) { String RX10_TEMP653 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP653 ) ; }
 Program . setRefArrayValue1int ( sizes , RX10_TEMP648 , X10_TEMP260 ) ; final Point1 RX10_TEMP656 = new Point1 ( pl ) ; final Dist1 RX10_TEMP657 = outRt . distValue ; final Region1 RX10_TEMP658 = RX10_TEMP657 . dReg ; final int RX10_TEMP659 = Program . searchPointInRegion1 ( RX10_TEMP658 , RX10_TEMP656 ) ; final int RX10_TEMP660 = 0 ; final boolean RX10_TEMP661 = RX10_TEMP659 < RX10_TEMP660 ; if ( RX10_TEMP661 ) { String RX10_TEMP662 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP662 ) ; }
 final place RX10_TEMP663 = Program . getPlaceFromDist1 ( RX10_TEMP657 , RX10_TEMP659 ) ; final place RX10_TEMP665 = here ; final boolean RX10_TEMP666 = RX10_TEMP663 != RX10_TEMP665 ; if ( RX10_TEMP666 ) { String RX10_TEMP664 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP664 ) ; }
 final int RX10_TEMP667 = Program . getRefArrayValue1int ( outRt , RX10_TEMP659 ) ; final int X10_TEMP262 = ( RX10_TEMP667 ) ; final int X10_TEMP263 = ( 0 ) ; final boolean X10_TEMP265 = X10_TEMP262 > X10_TEMP263 ; if ( X10_TEMP265 ) { final Point1 RX10_TEMP668 = new Point1 ( pl ) ; final Dist1 RX10_TEMP669 = pr . distValue ; final Region1 RX10_TEMP670 = RX10_TEMP669 . dReg ; final int RX10_TEMP671 = Program . searchPointInRegion1 ( RX10_TEMP670 , RX10_TEMP668 ) ; final int RX10_TEMP672 = 0 ; final boolean RX10_TEMP673 = RX10_TEMP671 < RX10_TEMP672 ; if ( RX10_TEMP673 ) { String RX10_TEMP674 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP674 ) ; }
 final place RX10_TEMP675 = Program . getPlaceFromDist1 ( RX10_TEMP669 , RX10_TEMP671 ) ; final place RX10_TEMP677 = here ; final boolean RX10_TEMP678 = RX10_TEMP675 != RX10_TEMP677 ; if ( RX10_TEMP678 ) { String RX10_TEMP676 = "Bad place access for array pr" ; throw new RuntimeException ( RX10_TEMP676 ) ; }
 final int RX10_TEMP679 = Program . getRefArrayValue1int ( pr , RX10_TEMP671 ) ; final int X10_TEMP271 = ( RX10_TEMP679 ) ; final Point1 RX10_TEMP680 = new Point1 ( pl ) ; final Dist1 RX10_TEMP681 = outRt . distValue ; final Region1 RX10_TEMP682 = RX10_TEMP681 . dReg ; final int RX10_TEMP683 = Program . searchPointInRegion1 ( RX10_TEMP682 , RX10_TEMP680 ) ; final int RX10_TEMP684 = 0 ; final boolean RX10_TEMP685 = RX10_TEMP683 < RX10_TEMP684 ; if ( RX10_TEMP685 ) { String RX10_TEMP686 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP686 ) ; }
 final place RX10_TEMP687 = Program . getPlaceFromDist1 ( RX10_TEMP681 , RX10_TEMP683 ) ; final place RX10_TEMP689 = here ; final boolean RX10_TEMP690 = RX10_TEMP687 != RX10_TEMP689 ; if ( RX10_TEMP690 ) { String RX10_TEMP688 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP688 ) ; }
 final int RX10_TEMP691 = Program . getRefArrayValue1int ( outRt , RX10_TEMP683 ) ; final int X10_TEMP272 = ( RX10_TEMP691 ) ; final int X10_TEMP274 = ( Program . X10Util_maxInt ( X10_TEMP271 , X10_TEMP272 ) ) ; final int X10_TEMP275 = ( X10_TEMP274 ) ; final Point1 RX10_TEMP692 = new Point1 ( pl ) ; final Dist1 RX10_TEMP693 = pr . distValue ; final Region1 RX10_TEMP694 = RX10_TEMP693 . dReg ; final int RX10_TEMP695 = Program . searchPointInRegion1 ( RX10_TEMP694 , RX10_TEMP692 ) ; final int RX10_TEMP696 = 0 ; final boolean RX10_TEMP697 = RX10_TEMP695 < RX10_TEMP696 ; if ( RX10_TEMP697 ) { String RX10_TEMP698 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP698 ) ; }
 final place RX10_TEMP699 = Program . getPlaceFromDist1 ( RX10_TEMP693 , RX10_TEMP695 ) ; final place RX10_TEMP701 = here ; final boolean RX10_TEMP702 = RX10_TEMP699 != RX10_TEMP701 ; if ( RX10_TEMP702 ) { String RX10_TEMP700 = "Bad place access for array pr" ; throw new RuntimeException ( RX10_TEMP700 ) ; }
 Program . setRefArrayValue1int ( pr , RX10_TEMP695 , X10_TEMP275 ) ; final Point1 RX10_TEMP703 = new Point1 ( pl ) ; final Dist1 RX10_TEMP704 = outRt . distValue ; final Region1 RX10_TEMP705 = RX10_TEMP704 . dReg ; final int RX10_TEMP706 = Program . searchPointInRegion1 ( RX10_TEMP705 , RX10_TEMP703 ) ; final int RX10_TEMP707 = 0 ; final boolean RX10_TEMP708 = RX10_TEMP706 < RX10_TEMP707 ; if ( RX10_TEMP708 ) { String RX10_TEMP709 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP709 ) ; }
 final place RX10_TEMP710 = Program . getPlaceFromDist1 ( RX10_TEMP704 , RX10_TEMP706 ) ; final place RX10_TEMP712 = here ; final boolean RX10_TEMP713 = RX10_TEMP710 != RX10_TEMP712 ; if ( RX10_TEMP713 ) { String RX10_TEMP711 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP711 ) ; }
 final int RX10_TEMP714 = Program . getRefArrayValue1int ( outRt , RX10_TEMP706 ) ; final int X10_TEMP281 = ( RX10_TEMP714 ) ; final Point1 RX10_TEMP715 = new Point1 ( pl ) ; final Dist1 RX10_TEMP716 = inLt . distValue ; final Region1 RX10_TEMP717 = RX10_TEMP716 . dReg ; final int RX10_TEMP718 = Program . searchPointInRegion1 ( RX10_TEMP717 , RX10_TEMP715 ) ; final int RX10_TEMP719 = 0 ; final boolean RX10_TEMP720 = RX10_TEMP718 < RX10_TEMP719 ; if ( RX10_TEMP720 ) { String RX10_TEMP721 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP721 ) ; }
 final place RX10_TEMP722 = Program . getPlaceFromDist1 ( RX10_TEMP716 , RX10_TEMP718 ) ; final place RX10_TEMP724 = here ; final boolean RX10_TEMP725 = RX10_TEMP722 != RX10_TEMP724 ; if ( RX10_TEMP725 ) { String RX10_TEMP723 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP723 ) ; }
 final int RX10_TEMP726 = Program . getRefArrayValue1int ( inLt , RX10_TEMP718 ) ; final int X10_TEMP279 = ( RX10_TEMP726 ) ; final int X10_TEMP282 = ( MAX_ROWS - X10_TEMP279 ) ; final int rsize = ( Program . X10Util_minInt ( X10_TEMP281 , X10_TEMP282 ) ) ; finish { final int X10_TEMP287 = ( 0 ) ; final int X10_TEMP285 = ( 1 ) ; final int X10_TEMP288 = ( rsize - X10_TEMP285 ) ; final Region2 X10_TEMP291 = Program . createNewRegion2RA ( X10_TEMP287 , X10_TEMP288 , rRank2 ) ; final place X10_TEMP292 = here ; final int RX10_TEMP731 = 1 ; int RX10_TEMP729 = X10_TEMP291 . regSize ; RX10_TEMP729 = RX10_TEMP729 - RX10_TEMP731 ; final region ( : rank==1 ) RX10_TEMP730 = [ 0 : RX10_TEMP729 ] ; for ( point ( : rank==1 ) RX10_TEMP727 : RX10_TEMP730 ) { final int RX10_TEMP732 = RX10_TEMP727 [0] ; final Point2 RX10_TEMP728 = Program . regionOrdinalPoint2 ( X10_TEMP291 , RX10_TEMP732 ) ; final int i = RX10_TEMP728 . f0 ; final int j = RX10_TEMP728 . f1 ; 
 final T238 utmp238 = new T238(j, i, rsize, pl, sizes, dstBuffer, srcBuffer, MAX_ROWS);
 async (X10_TEMP292) {Program.thread238(utmp238); }
 }
 }
 }
 final Point1 RX10_TEMP768 = new Point1 ( pl ) ; final Dist1 RX10_TEMP769 = sizes . distValue ; final Region1 RX10_TEMP770 = RX10_TEMP769 . dReg ; final int RX10_TEMP771 = Program . searchPointInRegion1 ( RX10_TEMP770 , RX10_TEMP768 ) ; final int RX10_TEMP772 = 0 ; final boolean RX10_TEMP773 = RX10_TEMP771 < RX10_TEMP772 ; if ( RX10_TEMP773 ) { String RX10_TEMP774 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP774 ) ; }
 final place RX10_TEMP775 = Program . getPlaceFromDist1 ( RX10_TEMP769 , RX10_TEMP771 ) ; final place RX10_TEMP777 = here ; final boolean RX10_TEMP778 = RX10_TEMP775 != RX10_TEMP777 ; if ( RX10_TEMP778 ) { String RX10_TEMP776 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP776 ) ; }
 final int RX10_TEMP779 = Program . getRefArrayValue1int ( sizes , RX10_TEMP771 ) ; final int X10_TEMP308 = ( RX10_TEMP779 ) ; final int X10_TEMP309 = ( 0 ) ; final boolean X10_TEMP313 = ( X10_TEMP308 > X10_TEMP309 ) ; final Point1 RX10_TEMP780 = new Point1 ( pl ) ; final Dist1 RX10_TEMP781 = inLt . distValue ; final Region1 RX10_TEMP782 = RX10_TEMP781 . dReg ; final int RX10_TEMP783 = Program . searchPointInRegion1 ( RX10_TEMP782 , RX10_TEMP780 ) ; final int RX10_TEMP784 = 0 ; final boolean RX10_TEMP785 = RX10_TEMP783 < RX10_TEMP784 ; if ( RX10_TEMP785 ) { String RX10_TEMP786 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP786 ) ; }
 final place RX10_TEMP787 = Program . getPlaceFromDist1 ( RX10_TEMP781 , RX10_TEMP783 ) ; final place RX10_TEMP789 = here ; final boolean RX10_TEMP790 = RX10_TEMP787 != RX10_TEMP789 ; if ( RX10_TEMP790 ) { String RX10_TEMP788 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP788 ) ; }
 final int RX10_TEMP791 = Program . getRefArrayValue1int ( inLt , RX10_TEMP783 ) ; final int X10_TEMP311 = ( RX10_TEMP791 ) ; final int X10_TEMP312 = ( 0 ) ; final boolean X10_TEMP314 = ( X10_TEMP311 > X10_TEMP312 ) ; final boolean X10_TEMP316 = X10_TEMP313 && X10_TEMP314 ; if ( X10_TEMP316 ) { final int X10_TEMP320 = ( 1 ) ; final Point1 RX10_TEMP792 = new Point1 ( pl ) ; final Dist1 RX10_TEMP793 = sizes . distValue ; final Region1 RX10_TEMP794 = RX10_TEMP793 . dReg ; final int RX10_TEMP795 = Program . searchPointInRegion1 ( RX10_TEMP794 , RX10_TEMP792 ) ; final int RX10_TEMP796 = 0 ; final boolean RX10_TEMP797 = RX10_TEMP795 < RX10_TEMP796 ; if ( RX10_TEMP797 ) { String RX10_TEMP798 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP798 ) ; }
 final place RX10_TEMP799 = Program . getPlaceFromDist1 ( RX10_TEMP793 , RX10_TEMP795 ) ; final place RX10_TEMP801 = here ; final boolean RX10_TEMP802 = RX10_TEMP799 != RX10_TEMP801 ; if ( RX10_TEMP802 ) { String RX10_TEMP800 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP800 ) ; }
 final int RX10_TEMP803 = Program . getRefArrayValue1int ( sizes , RX10_TEMP795 ) ; final int X10_TEMP321 = ( RX10_TEMP803 ) ; final Region1 X10_TEMP323 = Program . createNewRegion1R ( X10_TEMP320 , X10_TEMP321 ) ; final int RX10_TEMP808 = 1 ; int RX10_TEMP806 = X10_TEMP323 . regSize ; RX10_TEMP806 = RX10_TEMP806 - RX10_TEMP808 ; final region ( : rank==1 ) RX10_TEMP807 = [ 0 : RX10_TEMP806 ] ; for ( point ( : rank==1 ) RX10_TEMP804 : RX10_TEMP807 ) { final int RX10_TEMP809 = RX10_TEMP804 [0] ; final Point1 RX10_TEMP805 = Program . regionOrdinalPoint1 ( X10_TEMP323 , RX10_TEMP809 ) ; final int i1 = RX10_TEMP805 . f0 ; final Point1 RX10_TEMP810 = new Point1 ( pl ) ; final Dist1 RX10_TEMP811 = sizes . distValue ; final Region1 RX10_TEMP812 = RX10_TEMP811 . dReg ; final int RX10_TEMP813 = Program . searchPointInRegion1 ( RX10_TEMP812 , RX10_TEMP810 ) ; final int RX10_TEMP814 = 0 ; final boolean RX10_TEMP815 = RX10_TEMP813 < RX10_TEMP814 ; if ( RX10_TEMP815 ) { String RX10_TEMP816 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP816 ) ; }
 final place RX10_TEMP817 = Program . getPlaceFromDist1 ( RX10_TEMP811 , RX10_TEMP813 ) ; final place RX10_TEMP819 = here ; final boolean RX10_TEMP820 = RX10_TEMP817 != RX10_TEMP819 ; if ( RX10_TEMP820 ) { String RX10_TEMP818 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP818 ) ; }
 final int RX10_TEMP821 = Program . getRefArrayValue1int ( sizes , RX10_TEMP813 ) ; final int X10_TEMP325 = ( RX10_TEMP821 ) ; final int i2 = ( X10_TEMP325 - i1 ) ; finish { final place X10_TEMP328 = here ; final int RX10_TEMP826 = 1 ; int RX10_TEMP824 = rRank2 . regSize ; RX10_TEMP824 = RX10_TEMP824 - RX10_TEMP826 ; final region ( : rank==1 ) RX10_TEMP825 = [ 0 : RX10_TEMP824 ] ; for ( point ( : rank==1 ) RX10_TEMP822 : RX10_TEMP825 ) { final int RX10_TEMP827 = RX10_TEMP822 [0] ; final Point1 RX10_TEMP823 = Program . regionOrdinalPoint1 ( rRank2 , RX10_TEMP827 ) ; final int j = RX10_TEMP823 . f0 ; 
 final T239 utmp239 = new T239(j, i2, pl, inLt, srcBuffer);
 async (X10_TEMP328) {Program.thread239(utmp239); }
 }
 }
 }
 }
 finish { final int X10_TEMP348 = ( 0 ) ; final Point1 RX10_TEMP863 = new Point1 ( pl ) ; final Dist1 RX10_TEMP864 = inLt . distValue ; final Region1 RX10_TEMP865 = RX10_TEMP864 . dReg ; final int RX10_TEMP866 = Program . searchPointInRegion1 ( RX10_TEMP865 , RX10_TEMP863 ) ; final int RX10_TEMP867 = 0 ; final boolean RX10_TEMP868 = RX10_TEMP866 < RX10_TEMP867 ; if ( RX10_TEMP868 ) { String RX10_TEMP869 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP869 ) ; }
 final place RX10_TEMP870 = Program . getPlaceFromDist1 ( RX10_TEMP864 , RX10_TEMP866 ) ; final place RX10_TEMP872 = here ; final boolean RX10_TEMP873 = RX10_TEMP870 != RX10_TEMP872 ; if ( RX10_TEMP873 ) { String RX10_TEMP871 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP871 ) ; }
 final int RX10_TEMP874 = Program . getRefArrayValue1int ( inLt , RX10_TEMP866 ) ; final int X10_TEMP345 = ( RX10_TEMP874 ) ; final int X10_TEMP346 = ( 1 ) ; final int X10_TEMP349 = ( X10_TEMP345 - X10_TEMP346 ) ; final Region3 X10_TEMP352 = Program . createNewRegion3RRA ( pl , pl , X10_TEMP348 , X10_TEMP349 , rRank2 ) ; final place X10_TEMP353 = here ; final int RX10_TEMP878 = 1 ; int RX10_TEMP876 = X10_TEMP352 . regSize ; RX10_TEMP876 = RX10_TEMP876 - RX10_TEMP878 ; final region ( : rank==1 ) RX10_TEMP877 = [ 0 : RX10_TEMP876 ] ; for ( point ( : rank==1 ) RX10_TEMP875 : RX10_TEMP877 ) { final int RX10_TEMP879 = RX10_TEMP875 [0] ; final Point3 pt = Program . regionOrdinalPoint3 ( X10_TEMP352 , RX10_TEMP879 ) ; 
 final T240 utmp240 = new T240(pt, dstBuffer, srcBuffer);
 async (X10_TEMP353) {Program.thread240(utmp240); }
 }
 }
 final Point1 RX10_TEMP901 = new Point1 ( pl ) ; final Dist1 RX10_TEMP902 = sizes . distValue ; final Region1 RX10_TEMP903 = RX10_TEMP902 . dReg ; final int RX10_TEMP904 = Program . searchPointInRegion1 ( RX10_TEMP903 , RX10_TEMP901 ) ; final int RX10_TEMP905 = 0 ; final boolean RX10_TEMP906 = RX10_TEMP904 < RX10_TEMP905 ; if ( RX10_TEMP906 ) { String RX10_TEMP907 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP907 ) ; }
 final place RX10_TEMP908 = Program . getPlaceFromDist1 ( RX10_TEMP902 , RX10_TEMP904 ) ; final place RX10_TEMP910 = here ; final boolean RX10_TEMP911 = RX10_TEMP908 != RX10_TEMP910 ; if ( RX10_TEMP911 ) { String RX10_TEMP909 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP909 ) ; }
 final int RX10_TEMP912 = Program . getRefArrayValue1int ( sizes , RX10_TEMP904 ) ; final int X10_TEMP362 = ( RX10_TEMP912 ) ; final Point1 RX10_TEMP913 = new Point1 ( pl ) ; final Dist1 RX10_TEMP914 = inLt . distValue ; final Region1 RX10_TEMP915 = RX10_TEMP914 . dReg ; final int RX10_TEMP916 = Program . searchPointInRegion1 ( RX10_TEMP915 , RX10_TEMP913 ) ; final int RX10_TEMP917 = 0 ; final boolean RX10_TEMP918 = RX10_TEMP916 < RX10_TEMP917 ; if ( RX10_TEMP918 ) { String RX10_TEMP919 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP919 ) ; }
 final place RX10_TEMP920 = Program . getPlaceFromDist1 ( RX10_TEMP914 , RX10_TEMP916 ) ; final place RX10_TEMP922 = here ; final boolean RX10_TEMP923 = RX10_TEMP920 != RX10_TEMP922 ; if ( RX10_TEMP923 ) { String RX10_TEMP921 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP921 ) ; }
 final int RX10_TEMP924 = Program . getRefArrayValue1int ( inLt , RX10_TEMP916 ) ; final int X10_TEMP363 = ( RX10_TEMP924 ) ; final int X10_TEMP365 = ( X10_TEMP362 + X10_TEMP363 ) ; final int X10_TEMP366 = ( X10_TEMP365 ) ; final Point1 RX10_TEMP925 = new Point1 ( pl ) ; final Dist1 RX10_TEMP926 = sizes . distValue ; final Region1 RX10_TEMP927 = RX10_TEMP926 . dReg ; final int RX10_TEMP928 = Program . searchPointInRegion1 ( RX10_TEMP927 , RX10_TEMP925 ) ; final int RX10_TEMP929 = 0 ; final boolean RX10_TEMP930 = RX10_TEMP928 < RX10_TEMP929 ; if ( RX10_TEMP930 ) { String RX10_TEMP931 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP931 ) ; }
 final place RX10_TEMP932 = Program . getPlaceFromDist1 ( RX10_TEMP926 , RX10_TEMP928 ) ; final place RX10_TEMP934 = here ; final boolean RX10_TEMP935 = RX10_TEMP932 != RX10_TEMP934 ; if ( RX10_TEMP935 ) { String RX10_TEMP933 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP933 ) ; }
 Program . setRefArrayValue1int ( sizes , RX10_TEMP928 , X10_TEMP366 ) ; final Point1 RX10_TEMP936 = new Point1 ( pl ) ; final Dist1 RX10_TEMP937 = offsets . distValue ; final Region1 RX10_TEMP938 = RX10_TEMP937 . dReg ; final int RX10_TEMP939 = Program . searchPointInRegion1 ( RX10_TEMP938 , RX10_TEMP936 ) ; final int RX10_TEMP940 = 0 ; final boolean RX10_TEMP941 = RX10_TEMP939 < RX10_TEMP940 ; if ( RX10_TEMP941 ) { String RX10_TEMP942 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP942 ) ; }
 final place RX10_TEMP943 = Program . getPlaceFromDist1 ( RX10_TEMP937 , RX10_TEMP939 ) ; final place RX10_TEMP945 = here ; final boolean RX10_TEMP946 = RX10_TEMP943 != RX10_TEMP945 ; if ( RX10_TEMP946 ) { String RX10_TEMP944 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP944 ) ; }
 final int RX10_TEMP947 = Program . getRefArrayValue1int ( offsets , RX10_TEMP939 ) ; final int X10_TEMP370 = ( RX10_TEMP947 ) ; final Point1 RX10_TEMP948 = new Point1 ( pl ) ; final Dist1 RX10_TEMP949 = inLt . distValue ; final Region1 RX10_TEMP950 = RX10_TEMP949 . dReg ; final int RX10_TEMP951 = Program . searchPointInRegion1 ( RX10_TEMP950 , RX10_TEMP948 ) ; final int RX10_TEMP952 = 0 ; final boolean RX10_TEMP953 = RX10_TEMP951 < RX10_TEMP952 ; if ( RX10_TEMP953 ) { String RX10_TEMP954 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP954 ) ; }
 final place RX10_TEMP955 = Program . getPlaceFromDist1 ( RX10_TEMP949 , RX10_TEMP951 ) ; final place RX10_TEMP957 = here ; final boolean RX10_TEMP958 = RX10_TEMP955 != RX10_TEMP957 ; if ( RX10_TEMP958 ) { String RX10_TEMP956 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP956 ) ; }
 final int RX10_TEMP959 = Program . getRefArrayValue1int ( inLt , RX10_TEMP951 ) ; final int X10_TEMP371 = ( RX10_TEMP959 ) ; final int X10_TEMP373 = ( X10_TEMP370 - X10_TEMP371 ) ; final int X10_TEMP374 = ( X10_TEMP373 ) ; final Point1 RX10_TEMP960 = new Point1 ( pl ) ; final Dist1 RX10_TEMP961 = offsets . distValue ; final Region1 RX10_TEMP962 = RX10_TEMP961 . dReg ; final int RX10_TEMP963 = Program . searchPointInRegion1 ( RX10_TEMP962 , RX10_TEMP960 ) ; final int RX10_TEMP964 = 0 ; final boolean RX10_TEMP965 = RX10_TEMP963 < RX10_TEMP964 ; if ( RX10_TEMP965 ) { String RX10_TEMP966 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP966 ) ; }
 final place RX10_TEMP967 = Program . getPlaceFromDist1 ( RX10_TEMP961 , RX10_TEMP963 ) ; final place RX10_TEMP969 = here ; final boolean RX10_TEMP970 = RX10_TEMP967 != RX10_TEMP969 ; if ( RX10_TEMP970 ) { String RX10_TEMP968 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP968 ) ; }
 Program . setRefArrayValue1int ( offsets , RX10_TEMP963 , X10_TEMP374 ) ; }
 }
 public static void thread70(final T70 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 outLt = utmpz.outLt;
final  intRefArray1 inRt = utmpz.inRt;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  Region1 rRank2 = utmpz.rRank2;
 { final Point1 RX10_TEMP983 = new Point1 ( pl ) ; final Dist1 RX10_TEMP984 = outLt . distValue ; final Region1 RX10_TEMP985 = RX10_TEMP984 . dReg ; final int RX10_TEMP986 = Program . searchPointInRegion1 ( RX10_TEMP985 , RX10_TEMP983 ) ; final int RX10_TEMP987 = 0 ; final boolean RX10_TEMP988 = RX10_TEMP986 < RX10_TEMP987 ; if ( RX10_TEMP988 ) { String RX10_TEMP989 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP989 ) ; }
 final place RX10_TEMP990 = Program . getPlaceFromDist1 ( RX10_TEMP984 , RX10_TEMP986 ) ; final place RX10_TEMP992 = here ; final boolean RX10_TEMP993 = RX10_TEMP990 != RX10_TEMP992 ; if ( RX10_TEMP993 ) { String RX10_TEMP991 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP991 ) ; }
 final int RX10_TEMP994 = Program . getRefArrayValue1int ( outLt , RX10_TEMP986 ) ; final int X10_TEMP380 = ( RX10_TEMP994 ) ; final int X10_TEMP381 = ( 0 ) ; final boolean X10_TEMP383 = X10_TEMP380 > X10_TEMP381 ; if ( X10_TEMP383 ) { final Point1 RX10_TEMP995 = new Point1 ( pl ) ; final Dist1 RX10_TEMP996 = outLt . distValue ; final Region1 RX10_TEMP997 = RX10_TEMP996 . dReg ; final int RX10_TEMP998 = Program . searchPointInRegion1 ( RX10_TEMP997 , RX10_TEMP995 ) ; final int RX10_TEMP999 = 0 ; final boolean RX10_TEMP1000 = RX10_TEMP998 < RX10_TEMP999 ; if ( RX10_TEMP1000 ) { String RX10_TEMP1001 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1001 ) ; }
 final place RX10_TEMP1002 = Program . getPlaceFromDist1 ( RX10_TEMP996 , RX10_TEMP998 ) ; final place RX10_TEMP1004 = here ; final boolean RX10_TEMP1005 = RX10_TEMP1002 != RX10_TEMP1004 ; if ( RX10_TEMP1005 ) { String RX10_TEMP1003 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1003 ) ; }
 final int RX10_TEMP1006 = Program . getRefArrayValue1int ( outLt , RX10_TEMP998 ) ; final int bsize = ( RX10_TEMP1006 ) ; final int X10_TEMP389 = ( 0 ) ; final int X10_TEMP387 = ( 1 ) ; final int X10_TEMP390 = ( bsize - X10_TEMP387 ) ; final Region2 rBuffer = Program . createNewRegion2RA ( X10_TEMP389 , X10_TEMP390 , rRank2 ) ; final Region2 RX10_TEMP1007 = rBuffer ; final int RX10_TEMP1024 = rBuffer . regSize ; final int RX10_TEMP1025 = 1 ; final int RX10_TEMP1026 = RX10_TEMP1024 - RX10_TEMP1025 ; final region ( : rank==1 ) RX10_TEMP1023 = [ 0 : RX10_TEMP1026 ] ; final double value [ : rank==1 ] RX10_TEMP1027 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP1023 ] ( point ( : rank==1 ) RX10_TEMP1008 ) { final int RX10_TEMP1010 = RX10_TEMP1008 [0] ; final Point2 RX10_TEMP1009 = Program . regionOrdinalPoint2 ( RX10_TEMP1007 , RX10_TEMP1010 ) ; final int i = RX10_TEMP1009 . f0 ; final int j = RX10_TEMP1009 . f1 ; final Point3 RX10_TEMP1011 = new Point3 ( pl , i , j ) ; final Dist3 RX10_TEMP1012 = srcBuffer . distValue ; final Region3 RX10_TEMP1013 = RX10_TEMP1012 . dReg ; final int RX10_TEMP1014 = Program . searchPointInRegion3 ( RX10_TEMP1013 , RX10_TEMP1011 ) ; final int RX10_TEMP1015 = 0 ; final boolean RX10_TEMP1016 = RX10_TEMP1014 < RX10_TEMP1015 ; if ( RX10_TEMP1016 ) { String RX10_TEMP1017 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1017 ) ; }
 final place RX10_TEMP1018 = Program . getPlaceFromDist3 ( RX10_TEMP1012 , RX10_TEMP1014 ) ; final place RX10_TEMP1020 = here ; final boolean RX10_TEMP1021 = RX10_TEMP1018 != RX10_TEMP1020 ; if ( RX10_TEMP1021 ) { String RX10_TEMP1019 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP1019 ) ; }
 final double RX10_TEMP1022 = Program . getRefArrayValue3double ( srcBuffer , RX10_TEMP1014 ) ; final double X10_TEMP397 = ( RX10_TEMP1022 ) ; return X10_TEMP397 ; }
 ) ; final doubleValArray2 RX10_TEMP1028 = new doubleValArray2 ( rBuffer , RX10_TEMP1027 ) ; final doubleValArray2 X10_TEMP398 = RX10_TEMP1028 ; final doubleValArray2 sBuffer = X10_TEMP398 ; final place X10_TEMP400 = ( here ) ; final place X10_TEMP402 = X10_TEMP400 . prev ( ) ; 
 final T241 utmp241 = new T241(sBuffer, rBuffer, bsize, inRt, dstBuffer);
 async (X10_TEMP402) {Program.thread241(utmp241); }
 }
 }
 }
 public static void thread71(final T71 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 ter = utmpz.ter;
final  intRefArray1 pr = utmpz.pr;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 outLt = utmpz.outLt;
final  intRefArray1 inRt = utmpz.inRt;
final  intRefArray1 sizes = utmpz.sizes;
final  intRefArray1 offsets = utmpz.offsets;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  Region1 rRank2 = utmpz.rRank2;
final  int MAX_ROWS = utmpz.MAX_ROWS;
final  Dist2 dDst = utmpz.dDst;
 { final Point1 RX10_TEMP1076 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1077 = sizes . distValue ; final Region1 RX10_TEMP1078 = RX10_TEMP1077 . dReg ; final int RX10_TEMP1079 = Program . searchPointInRegion1 ( RX10_TEMP1078 , RX10_TEMP1076 ) ; final int RX10_TEMP1080 = 0 ; final boolean RX10_TEMP1081 = RX10_TEMP1079 < RX10_TEMP1080 ; if ( RX10_TEMP1081 ) { String RX10_TEMP1082 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1082 ) ; }
 final place RX10_TEMP1083 = Program . getPlaceFromDist1 ( RX10_TEMP1077 , RX10_TEMP1079 ) ; final place RX10_TEMP1085 = here ; final boolean RX10_TEMP1086 = RX10_TEMP1083 != RX10_TEMP1085 ; if ( RX10_TEMP1086 ) { String RX10_TEMP1084 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1084 ) ; }
 final int RX10_TEMP1087 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1079 ) ; final int X10_TEMP427 = ( RX10_TEMP1087 ) ; final Point1 RX10_TEMP1088 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1089 = outLt . distValue ; final Region1 RX10_TEMP1090 = RX10_TEMP1089 . dReg ; final int RX10_TEMP1091 = Program . searchPointInRegion1 ( RX10_TEMP1090 , RX10_TEMP1088 ) ; final int RX10_TEMP1092 = 0 ; final boolean RX10_TEMP1093 = RX10_TEMP1091 < RX10_TEMP1092 ; if ( RX10_TEMP1093 ) { String RX10_TEMP1094 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1094 ) ; }
 final place RX10_TEMP1095 = Program . getPlaceFromDist1 ( RX10_TEMP1089 , RX10_TEMP1091 ) ; final place RX10_TEMP1097 = here ; final boolean RX10_TEMP1098 = RX10_TEMP1095 != RX10_TEMP1097 ; if ( RX10_TEMP1098 ) { String RX10_TEMP1096 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1096 ) ; }
 final int RX10_TEMP1099 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1091 ) ; final int X10_TEMP428 = ( RX10_TEMP1099 ) ; final int X10_TEMP430 = ( X10_TEMP427 - X10_TEMP428 ) ; final int X10_TEMP431 = ( X10_TEMP430 ) ; final Point1 RX10_TEMP1100 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1101 = sizes . distValue ; final Region1 RX10_TEMP1102 = RX10_TEMP1101 . dReg ; final int RX10_TEMP1103 = Program . searchPointInRegion1 ( RX10_TEMP1102 , RX10_TEMP1100 ) ; final int RX10_TEMP1104 = 0 ; final boolean RX10_TEMP1105 = RX10_TEMP1103 < RX10_TEMP1104 ; if ( RX10_TEMP1105 ) { String RX10_TEMP1106 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1106 ) ; }
 final place RX10_TEMP1107 = Program . getPlaceFromDist1 ( RX10_TEMP1101 , RX10_TEMP1103 ) ; final place RX10_TEMP1109 = here ; final boolean RX10_TEMP1110 = RX10_TEMP1107 != RX10_TEMP1109 ; if ( RX10_TEMP1110 ) { String RX10_TEMP1108 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1108 ) ; }
 Program . setRefArrayValue1int ( sizes , RX10_TEMP1103 , X10_TEMP431 ) ; final Point1 RX10_TEMP1111 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1112 = offsets . distValue ; final Region1 RX10_TEMP1113 = RX10_TEMP1112 . dReg ; final int RX10_TEMP1114 = Program . searchPointInRegion1 ( RX10_TEMP1113 , RX10_TEMP1111 ) ; final int RX10_TEMP1115 = 0 ; final boolean RX10_TEMP1116 = RX10_TEMP1114 < RX10_TEMP1115 ; if ( RX10_TEMP1116 ) { String RX10_TEMP1117 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1117 ) ; }
 final place RX10_TEMP1118 = Program . getPlaceFromDist1 ( RX10_TEMP1112 , RX10_TEMP1114 ) ; final place RX10_TEMP1120 = here ; final boolean RX10_TEMP1121 = RX10_TEMP1118 != RX10_TEMP1120 ; if ( RX10_TEMP1121 ) { String RX10_TEMP1119 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP1119 ) ; }
 final int RX10_TEMP1122 = Program . getRefArrayValue1int ( offsets , RX10_TEMP1114 ) ; final int X10_TEMP435 = ( RX10_TEMP1122 ) ; final Point1 RX10_TEMP1123 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1124 = outLt . distValue ; final Region1 RX10_TEMP1125 = RX10_TEMP1124 . dReg ; final int RX10_TEMP1126 = Program . searchPointInRegion1 ( RX10_TEMP1125 , RX10_TEMP1123 ) ; final int RX10_TEMP1127 = 0 ; final boolean RX10_TEMP1128 = RX10_TEMP1126 < RX10_TEMP1127 ; if ( RX10_TEMP1128 ) { String RX10_TEMP1129 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1129 ) ; }
 final place RX10_TEMP1130 = Program . getPlaceFromDist1 ( RX10_TEMP1124 , RX10_TEMP1126 ) ; final place RX10_TEMP1132 = here ; final boolean RX10_TEMP1133 = RX10_TEMP1130 != RX10_TEMP1132 ; if ( RX10_TEMP1133 ) { String RX10_TEMP1131 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1131 ) ; }
 final int RX10_TEMP1134 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1126 ) ; final int X10_TEMP436 = ( RX10_TEMP1134 ) ; final int X10_TEMP438 = ( X10_TEMP435 + X10_TEMP436 ) ; final int X10_TEMP439 = ( X10_TEMP438 ) ; final Point1 RX10_TEMP1135 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1136 = offsets . distValue ; final Region1 RX10_TEMP1137 = RX10_TEMP1136 . dReg ; final int RX10_TEMP1138 = Program . searchPointInRegion1 ( RX10_TEMP1137 , RX10_TEMP1135 ) ; final int RX10_TEMP1139 = 0 ; final boolean RX10_TEMP1140 = RX10_TEMP1138 < RX10_TEMP1139 ; if ( RX10_TEMP1140 ) { String RX10_TEMP1141 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1141 ) ; }
 final place RX10_TEMP1142 = Program . getPlaceFromDist1 ( RX10_TEMP1136 , RX10_TEMP1138 ) ; final place RX10_TEMP1144 = here ; final boolean RX10_TEMP1145 = RX10_TEMP1142 != RX10_TEMP1144 ; if ( RX10_TEMP1145 ) { String RX10_TEMP1143 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP1143 ) ; }
 Program . setRefArrayValue1int ( offsets , RX10_TEMP1138 , X10_TEMP439 ) ; final Point1 RX10_TEMP1146 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1147 = sizes . distValue ; final Region1 RX10_TEMP1148 = RX10_TEMP1147 . dReg ; final int RX10_TEMP1149 = Program . searchPointInRegion1 ( RX10_TEMP1148 , RX10_TEMP1146 ) ; final int RX10_TEMP1150 = 0 ; final boolean RX10_TEMP1151 = RX10_TEMP1149 < RX10_TEMP1150 ; if ( RX10_TEMP1151 ) { String RX10_TEMP1152 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1152 ) ; }
 final place RX10_TEMP1153 = Program . getPlaceFromDist1 ( RX10_TEMP1147 , RX10_TEMP1149 ) ; final place RX10_TEMP1155 = here ; final boolean RX10_TEMP1156 = RX10_TEMP1153 != RX10_TEMP1155 ; if ( RX10_TEMP1156 ) { String RX10_TEMP1154 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1154 ) ; }
 final int RX10_TEMP1157 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1149 ) ; final int X10_TEMP441 = ( RX10_TEMP1157 ) ; final int X10_TEMP442 = ( 0 ) ; final boolean X10_TEMP446 = ( X10_TEMP441 > X10_TEMP442 ) ; final Point1 RX10_TEMP1158 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1159 = outLt . distValue ; final Region1 RX10_TEMP1160 = RX10_TEMP1159 . dReg ; final int RX10_TEMP1161 = Program . searchPointInRegion1 ( RX10_TEMP1160 , RX10_TEMP1158 ) ; final int RX10_TEMP1162 = 0 ; final boolean RX10_TEMP1163 = RX10_TEMP1161 < RX10_TEMP1162 ; if ( RX10_TEMP1163 ) { String RX10_TEMP1164 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1164 ) ; }
 final place RX10_TEMP1165 = Program . getPlaceFromDist1 ( RX10_TEMP1159 , RX10_TEMP1161 ) ; final place RX10_TEMP1167 = here ; final boolean RX10_TEMP1168 = RX10_TEMP1165 != RX10_TEMP1167 ; if ( RX10_TEMP1168 ) { String RX10_TEMP1166 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1166 ) ; }
 final int RX10_TEMP1169 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1161 ) ; final int X10_TEMP444 = ( RX10_TEMP1169 ) ; final int X10_TEMP445 = ( 0 ) ; final boolean X10_TEMP447 = ( X10_TEMP444 > X10_TEMP445 ) ; final boolean X10_TEMP449 = X10_TEMP446 && X10_TEMP447 ; if ( X10_TEMP449 ) { final int X10_TEMP455 = ( 0 ) ; final Point1 RX10_TEMP1170 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1171 = sizes . distValue ; final Region1 RX10_TEMP1172 = RX10_TEMP1171 . dReg ; final int RX10_TEMP1173 = Program . searchPointInRegion1 ( RX10_TEMP1172 , RX10_TEMP1170 ) ; final int RX10_TEMP1174 = 0 ; final boolean RX10_TEMP1175 = RX10_TEMP1173 < RX10_TEMP1174 ; if ( RX10_TEMP1175 ) { String RX10_TEMP1176 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1176 ) ; }
 final place RX10_TEMP1177 = Program . getPlaceFromDist1 ( RX10_TEMP1171 , RX10_TEMP1173 ) ; final place RX10_TEMP1179 = here ; final boolean RX10_TEMP1180 = RX10_TEMP1177 != RX10_TEMP1179 ; if ( RX10_TEMP1180 ) { String RX10_TEMP1178 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1178 ) ; }
 final int RX10_TEMP1181 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1173 ) ; final int X10_TEMP452 = ( RX10_TEMP1181 ) ; final int X10_TEMP453 = ( 1 ) ; final int X10_TEMP456 = ( X10_TEMP452 - X10_TEMP453 ) ; final Region1 X10_TEMP458 = Program . createNewRegion1R ( X10_TEMP455 , X10_TEMP456 ) ; final int RX10_TEMP1186 = 1 ; int RX10_TEMP1184 = X10_TEMP458 . regSize ; RX10_TEMP1184 = RX10_TEMP1184 - RX10_TEMP1186 ; final region ( : rank==1 ) RX10_TEMP1185 = [ 0 : RX10_TEMP1184 ] ; for ( point ( : rank==1 ) RX10_TEMP1182 : RX10_TEMP1185 ) { final int RX10_TEMP1187 = RX10_TEMP1182 [0] ; final Point1 RX10_TEMP1183 = Program . regionOrdinalPoint1 ( X10_TEMP458 , RX10_TEMP1187 ) ; final int i = RX10_TEMP1183 . f0 ; finish { final place X10_TEMP460 = here ; final int RX10_TEMP1192 = 1 ; int RX10_TEMP1190 = rRank2 . regSize ; RX10_TEMP1190 = RX10_TEMP1190 - RX10_TEMP1192 ; final region ( : rank==1 ) RX10_TEMP1191 = [ 0 : RX10_TEMP1190 ] ; for ( point ( : rank==1 ) RX10_TEMP1188 : RX10_TEMP1191 ) { final int RX10_TEMP1193 = RX10_TEMP1188 [0] ; final Point1 RX10_TEMP1189 = Program . regionOrdinalPoint1 ( rRank2 , RX10_TEMP1193 ) ; final int j = RX10_TEMP1189 . f0 ; 
 final T242 utmp242 = new T242(j, i, pl, outLt, srcBuffer);
 async (X10_TEMP460) {Program.thread242(utmp242); }
 }
 }
 }
 }
 final Point1 RX10_TEMP1229 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1230 = sizes . distValue ; final Region1 RX10_TEMP1231 = RX10_TEMP1230 . dReg ; final int RX10_TEMP1232 = Program . searchPointInRegion1 ( RX10_TEMP1231 , RX10_TEMP1229 ) ; final int RX10_TEMP1233 = 0 ; final boolean RX10_TEMP1234 = RX10_TEMP1232 < RX10_TEMP1233 ; if ( RX10_TEMP1234 ) { String RX10_TEMP1235 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1235 ) ; }
 final place RX10_TEMP1236 = Program . getPlaceFromDist1 ( RX10_TEMP1230 , RX10_TEMP1232 ) ; final place RX10_TEMP1238 = here ; final boolean RX10_TEMP1239 = RX10_TEMP1236 != RX10_TEMP1238 ; if ( RX10_TEMP1239 ) { String RX10_TEMP1237 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1237 ) ; }
 final int RX10_TEMP1240 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1232 ) ; final int X10_TEMP476 = ( RX10_TEMP1240 ) ; final Point1 RX10_TEMP1241 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1242 = inRt . distValue ; final Region1 RX10_TEMP1243 = RX10_TEMP1242 . dReg ; final int RX10_TEMP1244 = Program . searchPointInRegion1 ( RX10_TEMP1243 , RX10_TEMP1241 ) ; final int RX10_TEMP1245 = 0 ; final boolean RX10_TEMP1246 = RX10_TEMP1244 < RX10_TEMP1245 ; if ( RX10_TEMP1246 ) { String RX10_TEMP1247 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1247 ) ; }
 final place RX10_TEMP1248 = Program . getPlaceFromDist1 ( RX10_TEMP1242 , RX10_TEMP1244 ) ; final place RX10_TEMP1250 = here ; final boolean RX10_TEMP1251 = RX10_TEMP1248 != RX10_TEMP1250 ; if ( RX10_TEMP1251 ) { String RX10_TEMP1249 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1249 ) ; }
 final int RX10_TEMP1252 = Program . getRefArrayValue1int ( inRt , RX10_TEMP1244 ) ; final int X10_TEMP477 = ( RX10_TEMP1252 ) ; final int X10_TEMP478 = ( X10_TEMP476 + X10_TEMP477 ) ; final int X10_TEMP481 = ( X10_TEMP478 - MAX_ROWS ) ; final int X10_TEMP482 = ( 0 ) ; final int X10_TEMP484 = ( Program . X10Util_maxInt ( X10_TEMP481 , X10_TEMP482 ) ) ; final int X10_TEMP485 = ( X10_TEMP484 ) ; final Point1 RX10_TEMP1253 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1254 = outLt . distValue ; final Region1 RX10_TEMP1255 = RX10_TEMP1254 . dReg ; final int RX10_TEMP1256 = Program . searchPointInRegion1 ( RX10_TEMP1255 , RX10_TEMP1253 ) ; final int RX10_TEMP1257 = 0 ; final boolean RX10_TEMP1258 = RX10_TEMP1256 < RX10_TEMP1257 ; if ( RX10_TEMP1258 ) { String RX10_TEMP1259 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1259 ) ; }
 final place RX10_TEMP1260 = Program . getPlaceFromDist1 ( RX10_TEMP1254 , RX10_TEMP1256 ) ; final place RX10_TEMP1262 = here ; final boolean RX10_TEMP1263 = RX10_TEMP1260 != RX10_TEMP1262 ; if ( RX10_TEMP1263 ) { String RX10_TEMP1261 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1261 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP1256 , X10_TEMP485 ) ; final Point1 RX10_TEMP1264 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1265 = outLt . distValue ; final Region1 RX10_TEMP1266 = RX10_TEMP1265 . dReg ; final int RX10_TEMP1267 = Program . searchPointInRegion1 ( RX10_TEMP1266 , RX10_TEMP1264 ) ; final int RX10_TEMP1268 = 0 ; final boolean RX10_TEMP1269 = RX10_TEMP1267 < RX10_TEMP1268 ; if ( RX10_TEMP1269 ) { String RX10_TEMP1270 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1270 ) ; }
 final place RX10_TEMP1271 = Program . getPlaceFromDist1 ( RX10_TEMP1265 , RX10_TEMP1267 ) ; final place RX10_TEMP1273 = here ; final boolean RX10_TEMP1274 = RX10_TEMP1271 != RX10_TEMP1273 ; if ( RX10_TEMP1274 ) { String RX10_TEMP1272 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1272 ) ; }
 final int RX10_TEMP1275 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1267 ) ; final int X10_TEMP487 = ( RX10_TEMP1275 ) ; final int X10_TEMP488 = ( 0 ) ; final boolean X10_TEMP490 = X10_TEMP487 > X10_TEMP488 ; if ( X10_TEMP490 ) { final Point1 RX10_TEMP1276 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1277 = pr . distValue ; final Region1 RX10_TEMP1278 = RX10_TEMP1277 . dReg ; final int RX10_TEMP1279 = Program . searchPointInRegion1 ( RX10_TEMP1278 , RX10_TEMP1276 ) ; final int RX10_TEMP1280 = 0 ; final boolean RX10_TEMP1281 = RX10_TEMP1279 < RX10_TEMP1280 ; if ( RX10_TEMP1281 ) { String RX10_TEMP1282 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1282 ) ; }
 final place RX10_TEMP1283 = Program . getPlaceFromDist1 ( RX10_TEMP1277 , RX10_TEMP1279 ) ; final place RX10_TEMP1285 = here ; final boolean RX10_TEMP1286 = RX10_TEMP1283 != RX10_TEMP1285 ; if ( RX10_TEMP1286 ) { String RX10_TEMP1284 = "Bad place access for array pr" ; throw new RuntimeException ( RX10_TEMP1284 ) ; }
 final int RX10_TEMP1287 = Program . getRefArrayValue1int ( pr , RX10_TEMP1279 ) ; final int X10_TEMP496 = ( RX10_TEMP1287 ) ; final Point1 RX10_TEMP1288 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1289 = outLt . distValue ; final Region1 RX10_TEMP1290 = RX10_TEMP1289 . dReg ; final int RX10_TEMP1291 = Program . searchPointInRegion1 ( RX10_TEMP1290 , RX10_TEMP1288 ) ; final int RX10_TEMP1292 = 0 ; final boolean RX10_TEMP1293 = RX10_TEMP1291 < RX10_TEMP1292 ; if ( RX10_TEMP1293 ) { String RX10_TEMP1294 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1294 ) ; }
 final place RX10_TEMP1295 = Program . getPlaceFromDist1 ( RX10_TEMP1289 , RX10_TEMP1291 ) ; final place RX10_TEMP1297 = here ; final boolean RX10_TEMP1298 = RX10_TEMP1295 != RX10_TEMP1297 ; if ( RX10_TEMP1298 ) { String RX10_TEMP1296 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1296 ) ; }
 final int RX10_TEMP1299 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1291 ) ; final int X10_TEMP497 = ( RX10_TEMP1299 ) ; final int X10_TEMP499 = ( Program . X10Util_maxInt ( X10_TEMP496 , X10_TEMP497 ) ) ; final int X10_TEMP500 = ( X10_TEMP499 ) ; final Point1 RX10_TEMP1300 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1301 = pr . distValue ; final Region1 RX10_TEMP1302 = RX10_TEMP1301 . dReg ; final int RX10_TEMP1303 = Program . searchPointInRegion1 ( RX10_TEMP1302 , RX10_TEMP1300 ) ; final int RX10_TEMP1304 = 0 ; final boolean RX10_TEMP1305 = RX10_TEMP1303 < RX10_TEMP1304 ; if ( RX10_TEMP1305 ) { String RX10_TEMP1306 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1306 ) ; }
 final place RX10_TEMP1307 = Program . getPlaceFromDist1 ( RX10_TEMP1301 , RX10_TEMP1303 ) ; final place RX10_TEMP1309 = here ; final boolean RX10_TEMP1310 = RX10_TEMP1307 != RX10_TEMP1309 ; if ( RX10_TEMP1310 ) { String RX10_TEMP1308 = "Bad place access for array pr" ; throw new RuntimeException ( RX10_TEMP1308 ) ; }
 Program . setRefArrayValue1int ( pr , RX10_TEMP1303 , X10_TEMP500 ) ; final Point1 RX10_TEMP1311 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1312 = inRt . distValue ; final Region1 RX10_TEMP1313 = RX10_TEMP1312 . dReg ; final int RX10_TEMP1314 = Program . searchPointInRegion1 ( RX10_TEMP1313 , RX10_TEMP1311 ) ; final int RX10_TEMP1315 = 0 ; final boolean RX10_TEMP1316 = RX10_TEMP1314 < RX10_TEMP1315 ; if ( RX10_TEMP1316 ) { String RX10_TEMP1317 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1317 ) ; }
 final place RX10_TEMP1318 = Program . getPlaceFromDist1 ( RX10_TEMP1312 , RX10_TEMP1314 ) ; final place RX10_TEMP1320 = here ; final boolean RX10_TEMP1321 = RX10_TEMP1318 != RX10_TEMP1320 ; if ( RX10_TEMP1321 ) { String RX10_TEMP1319 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1319 ) ; }
 final int RX10_TEMP1322 = Program . getRefArrayValue1int ( inRt , RX10_TEMP1314 ) ; final int X10_TEMP504 = ( RX10_TEMP1322 ) ; final Point1 RX10_TEMP1323 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1324 = outLt . distValue ; final Region1 RX10_TEMP1325 = RX10_TEMP1324 . dReg ; final int RX10_TEMP1326 = Program . searchPointInRegion1 ( RX10_TEMP1325 , RX10_TEMP1323 ) ; final int RX10_TEMP1327 = 0 ; final boolean RX10_TEMP1328 = RX10_TEMP1326 < RX10_TEMP1327 ; if ( RX10_TEMP1328 ) { String RX10_TEMP1329 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1329 ) ; }
 final place RX10_TEMP1330 = Program . getPlaceFromDist1 ( RX10_TEMP1324 , RX10_TEMP1326 ) ; final place RX10_TEMP1332 = here ; final boolean RX10_TEMP1333 = RX10_TEMP1330 != RX10_TEMP1332 ; if ( RX10_TEMP1333 ) { String RX10_TEMP1331 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1331 ) ; }
 final int RX10_TEMP1334 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1326 ) ; final int X10_TEMP505 = ( RX10_TEMP1334 ) ; final int X10_TEMP507 = ( X10_TEMP504 - X10_TEMP505 ) ; final int X10_TEMP508 = ( X10_TEMP507 ) ; final Point1 RX10_TEMP1335 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1336 = inRt . distValue ; final Region1 RX10_TEMP1337 = RX10_TEMP1336 . dReg ; final int RX10_TEMP1338 = Program . searchPointInRegion1 ( RX10_TEMP1337 , RX10_TEMP1335 ) ; final int RX10_TEMP1339 = 0 ; final boolean RX10_TEMP1340 = RX10_TEMP1338 < RX10_TEMP1339 ; if ( RX10_TEMP1340 ) { String RX10_TEMP1341 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1341 ) ; }
 final place RX10_TEMP1342 = Program . getPlaceFromDist1 ( RX10_TEMP1336 , RX10_TEMP1338 ) ; final place RX10_TEMP1344 = here ; final boolean RX10_TEMP1345 = RX10_TEMP1342 != RX10_TEMP1344 ; if ( RX10_TEMP1345 ) { String RX10_TEMP1343 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1343 ) ; }
 Program . setRefArrayValue1int ( inRt , RX10_TEMP1338 , X10_TEMP508 ) ; }
 else { final Point1 RX10_TEMP1346 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1347 = outRt . distValue ; final Region1 RX10_TEMP1348 = RX10_TEMP1347 . dReg ; final int RX10_TEMP1349 = Program . searchPointInRegion1 ( RX10_TEMP1348 , RX10_TEMP1346 ) ; final int RX10_TEMP1350 = 0 ; final boolean RX10_TEMP1351 = RX10_TEMP1349 < RX10_TEMP1350 ; if ( RX10_TEMP1351 ) { String RX10_TEMP1352 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1352 ) ; }
 final place RX10_TEMP1353 = Program . getPlaceFromDist1 ( RX10_TEMP1347 , RX10_TEMP1349 ) ; final place RX10_TEMP1355 = here ; final boolean RX10_TEMP1356 = RX10_TEMP1353 != RX10_TEMP1355 ; if ( RX10_TEMP1356 ) { String RX10_TEMP1354 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1354 ) ; }
 final int RX10_TEMP1357 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1349 ) ; final int X10_TEMP510 = ( RX10_TEMP1357 ) ; final int X10_TEMP511 = ( 0 ) ; final boolean X10_TEMP513 = X10_TEMP510 > X10_TEMP511 ; if ( X10_TEMP513 ) { }
 }
 finish { final int X10_TEMP519 = ( 0 ) ; final Point1 RX10_TEMP1358 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1359 = inRt . distValue ; final Region1 RX10_TEMP1360 = RX10_TEMP1359 . dReg ; final int RX10_TEMP1361 = Program . searchPointInRegion1 ( RX10_TEMP1360 , RX10_TEMP1358 ) ; final int RX10_TEMP1362 = 0 ; final boolean RX10_TEMP1363 = RX10_TEMP1361 < RX10_TEMP1362 ; if ( RX10_TEMP1363 ) { String RX10_TEMP1364 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1364 ) ; }
 final place RX10_TEMP1365 = Program . getPlaceFromDist1 ( RX10_TEMP1359 , RX10_TEMP1361 ) ; final place RX10_TEMP1367 = here ; final boolean RX10_TEMP1368 = RX10_TEMP1365 != RX10_TEMP1367 ; if ( RX10_TEMP1368 ) { String RX10_TEMP1366 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1366 ) ; }
 final int RX10_TEMP1369 = Program . getRefArrayValue1int ( inRt , RX10_TEMP1361 ) ; final int X10_TEMP516 = ( RX10_TEMP1369 ) ; final int X10_TEMP517 = ( 1 ) ; final int X10_TEMP520 = ( X10_TEMP516 - X10_TEMP517 ) ; final Region2 X10_TEMP523 = Program . createNewRegion2RA ( X10_TEMP519 , X10_TEMP520 , rRank2 ) ; final place X10_TEMP524 = here ; final int RX10_TEMP1374 = 1 ; int RX10_TEMP1372 = X10_TEMP523 . regSize ; RX10_TEMP1372 = RX10_TEMP1372 - RX10_TEMP1374 ; final region ( : rank==1 ) RX10_TEMP1373 = [ 0 : RX10_TEMP1372 ] ; for ( point ( : rank==1 ) RX10_TEMP1370 : RX10_TEMP1373 ) { final int RX10_TEMP1375 = RX10_TEMP1370 [0] ; final Point2 RX10_TEMP1371 = Program . regionOrdinalPoint2 ( X10_TEMP523 , RX10_TEMP1375 ) ; final int i = RX10_TEMP1371 . f0 ; final int j = RX10_TEMP1371 . f1 ; 
 final T243 utmp243 = new T243(j, i, pl, sizes, dstBuffer, srcBuffer);
 async (X10_TEMP524) {Program.thread243(utmp243); }
 }
 }
 final Point1 RX10_TEMP1411 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1412 = sizes . distValue ; final Region1 RX10_TEMP1413 = RX10_TEMP1412 . dReg ; final int RX10_TEMP1414 = Program . searchPointInRegion1 ( RX10_TEMP1413 , RX10_TEMP1411 ) ; final int RX10_TEMP1415 = 0 ; final boolean RX10_TEMP1416 = RX10_TEMP1414 < RX10_TEMP1415 ; if ( RX10_TEMP1416 ) { String RX10_TEMP1417 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1417 ) ; }
 final place RX10_TEMP1418 = Program . getPlaceFromDist1 ( RX10_TEMP1412 , RX10_TEMP1414 ) ; final place RX10_TEMP1420 = here ; final boolean RX10_TEMP1421 = RX10_TEMP1418 != RX10_TEMP1420 ; if ( RX10_TEMP1421 ) { String RX10_TEMP1419 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1419 ) ; }
 final int RX10_TEMP1422 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1414 ) ; final int X10_TEMP540 = ( RX10_TEMP1422 ) ; final Point1 RX10_TEMP1423 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1424 = inRt . distValue ; final Region1 RX10_TEMP1425 = RX10_TEMP1424 . dReg ; final int RX10_TEMP1426 = Program . searchPointInRegion1 ( RX10_TEMP1425 , RX10_TEMP1423 ) ; final int RX10_TEMP1427 = 0 ; final boolean RX10_TEMP1428 = RX10_TEMP1426 < RX10_TEMP1427 ; if ( RX10_TEMP1428 ) { String RX10_TEMP1429 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1429 ) ; }
 final place RX10_TEMP1430 = Program . getPlaceFromDist1 ( RX10_TEMP1424 , RX10_TEMP1426 ) ; final place RX10_TEMP1432 = here ; final boolean RX10_TEMP1433 = RX10_TEMP1430 != RX10_TEMP1432 ; if ( RX10_TEMP1433 ) { String RX10_TEMP1431 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1431 ) ; }
 final int RX10_TEMP1434 = Program . getRefArrayValue1int ( inRt , RX10_TEMP1426 ) ; final int X10_TEMP541 = ( RX10_TEMP1434 ) ; final int X10_TEMP543 = ( X10_TEMP540 + X10_TEMP541 ) ; final int X10_TEMP544 = ( X10_TEMP543 ) ; final Point1 RX10_TEMP1435 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1436 = sizes . distValue ; final Region1 RX10_TEMP1437 = RX10_TEMP1436 . dReg ; final int RX10_TEMP1438 = Program . searchPointInRegion1 ( RX10_TEMP1437 , RX10_TEMP1435 ) ; final int RX10_TEMP1439 = 0 ; final boolean RX10_TEMP1440 = RX10_TEMP1438 < RX10_TEMP1439 ; if ( RX10_TEMP1440 ) { String RX10_TEMP1441 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1441 ) ; }
 final place RX10_TEMP1442 = Program . getPlaceFromDist1 ( RX10_TEMP1436 , RX10_TEMP1438 ) ; final place RX10_TEMP1444 = here ; final boolean RX10_TEMP1445 = RX10_TEMP1442 != RX10_TEMP1444 ; if ( RX10_TEMP1445 ) { String RX10_TEMP1443 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1443 ) ; }
 Program . setRefArrayValue1int ( sizes , RX10_TEMP1438 , X10_TEMP544 ) ; final int X10_TEMP547 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dDst , X10_TEMP547 ) ; final int X10_TEMP549 = ( rLocal1 . regSize ) ; final int X10_TEMP550 = ( 0 ) ; final boolean X10_TEMP551 = ( X10_TEMP549 == X10_TEMP550 ) ; final boolean X10_TEMP553 = _X10Util_ENABLE_CHECKS && X10_TEMP551 ; if ( X10_TEMP553 ) { final String X10_TEMP554 = ( "Destination distribution " ) ; final String X10_TEMP555 = ( "is empty" ) ; final String X10_TEMP557 = ( X10_TEMP554 + X10_TEMP555 ) ; throw new RuntimeException ( X10_TEMP557 ) ; }
 final int rsize = ( rLocal1 . regSize ) ; final int RX10_TEMP1446 = rLocal1 . regSize ; final int RX10_TEMP1447 = 0 ; final boolean RX10_TEMP1448 = RX10_TEMP1446 <= RX10_TEMP1447 ; if ( RX10_TEMP1448 ) { final String RX10_TEMP1449 = "Operation low() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP1449 ) ; }
 final int offset = ( Program . regionLow ( rLocal1 ) ) ; final Point1 RX10_TEMP1450 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1451 = sizes . distValue ; final Region1 RX10_TEMP1452 = RX10_TEMP1451 . dReg ; final int RX10_TEMP1453 = Program . searchPointInRegion1 ( RX10_TEMP1452 , RX10_TEMP1450 ) ; final int RX10_TEMP1454 = 0 ; final boolean RX10_TEMP1455 = RX10_TEMP1453 < RX10_TEMP1454 ; if ( RX10_TEMP1455 ) { String RX10_TEMP1456 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1456 ) ; }
 final place RX10_TEMP1457 = Program . getPlaceFromDist1 ( RX10_TEMP1451 , RX10_TEMP1453 ) ; final place RX10_TEMP1459 = here ; final boolean RX10_TEMP1460 = RX10_TEMP1457 != RX10_TEMP1459 ; if ( RX10_TEMP1460 ) { String RX10_TEMP1458 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1458 ) ; }
 final int RX10_TEMP1461 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1453 ) ; final int X10_TEMP562 = ( RX10_TEMP1461 ) ; final int X10_TEMP564 = ( X10_TEMP562 - rsize ) ; final int X10_TEMP569 = ( Math . abs ( X10_TEMP564 ) ) ; final Point1 RX10_TEMP1462 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1463 = offsets . distValue ; final Region1 RX10_TEMP1464 = RX10_TEMP1463 . dReg ; final int RX10_TEMP1465 = Program . searchPointInRegion1 ( RX10_TEMP1464 , RX10_TEMP1462 ) ; final int RX10_TEMP1466 = 0 ; final boolean RX10_TEMP1467 = RX10_TEMP1465 < RX10_TEMP1466 ; if ( RX10_TEMP1467 ) { String RX10_TEMP1468 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1468 ) ; }
 final place RX10_TEMP1469 = Program . getPlaceFromDist1 ( RX10_TEMP1463 , RX10_TEMP1465 ) ; final place RX10_TEMP1471 = here ; final boolean RX10_TEMP1472 = RX10_TEMP1469 != RX10_TEMP1471 ; if ( RX10_TEMP1472 ) { String RX10_TEMP1470 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP1470 ) ; }
 final int RX10_TEMP1473 = Program . getRefArrayValue1int ( offsets , RX10_TEMP1465 ) ; final int X10_TEMP566 = ( RX10_TEMP1473 ) ; final int X10_TEMP568 = ( X10_TEMP566 - offset ) ; final int X10_TEMP570 = ( Math . abs ( X10_TEMP568 ) ) ; final int X10_TEMP572 = ( X10_TEMP569 + X10_TEMP570 ) ; final int X10_TEMP574 = ( X10_TEMP572 ) ; final Point1 RX10_TEMP1474 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1475 = ter . distValue ; final Region1 RX10_TEMP1476 = RX10_TEMP1475 . dReg ; final int RX10_TEMP1477 = Program . searchPointInRegion1 ( RX10_TEMP1476 , RX10_TEMP1474 ) ; final int RX10_TEMP1478 = 0 ; final boolean RX10_TEMP1479 = RX10_TEMP1477 < RX10_TEMP1478 ; if ( RX10_TEMP1479 ) { String RX10_TEMP1480 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1480 ) ; }
 final place RX10_TEMP1481 = Program . getPlaceFromDist1 ( RX10_TEMP1475 , RX10_TEMP1477 ) ; final place RX10_TEMP1483 = here ; final boolean RX10_TEMP1484 = RX10_TEMP1481 != RX10_TEMP1483 ; if ( RX10_TEMP1484 ) { String RX10_TEMP1482 = "Bad place access for array ter" ; throw new RuntimeException ( RX10_TEMP1482 ) ; }
 Program . setRefArrayValue1int ( ter , RX10_TEMP1477 , X10_TEMP574 ) ; }
 }
 public static void thread72(final T72 utmpz) {final  int RX10_TEMP1497 = utmpz.RX10_TEMP1497;
final  place RX10_TEMP1493 = utmpz.RX10_TEMP1493;
final  point ( : rank==1 ) RX10_TEMP1492 = utmpz.RX10_TEMP1492;
final  intStub [ : rank==1 ] RX10_TEMP1491 = utmpz.RX10_TEMP1491;
 { final dist ( : rank==1 ) RX10_TEMP1498 = [ 0 : RX10_TEMP1497 ] -> here ; final int [ : rank==1 ] RX10_TEMP1499 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1498 ] ) ; final intStub RX10_TEMP1500 = new intStub ( RX10_TEMP1499 ) ; 
 final T244 utmp244 = new T244(RX10_TEMP1500, RX10_TEMP1492, RX10_TEMP1491);
 async (RX10_TEMP1493) {Program.thread244(utmp244); }
 }
 }
 public static void thread73(final T73 utmpz) {final  int RX10_TEMP1587 = utmpz.RX10_TEMP1587;
final  place RX10_TEMP1583 = utmpz.RX10_TEMP1583;
final  point ( : rank==1 ) RX10_TEMP1582 = utmpz.RX10_TEMP1582;
final  doubleStub [ : rank==1 ] RX10_TEMP1581 = utmpz.RX10_TEMP1581;
 { final dist ( : rank==1 ) RX10_TEMP1588 = [ 0 : RX10_TEMP1587 ] -> here ; final double [ : rank==1 ] RX10_TEMP1589 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP1588 ] ) ; final doubleStub RX10_TEMP1590 = new doubleStub ( RX10_TEMP1589 ) ; 
 final T245 utmp245 = new T245(RX10_TEMP1590, RX10_TEMP1582, RX10_TEMP1581);
 async (RX10_TEMP1583) {Program.thread245(utmp245); }
 }
 }
 public static void thread74(final T74 utmpz) {final  int pl = utmpz.pl;
final  doubleRefArray2 result = utmpz.result;
final  intRefArray1 sizes = utmpz.sizes;
final  intRefArray1 offsets = utmpz.offsets;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  Region1 rRank2 = utmpz.rRank2;
final  Dist2 dDst = utmpz.dDst;
 { final int X10_TEMP652 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dDst , X10_TEMP652 ) ; if ( _X10Util_ENABLE_CHECKS ) { final Point1 RX10_TEMP1607 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1608 = sizes . distValue ; final Region1 RX10_TEMP1609 = RX10_TEMP1608 . dReg ; final int RX10_TEMP1610 = Program . searchPointInRegion1 ( RX10_TEMP1609 , RX10_TEMP1607 ) ; final int RX10_TEMP1611 = 0 ; final boolean RX10_TEMP1612 = RX10_TEMP1610 < RX10_TEMP1611 ; if ( RX10_TEMP1612 ) { String RX10_TEMP1613 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1613 ) ; }
 final place RX10_TEMP1614 = Program . getPlaceFromDist1 ( RX10_TEMP1608 , RX10_TEMP1610 ) ; final place RX10_TEMP1616 = here ; final boolean RX10_TEMP1617 = RX10_TEMP1614 != RX10_TEMP1616 ; if ( RX10_TEMP1617 ) { String RX10_TEMP1615 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1615 ) ; }
 final int RX10_TEMP1618 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1610 ) ; final int X10_TEMP656 = ( RX10_TEMP1618 ) ; final int X10_TEMP657 = ( 0 ) ; final boolean X10_TEMP659 = X10_TEMP656 <= X10_TEMP657 ; if ( X10_TEMP659 ) { final String X10_TEMP660 = ( "Cannot make non-existant " ) ; final String X10_TEMP661 = ( "region" ) ; final String X10_TEMP663 = ( X10_TEMP660 + X10_TEMP661 ) ; throw new RuntimeException ( X10_TEMP663 ) ; }
 final Point1 RX10_TEMP1619 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1620 = sizes . distValue ; final Region1 RX10_TEMP1621 = RX10_TEMP1620 . dReg ; final int RX10_TEMP1622 = Program . searchPointInRegion1 ( RX10_TEMP1621 , RX10_TEMP1619 ) ; final int RX10_TEMP1623 = 0 ; final boolean RX10_TEMP1624 = RX10_TEMP1622 < RX10_TEMP1623 ; if ( RX10_TEMP1624 ) { String RX10_TEMP1625 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1625 ) ; }
 final place RX10_TEMP1626 = Program . getPlaceFromDist1 ( RX10_TEMP1620 , RX10_TEMP1622 ) ; final place RX10_TEMP1628 = here ; final boolean RX10_TEMP1629 = RX10_TEMP1626 != RX10_TEMP1628 ; if ( RX10_TEMP1629 ) { String RX10_TEMP1627 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1627 ) ; }
 final int RX10_TEMP1630 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1622 ) ; final int X10_TEMP665 = ( RX10_TEMP1630 ) ; final int X10_TEMP666 = ( rLocal1 . regSize ) ; final boolean X10_TEMP670 = ( X10_TEMP665 != X10_TEMP666 ) ; final Point1 RX10_TEMP1631 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1632 = offsets . distValue ; final Region1 RX10_TEMP1633 = RX10_TEMP1632 . dReg ; final int RX10_TEMP1634 = Program . searchPointInRegion1 ( RX10_TEMP1633 , RX10_TEMP1631 ) ; final int RX10_TEMP1635 = 0 ; final boolean RX10_TEMP1636 = RX10_TEMP1634 < RX10_TEMP1635 ; if ( RX10_TEMP1636 ) { String RX10_TEMP1637 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1637 ) ; }
 final place RX10_TEMP1638 = Program . getPlaceFromDist1 ( RX10_TEMP1632 , RX10_TEMP1634 ) ; final place RX10_TEMP1640 = here ; final boolean RX10_TEMP1641 = RX10_TEMP1638 != RX10_TEMP1640 ; if ( RX10_TEMP1641 ) { String RX10_TEMP1639 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP1639 ) ; }
 final int RX10_TEMP1642 = Program . getRefArrayValue1int ( offsets , RX10_TEMP1634 ) ; final int X10_TEMP668 = ( RX10_TEMP1642 ) ; final int RX10_TEMP1643 = rLocal1 . regSize ; final int RX10_TEMP1644 = 0 ; final boolean RX10_TEMP1645 = RX10_TEMP1643 <= RX10_TEMP1644 ; if ( RX10_TEMP1645 ) { final String RX10_TEMP1646 = "Operation low() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP1646 ) ; }
 final int X10_TEMP669 = ( Program . regionLow ( rLocal1 ) ) ; final boolean X10_TEMP671 = ( X10_TEMP668 != X10_TEMP669 ) ; final boolean X10_TEMP673 = X10_TEMP670 || X10_TEMP671 ; if ( X10_TEMP673 ) { final String X10_TEMP674 = ( "Regions don't match result " ) ; final String X10_TEMP675 = ( "dist" ) ; final String X10_TEMP677 = ( X10_TEMP674 + X10_TEMP675 ) ; throw new RuntimeException ( X10_TEMP677 ) ; }
 }
 final int X10_TEMP683 = ( 0 ) ; final Point1 RX10_TEMP1647 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1648 = sizes . distValue ; final Region1 RX10_TEMP1649 = RX10_TEMP1648 . dReg ; final int RX10_TEMP1650 = Program . searchPointInRegion1 ( RX10_TEMP1649 , RX10_TEMP1647 ) ; final int RX10_TEMP1651 = 0 ; final boolean RX10_TEMP1652 = RX10_TEMP1650 < RX10_TEMP1651 ; if ( RX10_TEMP1652 ) { String RX10_TEMP1653 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1653 ) ; }
 final place RX10_TEMP1654 = Program . getPlaceFromDist1 ( RX10_TEMP1648 , RX10_TEMP1650 ) ; final place RX10_TEMP1656 = here ; final boolean RX10_TEMP1657 = RX10_TEMP1654 != RX10_TEMP1656 ; if ( RX10_TEMP1657 ) { String RX10_TEMP1655 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1655 ) ; }
 final int RX10_TEMP1658 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1650 ) ; final int X10_TEMP680 = ( RX10_TEMP1658 ) ; final int X10_TEMP681 = ( 1 ) ; final int X10_TEMP684 = ( X10_TEMP680 - X10_TEMP681 ) ; final Region2 X10_TEMP687 = Program . createNewRegion2RA ( X10_TEMP683 , X10_TEMP684 , rRank2 ) ; final place X10_TEMP688 = here ; final int RX10_TEMP1663 = 1 ; int RX10_TEMP1661 = X10_TEMP687 . regSize ; RX10_TEMP1661 = RX10_TEMP1661 - RX10_TEMP1663 ; final region ( : rank==1 ) RX10_TEMP1662 = [ 0 : RX10_TEMP1661 ] ; for ( point ( : rank==1 ) RX10_TEMP1659 : RX10_TEMP1662 ) { final int RX10_TEMP1664 = RX10_TEMP1659 [0] ; final Point2 RX10_TEMP1660 = Program . regionOrdinalPoint2 ( X10_TEMP687 , RX10_TEMP1664 ) ; final int i = RX10_TEMP1660 . f0 ; final int j = RX10_TEMP1660 . f1 ; 
 final T246 utmp246 = new T246(j, i, pl, result, offsets, srcBuffer);
 async (X10_TEMP688) {Program.thread246(utmp246); }
 }
 }
 }
 public static void thread75(final T75 utmpz) {final  int RX10_TEMP13 = utmpz.RX10_TEMP13;
final  place RX10_TEMP9 = utmpz.RX10_TEMP9;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP13 ] -> here ; final double [ : rank==1 ] RX10_TEMP15 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP14 ] ) ; final doubleStub RX10_TEMP16 = new doubleStub ( RX10_TEMP15 ) ; 
 final T247 utmp247 = new T247(RX10_TEMP16, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP9) {Program.thread247(utmp247); }
 }
 }
 public static void thread76(final T76 utmpz) {final  Point1 pl = utmpz.pl;
final  doubleRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
final  Region2 rGuard = utmpz.rGuard;
final  doubleRefArray2 guards = utmpz.guards;
final  doubleRefArray2 data = utmpz.data;
 { final Dist2 RX10_TEMP33 = data . distValue ; final Dist2 dData = RX10_TEMP33 ; final Region2 rLocalS = Program . X10Util_get2DLRegion ( dData ) ; final int X10_TEMP35 = ( 0 ) ; final Region1 rLocalS1 = Program . X10Util_getRank2D ( rLocalS , X10_TEMP35 ) ; final int X10_TEMP37 = ( rLocalS . regSize ) ; final int X10_TEMP38 = ( 0 ) ; final boolean X10_TEMP40 = ( X10_TEMP37 > X10_TEMP38 ) ; final int RX10_TEMP34 = rLocalS1 . regSize ; final int RX10_TEMP35 = 0 ; final boolean RX10_TEMP36 = RX10_TEMP34 <= RX10_TEMP35 ; if ( RX10_TEMP36 ) { final String RX10_TEMP37 = "Operation low() not defined on empty region rLocalS1" ; throw new RuntimeException ( RX10_TEMP37 ) ; }
 final int X10_TEMP39 = ( Program . regionLow ( rLocalS1 ) ) ; final boolean X10_TEMP41 = ( X10_TEMP39 < _LinearESOpenPIC2D_YLENGTH ) ; final boolean X10_TEMP43 = X10_TEMP40 && X10_TEMP41 ; if ( X10_TEMP43 ) { final int X10_TEMP45 = ( 2 ) ; final int X10_TEMP46 = ( pl . f0 ) ; final int X10_TEMP48 = ( X10_TEMP45 * X10_TEMP46 ) ; final place pDst1 = ( place.places ( X10_TEMP48 ) ) ; final int X10_TEMP51 = ( 2 ) ; final int X10_TEMP52 = ( pl . f0 ) ; final int X10_TEMP53 = ( X10_TEMP51 * X10_TEMP52 ) ; final int X10_TEMP54 = ( 1 ) ; final int X10_TEMP56 = ( X10_TEMP53 + X10_TEMP54 ) ; final place pDst2 = ( place.places ( X10_TEMP56 ) ) ; final Region2 RX10_TEMP38 = rLocalS ; final int RX10_TEMP53 = rLocalS . regSize ; final int RX10_TEMP54 = 1 ; final int RX10_TEMP55 = RX10_TEMP53 - RX10_TEMP54 ; final region ( : rank==1 ) RX10_TEMP52 = [ 0 : RX10_TEMP55 ] ; final double value [ : rank==1 ] RX10_TEMP56 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP52 ] ( point ( : rank==1 ) RX10_TEMP39 ) { final int RX10_TEMP40 = RX10_TEMP39 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP38 , RX10_TEMP40 ) ; final Dist2 RX10_TEMP41 = data . distValue ; final Region2 RX10_TEMP42 = RX10_TEMP41 . dReg ; final int RX10_TEMP43 = Program . searchPointInRegion2 ( RX10_TEMP42 , pt ) ; final int RX10_TEMP44 = 0 ; final boolean RX10_TEMP45 = RX10_TEMP43 < RX10_TEMP44 ; if ( RX10_TEMP45 ) { String RX10_TEMP46 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 final place RX10_TEMP47 = Program . getPlaceFromDist2 ( RX10_TEMP41 , RX10_TEMP43 ) ; final place RX10_TEMP49 = here ; final boolean RX10_TEMP50 = RX10_TEMP47 != RX10_TEMP49 ; if ( RX10_TEMP50 ) { String RX10_TEMP48 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final double RX10_TEMP51 = Program . getRefArrayValue2double ( data , RX10_TEMP43 ) ; final double X10_TEMP60 = ( RX10_TEMP51 ) ; return X10_TEMP60 ; }
 ) ; final doubleValArray2 RX10_TEMP57 = new doubleValArray2 ( rLocalS , RX10_TEMP56 ) ; final doubleValArray2 X10_TEMP61 = RX10_TEMP57 ; final doubleValArray2 sBuffer = X10_TEMP61 ; 
 final T248 utmp248 = new T248(sBuffer, result, dResult);
 async (pDst1) {Program.thread248(utmp248); }
 
 final T249 utmp249 = new T249(sBuffer, result, dResult);
 async (pDst2) {Program.thread249(utmp249); }
 }
 final Point1 RX10_TEMP100 = new Point1 ( _LinearESOpenPIC2D_YLENGTH ) ; final boolean RX10_TEMP101 = Program . regionContainsPoint1 ( rLocalS1 , RX10_TEMP100 ) ; final boolean X10_TEMP85 = RX10_TEMP101 ; if ( X10_TEMP85 ) { final Region2 RX10_TEMP102 = rGuard ; final int RX10_TEMP117 = rGuard . regSize ; final int RX10_TEMP118 = 1 ; final int RX10_TEMP119 = RX10_TEMP117 - RX10_TEMP118 ; final region ( : rank==1 ) RX10_TEMP116 = [ 0 : RX10_TEMP119 ] ; final double value [ : rank==1 ] RX10_TEMP120 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP116 ] ( point ( : rank==1 ) RX10_TEMP103 ) { final int RX10_TEMP104 = RX10_TEMP103 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP102 , RX10_TEMP104 ) ; final Dist2 RX10_TEMP105 = data . distValue ; final Region2 RX10_TEMP106 = RX10_TEMP105 . dReg ; final int RX10_TEMP107 = Program . searchPointInRegion2 ( RX10_TEMP106 , pt ) ; final int RX10_TEMP108 = 0 ; final boolean RX10_TEMP109 = RX10_TEMP107 < RX10_TEMP108 ; if ( RX10_TEMP109 ) { String RX10_TEMP110 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP110 ) ; }
 final place RX10_TEMP111 = Program . getPlaceFromDist2 ( RX10_TEMP105 , RX10_TEMP107 ) ; final place RX10_TEMP113 = here ; final boolean RX10_TEMP114 = RX10_TEMP111 != RX10_TEMP113 ; if ( RX10_TEMP114 ) { String RX10_TEMP112 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP112 ) ; }
 final double RX10_TEMP115 = Program . getRefArrayValue2double ( data , RX10_TEMP107 ) ; final double X10_TEMP88 = ( RX10_TEMP115 ) ; return X10_TEMP88 ; }
 ) ; final doubleValArray2 RX10_TEMP121 = new doubleValArray2 ( rGuard , RX10_TEMP120 ) ; final doubleValArray2 X10_TEMP89 = RX10_TEMP121 ; final doubleValArray2 sBuffer = X10_TEMP89 ; final int X10_TEMP91 = ( place.MAX_PLACES ) ; final int X10_TEMP92 = ( 1 ) ; final int X10_TEMP94 = ( X10_TEMP91 - X10_TEMP92 ) ; final place X10_TEMP96 = place.places ( X10_TEMP94 ) ; 
 final T250 utmp250 = new T250(sBuffer, rGuard, guards);
 async (X10_TEMP96) {Program.thread250(utmp250); }
 }
 }
 }
 public static void thread77(final T77 utmpz) {final  doubleRefArray2 guards = utmpz.guards;
final  doubleRefArray2 data = utmpz.data;
 { final place X10_TEMP4 = ( here ) ; final boolean X10_TEMP5 = ( X10_TEMP4 . isFirst ( ) ) ; final boolean X10_TEMP7 = ! X10_TEMP5 ; if ( X10_TEMP7 ) { final Dist2 RX10_TEMP12 = guards . distValue ; final Dist2 dGuard = RX10_TEMP12 ; final place X10_TEMP10 = ( here ) ; final place X10_TEMP12 = ( X10_TEMP10 . prev ( ) ) ; final Region2 rGuard = Program . X10Util_get2DPRegion ( dGuard , X10_TEMP12 ) ; final Region2 RX10_TEMP13 = rGuard ; final int RX10_TEMP28 = rGuard . regSize ; final int RX10_TEMP29 = 1 ; final int RX10_TEMP30 = RX10_TEMP28 - RX10_TEMP29 ; final region ( : rank==1 ) RX10_TEMP27 = [ 0 : RX10_TEMP30 ] ; final double value [ : rank==1 ] RX10_TEMP31 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP27 ] ( point ( : rank==1 ) RX10_TEMP14 ) { final int RX10_TEMP15 = RX10_TEMP14 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP13 , RX10_TEMP15 ) ; final Dist2 RX10_TEMP16 = data . distValue ; final Region2 RX10_TEMP17 = RX10_TEMP16 . dReg ; final int RX10_TEMP18 = Program . searchPointInRegion2 ( RX10_TEMP17 , pt ) ; final int RX10_TEMP19 = 0 ; final boolean RX10_TEMP20 = RX10_TEMP18 < RX10_TEMP19 ; if ( RX10_TEMP20 ) { String RX10_TEMP21 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP21 ) ; }
 final place RX10_TEMP22 = Program . getPlaceFromDist2 ( RX10_TEMP16 , RX10_TEMP18 ) ; final place RX10_TEMP24 = here ; final boolean RX10_TEMP25 = RX10_TEMP22 != RX10_TEMP24 ; if ( RX10_TEMP25 ) { String RX10_TEMP23 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP23 ) ; }
 final double RX10_TEMP26 = Program . getRefArrayValue2double ( data , RX10_TEMP18 ) ; final double X10_TEMP16 = ( RX10_TEMP26 ) ; return X10_TEMP16 ; }
 ) ; final doubleValArray2 RX10_TEMP32 = new doubleValArray2 ( rGuard , RX10_TEMP31 ) ; final doubleValArray2 X10_TEMP17 = RX10_TEMP32 ; final doubleValArray2 sBuffer = X10_TEMP17 ; final place X10_TEMP19 = ( here ) ; final place X10_TEMP21 = X10_TEMP19 . prev ( ) ; 
 final T251 utmp251 = new T251(sBuffer, rGuard, guards);
 async (X10_TEMP21) {Program.thread251(utmp251); }
 }
 }
 }
 public static void thread78(final T78 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final int [ : rank==1 ] RX10_TEMP15 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { final int X10_TEMP11 = ( 0 ) ; return X10_TEMP11 ; }
 ) ; final intStub RX10_TEMP16 = new intStub ( RX10_TEMP15 ) ; 
 final T252 utmp252 = new T252(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread252(utmp252); }
 }
 }
 public static void thread79(final T79 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ParticleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP14 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP13 ] ) ; final ParticleStub RX10_TEMP15 = new ParticleStub ( RX10_TEMP14 ) ; 
 final T253 utmp253 = new T253(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread253(utmp253); }
 }
 }
 public static void thread80(final T80 utmpz) {final  int RX10_TEMP32 = utmpz.RX10_TEMP32;
final  place RX10_TEMP28 = utmpz.RX10_TEMP28;
final  point ( : rank==1 ) RX10_TEMP27 = utmpz.RX10_TEMP27;
final  ParticleStub [ : rank==1 ] RX10_TEMP26 = utmpz.RX10_TEMP26;
 { final dist ( : rank==1 ) RX10_TEMP33 = [ 0 : RX10_TEMP32 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP34 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP33 ] ) ; final ParticleStub RX10_TEMP35 = new ParticleStub ( RX10_TEMP34 ) ; 
 final T254 utmp254 = new T254(RX10_TEMP35, RX10_TEMP27, RX10_TEMP26);
 async (RX10_TEMP28) {Program.thread254(utmp254); }
 }
 }
 public static void thread81(final T81 utmpz) {final  int RX10_TEMP52 = utmpz.RX10_TEMP52;
final  place RX10_TEMP48 = utmpz.RX10_TEMP48;
final  point ( : rank==1 ) RX10_TEMP47 = utmpz.RX10_TEMP47;
final  ParticleStub [ : rank==1 ] RX10_TEMP46 = utmpz.RX10_TEMP46;
 { final dist ( : rank==1 ) RX10_TEMP53 = [ 0 : RX10_TEMP52 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP54 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP53 ] ) ; final ParticleStub RX10_TEMP55 = new ParticleStub ( RX10_TEMP54 ) ; 
 final T255 utmp255 = new T255(RX10_TEMP55, RX10_TEMP47, RX10_TEMP46);
 async (RX10_TEMP48) {Program.thread255(utmp255); }
 }
 }
 public static void thread82(final T82 utmpz) {final  int RX10_TEMP72 = utmpz.RX10_TEMP72;
final  place RX10_TEMP68 = utmpz.RX10_TEMP68;
final  point ( : rank==1 ) RX10_TEMP67 = utmpz.RX10_TEMP67;
final  ParticleStub [ : rank==1 ] RX10_TEMP66 = utmpz.RX10_TEMP66;
 { final dist ( : rank==1 ) RX10_TEMP73 = [ 0 : RX10_TEMP72 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP74 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP73 ] ) ; final ParticleStub RX10_TEMP75 = new ParticleStub ( RX10_TEMP74 ) ; 
 final T256 utmp256 = new T256(RX10_TEMP75, RX10_TEMP67, RX10_TEMP66);
 async (RX10_TEMP68) {Program.thread256(utmp256); }
 }
 }
 public static void thread83(final T83 utmpz) {final  int RX10_TEMP92 = utmpz.RX10_TEMP92;
final  place RX10_TEMP88 = utmpz.RX10_TEMP88;
final  point ( : rank==1 ) RX10_TEMP87 = utmpz.RX10_TEMP87;
final  ParticleStub [ : rank==1 ] RX10_TEMP86 = utmpz.RX10_TEMP86;
 { final dist ( : rank==1 ) RX10_TEMP93 = [ 0 : RX10_TEMP92 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP94 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP93 ] ) ; final ParticleStub RX10_TEMP95 = new ParticleStub ( RX10_TEMP94 ) ; 
 final T257 utmp257 = new T257(RX10_TEMP95, RX10_TEMP87, RX10_TEMP86);
 async (RX10_TEMP88) {Program.thread257(utmp257); }
 }
 }
 public static void thread84(final T84 utmpz) {final  int RX10_TEMP112 = utmpz.RX10_TEMP112;
final  place RX10_TEMP108 = utmpz.RX10_TEMP108;
final  point ( : rank==1 ) RX10_TEMP107 = utmpz.RX10_TEMP107;
final  intStub [ : rank==1 ] RX10_TEMP106 = utmpz.RX10_TEMP106;
 { final dist ( : rank==1 ) RX10_TEMP114 = [ 0 : RX10_TEMP112 ] -> here ; final int [ : rank==1 ] RX10_TEMP115 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP114 ] ( point ( : rank==1 ) RX10_TEMP113 ) { final int X10_TEMP30 = ( 0 ) ; return X10_TEMP30 ; }
 ) ; final intStub RX10_TEMP116 = new intStub ( RX10_TEMP115 ) ; 
 final T258 utmp258 = new T258(RX10_TEMP116, RX10_TEMP107, RX10_TEMP106);
 async (RX10_TEMP108) {Program.thread258(utmp258); }
 }
 }
 public static void thread85(final T85 utmpz) {final  int RX10_TEMP133 = utmpz.RX10_TEMP133;
final  place RX10_TEMP129 = utmpz.RX10_TEMP129;
final  point ( : rank==1 ) RX10_TEMP128 = utmpz.RX10_TEMP128;
final  intStub [ : rank==1 ] RX10_TEMP127 = utmpz.RX10_TEMP127;
 { final dist ( : rank==1 ) RX10_TEMP135 = [ 0 : RX10_TEMP133 ] -> here ; final int [ : rank==1 ] RX10_TEMP136 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP135 ] ( point ( : rank==1 ) RX10_TEMP134 ) { final int X10_TEMP33 = ( 0 ) ; return X10_TEMP33 ; }
 ) ; final intStub RX10_TEMP137 = new intStub ( RX10_TEMP136 ) ; 
 final T259 utmp259 = new T259(RX10_TEMP137, RX10_TEMP128, RX10_TEMP127);
 async (RX10_TEMP129) {Program.thread259(utmp259); }
 }
 }
 public static void thread86(final T86 utmpz) {final  int RX10_TEMP154 = utmpz.RX10_TEMP154;
final  place RX10_TEMP150 = utmpz.RX10_TEMP150;
final  point ( : rank==1 ) RX10_TEMP149 = utmpz.RX10_TEMP149;
final  intStub [ : rank==1 ] RX10_TEMP148 = utmpz.RX10_TEMP148;
 { final dist ( : rank==1 ) RX10_TEMP156 = [ 0 : RX10_TEMP154 ] -> here ; final int [ : rank==1 ] RX10_TEMP157 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP156 ] ( point ( : rank==1 ) RX10_TEMP155 ) { final int X10_TEMP36 = ( 0 ) ; return X10_TEMP36 ; }
 ) ; final intStub RX10_TEMP158 = new intStub ( RX10_TEMP157 ) ; 
 final T260 utmp260 = new T260(RX10_TEMP158, RX10_TEMP149, RX10_TEMP148);
 async (RX10_TEMP150) {Program.thread260(utmp260); }
 }
 }
 public static void thread87(final T87 utmpz) {final  int RX10_TEMP175 = utmpz.RX10_TEMP175;
final  place RX10_TEMP171 = utmpz.RX10_TEMP171;
final  point ( : rank==1 ) RX10_TEMP170 = utmpz.RX10_TEMP170;
final  intStub [ : rank==1 ] RX10_TEMP169 = utmpz.RX10_TEMP169;
 { final dist ( : rank==1 ) RX10_TEMP177 = [ 0 : RX10_TEMP175 ] -> here ; final int [ : rank==1 ] RX10_TEMP178 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP177 ] ( point ( : rank==1 ) RX10_TEMP176 ) { final int X10_TEMP39 = ( 0 ) ; return X10_TEMP39 ; }
 ) ; final intStub RX10_TEMP179 = new intStub ( RX10_TEMP178 ) ; 
 final T261 utmp261 = new T261(RX10_TEMP179, RX10_TEMP170, RX10_TEMP169);
 async (RX10_TEMP171) {Program.thread261(utmp261); }
 }
 }
 public static void thread88(final T88 utmpz) {final  int RX10_TEMP196 = utmpz.RX10_TEMP196;
final  place RX10_TEMP192 = utmpz.RX10_TEMP192;
final  point ( : rank==1 ) RX10_TEMP191 = utmpz.RX10_TEMP191;
final  intStub [ : rank==1 ] RX10_TEMP190 = utmpz.RX10_TEMP190;
 { final dist ( : rank==1 ) RX10_TEMP198 = [ 0 : RX10_TEMP196 ] -> here ; final int [ : rank==1 ] RX10_TEMP199 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP198 ] ( point ( : rank==1 ) RX10_TEMP197 ) { final int X10_TEMP42 = ( 0 ) ; return X10_TEMP42 ; }
 ) ; final intStub RX10_TEMP200 = new intStub ( RX10_TEMP199 ) ; 
 final T262 utmp262 = new T262(RX10_TEMP200, RX10_TEMP191, RX10_TEMP190);
 async (RX10_TEMP192) {Program.thread262(utmp262); }
 }
 }
 public static void thread89(final T89 utmpz) {final  int RX10_TEMP217 = utmpz.RX10_TEMP217;
final  place RX10_TEMP213 = utmpz.RX10_TEMP213;
final  point ( : rank==1 ) RX10_TEMP212 = utmpz.RX10_TEMP212;
final  intStub [ : rank==1 ] RX10_TEMP211 = utmpz.RX10_TEMP211;
 { final dist ( : rank==1 ) RX10_TEMP219 = [ 0 : RX10_TEMP217 ] -> here ; final int [ : rank==1 ] RX10_TEMP220 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP219 ] ( point ( : rank==1 ) RX10_TEMP218 ) { final int X10_TEMP45 = ( 0 ) ; return X10_TEMP45 ; }
 ) ; final intStub RX10_TEMP221 = new intStub ( RX10_TEMP220 ) ; 
 final T263 utmp263 = new T263(RX10_TEMP221, RX10_TEMP212, RX10_TEMP211);
 async (RX10_TEMP213) {Program.thread263(utmp263); }
 }
 }
 public static void thread90(final T90 utmpz) {final  int RX10_TEMP238 = utmpz.RX10_TEMP238;
final  place RX10_TEMP234 = utmpz.RX10_TEMP234;
final  point ( : rank==1 ) RX10_TEMP233 = utmpz.RX10_TEMP233;
final  intStub [ : rank==1 ] RX10_TEMP232 = utmpz.RX10_TEMP232;
 { final dist ( : rank==1 ) RX10_TEMP240 = [ 0 : RX10_TEMP238 ] -> here ; final int [ : rank==1 ] RX10_TEMP241 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP240 ] ( point ( : rank==1 ) RX10_TEMP239 ) { final int X10_TEMP48 = ( 0 ) ; return X10_TEMP48 ; }
 ) ; final intStub RX10_TEMP242 = new intStub ( RX10_TEMP241 ) ; 
 final T264 utmp264 = new T264(RX10_TEMP242, RX10_TEMP233, RX10_TEMP232);
 async (RX10_TEMP234) {Program.thread264(utmp264); }
 }
 }
 public static void thread91(final T91 utmpz) {final  int RX10_TEMP259 = utmpz.RX10_TEMP259;
final  place RX10_TEMP255 = utmpz.RX10_TEMP255;
final  point ( : rank==1 ) RX10_TEMP254 = utmpz.RX10_TEMP254;
final  intStub [ : rank==1 ] RX10_TEMP253 = utmpz.RX10_TEMP253;
 { final dist ( : rank==1 ) RX10_TEMP261 = [ 0 : RX10_TEMP259 ] -> here ; final int [ : rank==1 ] RX10_TEMP262 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP261 ] ( point ( : rank==1 ) RX10_TEMP260 ) { final int X10_TEMP58 = ( 0 ) ; return X10_TEMP58 ; }
 ) ; final intStub RX10_TEMP263 = new intStub ( RX10_TEMP262 ) ; 
 final T265 utmp265 = new T265(RX10_TEMP263, RX10_TEMP254, RX10_TEMP253);
 async (RX10_TEMP255) {Program.thread265(utmp265); }
 }
 }
 public static void thread92(final T92 utmpz) {final  int RX10_TEMP280 = utmpz.RX10_TEMP280;
final  place RX10_TEMP276 = utmpz.RX10_TEMP276;
final  point ( : rank==1 ) RX10_TEMP275 = utmpz.RX10_TEMP275;
final  intStub [ : rank==1 ] RX10_TEMP274 = utmpz.RX10_TEMP274;
 { final dist ( : rank==1 ) RX10_TEMP282 = [ 0 : RX10_TEMP280 ] -> here ; final int [ : rank==1 ] RX10_TEMP283 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP282 ] ( point ( : rank==1 ) RX10_TEMP281 ) { final int X10_TEMP61 = ( 0 ) ; return X10_TEMP61 ; }
 ) ; final intStub RX10_TEMP284 = new intStub ( RX10_TEMP283 ) ; 
 final T266 utmp266 = new T266(RX10_TEMP284, RX10_TEMP275, RX10_TEMP274);
 async (RX10_TEMP276) {Program.thread266(utmp266); }
 }
 }
 public static void thread93(final T93 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 nPart = utmpz.nPart;
final  ParticleRefArray2 part = utmpz.part;
final  ParticleRefArray1 particles = utmpz.particles;
 { final Dist1 RX10_TEMP301 = particles . distValue ; final Dist1 X10_TEMP67 = RX10_TEMP301 ; final place X10_TEMP68 = ( here ) ; final Dist1 X10_TEMP70 = Program . restrictDist1 ( X10_TEMP67 , X10_TEMP68 ) ; final Region1 RX10_TEMP302 = X10_TEMP70 . dReg ; final Region1 X10_TEMP71 = RX10_TEMP302 ; final Region1 rLocal = X10_TEMP71 ; final int X10_TEMP73 = ( rLocal . regSize ) ; final int X10_TEMP74 = ( 0 ) ; final boolean X10_TEMP76 = X10_TEMP73 > X10_TEMP74 ; if ( X10_TEMP76 ) { final int RX10_TEMP303 = rLocal . regSize ; final int RX10_TEMP304 = 0 ; final boolean RX10_TEMP305 = RX10_TEMP303 <= RX10_TEMP304 ; if ( RX10_TEMP305 ) { final String RX10_TEMP306 = "Operation low() not defined on empty region rLocal" ; throw new RuntimeException ( RX10_TEMP306 ) ; }
 final int offset = ( Program . regionLow ( rLocal ) ) ; final place X10_TEMP79 = here ; final int RX10_TEMP311 = 1 ; int RX10_TEMP309 = rLocal . regSize ; RX10_TEMP309 = RX10_TEMP309 - RX10_TEMP311 ; final region ( : rank==1 ) RX10_TEMP310 = [ 0 : RX10_TEMP309 ] ; for ( point ( : rank==1 ) RX10_TEMP307 : RX10_TEMP310 ) { final int RX10_TEMP312 = RX10_TEMP307 [0] ; final Point1 RX10_TEMP308 = Program . regionOrdinalPoint1 ( rLocal , RX10_TEMP312 ) ; final int i = RX10_TEMP308 . f0 ; 
 final T267 utmp267 = new T267(i, offset, pl, part, particles);
 async (X10_TEMP79) {Program.thread267(utmp267); }
 }
 }
 final int X10_TEMP89 = ( rLocal . regSize ) ; final int X10_TEMP90 = ( X10_TEMP89 ) ; final Point1 RX10_TEMP336 = new Point1 ( pl ) ; final Dist1 RX10_TEMP337 = nPart . distValue ; final Region1 RX10_TEMP338 = RX10_TEMP337 . dReg ; final int RX10_TEMP339 = Program . searchPointInRegion1 ( RX10_TEMP338 , RX10_TEMP336 ) ; final int RX10_TEMP340 = 0 ; final boolean RX10_TEMP341 = RX10_TEMP339 < RX10_TEMP340 ; if ( RX10_TEMP341 ) { String RX10_TEMP342 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP342 ) ; }
 final place RX10_TEMP343 = Program . getPlaceFromDist1 ( RX10_TEMP337 , RX10_TEMP339 ) ; final place RX10_TEMP345 = here ; final boolean RX10_TEMP346 = RX10_TEMP343 != RX10_TEMP345 ; if ( RX10_TEMP346 ) { String RX10_TEMP344 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP344 ) ; }
 Program . setRefArrayValue1int ( nPart , RX10_TEMP339 , X10_TEMP90 ) ; }
 }
 public static void thread94(final T94 utmpz) {final  Point1 pt = utmpz.pt;
final  intRefArray1 info = utmpz.info;
 { final int X10_TEMP108 = ( 0 ) ; final int X10_TEMP109 = ( X10_TEMP108 ) ; final Dist1 RX10_TEMP353 = info . distValue ; final Region1 RX10_TEMP354 = RX10_TEMP353 . dReg ; final int RX10_TEMP355 = Program . searchPointInRegion1 ( RX10_TEMP354 , pt ) ; final int RX10_TEMP356 = 0 ; final boolean RX10_TEMP357 = RX10_TEMP355 < RX10_TEMP356 ; if ( RX10_TEMP357 ) { String RX10_TEMP358 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP358 ) ; }
 final place RX10_TEMP359 = Program . getPlaceFromDist1 ( RX10_TEMP353 , RX10_TEMP355 ) ; final place RX10_TEMP361 = here ; final boolean RX10_TEMP362 = RX10_TEMP359 != RX10_TEMP361 ; if ( RX10_TEMP362 ) { String RX10_TEMP360 = "Bad place access for array info" ; throw new RuntimeException ( RX10_TEMP360 ) ; }
 Program . setRefArrayValue1int ( info , RX10_TEMP355 , X10_TEMP109 ) ; }
 }
 public static void thread95(final T95 utmpz) {final  Region1 RX10_TEMP377 = utmpz.RX10_TEMP377;
final  int RX10_TEMP375 = utmpz.RX10_TEMP375;
final  place RX10_TEMP371 = utmpz.RX10_TEMP371;
final  point ( : rank==1 ) RX10_TEMP370 = utmpz.RX10_TEMP370;
final  intStub [ : rank==1 ] RX10_TEMP369 = utmpz.RX10_TEMP369;
final  intRefArray1 X10_TEMP113 = utmpz.X10_TEMP113;
final  intRefArray1 X10_TEMP112 = utmpz.X10_TEMP112;
 { final dist ( : rank==1 ) RX10_TEMP402 = [ 0 : RX10_TEMP375 ] -> here ; final int [ : rank==1 ] RX10_TEMP403 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP402 ] ( point ( : rank==1 ) RX10_TEMP378 ) { final int RX10_TEMP379 = RX10_TEMP378 [0] ; final Point1 X10_TEMP111 = Program . regionOrdinalPoint1 ( RX10_TEMP377 , RX10_TEMP379 ) ; final Dist1 RX10_TEMP380 = X10_TEMP112 . distValue ; final Region1 RX10_TEMP381 = RX10_TEMP380 . dReg ; final int RX10_TEMP382 = Program . searchPointInRegion1 ( RX10_TEMP381 , X10_TEMP111 ) ; final int RX10_TEMP383 = 0 ; final boolean RX10_TEMP384 = RX10_TEMP382 < RX10_TEMP383 ; if ( RX10_TEMP384 ) { String RX10_TEMP385 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP385 ) ; }
 final place RX10_TEMP386 = Program . getPlaceFromDist1 ( RX10_TEMP380 , RX10_TEMP382 ) ; final place RX10_TEMP388 = here ; final boolean RX10_TEMP389 = RX10_TEMP386 != RX10_TEMP388 ; if ( RX10_TEMP389 ) { String RX10_TEMP387 = "Bad place access for array X10_TEMP112" ; throw new RuntimeException ( RX10_TEMP387 ) ; }
 final int RX10_TEMP390 = Program . getRefArrayValue1int ( X10_TEMP112 , RX10_TEMP382 ) ; final int X10_TEMP114 = RX10_TEMP390 ; final Dist1 RX10_TEMP391 = X10_TEMP113 . distValue ; final Region1 RX10_TEMP392 = RX10_TEMP391 . dReg ; final int RX10_TEMP393 = Program . searchPointInRegion1 ( RX10_TEMP392 , X10_TEMP111 ) ; final int RX10_TEMP394 = 0 ; final boolean RX10_TEMP395 = RX10_TEMP393 < RX10_TEMP394 ; if ( RX10_TEMP395 ) { String RX10_TEMP396 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP396 ) ; }
 final place RX10_TEMP397 = Program . getPlaceFromDist1 ( RX10_TEMP391 , RX10_TEMP393 ) ; final place RX10_TEMP399 = here ; final boolean RX10_TEMP400 = RX10_TEMP397 != RX10_TEMP399 ; if ( RX10_TEMP400 ) { String RX10_TEMP398 = "Bad place access for array X10_TEMP113" ; throw new RuntimeException ( RX10_TEMP398 ) ; }
 final int RX10_TEMP401 = Program . getRefArrayValue1int ( X10_TEMP113 , RX10_TEMP393 ) ; final int X10_TEMP115 = RX10_TEMP401 ; final int X10_TEMP116 = X10_TEMP114 + X10_TEMP115 ; return X10_TEMP116 ; }
 ) ; final intStub RX10_TEMP404 = new intStub ( RX10_TEMP403 ) ; 
 final T268 utmp268 = new T268(RX10_TEMP404, RX10_TEMP370, RX10_TEMP369);
 async (RX10_TEMP371) {Program.thread268(utmp268); }
 }
 }
 public static void thread96(final T96 utmpz) {final  int RX10_TEMP421 = utmpz.RX10_TEMP421;
final  place RX10_TEMP417 = utmpz.RX10_TEMP417;
final  point ( : rank==1 ) RX10_TEMP416 = utmpz.RX10_TEMP416;
final  intStub [ : rank==1 ] RX10_TEMP415 = utmpz.RX10_TEMP415;
 { final dist ( : rank==1 ) RX10_TEMP423 = [ 0 : RX10_TEMP421 ] -> here ; final int [ : rank==1 ] RX10_TEMP424 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP423 ] ( point ( : rank==1 ) RX10_TEMP422 ) { final int X10_TEMP123 = ( 0 ) ; return X10_TEMP123 ; }
 ) ; final intStub RX10_TEMP425 = new intStub ( RX10_TEMP424 ) ; 
 final T269 utmp269 = new T269(RX10_TEMP425, RX10_TEMP416, RX10_TEMP415);
 async (RX10_TEMP417) {Program.thread269(utmp269); }
 }
 }
 public static void thread97(final T97 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 overflow = utmpz.overflow;
final  double rsize = utmpz.rsize;
final  intRefArray1 nSent = utmpz.nSent;
final  intRefArray2 holes = utmpz.holes;
final  intRefArray1 nPart = utmpz.nPart;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 outLt = utmpz.outLt;
final  ParticleRefArray2 sBufferR = utmpz.sBufferR;
final  ParticleRefArray2 sBufferL = utmpz.sBufferL;
final  ParticleRefArray2 part = utmpz.part;
final  Region1 rBuffer = utmpz.rBuffer;
final  Dist2 dFieldSpace = utmpz.dFieldSpace;
 { final place X10_TEMP129 = ( here ) ; final Dist2 X10_TEMP131 = Program . restrictDist2 ( dFieldSpace , X10_TEMP129 ) ; final Region2 RX10_TEMP442 = X10_TEMP131 . dReg ; final Region2 X10_TEMP132 = RX10_TEMP442 ; final Region2 rLocal = X10_TEMP132 ; final int X10_TEMP136 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getRank2D ( rLocal , X10_TEMP136 ) ; final int RX10_TEMP443 = rLocal1 . regSize ; final int RX10_TEMP444 = 0 ; final boolean RX10_TEMP445 = RX10_TEMP443 <= RX10_TEMP444 ; if ( RX10_TEMP445 ) { final String RX10_TEMP446 = "Operation high() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP446 ) ; }
 final int X10_TEMP138 = ( Program . regionHigh ( rLocal1 ) ) ; final int X10_TEMP139 = ( 1 ) ; final double ub = ( X10_TEMP138 + X10_TEMP139 ) ; final int RX10_TEMP447 = rLocal1 . regSize ; final int RX10_TEMP448 = 0 ; final boolean RX10_TEMP449 = RX10_TEMP447 <= RX10_TEMP448 ; if ( RX10_TEMP449 ) { final String RX10_TEMP450 = "Operation low() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP450 ) ; }
 final double lb = ( Program . regionLow ( rLocal1 ) ) ; final int X10_TEMP144 = ( 0 ) ; final int X10_TEMP145 = ( X10_TEMP144 ) ; final Point1 RX10_TEMP451 = new Point1 ( pl ) ; final Dist1 RX10_TEMP452 = outLt . distValue ; final Region1 RX10_TEMP453 = RX10_TEMP452 . dReg ; final int RX10_TEMP454 = Program . searchPointInRegion1 ( RX10_TEMP453 , RX10_TEMP451 ) ; final int RX10_TEMP455 = 0 ; final boolean RX10_TEMP456 = RX10_TEMP454 < RX10_TEMP455 ; if ( RX10_TEMP456 ) { String RX10_TEMP457 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP457 ) ; }
 final place RX10_TEMP458 = Program . getPlaceFromDist1 ( RX10_TEMP452 , RX10_TEMP454 ) ; final place RX10_TEMP460 = here ; final boolean RX10_TEMP461 = RX10_TEMP458 != RX10_TEMP460 ; if ( RX10_TEMP461 ) { String RX10_TEMP459 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP459 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP454 , X10_TEMP145 ) ; final int X10_TEMP148 = ( 0 ) ; final int X10_TEMP149 = ( X10_TEMP148 ) ; final Point1 RX10_TEMP462 = new Point1 ( pl ) ; final Dist1 RX10_TEMP463 = outRt . distValue ; final Region1 RX10_TEMP464 = RX10_TEMP463 . dReg ; final int RX10_TEMP465 = Program . searchPointInRegion1 ( RX10_TEMP464 , RX10_TEMP462 ) ; final int RX10_TEMP466 = 0 ; final boolean RX10_TEMP467 = RX10_TEMP465 < RX10_TEMP466 ; if ( RX10_TEMP467 ) { String RX10_TEMP468 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP468 ) ; }
 final place RX10_TEMP469 = Program . getPlaceFromDist1 ( RX10_TEMP463 , RX10_TEMP465 ) ; final place RX10_TEMP471 = here ; final boolean RX10_TEMP472 = RX10_TEMP469 != RX10_TEMP471 ; if ( RX10_TEMP472 ) { String RX10_TEMP470 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP470 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP465 , X10_TEMP149 ) ; final int X10_TEMP155 = ( 0 ) ; final Point1 RX10_TEMP473 = new Point1 ( pl ) ; final Dist1 RX10_TEMP474 = nPart . distValue ; final Region1 RX10_TEMP475 = RX10_TEMP474 . dReg ; final int RX10_TEMP476 = Program . searchPointInRegion1 ( RX10_TEMP475 , RX10_TEMP473 ) ; final int RX10_TEMP477 = 0 ; final boolean RX10_TEMP478 = RX10_TEMP476 < RX10_TEMP477 ; if ( RX10_TEMP478 ) { String RX10_TEMP479 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP479 ) ; }
 final place RX10_TEMP480 = Program . getPlaceFromDist1 ( RX10_TEMP474 , RX10_TEMP476 ) ; final place RX10_TEMP482 = here ; final boolean RX10_TEMP483 = RX10_TEMP480 != RX10_TEMP482 ; if ( RX10_TEMP483 ) { String RX10_TEMP481 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP481 ) ; }
 final int RX10_TEMP484 = Program . getRefArrayValue1int ( nPart , RX10_TEMP476 ) ; final int X10_TEMP152 = ( RX10_TEMP484 ) ; final int X10_TEMP153 = ( 1 ) ; final int X10_TEMP156 = ( X10_TEMP152 - X10_TEMP153 ) ; final Region1 X10_TEMP158 = Program . createNewRegion1R ( X10_TEMP155 , X10_TEMP156 ) ; final int RX10_TEMP489 = 1 ; int RX10_TEMP487 = X10_TEMP158 . regSize ; RX10_TEMP487 = RX10_TEMP487 - RX10_TEMP489 ; final region ( : rank==1 ) RX10_TEMP488 = [ 0 : RX10_TEMP487 ] ; for ( point ( : rank==1 ) RX10_TEMP485 : RX10_TEMP488 ) { final int RX10_TEMP490 = RX10_TEMP485 [0] ; final Point1 RX10_TEMP486 = Program . regionOrdinalPoint1 ( X10_TEMP158 , RX10_TEMP490 ) ; final int i = RX10_TEMP486 . f0 ; final Point2 RX10_TEMP491 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP492 = part . distValue ; final Region2 RX10_TEMP493 = RX10_TEMP492 . dReg ; final int RX10_TEMP494 = Program . searchPointInRegion2 ( RX10_TEMP493 , RX10_TEMP491 ) ; final int RX10_TEMP495 = 0 ; final boolean RX10_TEMP496 = RX10_TEMP494 < RX10_TEMP495 ; if ( RX10_TEMP496 ) { String RX10_TEMP497 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP497 ) ; }
 final place RX10_TEMP498 = Program . getPlaceFromDist2 ( RX10_TEMP492 , RX10_TEMP494 ) ; final place RX10_TEMP500 = here ; final boolean RX10_TEMP501 = RX10_TEMP498 != RX10_TEMP500 ; if ( RX10_TEMP501 ) { String RX10_TEMP499 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP499 ) ; }
 final Particle RX10_TEMP502 = Program . getRefArrayValue2Particle ( part , RX10_TEMP494 ) ; final Particle p = ( RX10_TEMP502 ) ; double y = ( Program . Particle_getY ( p ) ) ; final boolean X10_TEMP164 = y < lb ; if ( X10_TEMP164 ) { final Point1 RX10_TEMP503 = new Point1 ( pl ) ; final Dist1 RX10_TEMP504 = outLt . distValue ; final Region1 RX10_TEMP505 = RX10_TEMP504 . dReg ; final int RX10_TEMP506 = Program . searchPointInRegion1 ( RX10_TEMP505 , RX10_TEMP503 ) ; final int RX10_TEMP507 = 0 ; final boolean RX10_TEMP508 = RX10_TEMP506 < RX10_TEMP507 ; if ( RX10_TEMP508 ) { String RX10_TEMP509 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP509 ) ; }
 final place RX10_TEMP510 = Program . getPlaceFromDist1 ( RX10_TEMP504 , RX10_TEMP506 ) ; final place RX10_TEMP512 = here ; final boolean RX10_TEMP513 = RX10_TEMP510 != RX10_TEMP512 ; if ( RX10_TEMP513 ) { String RX10_TEMP511 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP511 ) ; }
 final int RX10_TEMP514 = Program . getRefArrayValue1int ( outLt , RX10_TEMP506 ) ; final int X10_TEMP166 = ( RX10_TEMP514 ) ; final int X10_TEMP167 = ( rBuffer . regSize ) ; final boolean X10_TEMP169 = X10_TEMP166 < X10_TEMP167 ; if ( X10_TEMP169 ) { final place X10_TEMP170 = ( here ) ; final boolean X10_TEMP172 = X10_TEMP170 . isFirst ( ) ; if ( X10_TEMP172 ) { final double X10_TEMP174 = ( y + rsize ) ; y = ( X10_TEMP174 ) ; }
 final Point1 RX10_TEMP515 = new Point1 ( pl ) ; final Dist1 RX10_TEMP516 = outLt . distValue ; final Region1 RX10_TEMP517 = RX10_TEMP516 . dReg ; final int RX10_TEMP518 = Program . searchPointInRegion1 ( RX10_TEMP517 , RX10_TEMP515 ) ; final int RX10_TEMP519 = 0 ; final boolean RX10_TEMP520 = RX10_TEMP518 < RX10_TEMP519 ; if ( RX10_TEMP520 ) { String RX10_TEMP521 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP521 ) ; }
 final place RX10_TEMP522 = Program . getPlaceFromDist1 ( RX10_TEMP516 , RX10_TEMP518 ) ; final place RX10_TEMP524 = here ; final boolean RX10_TEMP525 = RX10_TEMP522 != RX10_TEMP524 ; if ( RX10_TEMP525 ) { String RX10_TEMP523 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP523 ) ; }
 final int RX10_TEMP526 = Program . getRefArrayValue1int ( outLt , RX10_TEMP518 ) ; final int X10_TEMP178 = ( RX10_TEMP526 ) ; final Particle X10_TEMP181 = ( Program . Particle_setY ( p , y ) ) ; final Particle X10_TEMP182 = ( X10_TEMP181 ) ; final Point2 RX10_TEMP527 = new Point2 ( pl , X10_TEMP178 ) ; final Dist2 RX10_TEMP528 = sBufferL . distValue ; final Region2 RX10_TEMP529 = RX10_TEMP528 . dReg ; final int RX10_TEMP530 = Program . searchPointInRegion2 ( RX10_TEMP529 , RX10_TEMP527 ) ; final int RX10_TEMP531 = 0 ; final boolean RX10_TEMP532 = RX10_TEMP530 < RX10_TEMP531 ; if ( RX10_TEMP532 ) { String RX10_TEMP533 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP533 ) ; }
 final place RX10_TEMP534 = Program . getPlaceFromDist2 ( RX10_TEMP528 , RX10_TEMP530 ) ; final place RX10_TEMP536 = here ; final boolean RX10_TEMP537 = RX10_TEMP534 != RX10_TEMP536 ; if ( RX10_TEMP537 ) { String RX10_TEMP535 = "Bad place access for array sBufferL" ; throw new RuntimeException ( RX10_TEMP535 ) ; }
 Program . setRefArrayValue2Particle ( sBufferL , RX10_TEMP530 , X10_TEMP182 ) ; final Point1 RX10_TEMP538 = new Point1 ( pl ) ; final Dist1 RX10_TEMP539 = outLt . distValue ; final Region1 RX10_TEMP540 = RX10_TEMP539 . dReg ; final int RX10_TEMP541 = Program . searchPointInRegion1 ( RX10_TEMP540 , RX10_TEMP538 ) ; final int RX10_TEMP542 = 0 ; final boolean RX10_TEMP543 = RX10_TEMP541 < RX10_TEMP542 ; if ( RX10_TEMP543 ) { String RX10_TEMP544 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP544 ) ; }
 final place RX10_TEMP545 = Program . getPlaceFromDist1 ( RX10_TEMP539 , RX10_TEMP541 ) ; final place RX10_TEMP547 = here ; final boolean RX10_TEMP548 = RX10_TEMP545 != RX10_TEMP547 ; if ( RX10_TEMP548 ) { String RX10_TEMP546 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP546 ) ; }
 final int RX10_TEMP549 = Program . getRefArrayValue1int ( outLt , RX10_TEMP541 ) ; final int X10_TEMP186 = ( RX10_TEMP549 ) ; final Point1 RX10_TEMP550 = new Point1 ( pl ) ; final Dist1 RX10_TEMP551 = outRt . distValue ; final Region1 RX10_TEMP552 = RX10_TEMP551 . dReg ; final int RX10_TEMP553 = Program . searchPointInRegion1 ( RX10_TEMP552 , RX10_TEMP550 ) ; final int RX10_TEMP554 = 0 ; final boolean RX10_TEMP555 = RX10_TEMP553 < RX10_TEMP554 ; if ( RX10_TEMP555 ) { String RX10_TEMP556 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP556 ) ; }
 final place RX10_TEMP557 = Program . getPlaceFromDist1 ( RX10_TEMP551 , RX10_TEMP553 ) ; final place RX10_TEMP559 = here ; final boolean RX10_TEMP560 = RX10_TEMP557 != RX10_TEMP559 ; if ( RX10_TEMP560 ) { String RX10_TEMP558 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP558 ) ; }
 final int RX10_TEMP561 = Program . getRefArrayValue1int ( outRt , RX10_TEMP553 ) ; final int X10_TEMP187 = ( RX10_TEMP561 ) ; final int X10_TEMP189 = ( X10_TEMP186 + X10_TEMP187 ) ; final int X10_TEMP191 = ( i ) ; final Point2 RX10_TEMP562 = new Point2 ( pl , X10_TEMP189 ) ; final Dist2 RX10_TEMP563 = holes . distValue ; final Region2 RX10_TEMP564 = RX10_TEMP563 . dReg ; final int RX10_TEMP565 = Program . searchPointInRegion2 ( RX10_TEMP564 , RX10_TEMP562 ) ; final int RX10_TEMP566 = 0 ; final boolean RX10_TEMP567 = RX10_TEMP565 < RX10_TEMP566 ; if ( RX10_TEMP567 ) { String RX10_TEMP568 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP568 ) ; }
 final place RX10_TEMP569 = Program . getPlaceFromDist2 ( RX10_TEMP563 , RX10_TEMP565 ) ; final place RX10_TEMP571 = here ; final boolean RX10_TEMP572 = RX10_TEMP569 != RX10_TEMP571 ; if ( RX10_TEMP572 ) { String RX10_TEMP570 = "Bad place access for array holes" ; throw new RuntimeException ( RX10_TEMP570 ) ; }
 Program . setRefArrayValue2int ( holes , RX10_TEMP565 , X10_TEMP191 ) ; final Point1 RX10_TEMP573 = new Point1 ( pl ) ; final Dist1 RX10_TEMP574 = outLt . distValue ; final Region1 RX10_TEMP575 = RX10_TEMP574 . dReg ; final int RX10_TEMP576 = Program . searchPointInRegion1 ( RX10_TEMP575 , RX10_TEMP573 ) ; final int RX10_TEMP577 = 0 ; final boolean RX10_TEMP578 = RX10_TEMP576 < RX10_TEMP577 ; if ( RX10_TEMP578 ) { String RX10_TEMP579 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP579 ) ; }
 final place RX10_TEMP580 = Program . getPlaceFromDist1 ( RX10_TEMP574 , RX10_TEMP576 ) ; final place RX10_TEMP582 = here ; final boolean RX10_TEMP583 = RX10_TEMP580 != RX10_TEMP582 ; if ( RX10_TEMP583 ) { String RX10_TEMP581 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP581 ) ; }
 final int RX10_TEMP584 = Program . getRefArrayValue1int ( outLt , RX10_TEMP576 ) ; final int X10_TEMP193 = ( RX10_TEMP584 ) ; final int X10_TEMP194 = 1 ; final Point1 RX10_TEMP585 = new Point1 ( pl ) ; final Dist1 RX10_TEMP586 = outLt . distValue ; final Region1 RX10_TEMP587 = RX10_TEMP586 . dReg ; final int RX10_TEMP588 = Program . searchPointInRegion1 ( RX10_TEMP587 , RX10_TEMP585 ) ; final int RX10_TEMP589 = 0 ; final boolean RX10_TEMP590 = RX10_TEMP588 < RX10_TEMP589 ; if ( RX10_TEMP590 ) { String RX10_TEMP591 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP591 ) ; }
 final place RX10_TEMP592 = Program . getPlaceFromDist1 ( RX10_TEMP586 , RX10_TEMP588 ) ; final place RX10_TEMP594 = here ; final boolean RX10_TEMP595 = RX10_TEMP592 != RX10_TEMP594 ; if ( RX10_TEMP595 ) { String RX10_TEMP593 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP593 ) ; }
 final int RX10_TEMP596 = Program . getRefArrayValue1int ( outLt , RX10_TEMP588 ) ; final int X10_TEMP195 = ( RX10_TEMP596 ) ; final int X10_TEMP196 = ( X10_TEMP195 + X10_TEMP194 ) ; final Point1 RX10_TEMP597 = new Point1 ( pl ) ; final Dist1 RX10_TEMP598 = outLt . distValue ; final Region1 RX10_TEMP599 = RX10_TEMP598 . dReg ; final int RX10_TEMP600 = Program . searchPointInRegion1 ( RX10_TEMP599 , RX10_TEMP597 ) ; final int RX10_TEMP601 = 0 ; final boolean RX10_TEMP602 = RX10_TEMP600 < RX10_TEMP601 ; if ( RX10_TEMP602 ) { String RX10_TEMP603 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP603 ) ; }
 final place RX10_TEMP604 = Program . getPlaceFromDist1 ( RX10_TEMP598 , RX10_TEMP600 ) ; final place RX10_TEMP606 = here ; final boolean RX10_TEMP607 = RX10_TEMP604 != RX10_TEMP606 ; if ( RX10_TEMP607 ) { String RX10_TEMP605 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP605 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP600 , X10_TEMP196 ) ; }
 else { final int X10_TEMP199 = ( 1 ) ; final int X10_TEMP200 = ( X10_TEMP199 ) ; final Point1 RX10_TEMP608 = new Point1 ( pl ) ; final Dist1 RX10_TEMP609 = overflow . distValue ; final Region1 RX10_TEMP610 = RX10_TEMP609 . dReg ; final int RX10_TEMP611 = Program . searchPointInRegion1 ( RX10_TEMP610 , RX10_TEMP608 ) ; final int RX10_TEMP612 = 0 ; final boolean RX10_TEMP613 = RX10_TEMP611 < RX10_TEMP612 ; if ( RX10_TEMP613 ) { String RX10_TEMP614 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP614 ) ; }
 final place RX10_TEMP615 = Program . getPlaceFromDist1 ( RX10_TEMP609 , RX10_TEMP611 ) ; final place RX10_TEMP617 = here ; final boolean RX10_TEMP618 = RX10_TEMP615 != RX10_TEMP617 ; if ( RX10_TEMP618 ) { String RX10_TEMP616 = "Bad place access for array overflow" ; throw new RuntimeException ( RX10_TEMP616 ) ; }
 Program . setRefArrayValue1int ( overflow , RX10_TEMP611 , X10_TEMP200 ) ; break ; }
 }
 else { final boolean X10_TEMP202 = y >= ub ; if ( X10_TEMP202 ) { final Point1 RX10_TEMP619 = new Point1 ( pl ) ; final Dist1 RX10_TEMP620 = outRt . distValue ; final Region1 RX10_TEMP621 = RX10_TEMP620 . dReg ; final int RX10_TEMP622 = Program . searchPointInRegion1 ( RX10_TEMP621 , RX10_TEMP619 ) ; final int RX10_TEMP623 = 0 ; final boolean RX10_TEMP624 = RX10_TEMP622 < RX10_TEMP623 ; if ( RX10_TEMP624 ) { String RX10_TEMP625 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP625 ) ; }
 final place RX10_TEMP626 = Program . getPlaceFromDist1 ( RX10_TEMP620 , RX10_TEMP622 ) ; final place RX10_TEMP628 = here ; final boolean RX10_TEMP629 = RX10_TEMP626 != RX10_TEMP628 ; if ( RX10_TEMP629 ) { String RX10_TEMP627 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP627 ) ; }
 final int RX10_TEMP630 = Program . getRefArrayValue1int ( outRt , RX10_TEMP622 ) ; final int X10_TEMP204 = ( RX10_TEMP630 ) ; final int X10_TEMP205 = ( rBuffer . regSize ) ; final boolean X10_TEMP207 = X10_TEMP204 < X10_TEMP205 ; if ( X10_TEMP207 ) { final place X10_TEMP208 = ( here ) ; final boolean X10_TEMP210 = X10_TEMP208 . isLast ( ) ; if ( X10_TEMP210 ) { final double X10_TEMP212 = ( y - rsize ) ; y = ( X10_TEMP212 ) ; }
 final Point1 RX10_TEMP631 = new Point1 ( pl ) ; final Dist1 RX10_TEMP632 = outRt . distValue ; final Region1 RX10_TEMP633 = RX10_TEMP632 . dReg ; final int RX10_TEMP634 = Program . searchPointInRegion1 ( RX10_TEMP633 , RX10_TEMP631 ) ; final int RX10_TEMP635 = 0 ; final boolean RX10_TEMP636 = RX10_TEMP634 < RX10_TEMP635 ; if ( RX10_TEMP636 ) { String RX10_TEMP637 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP637 ) ; }
 final place RX10_TEMP638 = Program . getPlaceFromDist1 ( RX10_TEMP632 , RX10_TEMP634 ) ; final place RX10_TEMP640 = here ; final boolean RX10_TEMP641 = RX10_TEMP638 != RX10_TEMP640 ; if ( RX10_TEMP641 ) { String RX10_TEMP639 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP639 ) ; }
 final int RX10_TEMP642 = Program . getRefArrayValue1int ( outRt , RX10_TEMP634 ) ; final int X10_TEMP216 = ( RX10_TEMP642 ) ; final Particle X10_TEMP219 = ( Program . Particle_setY ( p , y ) ) ; final Particle X10_TEMP220 = ( X10_TEMP219 ) ; final Point2 RX10_TEMP643 = new Point2 ( pl , X10_TEMP216 ) ; final Dist2 RX10_TEMP644 = sBufferR . distValue ; final Region2 RX10_TEMP645 = RX10_TEMP644 . dReg ; final int RX10_TEMP646 = Program . searchPointInRegion2 ( RX10_TEMP645 , RX10_TEMP643 ) ; final int RX10_TEMP647 = 0 ; final boolean RX10_TEMP648 = RX10_TEMP646 < RX10_TEMP647 ; if ( RX10_TEMP648 ) { String RX10_TEMP649 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP649 ) ; }
 final place RX10_TEMP650 = Program . getPlaceFromDist2 ( RX10_TEMP644 , RX10_TEMP646 ) ; final place RX10_TEMP652 = here ; final boolean RX10_TEMP653 = RX10_TEMP650 != RX10_TEMP652 ; if ( RX10_TEMP653 ) { String RX10_TEMP651 = "Bad place access for array sBufferR" ; throw new RuntimeException ( RX10_TEMP651 ) ; }
 Program . setRefArrayValue2Particle ( sBufferR , RX10_TEMP646 , X10_TEMP220 ) ; final Point1 RX10_TEMP654 = new Point1 ( pl ) ; final Dist1 RX10_TEMP655 = outLt . distValue ; final Region1 RX10_TEMP656 = RX10_TEMP655 . dReg ; final int RX10_TEMP657 = Program . searchPointInRegion1 ( RX10_TEMP656 , RX10_TEMP654 ) ; final int RX10_TEMP658 = 0 ; final boolean RX10_TEMP659 = RX10_TEMP657 < RX10_TEMP658 ; if ( RX10_TEMP659 ) { String RX10_TEMP660 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP660 ) ; }
 final place RX10_TEMP661 = Program . getPlaceFromDist1 ( RX10_TEMP655 , RX10_TEMP657 ) ; final place RX10_TEMP663 = here ; final boolean RX10_TEMP664 = RX10_TEMP661 != RX10_TEMP663 ; if ( RX10_TEMP664 ) { String RX10_TEMP662 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP662 ) ; }
 final int RX10_TEMP665 = Program . getRefArrayValue1int ( outLt , RX10_TEMP657 ) ; final int X10_TEMP224 = ( RX10_TEMP665 ) ; final Point1 RX10_TEMP666 = new Point1 ( pl ) ; final Dist1 RX10_TEMP667 = outRt . distValue ; final Region1 RX10_TEMP668 = RX10_TEMP667 . dReg ; final int RX10_TEMP669 = Program . searchPointInRegion1 ( RX10_TEMP668 , RX10_TEMP666 ) ; final int RX10_TEMP670 = 0 ; final boolean RX10_TEMP671 = RX10_TEMP669 < RX10_TEMP670 ; if ( RX10_TEMP671 ) { String RX10_TEMP672 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP672 ) ; }
 final place RX10_TEMP673 = Program . getPlaceFromDist1 ( RX10_TEMP667 , RX10_TEMP669 ) ; final place RX10_TEMP675 = here ; final boolean RX10_TEMP676 = RX10_TEMP673 != RX10_TEMP675 ; if ( RX10_TEMP676 ) { String RX10_TEMP674 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP674 ) ; }
 final int RX10_TEMP677 = Program . getRefArrayValue1int ( outRt , RX10_TEMP669 ) ; final int X10_TEMP225 = ( RX10_TEMP677 ) ; final int X10_TEMP227 = ( X10_TEMP224 + X10_TEMP225 ) ; final int X10_TEMP229 = ( i ) ; final Point2 RX10_TEMP678 = new Point2 ( pl , X10_TEMP227 ) ; final Dist2 RX10_TEMP679 = holes . distValue ; final Region2 RX10_TEMP680 = RX10_TEMP679 . dReg ; final int RX10_TEMP681 = Program . searchPointInRegion2 ( RX10_TEMP680 , RX10_TEMP678 ) ; final int RX10_TEMP682 = 0 ; final boolean RX10_TEMP683 = RX10_TEMP681 < RX10_TEMP682 ; if ( RX10_TEMP683 ) { String RX10_TEMP684 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP684 ) ; }
 final place RX10_TEMP685 = Program . getPlaceFromDist2 ( RX10_TEMP679 , RX10_TEMP681 ) ; final place RX10_TEMP687 = here ; final boolean RX10_TEMP688 = RX10_TEMP685 != RX10_TEMP687 ; if ( RX10_TEMP688 ) { String RX10_TEMP686 = "Bad place access for array holes" ; throw new RuntimeException ( RX10_TEMP686 ) ; }
 Program . setRefArrayValue2int ( holes , RX10_TEMP681 , X10_TEMP229 ) ; final Point1 RX10_TEMP689 = new Point1 ( pl ) ; final Dist1 RX10_TEMP690 = outRt . distValue ; final Region1 RX10_TEMP691 = RX10_TEMP690 . dReg ; final int RX10_TEMP692 = Program . searchPointInRegion1 ( RX10_TEMP691 , RX10_TEMP689 ) ; final int RX10_TEMP693 = 0 ; final boolean RX10_TEMP694 = RX10_TEMP692 < RX10_TEMP693 ; if ( RX10_TEMP694 ) { String RX10_TEMP695 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP695 ) ; }
 final place RX10_TEMP696 = Program . getPlaceFromDist1 ( RX10_TEMP690 , RX10_TEMP692 ) ; final place RX10_TEMP698 = here ; final boolean RX10_TEMP699 = RX10_TEMP696 != RX10_TEMP698 ; if ( RX10_TEMP699 ) { String RX10_TEMP697 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP697 ) ; }
 final int RX10_TEMP700 = Program . getRefArrayValue1int ( outRt , RX10_TEMP692 ) ; final int X10_TEMP231 = ( RX10_TEMP700 ) ; final int X10_TEMP232 = 1 ; final Point1 RX10_TEMP701 = new Point1 ( pl ) ; final Dist1 RX10_TEMP702 = outRt . distValue ; final Region1 RX10_TEMP703 = RX10_TEMP702 . dReg ; final int RX10_TEMP704 = Program . searchPointInRegion1 ( RX10_TEMP703 , RX10_TEMP701 ) ; final int RX10_TEMP705 = 0 ; final boolean RX10_TEMP706 = RX10_TEMP704 < RX10_TEMP705 ; if ( RX10_TEMP706 ) { String RX10_TEMP707 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP707 ) ; }
 final place RX10_TEMP708 = Program . getPlaceFromDist1 ( RX10_TEMP702 , RX10_TEMP704 ) ; final place RX10_TEMP710 = here ; final boolean RX10_TEMP711 = RX10_TEMP708 != RX10_TEMP710 ; if ( RX10_TEMP711 ) { String RX10_TEMP709 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP709 ) ; }
 final int RX10_TEMP712 = Program . getRefArrayValue1int ( outRt , RX10_TEMP704 ) ; final int X10_TEMP233 = ( RX10_TEMP712 ) ; final int X10_TEMP234 = ( X10_TEMP233 + X10_TEMP232 ) ; final Point1 RX10_TEMP713 = new Point1 ( pl ) ; final Dist1 RX10_TEMP714 = outRt . distValue ; final Region1 RX10_TEMP715 = RX10_TEMP714 . dReg ; final int RX10_TEMP716 = Program . searchPointInRegion1 ( RX10_TEMP715 , RX10_TEMP713 ) ; final int RX10_TEMP717 = 0 ; final boolean RX10_TEMP718 = RX10_TEMP716 < RX10_TEMP717 ; if ( RX10_TEMP718 ) { String RX10_TEMP719 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP719 ) ; }
 final place RX10_TEMP720 = Program . getPlaceFromDist1 ( RX10_TEMP714 , RX10_TEMP716 ) ; final place RX10_TEMP722 = here ; final boolean RX10_TEMP723 = RX10_TEMP720 != RX10_TEMP722 ; if ( RX10_TEMP723 ) { String RX10_TEMP721 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP721 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP716 , X10_TEMP234 ) ; }
 else { final int X10_TEMP237 = ( 1 ) ; final int X10_TEMP238 = ( X10_TEMP237 ) ; final Point1 RX10_TEMP724 = new Point1 ( pl ) ; final Dist1 RX10_TEMP725 = overflow . distValue ; final Region1 RX10_TEMP726 = RX10_TEMP725 . dReg ; final int RX10_TEMP727 = Program . searchPointInRegion1 ( RX10_TEMP726 , RX10_TEMP724 ) ; final int RX10_TEMP728 = 0 ; final boolean RX10_TEMP729 = RX10_TEMP727 < RX10_TEMP728 ; if ( RX10_TEMP729 ) { String RX10_TEMP730 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP730 ) ; }
 final place RX10_TEMP731 = Program . getPlaceFromDist1 ( RX10_TEMP725 , RX10_TEMP727 ) ; final place RX10_TEMP733 = here ; final boolean RX10_TEMP734 = RX10_TEMP731 != RX10_TEMP733 ; if ( RX10_TEMP734 ) { String RX10_TEMP732 = "Bad place access for array overflow" ; throw new RuntimeException ( RX10_TEMP732 ) ; }
 Program . setRefArrayValue1int ( overflow , RX10_TEMP727 , X10_TEMP238 ) ; break ; }
 }
 }
 }
 final Point1 RX10_TEMP735 = new Point1 ( pl ) ; final Dist1 RX10_TEMP736 = outLt . distValue ; final Region1 RX10_TEMP737 = RX10_TEMP736 . dReg ; final int RX10_TEMP738 = Program . searchPointInRegion1 ( RX10_TEMP737 , RX10_TEMP735 ) ; final int RX10_TEMP739 = 0 ; final boolean RX10_TEMP740 = RX10_TEMP738 < RX10_TEMP739 ; if ( RX10_TEMP740 ) { String RX10_TEMP741 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP741 ) ; }
 final place RX10_TEMP742 = Program . getPlaceFromDist1 ( RX10_TEMP736 , RX10_TEMP738 ) ; final place RX10_TEMP744 = here ; final boolean RX10_TEMP745 = RX10_TEMP742 != RX10_TEMP744 ; if ( RX10_TEMP745 ) { String RX10_TEMP743 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP743 ) ; }
 final int RX10_TEMP746 = Program . getRefArrayValue1int ( outLt , RX10_TEMP738 ) ; final int X10_TEMP242 = ( RX10_TEMP746 ) ; final Point1 RX10_TEMP747 = new Point1 ( pl ) ; final Dist1 RX10_TEMP748 = outRt . distValue ; final Region1 RX10_TEMP749 = RX10_TEMP748 . dReg ; final int RX10_TEMP750 = Program . searchPointInRegion1 ( RX10_TEMP749 , RX10_TEMP747 ) ; final int RX10_TEMP751 = 0 ; final boolean RX10_TEMP752 = RX10_TEMP750 < RX10_TEMP751 ; if ( RX10_TEMP752 ) { String RX10_TEMP753 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP753 ) ; }
 final place RX10_TEMP754 = Program . getPlaceFromDist1 ( RX10_TEMP748 , RX10_TEMP750 ) ; final place RX10_TEMP756 = here ; final boolean RX10_TEMP757 = RX10_TEMP754 != RX10_TEMP756 ; if ( RX10_TEMP757 ) { String RX10_TEMP755 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP755 ) ; }
 final int RX10_TEMP758 = Program . getRefArrayValue1int ( outRt , RX10_TEMP750 ) ; final int X10_TEMP243 = ( RX10_TEMP758 ) ; final int X10_TEMP245 = ( X10_TEMP242 + X10_TEMP243 ) ; final int X10_TEMP246 = ( X10_TEMP245 ) ; final Point1 RX10_TEMP759 = new Point1 ( pl ) ; final Dist1 RX10_TEMP760 = nSent . distValue ; final Region1 RX10_TEMP761 = RX10_TEMP760 . dReg ; final int RX10_TEMP762 = Program . searchPointInRegion1 ( RX10_TEMP761 , RX10_TEMP759 ) ; final int RX10_TEMP763 = 0 ; final boolean RX10_TEMP764 = RX10_TEMP762 < RX10_TEMP763 ; if ( RX10_TEMP764 ) { String RX10_TEMP765 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP765 ) ; }
 final place RX10_TEMP766 = Program . getPlaceFromDist1 ( RX10_TEMP760 , RX10_TEMP762 ) ; final place RX10_TEMP768 = here ; final boolean RX10_TEMP769 = RX10_TEMP766 != RX10_TEMP768 ; if ( RX10_TEMP769 ) { String RX10_TEMP767 = "Bad place access for array nSent" ; throw new RuntimeException ( RX10_TEMP767 ) ; }
 Program . setRefArrayValue1int ( nSent , RX10_TEMP762 , X10_TEMP246 ) ; }
 }
 public static void thread98(final T98 utmpz) {final  int RX10_TEMP793 = utmpz.RX10_TEMP793;
final  place RX10_TEMP789 = utmpz.RX10_TEMP789;
final  point ( : rank==1 ) RX10_TEMP788 = utmpz.RX10_TEMP788;
final  intStub [ : rank==1 ] RX10_TEMP787 = utmpz.RX10_TEMP787;
 { final dist ( : rank==1 ) RX10_TEMP794 = [ 0 : RX10_TEMP793 ] -> here ; final int [ : rank==1 ] RX10_TEMP795 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP794 ] ) ; final intStub RX10_TEMP796 = new intStub ( RX10_TEMP795 ) ; 
 final T270 utmp270 = new T270(RX10_TEMP796, RX10_TEMP788, RX10_TEMP787);
 async (RX10_TEMP789) {Program.thread270(utmp270); }
 }
 }
 public static void thread99(final T99 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 outgoing = utmpz.outgoing;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 outLt = utmpz.outLt;
final  intRefArray1 inRt = utmpz.inRt;
final  intRefArray1 inLt = utmpz.inLt;
final  ParticleRefArray2 rBufferR = utmpz.rBufferR;
final  ParticleRefArray2 rBufferL = utmpz.rBufferL;
final  Dist2 dFieldSpace = utmpz.dFieldSpace;
 { final place X10_TEMP272 = ( here ) ; final Dist2 X10_TEMP274 = Program . restrictDist2 ( dFieldSpace , X10_TEMP272 ) ; final Region2 RX10_TEMP813 = X10_TEMP274 . dReg ; final Region2 X10_TEMP275 = RX10_TEMP813 ; final Region2 rLocal = X10_TEMP275 ; final int X10_TEMP279 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getRank2D ( rLocal , X10_TEMP279 ) ; final int RX10_TEMP814 = rLocal1 . regSize ; final int RX10_TEMP815 = 0 ; final boolean RX10_TEMP816 = RX10_TEMP814 <= RX10_TEMP815 ; if ( RX10_TEMP816 ) { final String RX10_TEMP817 = "Operation high() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP817 ) ; }
 final int X10_TEMP281 = ( Program . regionHigh ( rLocal1 ) ) ; final int X10_TEMP282 = ( 1 ) ; final double ub = ( X10_TEMP281 + X10_TEMP282 ) ; final int RX10_TEMP818 = rLocal1 . regSize ; final int RX10_TEMP819 = 0 ; final boolean RX10_TEMP820 = RX10_TEMP818 <= RX10_TEMP819 ; if ( RX10_TEMP820 ) { final String RX10_TEMP821 = "Operation low() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP821 ) ; }
 final double lb = ( Program . regionLow ( rLocal1 ) ) ; final int X10_TEMP287 = ( 0 ) ; final int X10_TEMP288 = ( X10_TEMP287 ) ; final Point1 RX10_TEMP822 = new Point1 ( pl ) ; final Dist1 RX10_TEMP823 = outLt . distValue ; final Region1 RX10_TEMP824 = RX10_TEMP823 . dReg ; final int RX10_TEMP825 = Program . searchPointInRegion1 ( RX10_TEMP824 , RX10_TEMP822 ) ; final int RX10_TEMP826 = 0 ; final boolean RX10_TEMP827 = RX10_TEMP825 < RX10_TEMP826 ; if ( RX10_TEMP827 ) { String RX10_TEMP828 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP828 ) ; }
 final place RX10_TEMP829 = Program . getPlaceFromDist1 ( RX10_TEMP823 , RX10_TEMP825 ) ; final place RX10_TEMP831 = here ; final boolean RX10_TEMP832 = RX10_TEMP829 != RX10_TEMP831 ; if ( RX10_TEMP832 ) { String RX10_TEMP830 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP830 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP825 , X10_TEMP288 ) ; final int X10_TEMP291 = ( 0 ) ; final int X10_TEMP292 = ( X10_TEMP291 ) ; final Point1 RX10_TEMP833 = new Point1 ( pl ) ; final Dist1 RX10_TEMP834 = outRt . distValue ; final Region1 RX10_TEMP835 = RX10_TEMP834 . dReg ; final int RX10_TEMP836 = Program . searchPointInRegion1 ( RX10_TEMP835 , RX10_TEMP833 ) ; final int RX10_TEMP837 = 0 ; final boolean RX10_TEMP838 = RX10_TEMP836 < RX10_TEMP837 ; if ( RX10_TEMP838 ) { String RX10_TEMP839 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP839 ) ; }
 final place RX10_TEMP840 = Program . getPlaceFromDist1 ( RX10_TEMP834 , RX10_TEMP836 ) ; final place RX10_TEMP842 = here ; final boolean RX10_TEMP843 = RX10_TEMP840 != RX10_TEMP842 ; if ( RX10_TEMP843 ) { String RX10_TEMP841 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP841 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP836 , X10_TEMP292 ) ; int belowLeft = ( 0 ) ; final int X10_TEMP299 = ( 0 ) ; final Point1 RX10_TEMP844 = new Point1 ( pl ) ; final Dist1 RX10_TEMP845 = inRt . distValue ; final Region1 RX10_TEMP846 = RX10_TEMP845 . dReg ; final int RX10_TEMP847 = Program . searchPointInRegion1 ( RX10_TEMP846 , RX10_TEMP844 ) ; final int RX10_TEMP848 = 0 ; final boolean RX10_TEMP849 = RX10_TEMP847 < RX10_TEMP848 ; if ( RX10_TEMP849 ) { String RX10_TEMP850 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP850 ) ; }
 final place RX10_TEMP851 = Program . getPlaceFromDist1 ( RX10_TEMP845 , RX10_TEMP847 ) ; final place RX10_TEMP853 = here ; final boolean RX10_TEMP854 = RX10_TEMP851 != RX10_TEMP853 ; if ( RX10_TEMP854 ) { String RX10_TEMP852 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP852 ) ; }
 final int RX10_TEMP855 = Program . getRefArrayValue1int ( inRt , RX10_TEMP847 ) ; final int X10_TEMP296 = ( RX10_TEMP855 ) ; final int X10_TEMP297 = ( 1 ) ; final int X10_TEMP300 = ( X10_TEMP296 - X10_TEMP297 ) ; final Region1 X10_TEMP302 = Program . createNewRegion1R ( X10_TEMP299 , X10_TEMP300 ) ; final int RX10_TEMP860 = 1 ; int RX10_TEMP858 = X10_TEMP302 . regSize ; RX10_TEMP858 = RX10_TEMP858 - RX10_TEMP860 ; final region ( : rank==1 ) RX10_TEMP859 = [ 0 : RX10_TEMP858 ] ; for ( point ( : rank==1 ) RX10_TEMP856 : RX10_TEMP859 ) { final int RX10_TEMP861 = RX10_TEMP856 [0] ; final Point1 RX10_TEMP857 = Program . regionOrdinalPoint1 ( X10_TEMP302 , RX10_TEMP861 ) ; final int i = RX10_TEMP857 . f0 ; final Point2 RX10_TEMP862 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP863 = rBufferR . distValue ; final Region2 RX10_TEMP864 = RX10_TEMP863 . dReg ; final int RX10_TEMP865 = Program . searchPointInRegion2 ( RX10_TEMP864 , RX10_TEMP862 ) ; final int RX10_TEMP866 = 0 ; final boolean RX10_TEMP867 = RX10_TEMP865 < RX10_TEMP866 ; if ( RX10_TEMP867 ) { String RX10_TEMP868 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP868 ) ; }
 final place RX10_TEMP869 = Program . getPlaceFromDist2 ( RX10_TEMP863 , RX10_TEMP865 ) ; final place RX10_TEMP871 = here ; final boolean RX10_TEMP872 = RX10_TEMP869 != RX10_TEMP871 ; if ( RX10_TEMP872 ) { String RX10_TEMP870 = "Bad place access for array rBufferR" ; throw new RuntimeException ( RX10_TEMP870 ) ; }
 final Particle RX10_TEMP873 = Program . getRefArrayValue2Particle ( rBufferR , RX10_TEMP865 ) ; final Particle p = ( RX10_TEMP873 ) ; final double y = ( Program . Particle_getY ( p ) ) ; final boolean X10_TEMP308 = y < lb ; if ( X10_TEMP308 ) { final Point1 RX10_TEMP874 = new Point1 ( pl ) ; final Dist1 RX10_TEMP875 = outLt . distValue ; final Region1 RX10_TEMP876 = RX10_TEMP875 . dReg ; final int RX10_TEMP877 = Program . searchPointInRegion1 ( RX10_TEMP876 , RX10_TEMP874 ) ; final int RX10_TEMP878 = 0 ; final boolean RX10_TEMP879 = RX10_TEMP877 < RX10_TEMP878 ; if ( RX10_TEMP879 ) { String RX10_TEMP880 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP880 ) ; }
 final place RX10_TEMP881 = Program . getPlaceFromDist1 ( RX10_TEMP875 , RX10_TEMP877 ) ; final place RX10_TEMP883 = here ; final boolean RX10_TEMP884 = RX10_TEMP881 != RX10_TEMP883 ; if ( RX10_TEMP884 ) { String RX10_TEMP882 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP882 ) ; }
 final int RX10_TEMP885 = Program . getRefArrayValue1int ( outLt , RX10_TEMP877 ) ; final int X10_TEMP310 = ( RX10_TEMP885 ) ; final int X10_TEMP311 = 1 ; final Point1 RX10_TEMP886 = new Point1 ( pl ) ; final Dist1 RX10_TEMP887 = outLt . distValue ; final Region1 RX10_TEMP888 = RX10_TEMP887 . dReg ; final int RX10_TEMP889 = Program . searchPointInRegion1 ( RX10_TEMP888 , RX10_TEMP886 ) ; final int RX10_TEMP890 = 0 ; final boolean RX10_TEMP891 = RX10_TEMP889 < RX10_TEMP890 ; if ( RX10_TEMP891 ) { String RX10_TEMP892 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP892 ) ; }
 final place RX10_TEMP893 = Program . getPlaceFromDist1 ( RX10_TEMP887 , RX10_TEMP889 ) ; final place RX10_TEMP895 = here ; final boolean RX10_TEMP896 = RX10_TEMP893 != RX10_TEMP895 ; if ( RX10_TEMP896 ) { String RX10_TEMP894 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP894 ) ; }
 final int RX10_TEMP897 = Program . getRefArrayValue1int ( outLt , RX10_TEMP889 ) ; final int X10_TEMP312 = ( RX10_TEMP897 ) ; final int X10_TEMP313 = ( X10_TEMP312 + X10_TEMP311 ) ; final Point1 RX10_TEMP898 = new Point1 ( pl ) ; final Dist1 RX10_TEMP899 = outLt . distValue ; final Region1 RX10_TEMP900 = RX10_TEMP899 . dReg ; final int RX10_TEMP901 = Program . searchPointInRegion1 ( RX10_TEMP900 , RX10_TEMP898 ) ; final int RX10_TEMP902 = 0 ; final boolean RX10_TEMP903 = RX10_TEMP901 < RX10_TEMP902 ; if ( RX10_TEMP903 ) { String RX10_TEMP904 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP904 ) ; }
 final place RX10_TEMP905 = Program . getPlaceFromDist1 ( RX10_TEMP899 , RX10_TEMP901 ) ; final place RX10_TEMP907 = here ; final boolean RX10_TEMP908 = RX10_TEMP905 != RX10_TEMP907 ; if ( RX10_TEMP908 ) { String RX10_TEMP906 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP906 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP901 , X10_TEMP313 ) ; }
 final boolean X10_TEMP315 = y >= ub ; if ( X10_TEMP315 ) { final Point1 RX10_TEMP909 = new Point1 ( pl ) ; final Dist1 RX10_TEMP910 = outRt . distValue ; final Region1 RX10_TEMP911 = RX10_TEMP910 . dReg ; final int RX10_TEMP912 = Program . searchPointInRegion1 ( RX10_TEMP911 , RX10_TEMP909 ) ; final int RX10_TEMP913 = 0 ; final boolean RX10_TEMP914 = RX10_TEMP912 < RX10_TEMP913 ; if ( RX10_TEMP914 ) { String RX10_TEMP915 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP915 ) ; }
 final place RX10_TEMP916 = Program . getPlaceFromDist1 ( RX10_TEMP910 , RX10_TEMP912 ) ; final place RX10_TEMP918 = here ; final boolean RX10_TEMP919 = RX10_TEMP916 != RX10_TEMP918 ; if ( RX10_TEMP919 ) { String RX10_TEMP917 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP917 ) ; }
 final int RX10_TEMP920 = Program . getRefArrayValue1int ( outRt , RX10_TEMP912 ) ; final int X10_TEMP317 = ( RX10_TEMP920 ) ; final int X10_TEMP318 = 1 ; final Point1 RX10_TEMP921 = new Point1 ( pl ) ; final Dist1 RX10_TEMP922 = outRt . distValue ; final Region1 RX10_TEMP923 = RX10_TEMP922 . dReg ; final int RX10_TEMP924 = Program . searchPointInRegion1 ( RX10_TEMP923 , RX10_TEMP921 ) ; final int RX10_TEMP925 = 0 ; final boolean RX10_TEMP926 = RX10_TEMP924 < RX10_TEMP925 ; if ( RX10_TEMP926 ) { String RX10_TEMP927 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP927 ) ; }
 final place RX10_TEMP928 = Program . getPlaceFromDist1 ( RX10_TEMP922 , RX10_TEMP924 ) ; final place RX10_TEMP930 = here ; final boolean RX10_TEMP931 = RX10_TEMP928 != RX10_TEMP930 ; if ( RX10_TEMP931 ) { String RX10_TEMP929 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP929 ) ; }
 final int RX10_TEMP932 = Program . getRefArrayValue1int ( outRt , RX10_TEMP924 ) ; final int X10_TEMP319 = ( RX10_TEMP932 ) ; final int X10_TEMP320 = ( X10_TEMP319 + X10_TEMP318 ) ; final Point1 RX10_TEMP933 = new Point1 ( pl ) ; final Dist1 RX10_TEMP934 = outRt . distValue ; final Region1 RX10_TEMP935 = RX10_TEMP934 . dReg ; final int RX10_TEMP936 = Program . searchPointInRegion1 ( RX10_TEMP935 , RX10_TEMP933 ) ; final int RX10_TEMP937 = 0 ; final boolean RX10_TEMP938 = RX10_TEMP936 < RX10_TEMP937 ; if ( RX10_TEMP938 ) { String RX10_TEMP939 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP939 ) ; }
 final place RX10_TEMP940 = Program . getPlaceFromDist1 ( RX10_TEMP934 , RX10_TEMP936 ) ; final place RX10_TEMP942 = here ; final boolean RX10_TEMP943 = RX10_TEMP940 != RX10_TEMP942 ; if ( RX10_TEMP943 ) { String RX10_TEMP941 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP941 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP936 , X10_TEMP320 ) ; }
 }
 final Point1 RX10_TEMP944 = new Point1 ( pl ) ; final Dist1 RX10_TEMP945 = outRt . distValue ; final Region1 RX10_TEMP946 = RX10_TEMP945 . dReg ; final int RX10_TEMP947 = Program . searchPointInRegion1 ( RX10_TEMP946 , RX10_TEMP944 ) ; final int RX10_TEMP948 = 0 ; final boolean RX10_TEMP949 = RX10_TEMP947 < RX10_TEMP948 ; if ( RX10_TEMP949 ) { String RX10_TEMP950 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP950 ) ; }
 final place RX10_TEMP951 = Program . getPlaceFromDist1 ( RX10_TEMP945 , RX10_TEMP947 ) ; final place RX10_TEMP953 = here ; final boolean RX10_TEMP954 = RX10_TEMP951 != RX10_TEMP953 ; if ( RX10_TEMP954 ) { String RX10_TEMP952 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP952 ) ; }
 final int RX10_TEMP955 = Program . getRefArrayValue1int ( outRt , RX10_TEMP947 ) ; final int X10_TEMP322 = ( RX10_TEMP955 ) ; final int X10_TEMP323 = ( 0 ) ; final boolean X10_TEMP325 = X10_TEMP322 != X10_TEMP323 ; if ( X10_TEMP325 ) { final String X10_TEMP327 = ( "Info: particles returning up" ) ; System.err.println ( X10_TEMP327 ) ; }
 final int X10_TEMP333 = ( 0 ) ; final Point1 RX10_TEMP956 = new Point1 ( pl ) ; final Dist1 RX10_TEMP957 = inLt . distValue ; final Region1 RX10_TEMP958 = RX10_TEMP957 . dReg ; final int RX10_TEMP959 = Program . searchPointInRegion1 ( RX10_TEMP958 , RX10_TEMP956 ) ; final int RX10_TEMP960 = 0 ; final boolean RX10_TEMP961 = RX10_TEMP959 < RX10_TEMP960 ; if ( RX10_TEMP961 ) { String RX10_TEMP962 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP962 ) ; }
 final place RX10_TEMP963 = Program . getPlaceFromDist1 ( RX10_TEMP957 , RX10_TEMP959 ) ; final place RX10_TEMP965 = here ; final boolean RX10_TEMP966 = RX10_TEMP963 != RX10_TEMP965 ; if ( RX10_TEMP966 ) { String RX10_TEMP964 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP964 ) ; }
 final int RX10_TEMP967 = Program . getRefArrayValue1int ( inLt , RX10_TEMP959 ) ; final int X10_TEMP330 = ( RX10_TEMP967 ) ; final int X10_TEMP331 = ( 1 ) ; final int X10_TEMP334 = ( X10_TEMP330 - X10_TEMP331 ) ; final Region1 X10_TEMP336 = Program . createNewRegion1R ( X10_TEMP333 , X10_TEMP334 ) ; final int RX10_TEMP972 = 1 ; int RX10_TEMP970 = X10_TEMP336 . regSize ; RX10_TEMP970 = RX10_TEMP970 - RX10_TEMP972 ; final region ( : rank==1 ) RX10_TEMP971 = [ 0 : RX10_TEMP970 ] ; for ( point ( : rank==1 ) RX10_TEMP968 : RX10_TEMP971 ) { final int RX10_TEMP973 = RX10_TEMP968 [0] ; final Point1 RX10_TEMP969 = Program . regionOrdinalPoint1 ( X10_TEMP336 , RX10_TEMP973 ) ; final int i = RX10_TEMP969 . f0 ; final Point2 RX10_TEMP974 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP975 = rBufferL . distValue ; final Region2 RX10_TEMP976 = RX10_TEMP975 . dReg ; final int RX10_TEMP977 = Program . searchPointInRegion2 ( RX10_TEMP976 , RX10_TEMP974 ) ; final int RX10_TEMP978 = 0 ; final boolean RX10_TEMP979 = RX10_TEMP977 < RX10_TEMP978 ; if ( RX10_TEMP979 ) { String RX10_TEMP980 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP980 ) ; }
 final place RX10_TEMP981 = Program . getPlaceFromDist2 ( RX10_TEMP975 , RX10_TEMP977 ) ; final place RX10_TEMP983 = here ; final boolean RX10_TEMP984 = RX10_TEMP981 != RX10_TEMP983 ; if ( RX10_TEMP984 ) { String RX10_TEMP982 = "Bad place access for array rBufferL" ; throw new RuntimeException ( RX10_TEMP982 ) ; }
 final Particle RX10_TEMP985 = Program . getRefArrayValue2Particle ( rBufferL , RX10_TEMP977 ) ; final Particle p = ( RX10_TEMP985 ) ; final double y = ( Program . Particle_getY ( p ) ) ; final boolean X10_TEMP342 = y >= ub ; if ( X10_TEMP342 ) { final Point1 RX10_TEMP986 = new Point1 ( pl ) ; final Dist1 RX10_TEMP987 = outRt . distValue ; final Region1 RX10_TEMP988 = RX10_TEMP987 . dReg ; final int RX10_TEMP989 = Program . searchPointInRegion1 ( RX10_TEMP988 , RX10_TEMP986 ) ; final int RX10_TEMP990 = 0 ; final boolean RX10_TEMP991 = RX10_TEMP989 < RX10_TEMP990 ; if ( RX10_TEMP991 ) { String RX10_TEMP992 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP992 ) ; }
 final place RX10_TEMP993 = Program . getPlaceFromDist1 ( RX10_TEMP987 , RX10_TEMP989 ) ; final place RX10_TEMP995 = here ; final boolean RX10_TEMP996 = RX10_TEMP993 != RX10_TEMP995 ; if ( RX10_TEMP996 ) { String RX10_TEMP994 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP994 ) ; }
 final int RX10_TEMP997 = Program . getRefArrayValue1int ( outRt , RX10_TEMP989 ) ; final int X10_TEMP344 = ( RX10_TEMP997 ) ; final int X10_TEMP345 = 1 ; final Point1 RX10_TEMP998 = new Point1 ( pl ) ; final Dist1 RX10_TEMP999 = outRt . distValue ; final Region1 RX10_TEMP1000 = RX10_TEMP999 . dReg ; final int RX10_TEMP1001 = Program . searchPointInRegion1 ( RX10_TEMP1000 , RX10_TEMP998 ) ; final int RX10_TEMP1002 = 0 ; final boolean RX10_TEMP1003 = RX10_TEMP1001 < RX10_TEMP1002 ; if ( RX10_TEMP1003 ) { String RX10_TEMP1004 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1004 ) ; }
 final place RX10_TEMP1005 = Program . getPlaceFromDist1 ( RX10_TEMP999 , RX10_TEMP1001 ) ; final place RX10_TEMP1007 = here ; final boolean RX10_TEMP1008 = RX10_TEMP1005 != RX10_TEMP1007 ; if ( RX10_TEMP1008 ) { String RX10_TEMP1006 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1006 ) ; }
 final int RX10_TEMP1009 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1001 ) ; final int X10_TEMP346 = ( RX10_TEMP1009 ) ; final int X10_TEMP347 = ( X10_TEMP346 + X10_TEMP345 ) ; final Point1 RX10_TEMP1010 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1011 = outRt . distValue ; final Region1 RX10_TEMP1012 = RX10_TEMP1011 . dReg ; final int RX10_TEMP1013 = Program . searchPointInRegion1 ( RX10_TEMP1012 , RX10_TEMP1010 ) ; final int RX10_TEMP1014 = 0 ; final boolean RX10_TEMP1015 = RX10_TEMP1013 < RX10_TEMP1014 ; if ( RX10_TEMP1015 ) { String RX10_TEMP1016 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1016 ) ; }
 final place RX10_TEMP1017 = Program . getPlaceFromDist1 ( RX10_TEMP1011 , RX10_TEMP1013 ) ; final place RX10_TEMP1019 = here ; final boolean RX10_TEMP1020 = RX10_TEMP1017 != RX10_TEMP1019 ; if ( RX10_TEMP1020 ) { String RX10_TEMP1018 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1018 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP1013 , X10_TEMP347 ) ; }
 final boolean X10_TEMP349 = y < lb ; if ( X10_TEMP349 ) { final int X10_TEMP350 = ( belowLeft ) ; final int X10_TEMP351 = 1 ; belowLeft = belowLeft + X10_TEMP351 ; }
 }
 final int X10_TEMP352 = ( 0 ) ; final boolean X10_TEMP354 = belowLeft != X10_TEMP352 ; if ( X10_TEMP354 ) { final String X10_TEMP356 = ( "Info: particles returning down" ) ; System.err.println ( X10_TEMP356 ) ; }
 final Point1 RX10_TEMP1021 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1022 = outLt . distValue ; final Region1 RX10_TEMP1023 = RX10_TEMP1022 . dReg ; final int RX10_TEMP1024 = Program . searchPointInRegion1 ( RX10_TEMP1023 , RX10_TEMP1021 ) ; final int RX10_TEMP1025 = 0 ; final boolean RX10_TEMP1026 = RX10_TEMP1024 < RX10_TEMP1025 ; if ( RX10_TEMP1026 ) { String RX10_TEMP1027 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1027 ) ; }
 final place RX10_TEMP1028 = Program . getPlaceFromDist1 ( RX10_TEMP1022 , RX10_TEMP1024 ) ; final place RX10_TEMP1030 = here ; final boolean RX10_TEMP1031 = RX10_TEMP1028 != RX10_TEMP1030 ; if ( RX10_TEMP1031 ) { String RX10_TEMP1029 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1029 ) ; }
 final int RX10_TEMP1032 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1024 ) ; final int X10_TEMP359 = ( RX10_TEMP1032 ) ; final int X10_TEMP361 = ( X10_TEMP359 + belowLeft ) ; final int X10_TEMP362 = ( X10_TEMP361 ) ; final Point1 RX10_TEMP1033 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1034 = outLt . distValue ; final Region1 RX10_TEMP1035 = RX10_TEMP1034 . dReg ; final int RX10_TEMP1036 = Program . searchPointInRegion1 ( RX10_TEMP1035 , RX10_TEMP1033 ) ; final int RX10_TEMP1037 = 0 ; final boolean RX10_TEMP1038 = RX10_TEMP1036 < RX10_TEMP1037 ; if ( RX10_TEMP1038 ) { String RX10_TEMP1039 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1039 ) ; }
 final place RX10_TEMP1040 = Program . getPlaceFromDist1 ( RX10_TEMP1034 , RX10_TEMP1036 ) ; final place RX10_TEMP1042 = here ; final boolean RX10_TEMP1043 = RX10_TEMP1040 != RX10_TEMP1042 ; if ( RX10_TEMP1043 ) { String RX10_TEMP1041 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1041 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP1036 , X10_TEMP362 ) ; final Point1 RX10_TEMP1044 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1045 = outLt . distValue ; final Region1 RX10_TEMP1046 = RX10_TEMP1045 . dReg ; final int RX10_TEMP1047 = Program . searchPointInRegion1 ( RX10_TEMP1046 , RX10_TEMP1044 ) ; final int RX10_TEMP1048 = 0 ; final boolean RX10_TEMP1049 = RX10_TEMP1047 < RX10_TEMP1048 ; if ( RX10_TEMP1049 ) { String RX10_TEMP1050 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1050 ) ; }
 final place RX10_TEMP1051 = Program . getPlaceFromDist1 ( RX10_TEMP1045 , RX10_TEMP1047 ) ; final place RX10_TEMP1053 = here ; final boolean RX10_TEMP1054 = RX10_TEMP1051 != RX10_TEMP1053 ; if ( RX10_TEMP1054 ) { String RX10_TEMP1052 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1052 ) ; }
 final int RX10_TEMP1055 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1047 ) ; final int X10_TEMP366 = ( RX10_TEMP1055 ) ; final Point1 RX10_TEMP1056 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1057 = outRt . distValue ; final Region1 RX10_TEMP1058 = RX10_TEMP1057 . dReg ; final int RX10_TEMP1059 = Program . searchPointInRegion1 ( RX10_TEMP1058 , RX10_TEMP1056 ) ; final int RX10_TEMP1060 = 0 ; final boolean RX10_TEMP1061 = RX10_TEMP1059 < RX10_TEMP1060 ; if ( RX10_TEMP1061 ) { String RX10_TEMP1062 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1062 ) ; }
 final place RX10_TEMP1063 = Program . getPlaceFromDist1 ( RX10_TEMP1057 , RX10_TEMP1059 ) ; final place RX10_TEMP1065 = here ; final boolean RX10_TEMP1066 = RX10_TEMP1063 != RX10_TEMP1065 ; if ( RX10_TEMP1066 ) { String RX10_TEMP1064 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1064 ) ; }
 final int RX10_TEMP1067 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1059 ) ; final int X10_TEMP367 = ( RX10_TEMP1067 ) ; final int X10_TEMP369 = ( X10_TEMP366 + X10_TEMP367 ) ; final int X10_TEMP370 = ( X10_TEMP369 ) ; final Point1 RX10_TEMP1068 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1069 = outgoing . distValue ; final Region1 RX10_TEMP1070 = RX10_TEMP1069 . dReg ; final int RX10_TEMP1071 = Program . searchPointInRegion1 ( RX10_TEMP1070 , RX10_TEMP1068 ) ; final int RX10_TEMP1072 = 0 ; final boolean RX10_TEMP1073 = RX10_TEMP1071 < RX10_TEMP1072 ; if ( RX10_TEMP1073 ) { String RX10_TEMP1074 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1074 ) ; }
 final place RX10_TEMP1075 = Program . getPlaceFromDist1 ( RX10_TEMP1069 , RX10_TEMP1071 ) ; final place RX10_TEMP1077 = here ; final boolean RX10_TEMP1078 = RX10_TEMP1075 != RX10_TEMP1077 ; if ( RX10_TEMP1078 ) { String RX10_TEMP1076 = "Bad place access for array outgoing" ; throw new RuntimeException ( RX10_TEMP1076 ) ; }
 Program . setRefArrayValue1int ( outgoing , RX10_TEMP1071 , X10_TEMP370 ) ; }
 }
 public static void thread100(final T100 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 overflow = utmpz.overflow;
final  double rsize = utmpz.rsize;
final  intRefArray1 outRt = utmpz.outRt;
final  intRefArray1 outLt = utmpz.outLt;
final  intRefArray1 inRt = utmpz.inRt;
final  intRefArray1 inLt = utmpz.inLt;
final  ParticleRefArray2 rBufferR = utmpz.rBufferR;
final  ParticleRefArray2 rBufferL = utmpz.rBufferL;
final  ParticleRefArray2 sBufferR = utmpz.sBufferR;
final  ParticleRefArray2 sBufferL = utmpz.sBufferL;
final  Region1 rBuffer = utmpz.rBuffer;
final  Dist2 dFieldSpace = utmpz.dFieldSpace;
 { final place X10_TEMP386 = ( here ) ; final Dist2 X10_TEMP388 = Program . restrictDist2 ( dFieldSpace , X10_TEMP386 ) ; final Region2 RX10_TEMP1114 = X10_TEMP388 . dReg ; final Region2 X10_TEMP389 = RX10_TEMP1114 ; final Region2 rLocal = X10_TEMP389 ; final int X10_TEMP393 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getRank2D ( rLocal , X10_TEMP393 ) ; final int RX10_TEMP1115 = rLocal1 . regSize ; final int RX10_TEMP1116 = 0 ; final boolean RX10_TEMP1117 = RX10_TEMP1115 <= RX10_TEMP1116 ; if ( RX10_TEMP1117 ) { final String RX10_TEMP1118 = "Operation high() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP1118 ) ; }
 final int X10_TEMP395 = ( Program . regionHigh ( rLocal1 ) ) ; final int X10_TEMP396 = ( 1 ) ; final double ub = ( X10_TEMP395 + X10_TEMP396 ) ; final int RX10_TEMP1119 = rLocal1 . regSize ; final int RX10_TEMP1120 = 0 ; final boolean RX10_TEMP1121 = RX10_TEMP1119 <= RX10_TEMP1120 ; if ( RX10_TEMP1121 ) { final String RX10_TEMP1122 = "Operation low() not defined on empty region rLocal1" ; throw new RuntimeException ( RX10_TEMP1122 ) ; }
 final double lb = ( Program . regionLow ( rLocal1 ) ) ; final int X10_TEMP401 = ( 0 ) ; final int X10_TEMP402 = ( X10_TEMP401 ) ; final Point1 RX10_TEMP1123 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1124 = outLt . distValue ; final Region1 RX10_TEMP1125 = RX10_TEMP1124 . dReg ; final int RX10_TEMP1126 = Program . searchPointInRegion1 ( RX10_TEMP1125 , RX10_TEMP1123 ) ; final int RX10_TEMP1127 = 0 ; final boolean RX10_TEMP1128 = RX10_TEMP1126 < RX10_TEMP1127 ; if ( RX10_TEMP1128 ) { String RX10_TEMP1129 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1129 ) ; }
 final place RX10_TEMP1130 = Program . getPlaceFromDist1 ( RX10_TEMP1124 , RX10_TEMP1126 ) ; final place RX10_TEMP1132 = here ; final boolean RX10_TEMP1133 = RX10_TEMP1130 != RX10_TEMP1132 ; if ( RX10_TEMP1133 ) { String RX10_TEMP1131 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1131 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP1126 , X10_TEMP402 ) ; final int X10_TEMP405 = ( 0 ) ; final int X10_TEMP406 = ( X10_TEMP405 ) ; final Point1 RX10_TEMP1134 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1135 = outRt . distValue ; final Region1 RX10_TEMP1136 = RX10_TEMP1135 . dReg ; final int RX10_TEMP1137 = Program . searchPointInRegion1 ( RX10_TEMP1136 , RX10_TEMP1134 ) ; final int RX10_TEMP1138 = 0 ; final boolean RX10_TEMP1139 = RX10_TEMP1137 < RX10_TEMP1138 ; if ( RX10_TEMP1139 ) { String RX10_TEMP1140 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1140 ) ; }
 final place RX10_TEMP1141 = Program . getPlaceFromDist1 ( RX10_TEMP1135 , RX10_TEMP1137 ) ; final place RX10_TEMP1143 = here ; final boolean RX10_TEMP1144 = RX10_TEMP1141 != RX10_TEMP1143 ; if ( RX10_TEMP1144 ) { String RX10_TEMP1142 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1142 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP1137 , X10_TEMP406 ) ; final int X10_TEMP409 = ( 0 ) ; final int X10_TEMP410 = ( X10_TEMP409 ) ; final Point1 RX10_TEMP1145 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1146 = overflow . distValue ; final Region1 RX10_TEMP1147 = RX10_TEMP1146 . dReg ; final int RX10_TEMP1148 = Program . searchPointInRegion1 ( RX10_TEMP1147 , RX10_TEMP1145 ) ; final int RX10_TEMP1149 = 0 ; final boolean RX10_TEMP1150 = RX10_TEMP1148 < RX10_TEMP1149 ; if ( RX10_TEMP1150 ) { String RX10_TEMP1151 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1151 ) ; }
 final place RX10_TEMP1152 = Program . getPlaceFromDist1 ( RX10_TEMP1146 , RX10_TEMP1148 ) ; final place RX10_TEMP1154 = here ; final boolean RX10_TEMP1155 = RX10_TEMP1152 != RX10_TEMP1154 ; if ( RX10_TEMP1155 ) { String RX10_TEMP1153 = "Bad place access for array overflow" ; throw new RuntimeException ( RX10_TEMP1153 ) ; }
 Program . setRefArrayValue1int ( overflow , RX10_TEMP1148 , X10_TEMP410 ) ; int inRightStaying = ( 0 ) ; final int X10_TEMP417 = ( 0 ) ; final Point1 RX10_TEMP1156 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1157 = inRt . distValue ; final Region1 RX10_TEMP1158 = RX10_TEMP1157 . dReg ; final int RX10_TEMP1159 = Program . searchPointInRegion1 ( RX10_TEMP1158 , RX10_TEMP1156 ) ; final int RX10_TEMP1160 = 0 ; final boolean RX10_TEMP1161 = RX10_TEMP1159 < RX10_TEMP1160 ; if ( RX10_TEMP1161 ) { String RX10_TEMP1162 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1162 ) ; }
 final place RX10_TEMP1163 = Program . getPlaceFromDist1 ( RX10_TEMP1157 , RX10_TEMP1159 ) ; final place RX10_TEMP1165 = here ; final boolean RX10_TEMP1166 = RX10_TEMP1163 != RX10_TEMP1165 ; if ( RX10_TEMP1166 ) { String RX10_TEMP1164 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1164 ) ; }
 final int RX10_TEMP1167 = Program . getRefArrayValue1int ( inRt , RX10_TEMP1159 ) ; final int X10_TEMP414 = ( RX10_TEMP1167 ) ; final int X10_TEMP415 = ( 1 ) ; final int X10_TEMP418 = ( X10_TEMP414 - X10_TEMP415 ) ; final Region1 X10_TEMP420 = Program . createNewRegion1R ( X10_TEMP417 , X10_TEMP418 ) ; final int RX10_TEMP1172 = 1 ; int RX10_TEMP1170 = X10_TEMP420 . regSize ; RX10_TEMP1170 = RX10_TEMP1170 - RX10_TEMP1172 ; final region ( : rank==1 ) RX10_TEMP1171 = [ 0 : RX10_TEMP1170 ] ; for ( point ( : rank==1 ) RX10_TEMP1168 : RX10_TEMP1171 ) { final int RX10_TEMP1173 = RX10_TEMP1168 [0] ; final Point1 RX10_TEMP1169 = Program . regionOrdinalPoint1 ( X10_TEMP420 , RX10_TEMP1173 ) ; final int i = RX10_TEMP1169 . f0 ; final Point2 RX10_TEMP1174 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1175 = rBufferR . distValue ; final Region2 RX10_TEMP1176 = RX10_TEMP1175 . dReg ; final int RX10_TEMP1177 = Program . searchPointInRegion2 ( RX10_TEMP1176 , RX10_TEMP1174 ) ; final int RX10_TEMP1178 = 0 ; final boolean RX10_TEMP1179 = RX10_TEMP1177 < RX10_TEMP1178 ; if ( RX10_TEMP1179 ) { String RX10_TEMP1180 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1180 ) ; }
 final place RX10_TEMP1181 = Program . getPlaceFromDist2 ( RX10_TEMP1175 , RX10_TEMP1177 ) ; final place RX10_TEMP1183 = here ; final boolean RX10_TEMP1184 = RX10_TEMP1181 != RX10_TEMP1183 ; if ( RX10_TEMP1184 ) { String RX10_TEMP1182 = "Bad place access for array rBufferR" ; throw new RuntimeException ( RX10_TEMP1182 ) ; }
 final Particle RX10_TEMP1185 = Program . getRefArrayValue2Particle ( rBufferR , RX10_TEMP1177 ) ; final Particle p = ( RX10_TEMP1185 ) ; double y = ( Program . Particle_getY ( p ) ) ; final boolean X10_TEMP426 = y < lb ; if ( X10_TEMP426 ) { final place X10_TEMP427 = ( here ) ; final boolean X10_TEMP429 = X10_TEMP427 . isFirst ( ) ; if ( X10_TEMP429 ) { final double X10_TEMP431 = ( y + rsize ) ; y = ( X10_TEMP431 ) ; }
 final Point1 RX10_TEMP1186 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1187 = outLt . distValue ; final Region1 RX10_TEMP1188 = RX10_TEMP1187 . dReg ; final int RX10_TEMP1189 = Program . searchPointInRegion1 ( RX10_TEMP1188 , RX10_TEMP1186 ) ; final int RX10_TEMP1190 = 0 ; final boolean RX10_TEMP1191 = RX10_TEMP1189 < RX10_TEMP1190 ; if ( RX10_TEMP1191 ) { String RX10_TEMP1192 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1192 ) ; }
 final place RX10_TEMP1193 = Program . getPlaceFromDist1 ( RX10_TEMP1187 , RX10_TEMP1189 ) ; final place RX10_TEMP1195 = here ; final boolean RX10_TEMP1196 = RX10_TEMP1193 != RX10_TEMP1195 ; if ( RX10_TEMP1196 ) { String RX10_TEMP1194 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1194 ) ; }
 final int RX10_TEMP1197 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1189 ) ; final int X10_TEMP435 = ( RX10_TEMP1197 ) ; final Particle X10_TEMP438 = ( Program . Particle_setY ( p , y ) ) ; final Particle X10_TEMP439 = ( X10_TEMP438 ) ; final Point2 RX10_TEMP1198 = new Point2 ( pl , X10_TEMP435 ) ; final Dist2 RX10_TEMP1199 = sBufferL . distValue ; final Region2 RX10_TEMP1200 = RX10_TEMP1199 . dReg ; final int RX10_TEMP1201 = Program . searchPointInRegion2 ( RX10_TEMP1200 , RX10_TEMP1198 ) ; final int RX10_TEMP1202 = 0 ; final boolean RX10_TEMP1203 = RX10_TEMP1201 < RX10_TEMP1202 ; if ( RX10_TEMP1203 ) { String RX10_TEMP1204 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1204 ) ; }
 final place RX10_TEMP1205 = Program . getPlaceFromDist2 ( RX10_TEMP1199 , RX10_TEMP1201 ) ; final place RX10_TEMP1207 = here ; final boolean RX10_TEMP1208 = RX10_TEMP1205 != RX10_TEMP1207 ; if ( RX10_TEMP1208 ) { String RX10_TEMP1206 = "Bad place access for array sBufferL" ; throw new RuntimeException ( RX10_TEMP1206 ) ; }
 Program . setRefArrayValue2Particle ( sBufferL , RX10_TEMP1201 , X10_TEMP439 ) ; final Point1 RX10_TEMP1209 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1210 = outLt . distValue ; final Region1 RX10_TEMP1211 = RX10_TEMP1210 . dReg ; final int RX10_TEMP1212 = Program . searchPointInRegion1 ( RX10_TEMP1211 , RX10_TEMP1209 ) ; final int RX10_TEMP1213 = 0 ; final boolean RX10_TEMP1214 = RX10_TEMP1212 < RX10_TEMP1213 ; if ( RX10_TEMP1214 ) { String RX10_TEMP1215 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1215 ) ; }
 final place RX10_TEMP1216 = Program . getPlaceFromDist1 ( RX10_TEMP1210 , RX10_TEMP1212 ) ; final place RX10_TEMP1218 = here ; final boolean RX10_TEMP1219 = RX10_TEMP1216 != RX10_TEMP1218 ; if ( RX10_TEMP1219 ) { String RX10_TEMP1217 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1217 ) ; }
 final int RX10_TEMP1220 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1212 ) ; final int X10_TEMP441 = ( RX10_TEMP1220 ) ; final int X10_TEMP442 = 1 ; final Point1 RX10_TEMP1221 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1222 = outLt . distValue ; final Region1 RX10_TEMP1223 = RX10_TEMP1222 . dReg ; final int RX10_TEMP1224 = Program . searchPointInRegion1 ( RX10_TEMP1223 , RX10_TEMP1221 ) ; final int RX10_TEMP1225 = 0 ; final boolean RX10_TEMP1226 = RX10_TEMP1224 < RX10_TEMP1225 ; if ( RX10_TEMP1226 ) { String RX10_TEMP1227 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1227 ) ; }
 final place RX10_TEMP1228 = Program . getPlaceFromDist1 ( RX10_TEMP1222 , RX10_TEMP1224 ) ; final place RX10_TEMP1230 = here ; final boolean RX10_TEMP1231 = RX10_TEMP1228 != RX10_TEMP1230 ; if ( RX10_TEMP1231 ) { String RX10_TEMP1229 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1229 ) ; }
 final int RX10_TEMP1232 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1224 ) ; final int X10_TEMP443 = ( RX10_TEMP1232 ) ; final int X10_TEMP444 = ( X10_TEMP443 + X10_TEMP442 ) ; final Point1 RX10_TEMP1233 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1234 = outLt . distValue ; final Region1 RX10_TEMP1235 = RX10_TEMP1234 . dReg ; final int RX10_TEMP1236 = Program . searchPointInRegion1 ( RX10_TEMP1235 , RX10_TEMP1233 ) ; final int RX10_TEMP1237 = 0 ; final boolean RX10_TEMP1238 = RX10_TEMP1236 < RX10_TEMP1237 ; if ( RX10_TEMP1238 ) { String RX10_TEMP1239 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1239 ) ; }
 final place RX10_TEMP1240 = Program . getPlaceFromDist1 ( RX10_TEMP1234 , RX10_TEMP1236 ) ; final place RX10_TEMP1242 = here ; final boolean RX10_TEMP1243 = RX10_TEMP1240 != RX10_TEMP1242 ; if ( RX10_TEMP1243 ) { String RX10_TEMP1241 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1241 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP1236 , X10_TEMP444 ) ; }
 else { final boolean X10_TEMP446 = y >= ub ; if ( X10_TEMP446 ) { final String X10_TEMP447 = ( "Particle returning up -- " ) ; final String X10_TEMP448 = ( "should not happen: " ) ; final String X10_TEMP449 = ( X10_TEMP447 + X10_TEMP448 ) ; final String X10_TEMP450 = ( Program . Particle_toString ( p ) ) ; final String X10_TEMP452 = ( X10_TEMP449 + X10_TEMP450 ) ; System.err.println ( X10_TEMP452 ) ; final place X10_TEMP453 = ( here ) ; final boolean X10_TEMP455 = X10_TEMP453 . isLast ( ) ; if ( X10_TEMP455 ) { final double X10_TEMP457 = ( y - rsize ) ; y = ( X10_TEMP457 ) ; }
 final Point1 RX10_TEMP1244 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1245 = outRt . distValue ; final Region1 RX10_TEMP1246 = RX10_TEMP1245 . dReg ; final int RX10_TEMP1247 = Program . searchPointInRegion1 ( RX10_TEMP1246 , RX10_TEMP1244 ) ; final int RX10_TEMP1248 = 0 ; final boolean RX10_TEMP1249 = RX10_TEMP1247 < RX10_TEMP1248 ; if ( RX10_TEMP1249 ) { String RX10_TEMP1250 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1250 ) ; }
 final place RX10_TEMP1251 = Program . getPlaceFromDist1 ( RX10_TEMP1245 , RX10_TEMP1247 ) ; final place RX10_TEMP1253 = here ; final boolean RX10_TEMP1254 = RX10_TEMP1251 != RX10_TEMP1253 ; if ( RX10_TEMP1254 ) { String RX10_TEMP1252 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1252 ) ; }
 final int RX10_TEMP1255 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1247 ) ; final int X10_TEMP461 = ( RX10_TEMP1255 ) ; final Particle X10_TEMP464 = ( Program . Particle_setY ( p , y ) ) ; final Particle X10_TEMP465 = ( X10_TEMP464 ) ; final Point2 RX10_TEMP1256 = new Point2 ( pl , X10_TEMP461 ) ; final Dist2 RX10_TEMP1257 = sBufferR . distValue ; final Region2 RX10_TEMP1258 = RX10_TEMP1257 . dReg ; final int RX10_TEMP1259 = Program . searchPointInRegion2 ( RX10_TEMP1258 , RX10_TEMP1256 ) ; final int RX10_TEMP1260 = 0 ; final boolean RX10_TEMP1261 = RX10_TEMP1259 < RX10_TEMP1260 ; if ( RX10_TEMP1261 ) { String RX10_TEMP1262 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1262 ) ; }
 final place RX10_TEMP1263 = Program . getPlaceFromDist2 ( RX10_TEMP1257 , RX10_TEMP1259 ) ; final place RX10_TEMP1265 = here ; final boolean RX10_TEMP1266 = RX10_TEMP1263 != RX10_TEMP1265 ; if ( RX10_TEMP1266 ) { String RX10_TEMP1264 = "Bad place access for array sBufferR" ; throw new RuntimeException ( RX10_TEMP1264 ) ; }
 Program . setRefArrayValue2Particle ( sBufferR , RX10_TEMP1259 , X10_TEMP465 ) ; final Point1 RX10_TEMP1267 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1268 = outRt . distValue ; final Region1 RX10_TEMP1269 = RX10_TEMP1268 . dReg ; final int RX10_TEMP1270 = Program . searchPointInRegion1 ( RX10_TEMP1269 , RX10_TEMP1267 ) ; final int RX10_TEMP1271 = 0 ; final boolean RX10_TEMP1272 = RX10_TEMP1270 < RX10_TEMP1271 ; if ( RX10_TEMP1272 ) { String RX10_TEMP1273 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1273 ) ; }
 final place RX10_TEMP1274 = Program . getPlaceFromDist1 ( RX10_TEMP1268 , RX10_TEMP1270 ) ; final place RX10_TEMP1276 = here ; final boolean RX10_TEMP1277 = RX10_TEMP1274 != RX10_TEMP1276 ; if ( RX10_TEMP1277 ) { String RX10_TEMP1275 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1275 ) ; }
 final int RX10_TEMP1278 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1270 ) ; final int X10_TEMP467 = ( RX10_TEMP1278 ) ; final int X10_TEMP468 = 1 ; final Point1 RX10_TEMP1279 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1280 = outRt . distValue ; final Region1 RX10_TEMP1281 = RX10_TEMP1280 . dReg ; final int RX10_TEMP1282 = Program . searchPointInRegion1 ( RX10_TEMP1281 , RX10_TEMP1279 ) ; final int RX10_TEMP1283 = 0 ; final boolean RX10_TEMP1284 = RX10_TEMP1282 < RX10_TEMP1283 ; if ( RX10_TEMP1284 ) { String RX10_TEMP1285 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1285 ) ; }
 final place RX10_TEMP1286 = Program . getPlaceFromDist1 ( RX10_TEMP1280 , RX10_TEMP1282 ) ; final place RX10_TEMP1288 = here ; final boolean RX10_TEMP1289 = RX10_TEMP1286 != RX10_TEMP1288 ; if ( RX10_TEMP1289 ) { String RX10_TEMP1287 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1287 ) ; }
 final int RX10_TEMP1290 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1282 ) ; final int X10_TEMP469 = ( RX10_TEMP1290 ) ; final int X10_TEMP470 = ( X10_TEMP469 + X10_TEMP468 ) ; final Point1 RX10_TEMP1291 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1292 = outRt . distValue ; final Region1 RX10_TEMP1293 = RX10_TEMP1292 . dReg ; final int RX10_TEMP1294 = Program . searchPointInRegion1 ( RX10_TEMP1293 , RX10_TEMP1291 ) ; final int RX10_TEMP1295 = 0 ; final boolean RX10_TEMP1296 = RX10_TEMP1294 < RX10_TEMP1295 ; if ( RX10_TEMP1296 ) { String RX10_TEMP1297 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1297 ) ; }
 final place RX10_TEMP1298 = Program . getPlaceFromDist1 ( RX10_TEMP1292 , RX10_TEMP1294 ) ; final place RX10_TEMP1300 = here ; final boolean RX10_TEMP1301 = RX10_TEMP1298 != RX10_TEMP1300 ; if ( RX10_TEMP1301 ) { String RX10_TEMP1299 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1299 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP1294 , X10_TEMP470 ) ; }
 else { final Particle X10_TEMP474 = ( p ) ; final Point2 RX10_TEMP1302 = new Point2 ( pl , inRightStaying ) ; final Dist2 RX10_TEMP1303 = rBufferR . distValue ; final Region2 RX10_TEMP1304 = RX10_TEMP1303 . dReg ; final int RX10_TEMP1305 = Program . searchPointInRegion2 ( RX10_TEMP1304 , RX10_TEMP1302 ) ; final int RX10_TEMP1306 = 0 ; final boolean RX10_TEMP1307 = RX10_TEMP1305 < RX10_TEMP1306 ; if ( RX10_TEMP1307 ) { String RX10_TEMP1308 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1308 ) ; }
 final place RX10_TEMP1309 = Program . getPlaceFromDist2 ( RX10_TEMP1303 , RX10_TEMP1305 ) ; final place RX10_TEMP1311 = here ; final boolean RX10_TEMP1312 = RX10_TEMP1309 != RX10_TEMP1311 ; if ( RX10_TEMP1312 ) { String RX10_TEMP1310 = "Bad place access for array rBufferR" ; throw new RuntimeException ( RX10_TEMP1310 ) ; }
 Program . setRefArrayValue2Particle ( rBufferR , RX10_TEMP1305 , X10_TEMP474 ) ; final int X10_TEMP475 = ( inRightStaying ) ; final int X10_TEMP476 = 1 ; inRightStaying = inRightStaying + X10_TEMP476 ; }
 }
 }
 final int X10_TEMP479 = ( inRightStaying ) ; final Point1 RX10_TEMP1313 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1314 = inRt . distValue ; final Region1 RX10_TEMP1315 = RX10_TEMP1314 . dReg ; final int RX10_TEMP1316 = Program . searchPointInRegion1 ( RX10_TEMP1315 , RX10_TEMP1313 ) ; final int RX10_TEMP1317 = 0 ; final boolean RX10_TEMP1318 = RX10_TEMP1316 < RX10_TEMP1317 ; if ( RX10_TEMP1318 ) { String RX10_TEMP1319 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1319 ) ; }
 final place RX10_TEMP1320 = Program . getPlaceFromDist1 ( RX10_TEMP1314 , RX10_TEMP1316 ) ; final place RX10_TEMP1322 = here ; final boolean RX10_TEMP1323 = RX10_TEMP1320 != RX10_TEMP1322 ; if ( RX10_TEMP1323 ) { String RX10_TEMP1321 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1321 ) ; }
 Program . setRefArrayValue1int ( inRt , RX10_TEMP1316 , X10_TEMP479 ) ; int inLeftStaying = ( 0 ) ; final int X10_TEMP486 = ( 0 ) ; final Point1 RX10_TEMP1324 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1325 = inLt . distValue ; final Region1 RX10_TEMP1326 = RX10_TEMP1325 . dReg ; final int RX10_TEMP1327 = Program . searchPointInRegion1 ( RX10_TEMP1326 , RX10_TEMP1324 ) ; final int RX10_TEMP1328 = 0 ; final boolean RX10_TEMP1329 = RX10_TEMP1327 < RX10_TEMP1328 ; if ( RX10_TEMP1329 ) { String RX10_TEMP1330 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1330 ) ; }
 final place RX10_TEMP1331 = Program . getPlaceFromDist1 ( RX10_TEMP1325 , RX10_TEMP1327 ) ; final place RX10_TEMP1333 = here ; final boolean RX10_TEMP1334 = RX10_TEMP1331 != RX10_TEMP1333 ; if ( RX10_TEMP1334 ) { String RX10_TEMP1332 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP1332 ) ; }
 final int RX10_TEMP1335 = Program . getRefArrayValue1int ( inLt , RX10_TEMP1327 ) ; final int X10_TEMP483 = ( RX10_TEMP1335 ) ; final int X10_TEMP484 = ( 1 ) ; final int X10_TEMP487 = ( X10_TEMP483 - X10_TEMP484 ) ; final Region1 X10_TEMP489 = Program . createNewRegion1R ( X10_TEMP486 , X10_TEMP487 ) ; final int RX10_TEMP1340 = 1 ; int RX10_TEMP1338 = X10_TEMP489 . regSize ; RX10_TEMP1338 = RX10_TEMP1338 - RX10_TEMP1340 ; final region ( : rank==1 ) RX10_TEMP1339 = [ 0 : RX10_TEMP1338 ] ; for ( point ( : rank==1 ) RX10_TEMP1336 : RX10_TEMP1339 ) { final int RX10_TEMP1341 = RX10_TEMP1336 [0] ; final Point1 RX10_TEMP1337 = Program . regionOrdinalPoint1 ( X10_TEMP489 , RX10_TEMP1341 ) ; final int i = RX10_TEMP1337 . f0 ; final Point2 RX10_TEMP1342 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1343 = rBufferL . distValue ; final Region2 RX10_TEMP1344 = RX10_TEMP1343 . dReg ; final int RX10_TEMP1345 = Program . searchPointInRegion2 ( RX10_TEMP1344 , RX10_TEMP1342 ) ; final int RX10_TEMP1346 = 0 ; final boolean RX10_TEMP1347 = RX10_TEMP1345 < RX10_TEMP1346 ; if ( RX10_TEMP1347 ) { String RX10_TEMP1348 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1348 ) ; }
 final place RX10_TEMP1349 = Program . getPlaceFromDist2 ( RX10_TEMP1343 , RX10_TEMP1345 ) ; final place RX10_TEMP1351 = here ; final boolean RX10_TEMP1352 = RX10_TEMP1349 != RX10_TEMP1351 ; if ( RX10_TEMP1352 ) { String RX10_TEMP1350 = "Bad place access for array rBufferL" ; throw new RuntimeException ( RX10_TEMP1350 ) ; }
 final Particle RX10_TEMP1353 = Program . getRefArrayValue2Particle ( rBufferL , RX10_TEMP1345 ) ; final Particle p = ( RX10_TEMP1353 ) ; double y = ( Program . Particle_getY ( p ) ) ; final boolean X10_TEMP495 = y >= ub ; if ( X10_TEMP495 ) { final Point1 RX10_TEMP1354 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1355 = outRt . distValue ; final Region1 RX10_TEMP1356 = RX10_TEMP1355 . dReg ; final int RX10_TEMP1357 = Program . searchPointInRegion1 ( RX10_TEMP1356 , RX10_TEMP1354 ) ; final int RX10_TEMP1358 = 0 ; final boolean RX10_TEMP1359 = RX10_TEMP1357 < RX10_TEMP1358 ; if ( RX10_TEMP1359 ) { String RX10_TEMP1360 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1360 ) ; }
 final place RX10_TEMP1361 = Program . getPlaceFromDist1 ( RX10_TEMP1355 , RX10_TEMP1357 ) ; final place RX10_TEMP1363 = here ; final boolean RX10_TEMP1364 = RX10_TEMP1361 != RX10_TEMP1363 ; if ( RX10_TEMP1364 ) { String RX10_TEMP1362 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1362 ) ; }
 final int RX10_TEMP1365 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1357 ) ; final int X10_TEMP497 = ( RX10_TEMP1365 ) ; final int X10_TEMP498 = ( rBuffer . regSize ) ; final boolean X10_TEMP500 = X10_TEMP497 < X10_TEMP498 ; if ( X10_TEMP500 ) { final place X10_TEMP501 = ( here ) ; final boolean X10_TEMP503 = X10_TEMP501 . isLast ( ) ; if ( X10_TEMP503 ) { final double X10_TEMP505 = ( y - rsize ) ; y = ( X10_TEMP505 ) ; }
 final Point1 RX10_TEMP1366 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1367 = outRt . distValue ; final Region1 RX10_TEMP1368 = RX10_TEMP1367 . dReg ; final int RX10_TEMP1369 = Program . searchPointInRegion1 ( RX10_TEMP1368 , RX10_TEMP1366 ) ; final int RX10_TEMP1370 = 0 ; final boolean RX10_TEMP1371 = RX10_TEMP1369 < RX10_TEMP1370 ; if ( RX10_TEMP1371 ) { String RX10_TEMP1372 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1372 ) ; }
 final place RX10_TEMP1373 = Program . getPlaceFromDist1 ( RX10_TEMP1367 , RX10_TEMP1369 ) ; final place RX10_TEMP1375 = here ; final boolean RX10_TEMP1376 = RX10_TEMP1373 != RX10_TEMP1375 ; if ( RX10_TEMP1376 ) { String RX10_TEMP1374 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1374 ) ; }
 final int RX10_TEMP1377 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1369 ) ; final int X10_TEMP509 = ( RX10_TEMP1377 ) ; final Particle X10_TEMP512 = ( Program . Particle_setY ( p , y ) ) ; final Particle X10_TEMP513 = ( X10_TEMP512 ) ; final Point2 RX10_TEMP1378 = new Point2 ( pl , X10_TEMP509 ) ; final Dist2 RX10_TEMP1379 = sBufferR . distValue ; final Region2 RX10_TEMP1380 = RX10_TEMP1379 . dReg ; final int RX10_TEMP1381 = Program . searchPointInRegion2 ( RX10_TEMP1380 , RX10_TEMP1378 ) ; final int RX10_TEMP1382 = 0 ; final boolean RX10_TEMP1383 = RX10_TEMP1381 < RX10_TEMP1382 ; if ( RX10_TEMP1383 ) { String RX10_TEMP1384 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1384 ) ; }
 final place RX10_TEMP1385 = Program . getPlaceFromDist2 ( RX10_TEMP1379 , RX10_TEMP1381 ) ; final place RX10_TEMP1387 = here ; final boolean RX10_TEMP1388 = RX10_TEMP1385 != RX10_TEMP1387 ; if ( RX10_TEMP1388 ) { String RX10_TEMP1386 = "Bad place access for array sBufferR" ; throw new RuntimeException ( RX10_TEMP1386 ) ; }
 Program . setRefArrayValue2Particle ( sBufferR , RX10_TEMP1381 , X10_TEMP513 ) ; final Point1 RX10_TEMP1389 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1390 = outRt . distValue ; final Region1 RX10_TEMP1391 = RX10_TEMP1390 . dReg ; final int RX10_TEMP1392 = Program . searchPointInRegion1 ( RX10_TEMP1391 , RX10_TEMP1389 ) ; final int RX10_TEMP1393 = 0 ; final boolean RX10_TEMP1394 = RX10_TEMP1392 < RX10_TEMP1393 ; if ( RX10_TEMP1394 ) { String RX10_TEMP1395 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1395 ) ; }
 final place RX10_TEMP1396 = Program . getPlaceFromDist1 ( RX10_TEMP1390 , RX10_TEMP1392 ) ; final place RX10_TEMP1398 = here ; final boolean RX10_TEMP1399 = RX10_TEMP1396 != RX10_TEMP1398 ; if ( RX10_TEMP1399 ) { String RX10_TEMP1397 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1397 ) ; }
 final int RX10_TEMP1400 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1392 ) ; final int X10_TEMP515 = ( RX10_TEMP1400 ) ; final int X10_TEMP516 = 1 ; final Point1 RX10_TEMP1401 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1402 = outRt . distValue ; final Region1 RX10_TEMP1403 = RX10_TEMP1402 . dReg ; final int RX10_TEMP1404 = Program . searchPointInRegion1 ( RX10_TEMP1403 , RX10_TEMP1401 ) ; final int RX10_TEMP1405 = 0 ; final boolean RX10_TEMP1406 = RX10_TEMP1404 < RX10_TEMP1405 ; if ( RX10_TEMP1406 ) { String RX10_TEMP1407 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1407 ) ; }
 final place RX10_TEMP1408 = Program . getPlaceFromDist1 ( RX10_TEMP1402 , RX10_TEMP1404 ) ; final place RX10_TEMP1410 = here ; final boolean RX10_TEMP1411 = RX10_TEMP1408 != RX10_TEMP1410 ; if ( RX10_TEMP1411 ) { String RX10_TEMP1409 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1409 ) ; }
 final int RX10_TEMP1412 = Program . getRefArrayValue1int ( outRt , RX10_TEMP1404 ) ; final int X10_TEMP517 = ( RX10_TEMP1412 ) ; final int X10_TEMP518 = ( X10_TEMP517 + X10_TEMP516 ) ; final Point1 RX10_TEMP1413 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1414 = outRt . distValue ; final Region1 RX10_TEMP1415 = RX10_TEMP1414 . dReg ; final int RX10_TEMP1416 = Program . searchPointInRegion1 ( RX10_TEMP1415 , RX10_TEMP1413 ) ; final int RX10_TEMP1417 = 0 ; final boolean RX10_TEMP1418 = RX10_TEMP1416 < RX10_TEMP1417 ; if ( RX10_TEMP1418 ) { String RX10_TEMP1419 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1419 ) ; }
 final place RX10_TEMP1420 = Program . getPlaceFromDist1 ( RX10_TEMP1414 , RX10_TEMP1416 ) ; final place RX10_TEMP1422 = here ; final boolean RX10_TEMP1423 = RX10_TEMP1420 != RX10_TEMP1422 ; if ( RX10_TEMP1423 ) { String RX10_TEMP1421 = "Bad place access for array outRt" ; throw new RuntimeException ( RX10_TEMP1421 ) ; }
 Program . setRefArrayValue1int ( outRt , RX10_TEMP1416 , X10_TEMP518 ) ; }
 else { final int X10_TEMP520 = ( 2 ) ; final int X10_TEMP521 = ( rBuffer . regSize ) ; final int X10_TEMP523 = ( X10_TEMP520 * X10_TEMP521 ) ; final int X10_TEMP524 = ( X10_TEMP523 ) ; final Point1 RX10_TEMP1424 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1425 = overflow . distValue ; final Region1 RX10_TEMP1426 = RX10_TEMP1425 . dReg ; final int RX10_TEMP1427 = Program . searchPointInRegion1 ( RX10_TEMP1426 , RX10_TEMP1424 ) ; final int RX10_TEMP1428 = 0 ; final boolean RX10_TEMP1429 = RX10_TEMP1427 < RX10_TEMP1428 ; if ( RX10_TEMP1429 ) { String RX10_TEMP1430 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1430 ) ; }
 final place RX10_TEMP1431 = Program . getPlaceFromDist1 ( RX10_TEMP1425 , RX10_TEMP1427 ) ; final place RX10_TEMP1433 = here ; final boolean RX10_TEMP1434 = RX10_TEMP1431 != RX10_TEMP1433 ; if ( RX10_TEMP1434 ) { String RX10_TEMP1432 = "Bad place access for array overflow" ; throw new RuntimeException ( RX10_TEMP1432 ) ; }
 Program . setRefArrayValue1int ( overflow , RX10_TEMP1427 , X10_TEMP524 ) ; break ; }
 }
 else { final boolean X10_TEMP526 = y < lb ; if ( X10_TEMP526 ) { final Point1 RX10_TEMP1435 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1436 = outLt . distValue ; final Region1 RX10_TEMP1437 = RX10_TEMP1436 . dReg ; final int RX10_TEMP1438 = Program . searchPointInRegion1 ( RX10_TEMP1437 , RX10_TEMP1435 ) ; final int RX10_TEMP1439 = 0 ; final boolean RX10_TEMP1440 = RX10_TEMP1438 < RX10_TEMP1439 ; if ( RX10_TEMP1440 ) { String RX10_TEMP1441 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1441 ) ; }
 final place RX10_TEMP1442 = Program . getPlaceFromDist1 ( RX10_TEMP1436 , RX10_TEMP1438 ) ; final place RX10_TEMP1444 = here ; final boolean RX10_TEMP1445 = RX10_TEMP1442 != RX10_TEMP1444 ; if ( RX10_TEMP1445 ) { String RX10_TEMP1443 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1443 ) ; }
 final int RX10_TEMP1446 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1438 ) ; final int X10_TEMP528 = ( RX10_TEMP1446 ) ; final int X10_TEMP529 = ( rBuffer . regSize ) ; final boolean X10_TEMP531 = X10_TEMP528 < X10_TEMP529 ; if ( X10_TEMP531 ) { final place X10_TEMP532 = ( here ) ; final boolean X10_TEMP534 = X10_TEMP532 . isFirst ( ) ; if ( X10_TEMP534 ) { final double X10_TEMP536 = ( y + rsize ) ; y = ( X10_TEMP536 ) ; }
 final Point1 RX10_TEMP1447 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1448 = outLt . distValue ; final Region1 RX10_TEMP1449 = RX10_TEMP1448 . dReg ; final int RX10_TEMP1450 = Program . searchPointInRegion1 ( RX10_TEMP1449 , RX10_TEMP1447 ) ; final int RX10_TEMP1451 = 0 ; final boolean RX10_TEMP1452 = RX10_TEMP1450 < RX10_TEMP1451 ; if ( RX10_TEMP1452 ) { String RX10_TEMP1453 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1453 ) ; }
 final place RX10_TEMP1454 = Program . getPlaceFromDist1 ( RX10_TEMP1448 , RX10_TEMP1450 ) ; final place RX10_TEMP1456 = here ; final boolean RX10_TEMP1457 = RX10_TEMP1454 != RX10_TEMP1456 ; if ( RX10_TEMP1457 ) { String RX10_TEMP1455 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1455 ) ; }
 final int RX10_TEMP1458 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1450 ) ; final int X10_TEMP540 = ( RX10_TEMP1458 ) ; final Particle X10_TEMP543 = ( Program . Particle_setY ( p , y ) ) ; final Particle X10_TEMP544 = ( X10_TEMP543 ) ; final Point2 RX10_TEMP1459 = new Point2 ( pl , X10_TEMP540 ) ; final Dist2 RX10_TEMP1460 = sBufferL . distValue ; final Region2 RX10_TEMP1461 = RX10_TEMP1460 . dReg ; final int RX10_TEMP1462 = Program . searchPointInRegion2 ( RX10_TEMP1461 , RX10_TEMP1459 ) ; final int RX10_TEMP1463 = 0 ; final boolean RX10_TEMP1464 = RX10_TEMP1462 < RX10_TEMP1463 ; if ( RX10_TEMP1464 ) { String RX10_TEMP1465 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1465 ) ; }
 final place RX10_TEMP1466 = Program . getPlaceFromDist2 ( RX10_TEMP1460 , RX10_TEMP1462 ) ; final place RX10_TEMP1468 = here ; final boolean RX10_TEMP1469 = RX10_TEMP1466 != RX10_TEMP1468 ; if ( RX10_TEMP1469 ) { String RX10_TEMP1467 = "Bad place access for array sBufferL" ; throw new RuntimeException ( RX10_TEMP1467 ) ; }
 Program . setRefArrayValue2Particle ( sBufferL , RX10_TEMP1462 , X10_TEMP544 ) ; final Point1 RX10_TEMP1470 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1471 = outLt . distValue ; final Region1 RX10_TEMP1472 = RX10_TEMP1471 . dReg ; final int RX10_TEMP1473 = Program . searchPointInRegion1 ( RX10_TEMP1472 , RX10_TEMP1470 ) ; final int RX10_TEMP1474 = 0 ; final boolean RX10_TEMP1475 = RX10_TEMP1473 < RX10_TEMP1474 ; if ( RX10_TEMP1475 ) { String RX10_TEMP1476 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1476 ) ; }
 final place RX10_TEMP1477 = Program . getPlaceFromDist1 ( RX10_TEMP1471 , RX10_TEMP1473 ) ; final place RX10_TEMP1479 = here ; final boolean RX10_TEMP1480 = RX10_TEMP1477 != RX10_TEMP1479 ; if ( RX10_TEMP1480 ) { String RX10_TEMP1478 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1478 ) ; }
 final int RX10_TEMP1481 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1473 ) ; final int X10_TEMP546 = ( RX10_TEMP1481 ) ; final int X10_TEMP547 = 1 ; final Point1 RX10_TEMP1482 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1483 = outLt . distValue ; final Region1 RX10_TEMP1484 = RX10_TEMP1483 . dReg ; final int RX10_TEMP1485 = Program . searchPointInRegion1 ( RX10_TEMP1484 , RX10_TEMP1482 ) ; final int RX10_TEMP1486 = 0 ; final boolean RX10_TEMP1487 = RX10_TEMP1485 < RX10_TEMP1486 ; if ( RX10_TEMP1487 ) { String RX10_TEMP1488 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1488 ) ; }
 final place RX10_TEMP1489 = Program . getPlaceFromDist1 ( RX10_TEMP1483 , RX10_TEMP1485 ) ; final place RX10_TEMP1491 = here ; final boolean RX10_TEMP1492 = RX10_TEMP1489 != RX10_TEMP1491 ; if ( RX10_TEMP1492 ) { String RX10_TEMP1490 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1490 ) ; }
 final int RX10_TEMP1493 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1485 ) ; final int X10_TEMP548 = ( RX10_TEMP1493 ) ; final int X10_TEMP549 = ( X10_TEMP548 + X10_TEMP547 ) ; final Point1 RX10_TEMP1494 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1495 = outLt . distValue ; final Region1 RX10_TEMP1496 = RX10_TEMP1495 . dReg ; final int RX10_TEMP1497 = Program . searchPointInRegion1 ( RX10_TEMP1496 , RX10_TEMP1494 ) ; final int RX10_TEMP1498 = 0 ; final boolean RX10_TEMP1499 = RX10_TEMP1497 < RX10_TEMP1498 ; if ( RX10_TEMP1499 ) { String RX10_TEMP1500 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1500 ) ; }
 final place RX10_TEMP1501 = Program . getPlaceFromDist1 ( RX10_TEMP1495 , RX10_TEMP1497 ) ; final place RX10_TEMP1503 = here ; final boolean RX10_TEMP1504 = RX10_TEMP1501 != RX10_TEMP1503 ; if ( RX10_TEMP1504 ) { String RX10_TEMP1502 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1502 ) ; }
 Program . setRefArrayValue1int ( outLt , RX10_TEMP1497 , X10_TEMP549 ) ; }
 else { final int X10_TEMP551 = ( 2 ) ; final int X10_TEMP552 = ( rBuffer . regSize ) ; final int X10_TEMP554 = ( X10_TEMP551 * X10_TEMP552 ) ; final int X10_TEMP555 = ( X10_TEMP554 ) ; final Point1 RX10_TEMP1505 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1506 = overflow . distValue ; final Region1 RX10_TEMP1507 = RX10_TEMP1506 . dReg ; final int RX10_TEMP1508 = Program . searchPointInRegion1 ( RX10_TEMP1507 , RX10_TEMP1505 ) ; final int RX10_TEMP1509 = 0 ; final boolean RX10_TEMP1510 = RX10_TEMP1508 < RX10_TEMP1509 ; if ( RX10_TEMP1510 ) { String RX10_TEMP1511 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1511 ) ; }
 final place RX10_TEMP1512 = Program . getPlaceFromDist1 ( RX10_TEMP1506 , RX10_TEMP1508 ) ; final place RX10_TEMP1514 = here ; final boolean RX10_TEMP1515 = RX10_TEMP1512 != RX10_TEMP1514 ; if ( RX10_TEMP1515 ) { String RX10_TEMP1513 = "Bad place access for array overflow" ; throw new RuntimeException ( RX10_TEMP1513 ) ; }
 Program . setRefArrayValue1int ( overflow , RX10_TEMP1508 , X10_TEMP555 ) ; break ; }
 }
 else { final Particle X10_TEMP559 = ( p ) ; final Point2 RX10_TEMP1516 = new Point2 ( pl , inLeftStaying ) ; final Dist2 RX10_TEMP1517 = rBufferL . distValue ; final Region2 RX10_TEMP1518 = RX10_TEMP1517 . dReg ; final int RX10_TEMP1519 = Program . searchPointInRegion2 ( RX10_TEMP1518 , RX10_TEMP1516 ) ; final int RX10_TEMP1520 = 0 ; final boolean RX10_TEMP1521 = RX10_TEMP1519 < RX10_TEMP1520 ; if ( RX10_TEMP1521 ) { String RX10_TEMP1522 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1522 ) ; }
 final place RX10_TEMP1523 = Program . getPlaceFromDist2 ( RX10_TEMP1517 , RX10_TEMP1519 ) ; final place RX10_TEMP1525 = here ; final boolean RX10_TEMP1526 = RX10_TEMP1523 != RX10_TEMP1525 ; if ( RX10_TEMP1526 ) { String RX10_TEMP1524 = "Bad place access for array rBufferL" ; throw new RuntimeException ( RX10_TEMP1524 ) ; }
 Program . setRefArrayValue2Particle ( rBufferL , RX10_TEMP1519 , X10_TEMP559 ) ; final int X10_TEMP560 = ( inLeftStaying ) ; final int X10_TEMP561 = 1 ; inLeftStaying = inLeftStaying + X10_TEMP561 ; }
 }
 }
 final int X10_TEMP564 = ( inLeftStaying ) ; final Point1 RX10_TEMP1527 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1528 = inLt . distValue ; final Region1 RX10_TEMP1529 = RX10_TEMP1528 . dReg ; final int RX10_TEMP1530 = Program . searchPointInRegion1 ( RX10_TEMP1529 , RX10_TEMP1527 ) ; final int RX10_TEMP1531 = 0 ; final boolean RX10_TEMP1532 = RX10_TEMP1530 < RX10_TEMP1531 ; if ( RX10_TEMP1532 ) { String RX10_TEMP1533 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1533 ) ; }
 final place RX10_TEMP1534 = Program . getPlaceFromDist1 ( RX10_TEMP1528 , RX10_TEMP1530 ) ; final place RX10_TEMP1536 = here ; final boolean RX10_TEMP1537 = RX10_TEMP1534 != RX10_TEMP1536 ; if ( RX10_TEMP1537 ) { String RX10_TEMP1535 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP1535 ) ; }
 Program . setRefArrayValue1int ( inLt , RX10_TEMP1530 , X10_TEMP564 ) ; }
 }
 public static void thread101(final T101 utmpz) {final  Region1 RX10_TEMP1552 = utmpz.RX10_TEMP1552;
final  int RX10_TEMP1550 = utmpz.RX10_TEMP1550;
final  place RX10_TEMP1546 = utmpz.RX10_TEMP1546;
final  point ( : rank==1 ) RX10_TEMP1545 = utmpz.RX10_TEMP1545;
final  intStub [ : rank==1 ] RX10_TEMP1544 = utmpz.RX10_TEMP1544;
final  intRefArray1 X10_TEMP569 = utmpz.X10_TEMP569;
final  intRefArray1 X10_TEMP568 = utmpz.X10_TEMP568;
 { final dist ( : rank==1 ) RX10_TEMP1577 = [ 0 : RX10_TEMP1550 ] -> here ; final int [ : rank==1 ] RX10_TEMP1578 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1577 ] ( point ( : rank==1 ) RX10_TEMP1553 ) { final int RX10_TEMP1554 = RX10_TEMP1553 [0] ; final Point1 X10_TEMP567 = Program . regionOrdinalPoint1 ( RX10_TEMP1552 , RX10_TEMP1554 ) ; final Dist1 RX10_TEMP1555 = X10_TEMP568 . distValue ; final Region1 RX10_TEMP1556 = RX10_TEMP1555 . dReg ; final int RX10_TEMP1557 = Program . searchPointInRegion1 ( RX10_TEMP1556 , X10_TEMP567 ) ; final int RX10_TEMP1558 = 0 ; final boolean RX10_TEMP1559 = RX10_TEMP1557 < RX10_TEMP1558 ; if ( RX10_TEMP1559 ) { String RX10_TEMP1560 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1560 ) ; }
 final place RX10_TEMP1561 = Program . getPlaceFromDist1 ( RX10_TEMP1555 , RX10_TEMP1557 ) ; final place RX10_TEMP1563 = here ; final boolean RX10_TEMP1564 = RX10_TEMP1561 != RX10_TEMP1563 ; if ( RX10_TEMP1564 ) { String RX10_TEMP1562 = "Bad place access for array X10_TEMP568" ; throw new RuntimeException ( RX10_TEMP1562 ) ; }
 final int RX10_TEMP1565 = Program . getRefArrayValue1int ( X10_TEMP568 , RX10_TEMP1557 ) ; final int X10_TEMP570 = RX10_TEMP1565 ; final Dist1 RX10_TEMP1566 = X10_TEMP569 . distValue ; final Region1 RX10_TEMP1567 = RX10_TEMP1566 . dReg ; final int RX10_TEMP1568 = Program . searchPointInRegion1 ( RX10_TEMP1567 , X10_TEMP567 ) ; final int RX10_TEMP1569 = 0 ; final boolean RX10_TEMP1570 = RX10_TEMP1568 < RX10_TEMP1569 ; if ( RX10_TEMP1570 ) { String RX10_TEMP1571 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1571 ) ; }
 final place RX10_TEMP1572 = Program . getPlaceFromDist1 ( RX10_TEMP1566 , RX10_TEMP1568 ) ; final place RX10_TEMP1574 = here ; final boolean RX10_TEMP1575 = RX10_TEMP1572 != RX10_TEMP1574 ; if ( RX10_TEMP1575 ) { String RX10_TEMP1573 = "Bad place access for array X10_TEMP569" ; throw new RuntimeException ( RX10_TEMP1573 ) ; }
 final int RX10_TEMP1576 = Program . getRefArrayValue1int ( X10_TEMP569 , RX10_TEMP1568 ) ; final int X10_TEMP571 = RX10_TEMP1576 ; final int X10_TEMP572 = X10_TEMP570 + X10_TEMP571 ; return X10_TEMP572 ; }
 ) ; final intStub RX10_TEMP1579 = new intStub ( RX10_TEMP1578 ) ; 
 final T271 utmp271 = new T271(RX10_TEMP1579, RX10_TEMP1545, RX10_TEMP1544);
 async (RX10_TEMP1546) {Program.thread271(utmp271); }
 }
 }
 public static void thread102(final T102 utmpz) {final  Region1 RX10_TEMP1598 = utmpz.RX10_TEMP1598;
final  int RX10_TEMP1596 = utmpz.RX10_TEMP1596;
final  place RX10_TEMP1592 = utmpz.RX10_TEMP1592;
final  point ( : rank==1 ) RX10_TEMP1591 = utmpz.RX10_TEMP1591;
final  intStub [ : rank==1 ] RX10_TEMP1590 = utmpz.RX10_TEMP1590;
final  intRefArray1 X10_TEMP576 = utmpz.X10_TEMP576;
final  intRefArray1 X10_TEMP575 = utmpz.X10_TEMP575;
 { final dist ( : rank==1 ) RX10_TEMP1623 = [ 0 : RX10_TEMP1596 ] -> here ; final int [ : rank==1 ] RX10_TEMP1624 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1623 ] ( point ( : rank==1 ) RX10_TEMP1599 ) { final int RX10_TEMP1600 = RX10_TEMP1599 [0] ; final Point1 X10_TEMP574 = Program . regionOrdinalPoint1 ( RX10_TEMP1598 , RX10_TEMP1600 ) ; final Dist1 RX10_TEMP1601 = X10_TEMP575 . distValue ; final Region1 RX10_TEMP1602 = RX10_TEMP1601 . dReg ; final int RX10_TEMP1603 = Program . searchPointInRegion1 ( RX10_TEMP1602 , X10_TEMP574 ) ; final int RX10_TEMP1604 = 0 ; final boolean RX10_TEMP1605 = RX10_TEMP1603 < RX10_TEMP1604 ; if ( RX10_TEMP1605 ) { String RX10_TEMP1606 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1606 ) ; }
 final place RX10_TEMP1607 = Program . getPlaceFromDist1 ( RX10_TEMP1601 , RX10_TEMP1603 ) ; final place RX10_TEMP1609 = here ; final boolean RX10_TEMP1610 = RX10_TEMP1607 != RX10_TEMP1609 ; if ( RX10_TEMP1610 ) { String RX10_TEMP1608 = "Bad place access for array X10_TEMP575" ; throw new RuntimeException ( RX10_TEMP1608 ) ; }
 final int RX10_TEMP1611 = Program . getRefArrayValue1int ( X10_TEMP575 , RX10_TEMP1603 ) ; final int X10_TEMP577 = RX10_TEMP1611 ; final Dist1 RX10_TEMP1612 = X10_TEMP576 . distValue ; final Region1 RX10_TEMP1613 = RX10_TEMP1612 . dReg ; final int RX10_TEMP1614 = Program . searchPointInRegion1 ( RX10_TEMP1613 , X10_TEMP574 ) ; final int RX10_TEMP1615 = 0 ; final boolean RX10_TEMP1616 = RX10_TEMP1614 < RX10_TEMP1615 ; if ( RX10_TEMP1616 ) { String RX10_TEMP1617 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1617 ) ; }
 final place RX10_TEMP1618 = Program . getPlaceFromDist1 ( RX10_TEMP1612 , RX10_TEMP1614 ) ; final place RX10_TEMP1620 = here ; final boolean RX10_TEMP1621 = RX10_TEMP1618 != RX10_TEMP1620 ; if ( RX10_TEMP1621 ) { String RX10_TEMP1619 = "Bad place access for array X10_TEMP576" ; throw new RuntimeException ( RX10_TEMP1619 ) ; }
 final int RX10_TEMP1622 = Program . getRefArrayValue1int ( X10_TEMP576 , RX10_TEMP1614 ) ; final int X10_TEMP578 = RX10_TEMP1622 ; final int X10_TEMP579 = X10_TEMP577 + X10_TEMP578 ; return X10_TEMP579 ; }
 ) ; final intStub RX10_TEMP1625 = new intStub ( RX10_TEMP1624 ) ; 
 final T272 utmp272 = new T272(RX10_TEMP1625, RX10_TEMP1591, RX10_TEMP1590);
 async (RX10_TEMP1592) {Program.thread272(utmp272); }
 }
 }
 public static void thread103(final T103 utmpz) {final  Region1 RX10_TEMP1644 = utmpz.RX10_TEMP1644;
final  int RX10_TEMP1642 = utmpz.RX10_TEMP1642;
final  place RX10_TEMP1638 = utmpz.RX10_TEMP1638;
final  point ( : rank==1 ) RX10_TEMP1637 = utmpz.RX10_TEMP1637;
final  intStub [ : rank==1 ] RX10_TEMP1636 = utmpz.RX10_TEMP1636;
final  intRefArray1 X10_TEMP583 = utmpz.X10_TEMP583;
final  intRefArray1 X10_TEMP582 = utmpz.X10_TEMP582;
 { final dist ( : rank==1 ) RX10_TEMP1669 = [ 0 : RX10_TEMP1642 ] -> here ; final int [ : rank==1 ] RX10_TEMP1670 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1669 ] ( point ( : rank==1 ) RX10_TEMP1645 ) { final int RX10_TEMP1646 = RX10_TEMP1645 [0] ; final Point1 X10_TEMP581 = Program . regionOrdinalPoint1 ( RX10_TEMP1644 , RX10_TEMP1646 ) ; final Dist1 RX10_TEMP1647 = X10_TEMP582 . distValue ; final Region1 RX10_TEMP1648 = RX10_TEMP1647 . dReg ; final int RX10_TEMP1649 = Program . searchPointInRegion1 ( RX10_TEMP1648 , X10_TEMP581 ) ; final int RX10_TEMP1650 = 0 ; final boolean RX10_TEMP1651 = RX10_TEMP1649 < RX10_TEMP1650 ; if ( RX10_TEMP1651 ) { String RX10_TEMP1652 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1652 ) ; }
 final place RX10_TEMP1653 = Program . getPlaceFromDist1 ( RX10_TEMP1647 , RX10_TEMP1649 ) ; final place RX10_TEMP1655 = here ; final boolean RX10_TEMP1656 = RX10_TEMP1653 != RX10_TEMP1655 ; if ( RX10_TEMP1656 ) { String RX10_TEMP1654 = "Bad place access for array X10_TEMP582" ; throw new RuntimeException ( RX10_TEMP1654 ) ; }
 final int RX10_TEMP1657 = Program . getRefArrayValue1int ( X10_TEMP582 , RX10_TEMP1649 ) ; final int X10_TEMP584 = RX10_TEMP1657 ; final Dist1 RX10_TEMP1658 = X10_TEMP583 . distValue ; final Region1 RX10_TEMP1659 = RX10_TEMP1658 . dReg ; final int RX10_TEMP1660 = Program . searchPointInRegion1 ( RX10_TEMP1659 , X10_TEMP581 ) ; final int RX10_TEMP1661 = 0 ; final boolean RX10_TEMP1662 = RX10_TEMP1660 < RX10_TEMP1661 ; if ( RX10_TEMP1662 ) { String RX10_TEMP1663 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1663 ) ; }
 final place RX10_TEMP1664 = Program . getPlaceFromDist1 ( RX10_TEMP1658 , RX10_TEMP1660 ) ; final place RX10_TEMP1666 = here ; final boolean RX10_TEMP1667 = RX10_TEMP1664 != RX10_TEMP1666 ; if ( RX10_TEMP1667 ) { String RX10_TEMP1665 = "Bad place access for array X10_TEMP583" ; throw new RuntimeException ( RX10_TEMP1665 ) ; }
 final int RX10_TEMP1668 = Program . getRefArrayValue1int ( X10_TEMP583 , RX10_TEMP1660 ) ; final int X10_TEMP585 = RX10_TEMP1668 ; final int X10_TEMP586 = X10_TEMP584 - X10_TEMP585 ; return X10_TEMP586 ; }
 ) ; final intStub RX10_TEMP1671 = new intStub ( RX10_TEMP1670 ) ; 
 final T273 utmp273 = new T273(RX10_TEMP1671, RX10_TEMP1637, RX10_TEMP1636);
 async (RX10_TEMP1638) {Program.thread273(utmp273); }
 }
 }
 public static void thread104(final T104 utmpz) {final  int RX10_TEMP1688 = utmpz.RX10_TEMP1688;
final  place RX10_TEMP1684 = utmpz.RX10_TEMP1684;
final  point ( : rank==1 ) RX10_TEMP1683 = utmpz.RX10_TEMP1683;
final  intStub [ : rank==1 ] RX10_TEMP1682 = utmpz.RX10_TEMP1682;
final  int rSize = utmpz.rSize;
 { final dist ( : rank==1 ) RX10_TEMP1690 = [ 0 : RX10_TEMP1688 ] -> here ; final int [ : rank==1 ] RX10_TEMP1691 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1690 ] ( point ( : rank==1 ) RX10_TEMP1689 ) { return rSize ; }
 ) ; final intStub RX10_TEMP1692 = new intStub ( RX10_TEMP1691 ) ; 
 final T274 utmp274 = new T274(RX10_TEMP1692, RX10_TEMP1683, RX10_TEMP1682);
 async (RX10_TEMP1684) {Program.thread274(utmp274); }
 }
 }
 public static void thread105(final T105 utmpz) {final  Region1 RX10_TEMP1711 = utmpz.RX10_TEMP1711;
final  int RX10_TEMP1709 = utmpz.RX10_TEMP1709;
final  place RX10_TEMP1705 = utmpz.RX10_TEMP1705;
final  point ( : rank==1 ) RX10_TEMP1704 = utmpz.RX10_TEMP1704;
final  intStub [ : rank==1 ] RX10_TEMP1703 = utmpz.RX10_TEMP1703;
final  intRefArray1 X10_TEMP596 = utmpz.X10_TEMP596;
final  intRefArray1 X10_TEMP595 = utmpz.X10_TEMP595;
 { final dist ( : rank==1 ) RX10_TEMP1736 = [ 0 : RX10_TEMP1709 ] -> here ; final int [ : rank==1 ] RX10_TEMP1737 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1736 ] ( point ( : rank==1 ) RX10_TEMP1712 ) { final int RX10_TEMP1713 = RX10_TEMP1712 [0] ; final Point1 X10_TEMP594 = Program . regionOrdinalPoint1 ( RX10_TEMP1711 , RX10_TEMP1713 ) ; final Dist1 RX10_TEMP1714 = X10_TEMP595 . distValue ; final Region1 RX10_TEMP1715 = RX10_TEMP1714 . dReg ; final int RX10_TEMP1716 = Program . searchPointInRegion1 ( RX10_TEMP1715 , X10_TEMP594 ) ; final int RX10_TEMP1717 = 0 ; final boolean RX10_TEMP1718 = RX10_TEMP1716 < RX10_TEMP1717 ; if ( RX10_TEMP1718 ) { String RX10_TEMP1719 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1719 ) ; }
 final place RX10_TEMP1720 = Program . getPlaceFromDist1 ( RX10_TEMP1714 , RX10_TEMP1716 ) ; final place RX10_TEMP1722 = here ; final boolean RX10_TEMP1723 = RX10_TEMP1720 != RX10_TEMP1722 ; if ( RX10_TEMP1723 ) { String RX10_TEMP1721 = "Bad place access for array X10_TEMP595" ; throw new RuntimeException ( RX10_TEMP1721 ) ; }
 final int RX10_TEMP1724 = Program . getRefArrayValue1int ( X10_TEMP595 , RX10_TEMP1716 ) ; final int X10_TEMP597 = RX10_TEMP1724 ; final Dist1 RX10_TEMP1725 = X10_TEMP596 . distValue ; final Region1 RX10_TEMP1726 = RX10_TEMP1725 . dReg ; final int RX10_TEMP1727 = Program . searchPointInRegion1 ( RX10_TEMP1726 , X10_TEMP594 ) ; final int RX10_TEMP1728 = 0 ; final boolean RX10_TEMP1729 = RX10_TEMP1727 < RX10_TEMP1728 ; if ( RX10_TEMP1729 ) { String RX10_TEMP1730 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1730 ) ; }
 final place RX10_TEMP1731 = Program . getPlaceFromDist1 ( RX10_TEMP1725 , RX10_TEMP1727 ) ; final place RX10_TEMP1733 = here ; final boolean RX10_TEMP1734 = RX10_TEMP1731 != RX10_TEMP1733 ; if ( RX10_TEMP1734 ) { String RX10_TEMP1732 = "Bad place access for array X10_TEMP596" ; throw new RuntimeException ( RX10_TEMP1732 ) ; }
 final int RX10_TEMP1735 = Program . getRefArrayValue1int ( X10_TEMP596 , RX10_TEMP1727 ) ; final int X10_TEMP598 = RX10_TEMP1735 ; final int X10_TEMP599 = X10_TEMP597 - X10_TEMP598 ; return X10_TEMP599 ; }
 ) ; final intStub RX10_TEMP1738 = new intStub ( RX10_TEMP1737 ) ; 
 final T275 utmp275 = new T275(RX10_TEMP1738, RX10_TEMP1704, RX10_TEMP1703);
 async (RX10_TEMP1705) {Program.thread275(utmp275); }
 }
 }
 public static void thread106(final T106 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 nSent = utmpz.nSent;
final  intRefArray2 holes = utmpz.holes;
final  intRefArray1 nPart = utmpz.nPart;
final  intRefArray1 inRt = utmpz.inRt;
final  intRefArray1 inLt = utmpz.inLt;
final  ParticleRefArray2 rBufferR = utmpz.rBufferR;
final  ParticleRefArray2 rBufferL = utmpz.rBufferL;
final  ParticleRefArray2 part = utmpz.part;
 { final Point1 RX10_TEMP1800 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1801 = nSent . distValue ; final Region1 RX10_TEMP1802 = RX10_TEMP1801 . dReg ; final int RX10_TEMP1803 = Program . searchPointInRegion1 ( RX10_TEMP1802 , RX10_TEMP1800 ) ; final int RX10_TEMP1804 = 0 ; final boolean RX10_TEMP1805 = RX10_TEMP1803 < RX10_TEMP1804 ; if ( RX10_TEMP1805 ) { String RX10_TEMP1806 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1806 ) ; }
 final place RX10_TEMP1807 = Program . getPlaceFromDist1 ( RX10_TEMP1801 , RX10_TEMP1803 ) ; final place RX10_TEMP1809 = here ; final boolean RX10_TEMP1810 = RX10_TEMP1807 != RX10_TEMP1809 ; if ( RX10_TEMP1810 ) { String RX10_TEMP1808 = "Bad place access for array nSent" ; throw new RuntimeException ( RX10_TEMP1808 ) ; }
 final int RX10_TEMP1811 = Program . getRefArrayValue1int ( nSent , RX10_TEMP1803 ) ; int holesTotal = ( RX10_TEMP1811 ) ; final Point1 RX10_TEMP1812 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1813 = nSent . distValue ; final Region1 RX10_TEMP1814 = RX10_TEMP1813 . dReg ; final int RX10_TEMP1815 = Program . searchPointInRegion1 ( RX10_TEMP1814 , RX10_TEMP1812 ) ; final int RX10_TEMP1816 = 0 ; final boolean RX10_TEMP1817 = RX10_TEMP1815 < RX10_TEMP1816 ; if ( RX10_TEMP1817 ) { String RX10_TEMP1818 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1818 ) ; }
 final place RX10_TEMP1819 = Program . getPlaceFromDist1 ( RX10_TEMP1813 , RX10_TEMP1815 ) ; final place RX10_TEMP1821 = here ; final boolean RX10_TEMP1822 = RX10_TEMP1819 != RX10_TEMP1821 ; if ( RX10_TEMP1822 ) { String RX10_TEMP1820 = "Bad place access for array nSent" ; throw new RuntimeException ( RX10_TEMP1820 ) ; }
 final int RX10_TEMP1823 = Program . getRefArrayValue1int ( nSent , RX10_TEMP1815 ) ; int holesLeft = ( RX10_TEMP1823 ) ; final Point1 RX10_TEMP1824 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1825 = inLt . distValue ; final Region1 RX10_TEMP1826 = RX10_TEMP1825 . dReg ; final int RX10_TEMP1827 = Program . searchPointInRegion1 ( RX10_TEMP1826 , RX10_TEMP1824 ) ; final int RX10_TEMP1828 = 0 ; final boolean RX10_TEMP1829 = RX10_TEMP1827 < RX10_TEMP1828 ; if ( RX10_TEMP1829 ) { String RX10_TEMP1830 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1830 ) ; }
 final place RX10_TEMP1831 = Program . getPlaceFromDist1 ( RX10_TEMP1825 , RX10_TEMP1827 ) ; final place RX10_TEMP1833 = here ; final boolean RX10_TEMP1834 = RX10_TEMP1831 != RX10_TEMP1833 ; if ( RX10_TEMP1834 ) { String RX10_TEMP1832 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP1832 ) ; }
 final int RX10_TEMP1835 = Program . getRefArrayValue1int ( inLt , RX10_TEMP1827 ) ; final int X10_TEMP639 = ( RX10_TEMP1835 ) ; int nMove = ( Program . X10Util_minInt ( holesLeft , X10_TEMP639 ) ) ; finish { final int X10_TEMP644 = ( 0 ) ; final int X10_TEMP642 = ( 1 ) ; final int X10_TEMP645 = ( nMove - X10_TEMP642 ) ; final Region1 X10_TEMP647 = Program . createNewRegion1R ( X10_TEMP644 , X10_TEMP645 ) ; final place X10_TEMP648 = here ; final int RX10_TEMP1840 = 1 ; int RX10_TEMP1838 = X10_TEMP647 . regSize ; RX10_TEMP1838 = RX10_TEMP1838 - RX10_TEMP1840 ; final region ( : rank==1 ) RX10_TEMP1839 = [ 0 : RX10_TEMP1838 ] ; for ( point ( : rank==1 ) RX10_TEMP1836 : RX10_TEMP1839 ) { final int RX10_TEMP1841 = RX10_TEMP1836 [0] ; final Point1 RX10_TEMP1837 = Program . regionOrdinalPoint1 ( X10_TEMP647 , RX10_TEMP1841 ) ; final int i = RX10_TEMP1837 . f0 ; 
 final T276 utmp276 = new T276(i, pl, holes, rBufferL, part);
 async (X10_TEMP648) {Program.thread276(utmp276); }
 }
 }
 final Point1 RX10_TEMP1877 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1878 = inLt . distValue ; final Region1 RX10_TEMP1879 = RX10_TEMP1878 . dReg ; final int RX10_TEMP1880 = Program . searchPointInRegion1 ( RX10_TEMP1879 , RX10_TEMP1877 ) ; final int RX10_TEMP1881 = 0 ; final boolean RX10_TEMP1882 = RX10_TEMP1880 < RX10_TEMP1881 ; if ( RX10_TEMP1882 ) { String RX10_TEMP1883 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1883 ) ; }
 final place RX10_TEMP1884 = Program . getPlaceFromDist1 ( RX10_TEMP1878 , RX10_TEMP1880 ) ; final place RX10_TEMP1886 = here ; final boolean RX10_TEMP1887 = RX10_TEMP1884 != RX10_TEMP1886 ; if ( RX10_TEMP1887 ) { String RX10_TEMP1885 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP1885 ) ; }
 final int RX10_TEMP1888 = Program . getRefArrayValue1int ( inLt , RX10_TEMP1880 ) ; final int X10_TEMP660 = ( RX10_TEMP1888 ) ; final int X10_TEMP662 = ( holesLeft - X10_TEMP660 ) ; holesLeft = ( X10_TEMP662 ) ; final int X10_TEMP663 = ( 0 ) ; final boolean X10_TEMP665 = holesLeft > X10_TEMP663 ; if ( X10_TEMP665 ) { final Point1 RX10_TEMP1889 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1890 = inRt . distValue ; final Region1 RX10_TEMP1891 = RX10_TEMP1890 . dReg ; final int RX10_TEMP1892 = Program . searchPointInRegion1 ( RX10_TEMP1891 , RX10_TEMP1889 ) ; final int RX10_TEMP1893 = 0 ; final boolean RX10_TEMP1894 = RX10_TEMP1892 < RX10_TEMP1893 ; if ( RX10_TEMP1894 ) { String RX10_TEMP1895 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1895 ) ; }
 final place RX10_TEMP1896 = Program . getPlaceFromDist1 ( RX10_TEMP1890 , RX10_TEMP1892 ) ; final place RX10_TEMP1898 = here ; final boolean RX10_TEMP1899 = RX10_TEMP1896 != RX10_TEMP1898 ; if ( RX10_TEMP1899 ) { String RX10_TEMP1897 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1897 ) ; }
 final int RX10_TEMP1900 = Program . getRefArrayValue1int ( inRt , RX10_TEMP1892 ) ; final int X10_TEMP669 = ( RX10_TEMP1900 ) ; final int X10_TEMP671 = ( Program . X10Util_minInt ( holesLeft , X10_TEMP669 ) ) ; nMove = ( X10_TEMP671 ) ; final int X10_TEMP675 = ( 0 ) ; final int X10_TEMP673 = ( 1 ) ; final int X10_TEMP676 = ( nMove - X10_TEMP673 ) ; final Region1 X10_TEMP678 = Program . createNewRegion1R ( X10_TEMP675 , X10_TEMP676 ) ; final int RX10_TEMP1905 = 1 ; int RX10_TEMP1903 = X10_TEMP678 . regSize ; RX10_TEMP1903 = RX10_TEMP1903 - RX10_TEMP1905 ; final region ( : rank==1 ) RX10_TEMP1904 = [ 0 : RX10_TEMP1903 ] ; for ( point ( : rank==1 ) RX10_TEMP1901 : RX10_TEMP1904 ) { final int RX10_TEMP1906 = RX10_TEMP1901 [0] ; final Point1 RX10_TEMP1902 = Program . regionOrdinalPoint1 ( X10_TEMP678 , RX10_TEMP1906 ) ; final int i = RX10_TEMP1902 . f0 ; final Point1 RX10_TEMP1907 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1908 = inLt . distValue ; final Region1 RX10_TEMP1909 = RX10_TEMP1908 . dReg ; final int RX10_TEMP1910 = Program . searchPointInRegion1 ( RX10_TEMP1909 , RX10_TEMP1907 ) ; final int RX10_TEMP1911 = 0 ; final boolean RX10_TEMP1912 = RX10_TEMP1910 < RX10_TEMP1911 ; if ( RX10_TEMP1912 ) { String RX10_TEMP1913 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1913 ) ; }
 final place RX10_TEMP1914 = Program . getPlaceFromDist1 ( RX10_TEMP1908 , RX10_TEMP1910 ) ; final place RX10_TEMP1916 = here ; final boolean RX10_TEMP1917 = RX10_TEMP1914 != RX10_TEMP1916 ; if ( RX10_TEMP1917 ) { String RX10_TEMP1915 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP1915 ) ; }
 final int RX10_TEMP1918 = Program . getRefArrayValue1int ( inLt , RX10_TEMP1910 ) ; final int X10_TEMP682 = ( RX10_TEMP1918 ) ; final int X10_TEMP684 = ( i + X10_TEMP682 ) ; final Point2 RX10_TEMP1919 = new Point2 ( pl , X10_TEMP684 ) ; final Dist2 RX10_TEMP1920 = holes . distValue ; final Region2 RX10_TEMP1921 = RX10_TEMP1920 . dReg ; final int RX10_TEMP1922 = Program . searchPointInRegion2 ( RX10_TEMP1921 , RX10_TEMP1919 ) ; final int RX10_TEMP1923 = 0 ; final boolean RX10_TEMP1924 = RX10_TEMP1922 < RX10_TEMP1923 ; if ( RX10_TEMP1924 ) { String RX10_TEMP1925 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1925 ) ; }
 final place RX10_TEMP1926 = Program . getPlaceFromDist2 ( RX10_TEMP1920 , RX10_TEMP1922 ) ; final place RX10_TEMP1928 = here ; final boolean RX10_TEMP1929 = RX10_TEMP1926 != RX10_TEMP1928 ; if ( RX10_TEMP1929 ) { String RX10_TEMP1927 = "Bad place access for array holes" ; throw new RuntimeException ( RX10_TEMP1927 ) ; }
 final int RX10_TEMP1930 = Program . getRefArrayValue2int ( holes , RX10_TEMP1922 ) ; final int X10_TEMP686 = ( RX10_TEMP1930 ) ; final Point2 RX10_TEMP1931 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1932 = rBufferR . distValue ; final Region2 RX10_TEMP1933 = RX10_TEMP1932 . dReg ; final int RX10_TEMP1934 = Program . searchPointInRegion2 ( RX10_TEMP1933 , RX10_TEMP1931 ) ; final int RX10_TEMP1935 = 0 ; final boolean RX10_TEMP1936 = RX10_TEMP1934 < RX10_TEMP1935 ; if ( RX10_TEMP1936 ) { String RX10_TEMP1937 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1937 ) ; }
 final place RX10_TEMP1938 = Program . getPlaceFromDist2 ( RX10_TEMP1932 , RX10_TEMP1934 ) ; final place RX10_TEMP1940 = here ; final boolean RX10_TEMP1941 = RX10_TEMP1938 != RX10_TEMP1940 ; if ( RX10_TEMP1941 ) { String RX10_TEMP1939 = "Bad place access for array rBufferR" ; throw new RuntimeException ( RX10_TEMP1939 ) ; }
 final Particle RX10_TEMP1942 = Program . getRefArrayValue2Particle ( rBufferR , RX10_TEMP1934 ) ; final Particle X10_TEMP690 = ( RX10_TEMP1942 ) ; final Particle X10_TEMP691 = ( X10_TEMP690 ) ; final Point2 RX10_TEMP1943 = new Point2 ( pl , X10_TEMP686 ) ; final Dist2 RX10_TEMP1944 = part . distValue ; final Region2 RX10_TEMP1945 = RX10_TEMP1944 . dReg ; final int RX10_TEMP1946 = Program . searchPointInRegion2 ( RX10_TEMP1945 , RX10_TEMP1943 ) ; final int RX10_TEMP1947 = 0 ; final boolean RX10_TEMP1948 = RX10_TEMP1946 < RX10_TEMP1947 ; if ( RX10_TEMP1948 ) { String RX10_TEMP1949 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1949 ) ; }
 final place RX10_TEMP1950 = Program . getPlaceFromDist2 ( RX10_TEMP1944 , RX10_TEMP1946 ) ; final place RX10_TEMP1952 = here ; final boolean RX10_TEMP1953 = RX10_TEMP1950 != RX10_TEMP1952 ; if ( RX10_TEMP1953 ) { String RX10_TEMP1951 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP1951 ) ; }
 Program . setRefArrayValue2Particle ( part , RX10_TEMP1946 , X10_TEMP691 ) ; }
 }
 else { final int X10_TEMP692 = 0 ; final int X10_TEMP694 = ( X10_TEMP692 - holesLeft ) ; nMove = ( X10_TEMP694 ) ; final int X10_TEMP698 = ( 0 ) ; final int X10_TEMP696 = ( 1 ) ; final int X10_TEMP699 = ( nMove - X10_TEMP696 ) ; final Region1 X10_TEMP701 = Program . createNewRegion1R ( X10_TEMP698 , X10_TEMP699 ) ; final int RX10_TEMP1958 = 1 ; int RX10_TEMP1956 = X10_TEMP701 . regSize ; RX10_TEMP1956 = RX10_TEMP1956 - RX10_TEMP1958 ; final region ( : rank==1 ) RX10_TEMP1957 = [ 0 : RX10_TEMP1956 ] ; for ( point ( : rank==1 ) RX10_TEMP1954 : RX10_TEMP1957 ) { final int RX10_TEMP1959 = RX10_TEMP1954 [0] ; final Point1 RX10_TEMP1955 = Program . regionOrdinalPoint1 ( X10_TEMP701 , RX10_TEMP1959 ) ; final int i = RX10_TEMP1955 . f0 ; final Point1 RX10_TEMP1960 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1961 = nPart . distValue ; final Region1 RX10_TEMP1962 = RX10_TEMP1961 . dReg ; final int RX10_TEMP1963 = Program . searchPointInRegion1 ( RX10_TEMP1962 , RX10_TEMP1960 ) ; final int RX10_TEMP1964 = 0 ; final boolean RX10_TEMP1965 = RX10_TEMP1963 < RX10_TEMP1964 ; if ( RX10_TEMP1965 ) { String RX10_TEMP1966 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1966 ) ; }
 final place RX10_TEMP1967 = Program . getPlaceFromDist1 ( RX10_TEMP1961 , RX10_TEMP1963 ) ; final place RX10_TEMP1969 = here ; final boolean RX10_TEMP1970 = RX10_TEMP1967 != RX10_TEMP1969 ; if ( RX10_TEMP1970 ) { String RX10_TEMP1968 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP1968 ) ; }
 final int RX10_TEMP1971 = Program . getRefArrayValue1int ( nPart , RX10_TEMP1963 ) ; final int X10_TEMP704 = ( RX10_TEMP1971 ) ; final int X10_TEMP706 = ( i + X10_TEMP704 ) ; final int X10_TEMP709 = ( i + holesTotal ) ; final Point2 RX10_TEMP1972 = new Point2 ( pl , X10_TEMP709 ) ; final Dist2 RX10_TEMP1973 = rBufferL . distValue ; final Region2 RX10_TEMP1974 = RX10_TEMP1973 . dReg ; final int RX10_TEMP1975 = Program . searchPointInRegion2 ( RX10_TEMP1974 , RX10_TEMP1972 ) ; final int RX10_TEMP1976 = 0 ; final boolean RX10_TEMP1977 = RX10_TEMP1975 < RX10_TEMP1976 ; if ( RX10_TEMP1977 ) { String RX10_TEMP1978 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1978 ) ; }
 final place RX10_TEMP1979 = Program . getPlaceFromDist2 ( RX10_TEMP1973 , RX10_TEMP1975 ) ; final place RX10_TEMP1981 = here ; final boolean RX10_TEMP1982 = RX10_TEMP1979 != RX10_TEMP1981 ; if ( RX10_TEMP1982 ) { String RX10_TEMP1980 = "Bad place access for array rBufferL" ; throw new RuntimeException ( RX10_TEMP1980 ) ; }
 final Particle RX10_TEMP1983 = Program . getRefArrayValue2Particle ( rBufferL , RX10_TEMP1975 ) ; final Particle X10_TEMP711 = ( RX10_TEMP1983 ) ; final Particle X10_TEMP712 = ( X10_TEMP711 ) ; final Point2 RX10_TEMP1984 = new Point2 ( pl , X10_TEMP706 ) ; final Dist2 RX10_TEMP1985 = part . distValue ; final Region2 RX10_TEMP1986 = RX10_TEMP1985 . dReg ; final int RX10_TEMP1987 = Program . searchPointInRegion2 ( RX10_TEMP1986 , RX10_TEMP1984 ) ; final int RX10_TEMP1988 = 0 ; final boolean RX10_TEMP1989 = RX10_TEMP1987 < RX10_TEMP1988 ; if ( RX10_TEMP1989 ) { String RX10_TEMP1990 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1990 ) ; }
 final place RX10_TEMP1991 = Program . getPlaceFromDist2 ( RX10_TEMP1985 , RX10_TEMP1987 ) ; final place RX10_TEMP1993 = here ; final boolean RX10_TEMP1994 = RX10_TEMP1991 != RX10_TEMP1993 ; if ( RX10_TEMP1994 ) { String RX10_TEMP1992 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP1992 ) ; }
 Program . setRefArrayValue2Particle ( part , RX10_TEMP1987 , X10_TEMP712 ) ; }
 }
 final int X10_TEMP713 = ( 0 ) ; final boolean X10_TEMP715 = holesLeft <= X10_TEMP713 ; if ( X10_TEMP715 ) { final Point1 RX10_TEMP1995 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1996 = nPart . distValue ; final Region1 RX10_TEMP1997 = RX10_TEMP1996 . dReg ; final int RX10_TEMP1998 = Program . searchPointInRegion1 ( RX10_TEMP1997 , RX10_TEMP1995 ) ; final int RX10_TEMP1999 = 0 ; final boolean RX10_TEMP2000 = RX10_TEMP1998 < RX10_TEMP1999 ; if ( RX10_TEMP2000 ) { String RX10_TEMP2001 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2001 ) ; }
 final place RX10_TEMP2002 = Program . getPlaceFromDist1 ( RX10_TEMP1996 , RX10_TEMP1998 ) ; final place RX10_TEMP2004 = here ; final boolean RX10_TEMP2005 = RX10_TEMP2002 != RX10_TEMP2004 ; if ( RX10_TEMP2005 ) { String RX10_TEMP2003 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2003 ) ; }
 final int RX10_TEMP2006 = Program . getRefArrayValue1int ( nPart , RX10_TEMP1998 ) ; final int X10_TEMP718 = ( RX10_TEMP2006 ) ; final int X10_TEMP720 = ( X10_TEMP718 - holesLeft ) ; final int X10_TEMP721 = ( X10_TEMP720 ) ; final Point1 RX10_TEMP2007 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2008 = nPart . distValue ; final Region1 RX10_TEMP2009 = RX10_TEMP2008 . dReg ; final int RX10_TEMP2010 = Program . searchPointInRegion1 ( RX10_TEMP2009 , RX10_TEMP2007 ) ; final int RX10_TEMP2011 = 0 ; final boolean RX10_TEMP2012 = RX10_TEMP2010 < RX10_TEMP2011 ; if ( RX10_TEMP2012 ) { String RX10_TEMP2013 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2013 ) ; }
 final place RX10_TEMP2014 = Program . getPlaceFromDist1 ( RX10_TEMP2008 , RX10_TEMP2010 ) ; final place RX10_TEMP2016 = here ; final boolean RX10_TEMP2017 = RX10_TEMP2014 != RX10_TEMP2016 ; if ( RX10_TEMP2017 ) { String RX10_TEMP2015 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2015 ) ; }
 Program . setRefArrayValue1int ( nPart , RX10_TEMP2010 , X10_TEMP721 ) ; final Point1 RX10_TEMP2018 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2019 = inLt . distValue ; final Region1 RX10_TEMP2020 = RX10_TEMP2019 . dReg ; final int RX10_TEMP2021 = Program . searchPointInRegion1 ( RX10_TEMP2020 , RX10_TEMP2018 ) ; final int RX10_TEMP2022 = 0 ; final boolean RX10_TEMP2023 = RX10_TEMP2021 < RX10_TEMP2022 ; if ( RX10_TEMP2023 ) { String RX10_TEMP2024 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2024 ) ; }
 final place RX10_TEMP2025 = Program . getPlaceFromDist1 ( RX10_TEMP2019 , RX10_TEMP2021 ) ; final place RX10_TEMP2027 = here ; final boolean RX10_TEMP2028 = RX10_TEMP2025 != RX10_TEMP2027 ; if ( RX10_TEMP2028 ) { String RX10_TEMP2026 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP2026 ) ; }
 final int RX10_TEMP2029 = Program . getRefArrayValue1int ( inLt , RX10_TEMP2021 ) ; final int X10_TEMP724 = ( RX10_TEMP2029 ) ; holesTotal = ( X10_TEMP724 ) ; }
 final Point1 RX10_TEMP2030 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2031 = inLt . distValue ; final Region1 RX10_TEMP2032 = RX10_TEMP2031 . dReg ; final int RX10_TEMP2033 = Program . searchPointInRegion1 ( RX10_TEMP2032 , RX10_TEMP2030 ) ; final int RX10_TEMP2034 = 0 ; final boolean RX10_TEMP2035 = RX10_TEMP2033 < RX10_TEMP2034 ; if ( RX10_TEMP2035 ) { String RX10_TEMP2036 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2036 ) ; }
 final place RX10_TEMP2037 = Program . getPlaceFromDist1 ( RX10_TEMP2031 , RX10_TEMP2033 ) ; final place RX10_TEMP2039 = here ; final boolean RX10_TEMP2040 = RX10_TEMP2037 != RX10_TEMP2039 ; if ( RX10_TEMP2040 ) { String RX10_TEMP2038 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP2038 ) ; }
 final int RX10_TEMP2041 = Program . getRefArrayValue1int ( inLt , RX10_TEMP2033 ) ; final int X10_TEMP727 = ( RX10_TEMP2041 ) ; final Point1 RX10_TEMP2042 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2043 = inRt . distValue ; final Region1 RX10_TEMP2044 = RX10_TEMP2043 . dReg ; final int RX10_TEMP2045 = Program . searchPointInRegion1 ( RX10_TEMP2044 , RX10_TEMP2042 ) ; final int RX10_TEMP2046 = 0 ; final boolean RX10_TEMP2047 = RX10_TEMP2045 < RX10_TEMP2046 ; if ( RX10_TEMP2047 ) { String RX10_TEMP2048 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2048 ) ; }
 final place RX10_TEMP2049 = Program . getPlaceFromDist1 ( RX10_TEMP2043 , RX10_TEMP2045 ) ; final place RX10_TEMP2051 = here ; final boolean RX10_TEMP2052 = RX10_TEMP2049 != RX10_TEMP2051 ; if ( RX10_TEMP2052 ) { String RX10_TEMP2050 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2050 ) ; }
 final int RX10_TEMP2053 = Program . getRefArrayValue1int ( inRt , RX10_TEMP2045 ) ; final int X10_TEMP728 = ( RX10_TEMP2053 ) ; final int X10_TEMP730 = ( X10_TEMP727 + X10_TEMP728 ) ; final int X10_TEMP732 = ( holesTotal - X10_TEMP730 ) ; holesLeft = ( X10_TEMP732 ) ; final int X10_TEMP733 = ( 0 ) ; final boolean X10_TEMP735 = holesLeft > X10_TEMP733 ; if ( X10_TEMP735 ) { final Point1 RX10_TEMP2054 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2055 = inLt . distValue ; final Region1 RX10_TEMP2056 = RX10_TEMP2055 . dReg ; final int RX10_TEMP2057 = Program . searchPointInRegion1 ( RX10_TEMP2056 , RX10_TEMP2054 ) ; final int RX10_TEMP2058 = 0 ; final boolean RX10_TEMP2059 = RX10_TEMP2057 < RX10_TEMP2058 ; if ( RX10_TEMP2059 ) { String RX10_TEMP2060 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2060 ) ; }
 final place RX10_TEMP2061 = Program . getPlaceFromDist1 ( RX10_TEMP2055 , RX10_TEMP2057 ) ; final place RX10_TEMP2063 = here ; final boolean RX10_TEMP2064 = RX10_TEMP2061 != RX10_TEMP2063 ; if ( RX10_TEMP2064 ) { String RX10_TEMP2062 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP2062 ) ; }
 final int RX10_TEMP2065 = Program . getRefArrayValue1int ( inLt , RX10_TEMP2057 ) ; final int X10_TEMP738 = ( RX10_TEMP2065 ) ; final Point1 RX10_TEMP2066 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2067 = inRt . distValue ; final Region1 RX10_TEMP2068 = RX10_TEMP2067 . dReg ; final int RX10_TEMP2069 = Program . searchPointInRegion1 ( RX10_TEMP2068 , RX10_TEMP2066 ) ; final int RX10_TEMP2070 = 0 ; final boolean RX10_TEMP2071 = RX10_TEMP2069 < RX10_TEMP2070 ; if ( RX10_TEMP2071 ) { String RX10_TEMP2072 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2072 ) ; }
 final place RX10_TEMP2073 = Program . getPlaceFromDist1 ( RX10_TEMP2067 , RX10_TEMP2069 ) ; final place RX10_TEMP2075 = here ; final boolean RX10_TEMP2076 = RX10_TEMP2073 != RX10_TEMP2075 ; if ( RX10_TEMP2076 ) { String RX10_TEMP2074 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2074 ) ; }
 final int RX10_TEMP2077 = Program . getRefArrayValue1int ( inRt , RX10_TEMP2069 ) ; final int X10_TEMP739 = ( RX10_TEMP2077 ) ; final int X10_TEMP741 = ( X10_TEMP738 + X10_TEMP739 ) ; holesTotal = ( X10_TEMP741 ) ; final int X10_TEMP744 = ( holesLeft ) ; final Point1 RX10_TEMP2078 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2079 = inRt . distValue ; final Region1 RX10_TEMP2080 = RX10_TEMP2079 . dReg ; final int RX10_TEMP2081 = Program . searchPointInRegion1 ( RX10_TEMP2080 , RX10_TEMP2078 ) ; final int RX10_TEMP2082 = 0 ; final boolean RX10_TEMP2083 = RX10_TEMP2081 < RX10_TEMP2082 ; if ( RX10_TEMP2083 ) { String RX10_TEMP2084 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2084 ) ; }
 final place RX10_TEMP2085 = Program . getPlaceFromDist1 ( RX10_TEMP2079 , RX10_TEMP2081 ) ; final place RX10_TEMP2087 = here ; final boolean RX10_TEMP2088 = RX10_TEMP2085 != RX10_TEMP2087 ; if ( RX10_TEMP2088 ) { String RX10_TEMP2086 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2086 ) ; }
 Program . setRefArrayValue1int ( inRt , RX10_TEMP2081 , X10_TEMP744 ) ; }
 else { final Point1 RX10_TEMP2089 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2090 = inLt . distValue ; final Region1 RX10_TEMP2091 = RX10_TEMP2090 . dReg ; final int RX10_TEMP2092 = Program . searchPointInRegion1 ( RX10_TEMP2091 , RX10_TEMP2089 ) ; final int RX10_TEMP2093 = 0 ; final boolean RX10_TEMP2094 = RX10_TEMP2092 < RX10_TEMP2093 ; if ( RX10_TEMP2094 ) { String RX10_TEMP2095 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2095 ) ; }
 final place RX10_TEMP2096 = Program . getPlaceFromDist1 ( RX10_TEMP2090 , RX10_TEMP2092 ) ; final place RX10_TEMP2098 = here ; final boolean RX10_TEMP2099 = RX10_TEMP2096 != RX10_TEMP2098 ; if ( RX10_TEMP2099 ) { String RX10_TEMP2097 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP2097 ) ; }
 final int RX10_TEMP2100 = Program . getRefArrayValue1int ( inLt , RX10_TEMP2092 ) ; final int X10_TEMP746 = ( RX10_TEMP2100 ) ; final int X10_TEMP748 = ( holesTotal - X10_TEMP746 ) ; holesTotal = ( X10_TEMP748 ) ; final int X10_TEMP750 = 0 ; final int X10_TEMP752 = ( X10_TEMP750 - holesLeft ) ; final int X10_TEMP753 = ( X10_TEMP752 ) ; final Point1 RX10_TEMP2101 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2102 = inRt . distValue ; final Region1 RX10_TEMP2103 = RX10_TEMP2102 . dReg ; final int RX10_TEMP2104 = Program . searchPointInRegion1 ( RX10_TEMP2103 , RX10_TEMP2101 ) ; final int RX10_TEMP2105 = 0 ; final boolean RX10_TEMP2106 = RX10_TEMP2104 < RX10_TEMP2105 ; if ( RX10_TEMP2106 ) { String RX10_TEMP2107 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2107 ) ; }
 final place RX10_TEMP2108 = Program . getPlaceFromDist1 ( RX10_TEMP2102 , RX10_TEMP2104 ) ; final place RX10_TEMP2110 = here ; final boolean RX10_TEMP2111 = RX10_TEMP2108 != RX10_TEMP2110 ; if ( RX10_TEMP2111 ) { String RX10_TEMP2109 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2109 ) ; }
 Program . setRefArrayValue1int ( inRt , RX10_TEMP2104 , X10_TEMP753 ) ; }
 final int X10_TEMP759 = ( 0 ) ; final Point1 RX10_TEMP2112 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2113 = inRt . distValue ; final Region1 RX10_TEMP2114 = RX10_TEMP2113 . dReg ; final int RX10_TEMP2115 = Program . searchPointInRegion1 ( RX10_TEMP2114 , RX10_TEMP2112 ) ; final int RX10_TEMP2116 = 0 ; final boolean RX10_TEMP2117 = RX10_TEMP2115 < RX10_TEMP2116 ; if ( RX10_TEMP2117 ) { String RX10_TEMP2118 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2118 ) ; }
 final place RX10_TEMP2119 = Program . getPlaceFromDist1 ( RX10_TEMP2113 , RX10_TEMP2115 ) ; final place RX10_TEMP2121 = here ; final boolean RX10_TEMP2122 = RX10_TEMP2119 != RX10_TEMP2121 ; if ( RX10_TEMP2122 ) { String RX10_TEMP2120 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2120 ) ; }
 final int RX10_TEMP2123 = Program . getRefArrayValue1int ( inRt , RX10_TEMP2115 ) ; final int X10_TEMP756 = ( RX10_TEMP2123 ) ; final int X10_TEMP757 = ( 1 ) ; final int X10_TEMP760 = ( X10_TEMP756 - X10_TEMP757 ) ; final Region1 X10_TEMP762 = Program . createNewRegion1R ( X10_TEMP759 , X10_TEMP760 ) ; final int RX10_TEMP2128 = 1 ; int RX10_TEMP2126 = X10_TEMP762 . regSize ; RX10_TEMP2126 = RX10_TEMP2126 - RX10_TEMP2128 ; final region ( : rank==1 ) RX10_TEMP2127 = [ 0 : RX10_TEMP2126 ] ; for ( point ( : rank==1 ) RX10_TEMP2124 : RX10_TEMP2127 ) { final int RX10_TEMP2129 = RX10_TEMP2124 [0] ; final Point1 RX10_TEMP2125 = Program . regionOrdinalPoint1 ( X10_TEMP762 , RX10_TEMP2129 ) ; final int i = RX10_TEMP2125 . f0 ; final int X10_TEMP763 = ( 0 ) ; final boolean X10_TEMP765 = holesLeft > X10_TEMP763 ; if ( X10_TEMP765 ) { final Point1 RX10_TEMP2130 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2131 = nPart . distValue ; final Region1 RX10_TEMP2132 = RX10_TEMP2131 . dReg ; final int RX10_TEMP2133 = Program . searchPointInRegion1 ( RX10_TEMP2132 , RX10_TEMP2130 ) ; final int RX10_TEMP2134 = 0 ; final boolean RX10_TEMP2135 = RX10_TEMP2133 < RX10_TEMP2134 ; if ( RX10_TEMP2135 ) { String RX10_TEMP2136 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2136 ) ; }
 final place RX10_TEMP2137 = Program . getPlaceFromDist1 ( RX10_TEMP2131 , RX10_TEMP2133 ) ; final place RX10_TEMP2139 = here ; final boolean RX10_TEMP2140 = RX10_TEMP2137 != RX10_TEMP2139 ; if ( RX10_TEMP2140 ) { String RX10_TEMP2138 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2138 ) ; }
 final int RX10_TEMP2141 = Program . getRefArrayValue1int ( nPart , RX10_TEMP2133 ) ; final int X10_TEMP767 = ( RX10_TEMP2141 ) ; final int X10_TEMP768 = ( X10_TEMP767 - i ) ; final int X10_TEMP769 = ( 1 ) ; final int i1 = ( X10_TEMP768 - X10_TEMP769 ) ; final int X10_TEMP771 = ( holesTotal + holesLeft ) ; final int X10_TEMP772 = ( X10_TEMP771 - i ) ; final int X10_TEMP773 = ( 1 ) ; final int i2 = ( X10_TEMP772 - X10_TEMP773 ) ; final Point2 RX10_TEMP2142 = new Point2 ( pl , i2 ) ; final Dist2 RX10_TEMP2143 = holes . distValue ; final Region2 RX10_TEMP2144 = RX10_TEMP2143 . dReg ; final int RX10_TEMP2145 = Program . searchPointInRegion2 ( RX10_TEMP2144 , RX10_TEMP2142 ) ; final int RX10_TEMP2146 = 0 ; final boolean RX10_TEMP2147 = RX10_TEMP2145 < RX10_TEMP2146 ; if ( RX10_TEMP2147 ) { String RX10_TEMP2148 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2148 ) ; }
 final place RX10_TEMP2149 = Program . getPlaceFromDist2 ( RX10_TEMP2143 , RX10_TEMP2145 ) ; final place RX10_TEMP2151 = here ; final boolean RX10_TEMP2152 = RX10_TEMP2149 != RX10_TEMP2151 ; if ( RX10_TEMP2152 ) { String RX10_TEMP2150 = "Bad place access for array holes" ; throw new RuntimeException ( RX10_TEMP2150 ) ; }
 final int RX10_TEMP2153 = Program . getRefArrayValue2int ( holes , RX10_TEMP2145 ) ; final int X10_TEMP777 = ( RX10_TEMP2153 ) ; final boolean X10_TEMP779 = i1 > X10_TEMP777 ; if ( X10_TEMP779 ) { final Point2 RX10_TEMP2154 = new Point2 ( pl , i2 ) ; final Dist2 RX10_TEMP2155 = holes . distValue ; final Region2 RX10_TEMP2156 = RX10_TEMP2155 . dReg ; final int RX10_TEMP2157 = Program . searchPointInRegion2 ( RX10_TEMP2156 , RX10_TEMP2154 ) ; final int RX10_TEMP2158 = 0 ; final boolean RX10_TEMP2159 = RX10_TEMP2157 < RX10_TEMP2158 ; if ( RX10_TEMP2159 ) { String RX10_TEMP2160 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2160 ) ; }
 final place RX10_TEMP2161 = Program . getPlaceFromDist2 ( RX10_TEMP2155 , RX10_TEMP2157 ) ; final place RX10_TEMP2163 = here ; final boolean RX10_TEMP2164 = RX10_TEMP2161 != RX10_TEMP2163 ; if ( RX10_TEMP2164 ) { String RX10_TEMP2162 = "Bad place access for array holes" ; throw new RuntimeException ( RX10_TEMP2162 ) ; }
 final int RX10_TEMP2165 = Program . getRefArrayValue2int ( holes , RX10_TEMP2157 ) ; final int X10_TEMP784 = ( RX10_TEMP2165 ) ; final Point2 RX10_TEMP2166 = new Point2 ( pl , i1 ) ; final Dist2 RX10_TEMP2167 = part . distValue ; final Region2 RX10_TEMP2168 = RX10_TEMP2167 . dReg ; final int RX10_TEMP2169 = Program . searchPointInRegion2 ( RX10_TEMP2168 , RX10_TEMP2166 ) ; final int RX10_TEMP2170 = 0 ; final boolean RX10_TEMP2171 = RX10_TEMP2169 < RX10_TEMP2170 ; if ( RX10_TEMP2171 ) { String RX10_TEMP2172 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2172 ) ; }
 final place RX10_TEMP2173 = Program . getPlaceFromDist2 ( RX10_TEMP2167 , RX10_TEMP2169 ) ; final place RX10_TEMP2175 = here ; final boolean RX10_TEMP2176 = RX10_TEMP2173 != RX10_TEMP2175 ; if ( RX10_TEMP2176 ) { String RX10_TEMP2174 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP2174 ) ; }
 final Particle RX10_TEMP2177 = Program . getRefArrayValue2Particle ( part , RX10_TEMP2169 ) ; final Particle X10_TEMP788 = ( RX10_TEMP2177 ) ; final Particle X10_TEMP789 = ( X10_TEMP788 ) ; final Point2 RX10_TEMP2178 = new Point2 ( pl , X10_TEMP784 ) ; final Dist2 RX10_TEMP2179 = part . distValue ; final Region2 RX10_TEMP2180 = RX10_TEMP2179 . dReg ; final int RX10_TEMP2181 = Program . searchPointInRegion2 ( RX10_TEMP2180 , RX10_TEMP2178 ) ; final int RX10_TEMP2182 = 0 ; final boolean RX10_TEMP2183 = RX10_TEMP2181 < RX10_TEMP2182 ; if ( RX10_TEMP2183 ) { String RX10_TEMP2184 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2184 ) ; }
 final place RX10_TEMP2185 = Program . getPlaceFromDist2 ( RX10_TEMP2179 , RX10_TEMP2181 ) ; final place RX10_TEMP2187 = here ; final boolean RX10_TEMP2188 = RX10_TEMP2185 != RX10_TEMP2187 ; if ( RX10_TEMP2188 ) { String RX10_TEMP2186 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP2186 ) ; }
 Program . setRefArrayValue2Particle ( part , RX10_TEMP2181 , X10_TEMP789 ) ; }
 }
 else { final Point1 RX10_TEMP2189 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2190 = nPart . distValue ; final Region1 RX10_TEMP2191 = RX10_TEMP2190 . dReg ; final int RX10_TEMP2192 = Program . searchPointInRegion1 ( RX10_TEMP2191 , RX10_TEMP2189 ) ; final int RX10_TEMP2193 = 0 ; final boolean RX10_TEMP2194 = RX10_TEMP2192 < RX10_TEMP2193 ; if ( RX10_TEMP2194 ) { String RX10_TEMP2195 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2195 ) ; }
 final place RX10_TEMP2196 = Program . getPlaceFromDist1 ( RX10_TEMP2190 , RX10_TEMP2192 ) ; final place RX10_TEMP2198 = here ; final boolean RX10_TEMP2199 = RX10_TEMP2196 != RX10_TEMP2198 ; if ( RX10_TEMP2199 ) { String RX10_TEMP2197 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2197 ) ; }
 final int RX10_TEMP2200 = Program . getRefArrayValue1int ( nPart , RX10_TEMP2192 ) ; final int X10_TEMP792 = ( RX10_TEMP2200 ) ; final int X10_TEMP794 = ( i + X10_TEMP792 ) ; final int X10_TEMP797 = ( i + holesTotal ) ; final Point2 RX10_TEMP2201 = new Point2 ( pl , X10_TEMP797 ) ; final Dist2 RX10_TEMP2202 = rBufferR . distValue ; final Region2 RX10_TEMP2203 = RX10_TEMP2202 . dReg ; final int RX10_TEMP2204 = Program . searchPointInRegion2 ( RX10_TEMP2203 , RX10_TEMP2201 ) ; final int RX10_TEMP2205 = 0 ; final boolean RX10_TEMP2206 = RX10_TEMP2204 < RX10_TEMP2205 ; if ( RX10_TEMP2206 ) { String RX10_TEMP2207 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2207 ) ; }
 final place RX10_TEMP2208 = Program . getPlaceFromDist2 ( RX10_TEMP2202 , RX10_TEMP2204 ) ; final place RX10_TEMP2210 = here ; final boolean RX10_TEMP2211 = RX10_TEMP2208 != RX10_TEMP2210 ; if ( RX10_TEMP2211 ) { String RX10_TEMP2209 = "Bad place access for array rBufferR" ; throw new RuntimeException ( RX10_TEMP2209 ) ; }
 final Particle RX10_TEMP2212 = Program . getRefArrayValue2Particle ( rBufferR , RX10_TEMP2204 ) ; final Particle X10_TEMP799 = ( RX10_TEMP2212 ) ; final Particle X10_TEMP800 = ( X10_TEMP799 ) ; final Point2 RX10_TEMP2213 = new Point2 ( pl , X10_TEMP794 ) ; final Dist2 RX10_TEMP2214 = part . distValue ; final Region2 RX10_TEMP2215 = RX10_TEMP2214 . dReg ; final int RX10_TEMP2216 = Program . searchPointInRegion2 ( RX10_TEMP2215 , RX10_TEMP2213 ) ; final int RX10_TEMP2217 = 0 ; final boolean RX10_TEMP2218 = RX10_TEMP2216 < RX10_TEMP2217 ; if ( RX10_TEMP2218 ) { String RX10_TEMP2219 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2219 ) ; }
 final place RX10_TEMP2220 = Program . getPlaceFromDist2 ( RX10_TEMP2214 , RX10_TEMP2216 ) ; final place RX10_TEMP2222 = here ; final boolean RX10_TEMP2223 = RX10_TEMP2220 != RX10_TEMP2222 ; if ( RX10_TEMP2223 ) { String RX10_TEMP2221 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP2221 ) ; }
 Program . setRefArrayValue2Particle ( part , RX10_TEMP2216 , X10_TEMP800 ) ; }
 }
 final int X10_TEMP801 = ( 0 ) ; final boolean X10_TEMP803 = holesLeft > X10_TEMP801 ; if ( X10_TEMP803 ) { final Point1 RX10_TEMP2224 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2225 = nPart . distValue ; final Region1 RX10_TEMP2226 = RX10_TEMP2225 . dReg ; final int RX10_TEMP2227 = Program . searchPointInRegion1 ( RX10_TEMP2226 , RX10_TEMP2224 ) ; final int RX10_TEMP2228 = 0 ; final boolean RX10_TEMP2229 = RX10_TEMP2227 < RX10_TEMP2228 ; if ( RX10_TEMP2229 ) { String RX10_TEMP2230 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2230 ) ; }
 final place RX10_TEMP2231 = Program . getPlaceFromDist1 ( RX10_TEMP2225 , RX10_TEMP2227 ) ; final place RX10_TEMP2233 = here ; final boolean RX10_TEMP2234 = RX10_TEMP2231 != RX10_TEMP2233 ; if ( RX10_TEMP2234 ) { String RX10_TEMP2232 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2232 ) ; }
 final int RX10_TEMP2235 = Program . getRefArrayValue1int ( nPart , RX10_TEMP2227 ) ; final int X10_TEMP807 = ( RX10_TEMP2235 ) ; final Point1 RX10_TEMP2236 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2237 = inRt . distValue ; final Region1 RX10_TEMP2238 = RX10_TEMP2237 . dReg ; final int RX10_TEMP2239 = Program . searchPointInRegion1 ( RX10_TEMP2238 , RX10_TEMP2236 ) ; final int RX10_TEMP2240 = 0 ; final boolean RX10_TEMP2241 = RX10_TEMP2239 < RX10_TEMP2240 ; if ( RX10_TEMP2241 ) { String RX10_TEMP2242 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2242 ) ; }
 final place RX10_TEMP2243 = Program . getPlaceFromDist1 ( RX10_TEMP2237 , RX10_TEMP2239 ) ; final place RX10_TEMP2245 = here ; final boolean RX10_TEMP2246 = RX10_TEMP2243 != RX10_TEMP2245 ; if ( RX10_TEMP2246 ) { String RX10_TEMP2244 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2244 ) ; }
 final int RX10_TEMP2247 = Program . getRefArrayValue1int ( inRt , RX10_TEMP2239 ) ; final int X10_TEMP808 = ( RX10_TEMP2247 ) ; final int X10_TEMP810 = ( X10_TEMP807 - X10_TEMP808 ) ; final int X10_TEMP811 = ( X10_TEMP810 ) ; final Point1 RX10_TEMP2248 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2249 = nPart . distValue ; final Region1 RX10_TEMP2250 = RX10_TEMP2249 . dReg ; final int RX10_TEMP2251 = Program . searchPointInRegion1 ( RX10_TEMP2250 , RX10_TEMP2248 ) ; final int RX10_TEMP2252 = 0 ; final boolean RX10_TEMP2253 = RX10_TEMP2251 < RX10_TEMP2252 ; if ( RX10_TEMP2253 ) { String RX10_TEMP2254 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2254 ) ; }
 final place RX10_TEMP2255 = Program . getPlaceFromDist1 ( RX10_TEMP2249 , RX10_TEMP2251 ) ; final place RX10_TEMP2257 = here ; final boolean RX10_TEMP2258 = RX10_TEMP2255 != RX10_TEMP2257 ; if ( RX10_TEMP2258 ) { String RX10_TEMP2256 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2256 ) ; }
 Program . setRefArrayValue1int ( nPart , RX10_TEMP2251 , X10_TEMP811 ) ; }
 else { final Point1 RX10_TEMP2259 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2260 = nPart . distValue ; final Region1 RX10_TEMP2261 = RX10_TEMP2260 . dReg ; final int RX10_TEMP2262 = Program . searchPointInRegion1 ( RX10_TEMP2261 , RX10_TEMP2259 ) ; final int RX10_TEMP2263 = 0 ; final boolean RX10_TEMP2264 = RX10_TEMP2262 < RX10_TEMP2263 ; if ( RX10_TEMP2264 ) { String RX10_TEMP2265 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2265 ) ; }
 final place RX10_TEMP2266 = Program . getPlaceFromDist1 ( RX10_TEMP2260 , RX10_TEMP2262 ) ; final place RX10_TEMP2268 = here ; final boolean RX10_TEMP2269 = RX10_TEMP2266 != RX10_TEMP2268 ; if ( RX10_TEMP2269 ) { String RX10_TEMP2267 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2267 ) ; }
 final int RX10_TEMP2270 = Program . getRefArrayValue1int ( nPart , RX10_TEMP2262 ) ; final int X10_TEMP815 = ( RX10_TEMP2270 ) ; final Point1 RX10_TEMP2271 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2272 = inRt . distValue ; final Region1 RX10_TEMP2273 = RX10_TEMP2272 . dReg ; final int RX10_TEMP2274 = Program . searchPointInRegion1 ( RX10_TEMP2273 , RX10_TEMP2271 ) ; final int RX10_TEMP2275 = 0 ; final boolean RX10_TEMP2276 = RX10_TEMP2274 < RX10_TEMP2275 ; if ( RX10_TEMP2276 ) { String RX10_TEMP2277 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP2277 ) ; }
 final place RX10_TEMP2278 = Program . getPlaceFromDist1 ( RX10_TEMP2272 , RX10_TEMP2274 ) ; final place RX10_TEMP2280 = here ; final boolean RX10_TEMP2281 = RX10_TEMP2278 != RX10_TEMP2280 ; if ( RX10_TEMP2281 ) { String RX10_TEMP2279 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP2279 ) ; }
 final int RX10_TEMP2282 = Program . getRefArrayValue1int ( inRt , RX10_TEMP2274 ) ; final int X10_TEMP816 = ( RX10_TEMP2282 ) ; final int X10_TEMP818 = ( X10_TEMP815 + X10_TEMP816 ) ; final int X10_TEMP819 = ( X10_TEMP818 ) ; final Point1 RX10_TEMP2283 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2284 = nPart . distValue ; final Region1 RX10_TEMP2285 = RX10_TEMP2284 . dReg ; final int RX10_TEMP2286 = Program . searchPointInRegion1 ( RX10_TEMP2285 , RX10_TEMP2283 ) ; final int RX10_TEMP2287 = 0 ; final boolean RX10_TEMP2288 = RX10_TEMP2286 < RX10_TEMP2287 ; if ( RX10_TEMP2288 ) { String RX10_TEMP2289 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2289 ) ; }
 final place RX10_TEMP2290 = Program . getPlaceFromDist1 ( RX10_TEMP2284 , RX10_TEMP2286 ) ; final place RX10_TEMP2292 = here ; final boolean RX10_TEMP2293 = RX10_TEMP2290 != RX10_TEMP2292 ; if ( RX10_TEMP2293 ) { String RX10_TEMP2291 = "Bad place access for array nPart" ; throw new RuntimeException ( RX10_TEMP2291 ) ; }
 Program . setRefArrayValue1int ( nPart , RX10_TEMP2286 , X10_TEMP819 ) ; }
 final int X10_TEMP822 = ( 0 ) ; final int X10_TEMP823 = ( X10_TEMP822 ) ; final Point1 RX10_TEMP2294 = new Point1 ( pl ) ; final Dist1 RX10_TEMP2295 = nSent . distValue ; final Region1 RX10_TEMP2296 = RX10_TEMP2295 . dReg ; final int RX10_TEMP2297 = Program . searchPointInRegion1 ( RX10_TEMP2296 , RX10_TEMP2294 ) ; final int RX10_TEMP2298 = 0 ; final boolean RX10_TEMP2299 = RX10_TEMP2297 < RX10_TEMP2298 ; if ( RX10_TEMP2299 ) { String RX10_TEMP2300 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP2300 ) ; }
 final place RX10_TEMP2301 = Program . getPlaceFromDist1 ( RX10_TEMP2295 , RX10_TEMP2297 ) ; final place RX10_TEMP2303 = here ; final boolean RX10_TEMP2304 = RX10_TEMP2301 != RX10_TEMP2303 ; if ( RX10_TEMP2304 ) { String RX10_TEMP2302 = "Bad place access for array nSent" ; throw new RuntimeException ( RX10_TEMP2302 ) ; }
 Program . setRefArrayValue1int ( nSent , RX10_TEMP2297 , X10_TEMP823 ) ; }
 }
 public static void thread107(final T107 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 inRight = utmpz.inRight;
final  intRefArray1 inLeft = utmpz.inLeft;
final  ParticleRefArray2 rightInBuffer = utmpz.rightInBuffer;
final  ParticleRefArray2 leftInBuffer = utmpz.leftInBuffer;
final  intRefArray1 outRight = utmpz.outRight;
final  intRefArray1 outLeft = utmpz.outLeft;
final  ParticleRefArray2 rightOutBuffer = utmpz.rightOutBuffer;
final  ParticleRefArray2 leftOutBuffer = utmpz.leftOutBuffer;
 { final place X10_TEMP5 = ( here ) ; final place pLeft = ( X10_TEMP5 . prev ( ) ) ; final place X10_TEMP7 = ( here ) ; final place pRight = ( X10_TEMP7 . next ( ) ) ; final int X10_TEMP14 = ( 0 ) ; final Point1 RX10_TEMP12 = new Point1 ( pl ) ; final Dist1 RX10_TEMP13 = outLeft . distValue ; final Region1 RX10_TEMP14 = RX10_TEMP13 . dReg ; final int RX10_TEMP15 = Program . searchPointInRegion1 ( RX10_TEMP14 , RX10_TEMP12 ) ; final int RX10_TEMP16 = 0 ; final boolean RX10_TEMP17 = RX10_TEMP15 < RX10_TEMP16 ; if ( RX10_TEMP17 ) { String RX10_TEMP18 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP18 ) ; }
 final place RX10_TEMP19 = Program . getPlaceFromDist1 ( RX10_TEMP13 , RX10_TEMP15 ) ; final place RX10_TEMP21 = here ; final boolean RX10_TEMP22 = RX10_TEMP19 != RX10_TEMP21 ; if ( RX10_TEMP22 ) { String RX10_TEMP20 = "Bad place access for array outLeft" ; throw new RuntimeException ( RX10_TEMP20 ) ; }
 final int RX10_TEMP23 = Program . getRefArrayValue1int ( outLeft , RX10_TEMP15 ) ; final int X10_TEMP11 = ( RX10_TEMP23 ) ; final int X10_TEMP12 = ( 1 ) ; final int X10_TEMP15 = ( X10_TEMP11 - X10_TEMP12 ) ; final Region1 rLeft = Program . createNewRegion1R ( X10_TEMP14 , X10_TEMP15 ) ; final int X10_TEMP22 = ( 0 ) ; final Point1 RX10_TEMP24 = new Point1 ( pl ) ; final Dist1 RX10_TEMP25 = outRight . distValue ; final Region1 RX10_TEMP26 = RX10_TEMP25 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , RX10_TEMP24 ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { String RX10_TEMP30 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( RX10_TEMP25 , RX10_TEMP27 ) ; final place RX10_TEMP33 = here ; final boolean RX10_TEMP34 = RX10_TEMP31 != RX10_TEMP33 ; if ( RX10_TEMP34 ) { String RX10_TEMP32 = "Bad place access for array outRight" ; throw new RuntimeException ( RX10_TEMP32 ) ; }
 final int RX10_TEMP35 = Program . getRefArrayValue1int ( outRight , RX10_TEMP27 ) ; final int X10_TEMP19 = ( RX10_TEMP35 ) ; final int X10_TEMP20 = ( 1 ) ; final int X10_TEMP23 = ( X10_TEMP19 - X10_TEMP20 ) ; final Region1 rRight = Program . createNewRegion1R ( X10_TEMP22 , X10_TEMP23 ) ; final Region1 RX10_TEMP36 = rLeft ; final int RX10_TEMP53 = rLeft . regSize ; final int RX10_TEMP54 = 1 ; final int RX10_TEMP55 = RX10_TEMP53 - RX10_TEMP54 ; final region ( : rank==1 ) RX10_TEMP52 = [ 0 : RX10_TEMP55 ] ; final Particle value [ : rank==1 ] RX10_TEMP56 = ( Particle value [ : rank==1 ] ) ( new Particle value [ RX10_TEMP52 ] ( point ( : rank==1 ) RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP37 [0] ; final Point1 RX10_TEMP38 = Program . regionOrdinalPoint1 ( RX10_TEMP36 , RX10_TEMP39 ) ; final int i = RX10_TEMP38 . f0 ; final Point2 RX10_TEMP40 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP41 = leftOutBuffer . distValue ; final Region2 RX10_TEMP42 = RX10_TEMP41 . dReg ; final int RX10_TEMP43 = Program . searchPointInRegion2 ( RX10_TEMP42 , RX10_TEMP40 ) ; final int RX10_TEMP44 = 0 ; final boolean RX10_TEMP45 = RX10_TEMP43 < RX10_TEMP44 ; if ( RX10_TEMP45 ) { String RX10_TEMP46 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 final place RX10_TEMP47 = Program . getPlaceFromDist2 ( RX10_TEMP41 , RX10_TEMP43 ) ; final place RX10_TEMP49 = here ; final boolean RX10_TEMP50 = RX10_TEMP47 != RX10_TEMP49 ; if ( RX10_TEMP50 ) { String RX10_TEMP48 = "Bad place access for array leftOutBuffer" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final Particle RX10_TEMP51 = Program . getRefArrayValue2Particle ( leftOutBuffer , RX10_TEMP43 ) ; final Particle X10_TEMP28 = ( RX10_TEMP51 ) ; return X10_TEMP28 ; }
 ) ; final ParticleValArray1 RX10_TEMP57 = new ParticleValArray1 ( rLeft , RX10_TEMP56 ) ; final ParticleValArray1 X10_TEMP29 = RX10_TEMP57 ; final ParticleValArray1 lBuffer = X10_TEMP29 ; final Region1 RX10_TEMP58 = rRight ; final int RX10_TEMP75 = rRight . regSize ; final int RX10_TEMP76 = 1 ; final int RX10_TEMP77 = RX10_TEMP75 - RX10_TEMP76 ; final region ( : rank==1 ) RX10_TEMP74 = [ 0 : RX10_TEMP77 ] ; final Particle value [ : rank==1 ] RX10_TEMP78 = ( Particle value [ : rank==1 ] ) ( new Particle value [ RX10_TEMP74 ] ( point ( : rank==1 ) RX10_TEMP59 ) { final int RX10_TEMP61 = RX10_TEMP59 [0] ; final Point1 RX10_TEMP60 = Program . regionOrdinalPoint1 ( RX10_TEMP58 , RX10_TEMP61 ) ; final int i = RX10_TEMP60 . f0 ; final Point2 RX10_TEMP62 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP63 = rightOutBuffer . distValue ; final Region2 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP65 = Program . searchPointInRegion2 ( RX10_TEMP64 , RX10_TEMP62 ) ; final int RX10_TEMP66 = 0 ; final boolean RX10_TEMP67 = RX10_TEMP65 < RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP68 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP68 ) ; }
 final place RX10_TEMP69 = Program . getPlaceFromDist2 ( RX10_TEMP63 , RX10_TEMP65 ) ; final place RX10_TEMP71 = here ; final boolean RX10_TEMP72 = RX10_TEMP69 != RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP70 = "Bad place access for array rightOutBuffer" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 final Particle RX10_TEMP73 = Program . getRefArrayValue2Particle ( rightOutBuffer , RX10_TEMP65 ) ; final Particle X10_TEMP34 = ( RX10_TEMP73 ) ; return X10_TEMP34 ; }
 ) ; final ParticleValArray1 RX10_TEMP79 = new ParticleValArray1 ( rRight , RX10_TEMP78 ) ; final ParticleValArray1 X10_TEMP35 = RX10_TEMP79 ; final ParticleValArray1 rBuffer = X10_TEMP35 ; 
 final T277 utmp277 = new T277(lBuffer, inRight, rightInBuffer);
 async (pLeft) {Program.thread277(utmp277); }
 
 final T278 utmp278 = new T278(rBuffer, inLeft, leftInBuffer);
 async (pRight) {Program.thread278(utmp278); }
 }
 }
 public static void thread108(final T108 utmpz) {final  int RX10_TEMP18 = utmpz.RX10_TEMP18;
final  place RX10_TEMP14 = utmpz.RX10_TEMP14;
final  point ( : rank==1 ) RX10_TEMP13 = utmpz.RX10_TEMP13;
final  ParticleStub [ : rank==1 ] RX10_TEMP12 = utmpz.RX10_TEMP12;
 { final dist ( : rank==1 ) RX10_TEMP19 = [ 0 : RX10_TEMP18 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP20 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP19 ] ) ; final ParticleStub RX10_TEMP21 = new ParticleStub ( RX10_TEMP20 ) ; 
 final T279 utmp279 = new T279(RX10_TEMP21, RX10_TEMP13, RX10_TEMP12);
 async (RX10_TEMP14) {Program.thread279(utmp279); }
 }
 }
 public static void thread109(final T109 utmpz) {final  int pl = utmpz.pl;
final  ParticleRefArray1 result = utmpz.result;
final  ParticleRefArray2 part = utmpz.part;
 { final Dist1 RX10_TEMP38 = result . distValue ; final Dist1 X10_TEMP36 = RX10_TEMP38 ; final place X10_TEMP37 = ( here ) ; final Dist1 X10_TEMP39 = Program . restrictDist1 ( X10_TEMP36 , X10_TEMP37 ) ; final Region1 RX10_TEMP39 = X10_TEMP39 . dReg ; final Region1 X10_TEMP40 = RX10_TEMP39 ; final Region1 rLocal = X10_TEMP40 ; final int X10_TEMP42 = ( rLocal . regSize ) ; final int X10_TEMP43 = ( 0 ) ; final boolean X10_TEMP45 = X10_TEMP42 > X10_TEMP43 ; if ( X10_TEMP45 ) { final int RX10_TEMP40 = rLocal . regSize ; final int RX10_TEMP41 = 0 ; final boolean RX10_TEMP42 = RX10_TEMP40 <= RX10_TEMP41 ; if ( RX10_TEMP42 ) { final String RX10_TEMP43 = "Operation low() not defined on empty region rLocal" ; throw new RuntimeException ( RX10_TEMP43 ) ; }
 final int offset = ( Program . regionLow ( rLocal ) ) ; final place X10_TEMP48 = here ; final int RX10_TEMP48 = 1 ; int RX10_TEMP46 = rLocal . regSize ; RX10_TEMP46 = RX10_TEMP46 - RX10_TEMP48 ; final region ( : rank==1 ) RX10_TEMP47 = [ 0 : RX10_TEMP46 ] ; for ( point ( : rank==1 ) RX10_TEMP44 : RX10_TEMP47 ) { final int RX10_TEMP49 = RX10_TEMP44 [0] ; final Point1 RX10_TEMP45 = Program . regionOrdinalPoint1 ( rLocal , RX10_TEMP49 ) ; final int i = RX10_TEMP45 . f0 ; 
 final T280 utmp280 = new T280(i, offset, pl, result, part);
 async (X10_TEMP48) {Program.thread280(utmp280); }
 }
 }
 }
 }
 public static void thread110(final T110 utmpz) {final  int RX10_TEMP13 = utmpz.RX10_TEMP13;
final  place RX10_TEMP9 = utmpz.RX10_TEMP9;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP13 ] -> here ; final double [ : rank==1 ] RX10_TEMP15 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP14 ] ) ; final doubleStub RX10_TEMP16 = new doubleStub ( RX10_TEMP15 ) ; 
 final T281 utmp281 = new T281(RX10_TEMP16, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP9) {Program.thread281(utmp281); }
 }
 }
 public static void thread111(final T111 utmpz) {final  doubleRefArray1 energy = utmpz.energy;
final  double quantum = utmpz.quantum;
final  double edgery = utmpz.edgery;
final  double edgerx = utmpz.edgerx;
final  double edgely = utmpz.edgely;
final  double edgelx = utmpz.edgelx;
final  doubleRefArray2 fcGuardY = utmpz.fcGuardY;
final  doubleRefArray2 forceChargeY = utmpz.forceChargeY;
final  doubleRefArray2 fcGuardX = utmpz.fcGuardX;
final  doubleRefArray2 forceChargeX = utmpz.forceChargeX;
final  ParticleRefArray1 particles = utmpz.particles;
final  LinearESOpenPIC2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final doubleRefArray2 fcLocalX = Program . LinearESOpenPIC2D_makeLocalSpace ( X10_TEMP0 , forceChargeX , fcGuardX ) ; final doubleRefArray2 fcLocalY = Program . LinearESOpenPIC2D_makeLocalSpace ( X10_TEMP0 , forceChargeY , fcGuardY ) ; final Dist1 RX10_TEMP33 = particles . distValue ; final Dist1 X10_TEMP44 = RX10_TEMP33 ; final place X10_TEMP45 = ( here ) ; final Dist1 X10_TEMP47 = Program . restrictDist1 ( X10_TEMP44 , X10_TEMP45 ) ; final place X10_TEMP48 = here ; final Region1 RX10_TEMP35 = X10_TEMP47 . dReg ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = RX10_TEMP35 . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP34 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP34 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP35 , RX10_TEMP39 ) ; 
 final T282 utmp282 = new T282(pt, fcLocalY, fcLocalX, energy, quantum, edgery, edgerx, edgely, edgelx, particles, X10_TEMP0);
 async (X10_TEMP48) {Program.thread282(utmp282); }
 }
 }
 }
 public static void thread112(final T112 utmpz) {final  int RX10_TEMP14 = utmpz.RX10_TEMP14;
final  place RX10_TEMP10 = utmpz.RX10_TEMP10;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  doubleStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { final dist ( : rank==1 ) RX10_TEMP15 = [ 0 : RX10_TEMP14 ] -> here ; final double [ : rank==1 ] RX10_TEMP16 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP15 ] ) ; final doubleStub RX10_TEMP17 = new doubleStub ( RX10_TEMP16 ) ; 
 final T283 utmp283 = new T283(RX10_TEMP17, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP10) {Program.thread283(utmp283); }
 }
 }
 public static void thread113(final T113 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 result = utmpz.result;
final  doubleRefArray2 data = utmpz.data;
 { final Dist2 RX10_TEMP29 = data . distValue ; final Region2 RX10_TEMP30 = RX10_TEMP29 . dReg ; final int RX10_TEMP31 = Program . searchPointInRegion2 ( RX10_TEMP30 , pt ) ; final int RX10_TEMP32 = 0 ; final boolean RX10_TEMP33 = RX10_TEMP31 < RX10_TEMP32 ; if ( RX10_TEMP33 ) { String RX10_TEMP34 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP34 ) ; }
 final place RX10_TEMP35 = Program . getPlaceFromDist2 ( RX10_TEMP29 , RX10_TEMP31 ) ; final place RX10_TEMP37 = here ; final boolean RX10_TEMP38 = RX10_TEMP35 != RX10_TEMP37 ; if ( RX10_TEMP38 ) { String RX10_TEMP36 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 final double RX10_TEMP39 = Program . getRefArrayValue2double ( data , RX10_TEMP31 ) ; final double X10_TEMP22 = ( RX10_TEMP39 ) ; final double X10_TEMP23 = ( X10_TEMP22 ) ; final Dist2 RX10_TEMP40 = result . distValue ; final Region2 RX10_TEMP41 = RX10_TEMP40 . dReg ; final int RX10_TEMP42 = Program . searchPointInRegion2 ( RX10_TEMP41 , pt ) ; final int RX10_TEMP43 = 0 ; final boolean RX10_TEMP44 = RX10_TEMP42 < RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP45 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP45 ) ; }
 final place RX10_TEMP46 = Program . getPlaceFromDist2 ( RX10_TEMP40 , RX10_TEMP42 ) ; final place RX10_TEMP48 = here ; final boolean RX10_TEMP49 = RX10_TEMP46 != RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP47 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP42 , X10_TEMP23 ) ; }
 }
 public static void thread114(final T114 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 result = utmpz.result;
final  doubleRefArray2 guards = utmpz.guards;
 { final Dist2 RX10_TEMP57 = guards . distValue ; final Region2 RX10_TEMP58 = RX10_TEMP57 . dReg ; final int RX10_TEMP59 = Program . searchPointInRegion2 ( RX10_TEMP58 , pt ) ; final int RX10_TEMP60 = 0 ; final boolean RX10_TEMP61 = RX10_TEMP59 < RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP62 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP62 ) ; }
 final place RX10_TEMP63 = Program . getPlaceFromDist2 ( RX10_TEMP57 , RX10_TEMP59 ) ; final place RX10_TEMP65 = here ; final boolean RX10_TEMP66 = RX10_TEMP63 != RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP64 = "Bad place access for array guards" ; throw new RuntimeException ( RX10_TEMP64 ) ; }
 final double RX10_TEMP67 = Program . getRefArrayValue2double ( guards , RX10_TEMP59 ) ; final double X10_TEMP32 = ( RX10_TEMP67 ) ; final double X10_TEMP33 = ( X10_TEMP32 ) ; final Dist2 RX10_TEMP68 = result . distValue ; final Region2 RX10_TEMP69 = RX10_TEMP68 . dReg ; final int RX10_TEMP70 = Program . searchPointInRegion2 ( RX10_TEMP69 , pt ) ; final int RX10_TEMP71 = 0 ; final boolean RX10_TEMP72 = RX10_TEMP70 < RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP73 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP73 ) ; }
 final place RX10_TEMP74 = Program . getPlaceFromDist2 ( RX10_TEMP68 , RX10_TEMP70 ) ; final place RX10_TEMP76 = here ; final boolean RX10_TEMP77 = RX10_TEMP74 != RX10_TEMP76 ; if ( RX10_TEMP77 ) { String RX10_TEMP75 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP75 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP70 , X10_TEMP33 ) ; }
 }
 public static void thread115(final T115 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final int [ : rank==1 ] RX10_TEMP15 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { final int X10_TEMP6 = ( 0 ) ; return X10_TEMP6 ; }
 ) ; final intStub RX10_TEMP16 = new intStub ( RX10_TEMP15 ) ; 
 final T284 utmp284 = new T284(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread284(utmp284); }
 }
 }
 public static void thread116(final T116 utmpz) {final  intRefArray1 count = utmpz.count;
final  ParticleRefArray1 particles = utmpz.particles;
 { final Dist1 RX10_TEMP33 = particles . distValue ; final Dist1 X10_TEMP11 = RX10_TEMP33 ; final place X10_TEMP12 = ( here ) ; final Dist1 X10_TEMP14 = Program . restrictDist1 ( X10_TEMP11 , X10_TEMP12 ) ; final Region1 RX10_TEMP35 = X10_TEMP14 . dReg ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = RX10_TEMP35 . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP34 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP34 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP35 , RX10_TEMP39 ) ; final Dist1 RX10_TEMP40 = particles . distValue ; final Region1 RX10_TEMP41 = RX10_TEMP40 . dReg ; final int RX10_TEMP42 = Program . searchPointInRegion1 ( RX10_TEMP41 , pt ) ; final int RX10_TEMP43 = 0 ; final boolean RX10_TEMP44 = RX10_TEMP42 < RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP45 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP45 ) ; }
 final place RX10_TEMP46 = Program . getPlaceFromDist1 ( RX10_TEMP40 , RX10_TEMP42 ) ; final place RX10_TEMP48 = here ; final boolean RX10_TEMP49 = RX10_TEMP46 != RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP47 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final Particle RX10_TEMP50 = Program . getRefArrayValue1Particle ( particles , RX10_TEMP42 ) ; final Particle X10_TEMP16 = ( RX10_TEMP50 ) ; final double X10_TEMP17 = ( Program . Particle_getY ( X10_TEMP16 ) ) ; final int X10_TEMP19 = ( ( int ) X10_TEMP17 ) ; final Point1 RX10_TEMP51 = new Point1 ( X10_TEMP19 ) ; final Dist1 RX10_TEMP52 = count . distValue ; final Region1 RX10_TEMP53 = RX10_TEMP52 . dReg ; final int RX10_TEMP54 = Program . searchPointInRegion1 ( RX10_TEMP53 , RX10_TEMP51 ) ; final int RX10_TEMP55 = 0 ; final boolean RX10_TEMP56 = RX10_TEMP54 < RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP57 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final place RX10_TEMP58 = Program . getPlaceFromDist1 ( RX10_TEMP52 , RX10_TEMP54 ) ; final place RX10_TEMP60 = here ; final boolean RX10_TEMP61 = RX10_TEMP58 != RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP59 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 final int RX10_TEMP62 = Program . getRefArrayValue1int ( count , RX10_TEMP54 ) ; final int X10_TEMP20 = ( RX10_TEMP62 ) ; final int X10_TEMP21 = 1 ; final Point1 RX10_TEMP63 = new Point1 ( X10_TEMP19 ) ; final Dist1 RX10_TEMP64 = count . distValue ; final Region1 RX10_TEMP65 = RX10_TEMP64 . dReg ; final int RX10_TEMP66 = Program . searchPointInRegion1 ( RX10_TEMP65 , RX10_TEMP63 ) ; final int RX10_TEMP67 = 0 ; final boolean RX10_TEMP68 = RX10_TEMP66 < RX10_TEMP67 ; if ( RX10_TEMP68 ) { String RX10_TEMP69 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP69 ) ; }
 final place RX10_TEMP70 = Program . getPlaceFromDist1 ( RX10_TEMP64 , RX10_TEMP66 ) ; final place RX10_TEMP72 = here ; final boolean RX10_TEMP73 = RX10_TEMP70 != RX10_TEMP72 ; if ( RX10_TEMP73 ) { String RX10_TEMP71 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP71 ) ; }
 final int RX10_TEMP74 = Program . getRefArrayValue1int ( count , RX10_TEMP66 ) ; final int X10_TEMP22 = ( RX10_TEMP74 ) ; final int X10_TEMP23 = ( X10_TEMP22 + X10_TEMP21 ) ; final Point1 RX10_TEMP75 = new Point1 ( X10_TEMP19 ) ; final Dist1 RX10_TEMP76 = count . distValue ; final Region1 RX10_TEMP77 = RX10_TEMP76 . dReg ; final int RX10_TEMP78 = Program . searchPointInRegion1 ( RX10_TEMP77 , RX10_TEMP75 ) ; final int RX10_TEMP79 = 0 ; final boolean RX10_TEMP80 = RX10_TEMP78 < RX10_TEMP79 ; if ( RX10_TEMP80 ) { String RX10_TEMP81 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP81 ) ; }
 final place RX10_TEMP82 = Program . getPlaceFromDist1 ( RX10_TEMP76 , RX10_TEMP78 ) ; final place RX10_TEMP84 = here ; final boolean RX10_TEMP85 = RX10_TEMP82 != RX10_TEMP84 ; if ( RX10_TEMP85 ) { String RX10_TEMP83 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP83 ) ; }
 Program . setRefArrayValue1int ( count , RX10_TEMP78 , X10_TEMP23 ) ; }
 }
 }
 public static void thread117(final T117 utmpz) {final  int RX10_TEMP13 = utmpz.RX10_TEMP13;
final  place RX10_TEMP9 = utmpz.RX10_TEMP9;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { final dist ( : rank==1 ) RX10_TEMP15 = [ 0 : RX10_TEMP13 ] -> here ; final double [ : rank==1 ] RX10_TEMP16 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP15 ] ( point ( : rank==1 ) RX10_TEMP14 ) { final double X10_TEMP14 = ( 0.0 ) ; return X10_TEMP14 ; }
 ) ; final doubleStub RX10_TEMP17 = new doubleStub ( RX10_TEMP16 ) ; 
 final T285 utmp285 = new T285(RX10_TEMP17, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP9) {Program.thread285(utmp285); }
 }
 }
 public static void thread118(final T118 utmpz) {final  int RX10_TEMP34 = utmpz.RX10_TEMP34;
final  place RX10_TEMP30 = utmpz.RX10_TEMP30;
final  point ( : rank==1 ) RX10_TEMP29 = utmpz.RX10_TEMP29;
final  intStub [ : rank==1 ] RX10_TEMP28 = utmpz.RX10_TEMP28;
 { final dist ( : rank==1 ) RX10_TEMP36 = [ 0 : RX10_TEMP34 ] -> here ; final int [ : rank==1 ] RX10_TEMP37 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP36 ] ( point ( : rank==1 ) RX10_TEMP35 ) { final int X10_TEMP17 = ( 0 ) ; return X10_TEMP17 ; }
 ) ; final intStub RX10_TEMP38 = new intStub ( RX10_TEMP37 ) ; 
 final T286 utmp286 = new T286(RX10_TEMP38, RX10_TEMP29, RX10_TEMP28);
 async (RX10_TEMP30) {Program.thread286(utmp286); }
 }
 }
 public static void thread119(final T119 utmpz) {final  int RX10_TEMP55 = utmpz.RX10_TEMP55;
final  place RX10_TEMP51 = utmpz.RX10_TEMP51;
final  point ( : rank==1 ) RX10_TEMP50 = utmpz.RX10_TEMP50;
final  intStub [ : rank==1 ] RX10_TEMP49 = utmpz.RX10_TEMP49;
 { final dist ( : rank==1 ) RX10_TEMP57 = [ 0 : RX10_TEMP55 ] -> here ; final int [ : rank==1 ] RX10_TEMP58 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP57 ] ( point ( : rank==1 ) RX10_TEMP56 ) { final int X10_TEMP20 = ( 0 ) ; return X10_TEMP20 ; }
 ) ; final intStub RX10_TEMP59 = new intStub ( RX10_TEMP58 ) ; 
 final T287 utmp287 = new T287(RX10_TEMP59, RX10_TEMP50, RX10_TEMP49);
 async (RX10_TEMP51) {Program.thread287(utmp287); }
 }
 }
 public static void thread120(final T120 utmpz) {final  int RX10_TEMP76 = utmpz.RX10_TEMP76;
final  place RX10_TEMP72 = utmpz.RX10_TEMP72;
final  point ( : rank==1 ) RX10_TEMP71 = utmpz.RX10_TEMP71;
final  intStub [ : rank==1 ] RX10_TEMP70 = utmpz.RX10_TEMP70;
 { final dist ( : rank==1 ) RX10_TEMP77 = [ 0 : RX10_TEMP76 ] -> here ; final int [ : rank==1 ] RX10_TEMP78 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP77 ] ) ; final intStub RX10_TEMP79 = new intStub ( RX10_TEMP78 ) ; 
 final T288 utmp288 = new T288(RX10_TEMP79, RX10_TEMP71, RX10_TEMP70);
 async (RX10_TEMP72) {Program.thread288(utmp288); }
 }
 }
 public static void thread121(final T121 utmpz) {final  int RX10_TEMP96 = utmpz.RX10_TEMP96;
final  place RX10_TEMP92 = utmpz.RX10_TEMP92;
final  point ( : rank==1 ) RX10_TEMP91 = utmpz.RX10_TEMP91;
final  intStub [ : rank==1 ] RX10_TEMP90 = utmpz.RX10_TEMP90;
 { final dist ( : rank==1 ) RX10_TEMP97 = [ 0 : RX10_TEMP96 ] -> here ; final int [ : rank==1 ] RX10_TEMP98 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP97 ] ) ; final intStub RX10_TEMP99 = new intStub ( RX10_TEMP98 ) ; 
 final T289 utmp289 = new T289(RX10_TEMP99, RX10_TEMP91, RX10_TEMP90);
 async (RX10_TEMP92) {Program.thread289(utmp289); }
 }
 }
 public static void thread122(final T122 utmpz) {final  int RX10_TEMP116 = utmpz.RX10_TEMP116;
final  place RX10_TEMP112 = utmpz.RX10_TEMP112;
final  point ( : rank==1 ) RX10_TEMP111 = utmpz.RX10_TEMP111;
final  intStub [ : rank==1 ] RX10_TEMP110 = utmpz.RX10_TEMP110;
 { final dist ( : rank==1 ) RX10_TEMP117 = [ 0 : RX10_TEMP116 ] -> here ; final int [ : rank==1 ] RX10_TEMP118 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP117 ] ) ; final intStub RX10_TEMP119 = new intStub ( RX10_TEMP118 ) ; 
 final T290 utmp290 = new T290(RX10_TEMP119, RX10_TEMP111, RX10_TEMP110);
 async (RX10_TEMP112) {Program.thread290(utmp290); }
 }
 }
 public static void thread123(final T123 utmpz) {final  int RX10_TEMP136 = utmpz.RX10_TEMP136;
final  place RX10_TEMP132 = utmpz.RX10_TEMP132;
final  point ( : rank==1 ) RX10_TEMP131 = utmpz.RX10_TEMP131;
final  intStub [ : rank==1 ] RX10_TEMP130 = utmpz.RX10_TEMP130;
 { final dist ( : rank==1 ) RX10_TEMP137 = [ 0 : RX10_TEMP136 ] -> here ; final int [ : rank==1 ] RX10_TEMP138 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP137 ] ) ; final intStub RX10_TEMP139 = new intStub ( RX10_TEMP138 ) ; 
 final T291 utmp291 = new T291(RX10_TEMP139, RX10_TEMP131, RX10_TEMP130);
 async (RX10_TEMP132) {Program.thread291(utmp291); }
 }
 }
 public static void thread124(final T124 utmpz) {final  int RX10_TEMP156 = utmpz.RX10_TEMP156;
final  place RX10_TEMP152 = utmpz.RX10_TEMP152;
final  point ( : rank==1 ) RX10_TEMP151 = utmpz.RX10_TEMP151;
final  intStub [ : rank==1 ] RX10_TEMP150 = utmpz.RX10_TEMP150;
 { final dist ( : rank==1 ) RX10_TEMP157 = [ 0 : RX10_TEMP156 ] -> here ; final int [ : rank==1 ] RX10_TEMP158 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP157 ] ) ; final intStub RX10_TEMP159 = new intStub ( RX10_TEMP158 ) ; 
 final T292 utmp292 = new T292(RX10_TEMP159, RX10_TEMP151, RX10_TEMP150);
 async (RX10_TEMP152) {Program.thread292(utmp292); }
 }
 }
 public static void thread125(final T125 utmpz) {final  int RX10_TEMP176 = utmpz.RX10_TEMP176;
final  place RX10_TEMP172 = utmpz.RX10_TEMP172;
final  point ( : rank==1 ) RX10_TEMP171 = utmpz.RX10_TEMP171;
final  intStub [ : rank==1 ] RX10_TEMP170 = utmpz.RX10_TEMP170;
 { final dist ( : rank==1 ) RX10_TEMP177 = [ 0 : RX10_TEMP176 ] -> here ; final int [ : rank==1 ] RX10_TEMP178 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP177 ] ) ; final intStub RX10_TEMP179 = new intStub ( RX10_TEMP178 ) ; 
 final T293 utmp293 = new T293(RX10_TEMP179, RX10_TEMP171, RX10_TEMP170);
 async (RX10_TEMP172) {Program.thread293(utmp293); }
 }
 }
 public static void thread126(final T126 utmpz) {final  int RX10_TEMP196 = utmpz.RX10_TEMP196;
final  place RX10_TEMP192 = utmpz.RX10_TEMP192;
final  point ( : rank==1 ) RX10_TEMP191 = utmpz.RX10_TEMP191;
final  intStub [ : rank==1 ] RX10_TEMP190 = utmpz.RX10_TEMP190;
 { final dist ( : rank==1 ) RX10_TEMP198 = [ 0 : RX10_TEMP196 ] -> here ; final int [ : rank==1 ] RX10_TEMP199 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP198 ] ( point ( : rank==1 ) RX10_TEMP197 ) { final int X10_TEMP39 = ( 0 ) ; return X10_TEMP39 ; }
 ) ; final intStub RX10_TEMP200 = new intStub ( RX10_TEMP199 ) ; 
 final T294 utmp294 = new T294(RX10_TEMP200, RX10_TEMP191, RX10_TEMP190);
 async (RX10_TEMP192) {Program.thread294(utmp294); }
 }
 }
 public static void thread127(final T127 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray1 sendGrids = utmpz.sendGrids;
final  intRefArray1 sendCount = utmpz.sendCount;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
final  intRefArray1 gridTotals = utmpz.gridTotals;
final  intRefArray1 particleTotals = utmpz.particleTotals;
final  intRefArray1 particleCount = utmpz.particleCount;
 { final Dist1 RX10_TEMP217 = particleCount . distValue ; final Dist1 dPC = RX10_TEMP217 ; final Region1 rLocal = Program . X10Util_get1DLRegion ( dPC ) ; final int rsize = ( rLocal . regSize ) ; final int X10_TEMP49 = ( 0 ) ; final boolean X10_TEMP51 = ( rsize > X10_TEMP49 ) ; final boolean X10_TEMP52 = X10_TEMP51 ; int X10_TEMP55 = 0 ; if ( X10_TEMP52 ) { final int RX10_TEMP218 = rLocal . regSize ; final int RX10_TEMP219 = 0 ; final boolean RX10_TEMP220 = RX10_TEMP218 <= RX10_TEMP219 ; if ( RX10_TEMP220 ) { final String RX10_TEMP221 = "Operation low() not defined on empty region rLocal" ; throw new RuntimeException ( RX10_TEMP221 ) ; }
 X10_TEMP55 = Program . regionLow ( rLocal ) ; }
 final int X10_TEMP56 = X10_TEMP55 ; final int offset = ( X10_TEMP56 ) ; int total = ( 0 ) ; final Dist1 RX10_TEMP222 = particleCount . distValue ; final Dist1 X10_TEMP58 = RX10_TEMP222 ; final place X10_TEMP59 = ( here ) ; final Dist1 X10_TEMP61 = Program . restrictDist1 ( X10_TEMP58 , X10_TEMP59 ) ; final Region1 RX10_TEMP225 = X10_TEMP61 . dReg ; final int RX10_TEMP228 = 1 ; int RX10_TEMP226 = RX10_TEMP225 . regSize ; RX10_TEMP226 = RX10_TEMP226 - RX10_TEMP228 ; final region ( : rank==1 ) RX10_TEMP227 = [ 0 : RX10_TEMP226 ] ; for ( point ( : rank==1 ) RX10_TEMP223 : RX10_TEMP227 ) { final int RX10_TEMP229 = RX10_TEMP223 [0] ; final Point1 RX10_TEMP224 = Program . regionOrdinalPoint1 ( RX10_TEMP225 , RX10_TEMP229 ) ; final int i = RX10_TEMP224 . f0 ; final Point1 RX10_TEMP230 = new Point1 ( i ) ; final Dist1 RX10_TEMP231 = particleCount . distValue ; final Region1 RX10_TEMP232 = RX10_TEMP231 . dReg ; final int RX10_TEMP233 = Program . searchPointInRegion1 ( RX10_TEMP232 , RX10_TEMP230 ) ; final int RX10_TEMP234 = 0 ; final boolean RX10_TEMP235 = RX10_TEMP233 < RX10_TEMP234 ; if ( RX10_TEMP235 ) { String RX10_TEMP236 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP236 ) ; }
 final place RX10_TEMP237 = Program . getPlaceFromDist1 ( RX10_TEMP231 , RX10_TEMP233 ) ; final place RX10_TEMP239 = here ; final boolean RX10_TEMP240 = RX10_TEMP237 != RX10_TEMP239 ; if ( RX10_TEMP240 ) { String RX10_TEMP238 = "Bad place access for array particleCount" ; throw new RuntimeException ( RX10_TEMP238 ) ; }
 final int RX10_TEMP241 = Program . getRefArrayValue1int ( particleCount , RX10_TEMP233 ) ; final int count = ( RX10_TEMP241 ) ; final int X10_TEMP66 = ( i - offset ) ; final int X10_TEMP68 = ( count ) ; final Point2 RX10_TEMP242 = new Point2 ( pl , X10_TEMP66 ) ; final Dist2 RX10_TEMP243 = sCountBuffer . distValue ; final Region2 RX10_TEMP244 = RX10_TEMP243 . dReg ; final int RX10_TEMP245 = Program . searchPointInRegion2 ( RX10_TEMP244 , RX10_TEMP242 ) ; final int RX10_TEMP246 = 0 ; final boolean RX10_TEMP247 = RX10_TEMP245 < RX10_TEMP246 ; if ( RX10_TEMP247 ) { String RX10_TEMP248 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP248 ) ; }
 final place RX10_TEMP249 = Program . getPlaceFromDist2 ( RX10_TEMP243 , RX10_TEMP245 ) ; final place RX10_TEMP251 = here ; final boolean RX10_TEMP252 = RX10_TEMP249 != RX10_TEMP251 ; if ( RX10_TEMP252 ) { String RX10_TEMP250 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP250 ) ; }
 Program . setRefArrayValue2int ( sCountBuffer , RX10_TEMP245 , X10_TEMP68 ) ; final int X10_TEMP70 = ( total + count ) ; total = ( X10_TEMP70 ) ; }
 final int X10_TEMP73 = ( total ) ; final Point1 RX10_TEMP253 = new Point1 ( pl ) ; final Dist1 RX10_TEMP254 = particleTotals . distValue ; final Region1 RX10_TEMP255 = RX10_TEMP254 . dReg ; final int RX10_TEMP256 = Program . searchPointInRegion1 ( RX10_TEMP255 , RX10_TEMP253 ) ; final int RX10_TEMP257 = 0 ; final boolean RX10_TEMP258 = RX10_TEMP256 < RX10_TEMP257 ; if ( RX10_TEMP258 ) { String RX10_TEMP259 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP259 ) ; }
 final place RX10_TEMP260 = Program . getPlaceFromDist1 ( RX10_TEMP254 , RX10_TEMP256 ) ; final place RX10_TEMP262 = here ; final boolean RX10_TEMP263 = RX10_TEMP260 != RX10_TEMP262 ; if ( RX10_TEMP263 ) { String RX10_TEMP261 = "Bad place access for array particleTotals" ; throw new RuntimeException ( RX10_TEMP261 ) ; }
 Program . setRefArrayValue1int ( particleTotals , RX10_TEMP256 , X10_TEMP73 ) ; final int X10_TEMP76 = ( rsize ) ; final Point1 RX10_TEMP264 = new Point1 ( pl ) ; final Dist1 RX10_TEMP265 = gridTotals . distValue ; final Region1 RX10_TEMP266 = RX10_TEMP265 . dReg ; final int RX10_TEMP267 = Program . searchPointInRegion1 ( RX10_TEMP266 , RX10_TEMP264 ) ; final int RX10_TEMP268 = 0 ; final boolean RX10_TEMP269 = RX10_TEMP267 < RX10_TEMP268 ; if ( RX10_TEMP269 ) { String RX10_TEMP270 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP270 ) ; }
 final place RX10_TEMP271 = Program . getPlaceFromDist1 ( RX10_TEMP265 , RX10_TEMP267 ) ; final place RX10_TEMP273 = here ; final boolean RX10_TEMP274 = RX10_TEMP271 != RX10_TEMP273 ; if ( RX10_TEMP274 ) { String RX10_TEMP272 = "Bad place access for array gridTotals" ; throw new RuntimeException ( RX10_TEMP272 ) ; }
 Program . setRefArrayValue1int ( gridTotals , RX10_TEMP267 , X10_TEMP76 ) ; final int X10_TEMP79 = ( total ) ; final Point1 RX10_TEMP275 = new Point1 ( pl ) ; final Dist1 RX10_TEMP276 = sendCount . distValue ; final Region1 RX10_TEMP277 = RX10_TEMP276 . dReg ; final int RX10_TEMP278 = Program . searchPointInRegion1 ( RX10_TEMP277 , RX10_TEMP275 ) ; final int RX10_TEMP279 = 0 ; final boolean RX10_TEMP280 = RX10_TEMP278 < RX10_TEMP279 ; if ( RX10_TEMP280 ) { String RX10_TEMP281 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP281 ) ; }
 final place RX10_TEMP282 = Program . getPlaceFromDist1 ( RX10_TEMP276 , RX10_TEMP278 ) ; final place RX10_TEMP284 = here ; final boolean RX10_TEMP285 = RX10_TEMP282 != RX10_TEMP284 ; if ( RX10_TEMP285 ) { String RX10_TEMP283 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP283 ) ; }
 Program . setRefArrayValue1int ( sendCount , RX10_TEMP278 , X10_TEMP79 ) ; final int X10_TEMP82 = ( rsize ) ; final Point1 RX10_TEMP286 = new Point1 ( pl ) ; final Dist1 RX10_TEMP287 = sendGrids . distValue ; final Region1 RX10_TEMP288 = RX10_TEMP287 . dReg ; final int RX10_TEMP289 = Program . searchPointInRegion1 ( RX10_TEMP288 , RX10_TEMP286 ) ; final int RX10_TEMP290 = 0 ; final boolean RX10_TEMP291 = RX10_TEMP289 < RX10_TEMP290 ; if ( RX10_TEMP291 ) { String RX10_TEMP292 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP292 ) ; }
 final place RX10_TEMP293 = Program . getPlaceFromDist1 ( RX10_TEMP287 , RX10_TEMP289 ) ; final place RX10_TEMP295 = here ; final boolean RX10_TEMP296 = RX10_TEMP293 != RX10_TEMP295 ; if ( RX10_TEMP296 ) { String RX10_TEMP294 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP294 ) ; }
 Program . setRefArrayValue1int ( sendGrids , RX10_TEMP289 , X10_TEMP82 ) ; final int X10_TEMP85 = ( 0 ) ; final int X10_TEMP86 = ( X10_TEMP85 ) ; final Point1 RX10_TEMP297 = new Point1 ( pl ) ; final Dist1 RX10_TEMP298 = recvCount . distValue ; final Region1 RX10_TEMP299 = RX10_TEMP298 . dReg ; final int RX10_TEMP300 = Program . searchPointInRegion1 ( RX10_TEMP299 , RX10_TEMP297 ) ; final int RX10_TEMP301 = 0 ; final boolean RX10_TEMP302 = RX10_TEMP300 < RX10_TEMP301 ; if ( RX10_TEMP302 ) { String RX10_TEMP303 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP303 ) ; }
 final place RX10_TEMP304 = Program . getPlaceFromDist1 ( RX10_TEMP298 , RX10_TEMP300 ) ; final place RX10_TEMP306 = here ; final boolean RX10_TEMP307 = RX10_TEMP304 != RX10_TEMP306 ; if ( RX10_TEMP307 ) { String RX10_TEMP305 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP305 ) ; }
 Program . setRefArrayValue1int ( recvCount , RX10_TEMP300 , X10_TEMP86 ) ; final int X10_TEMP89 = ( 0 ) ; final int X10_TEMP90 = ( X10_TEMP89 ) ; final Point1 RX10_TEMP308 = new Point1 ( pl ) ; final Dist1 RX10_TEMP309 = recvGrids . distValue ; final Region1 RX10_TEMP310 = RX10_TEMP309 . dReg ; final int RX10_TEMP311 = Program . searchPointInRegion1 ( RX10_TEMP310 , RX10_TEMP308 ) ; final int RX10_TEMP312 = 0 ; final boolean RX10_TEMP313 = RX10_TEMP311 < RX10_TEMP312 ; if ( RX10_TEMP313 ) { String RX10_TEMP314 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP314 ) ; }
 final place RX10_TEMP315 = Program . getPlaceFromDist1 ( RX10_TEMP309 , RX10_TEMP311 ) ; final place RX10_TEMP317 = here ; final boolean RX10_TEMP318 = RX10_TEMP315 != RX10_TEMP317 ; if ( RX10_TEMP318 ) { String RX10_TEMP316 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP316 ) ; }
 Program . setRefArrayValue1int ( recvGrids , RX10_TEMP311 , X10_TEMP90 ) ; }
 }
 public static void thread128(final T128 utmpz) {final  Point1 pl = utmpz.pl;
final  intRefArray1 runningGTotals = utmpz.runningGTotals;
final  intRefArray1 runningPTotals = utmpz.runningPTotals;
final  intRefArray1 gridTotals = utmpz.gridTotals;
final  intRefArray1 particleTotals = utmpz.particleTotals;
 { final Dist1 RX10_TEMP331 = runningPTotals . distValue ; final Region1 RX10_TEMP332 = RX10_TEMP331 . dReg ; final int RX10_TEMP333 = Program . searchPointInRegion1 ( RX10_TEMP332 , pl ) ; final int RX10_TEMP334 = 0 ; final boolean RX10_TEMP335 = RX10_TEMP333 < RX10_TEMP334 ; if ( RX10_TEMP335 ) { String RX10_TEMP336 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP336 ) ; }
 final place RX10_TEMP337 = Program . getPlaceFromDist1 ( RX10_TEMP331 , RX10_TEMP333 ) ; final place RX10_TEMP339 = here ; final boolean RX10_TEMP340 = RX10_TEMP337 != RX10_TEMP339 ; if ( RX10_TEMP340 ) { String RX10_TEMP338 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP338 ) ; }
 final int RX10_TEMP341 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP333 ) ; final int X10_TEMP101 = ( RX10_TEMP341 ) ; final int X10_TEMP102 = ( X10_TEMP101 ) ; final Dist1 RX10_TEMP342 = particleTotals . distValue ; final Region1 RX10_TEMP343 = RX10_TEMP342 . dReg ; final int RX10_TEMP344 = Program . searchPointInRegion1 ( RX10_TEMP343 , pl ) ; final int RX10_TEMP345 = 0 ; final boolean RX10_TEMP346 = RX10_TEMP344 < RX10_TEMP345 ; if ( RX10_TEMP346 ) { String RX10_TEMP347 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP347 ) ; }
 final place RX10_TEMP348 = Program . getPlaceFromDist1 ( RX10_TEMP342 , RX10_TEMP344 ) ; final place RX10_TEMP350 = here ; final boolean RX10_TEMP351 = RX10_TEMP348 != RX10_TEMP350 ; if ( RX10_TEMP351 ) { String RX10_TEMP349 = "Bad place access for array particleTotals" ; throw new RuntimeException ( RX10_TEMP349 ) ; }
 Program . setRefArrayValue1int ( particleTotals , RX10_TEMP344 , X10_TEMP102 ) ; final Dist1 RX10_TEMP352 = runningGTotals . distValue ; final Region1 RX10_TEMP353 = RX10_TEMP352 . dReg ; final int RX10_TEMP354 = Program . searchPointInRegion1 ( RX10_TEMP353 , pl ) ; final int RX10_TEMP355 = 0 ; final boolean RX10_TEMP356 = RX10_TEMP354 < RX10_TEMP355 ; if ( RX10_TEMP356 ) { String RX10_TEMP357 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP357 ) ; }
 final place RX10_TEMP358 = Program . getPlaceFromDist1 ( RX10_TEMP352 , RX10_TEMP354 ) ; final place RX10_TEMP360 = here ; final boolean RX10_TEMP361 = RX10_TEMP358 != RX10_TEMP360 ; if ( RX10_TEMP361 ) { String RX10_TEMP359 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP359 ) ; }
 final int RX10_TEMP362 = Program . getRefArrayValue1int ( runningGTotals , RX10_TEMP354 ) ; final int X10_TEMP106 = ( RX10_TEMP362 ) ; final int X10_TEMP107 = ( X10_TEMP106 ) ; final Dist1 RX10_TEMP363 = gridTotals . distValue ; final Region1 RX10_TEMP364 = RX10_TEMP363 . dReg ; final int RX10_TEMP365 = Program . searchPointInRegion1 ( RX10_TEMP364 , pl ) ; final int RX10_TEMP366 = 0 ; final boolean RX10_TEMP367 = RX10_TEMP365 < RX10_TEMP366 ; if ( RX10_TEMP367 ) { String RX10_TEMP368 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP368 ) ; }
 final place RX10_TEMP369 = Program . getPlaceFromDist1 ( RX10_TEMP363 , RX10_TEMP365 ) ; final place RX10_TEMP371 = here ; final boolean RX10_TEMP372 = RX10_TEMP369 != RX10_TEMP371 ; if ( RX10_TEMP372 ) { String RX10_TEMP370 = "Bad place access for array gridTotals" ; throw new RuntimeException ( RX10_TEMP370 ) ; }
 Program . setRefArrayValue1int ( gridTotals , RX10_TEMP365 , X10_TEMP107 ) ; }
 }
 public static void thread129(final T129 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 runningPTotals = utmpz.runningPTotals;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray1 sendGrids = utmpz.sendGrids;
final  intRefArray1 sendCount = utmpz.sendCount;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
final  double countAve = utmpz.countAve;
 { final int X10_TEMP113 = ( 1 ) ; final int X10_TEMP115 = ( pl + X10_TEMP113 ) ; final double X10_TEMP116 = ( X10_TEMP115 * countAve ) ; final double X10_TEMP117 = ( 0.5 ) ; final double X10_TEMP119 = ( X10_TEMP116 + X10_TEMP117 ) ; final int expected = ( ( int ) X10_TEMP119 ) ; final Point1 RX10_TEMP385 = new Point1 ( pl ) ; final Dist1 RX10_TEMP386 = runningPTotals . distValue ; final Region1 RX10_TEMP387 = RX10_TEMP386 . dReg ; final int RX10_TEMP388 = Program . searchPointInRegion1 ( RX10_TEMP387 , RX10_TEMP385 ) ; final int RX10_TEMP389 = 0 ; final boolean RX10_TEMP390 = RX10_TEMP388 < RX10_TEMP389 ; if ( RX10_TEMP390 ) { String RX10_TEMP391 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP391 ) ; }
 final place RX10_TEMP392 = Program . getPlaceFromDist1 ( RX10_TEMP386 , RX10_TEMP388 ) ; final place RX10_TEMP394 = here ; final boolean RX10_TEMP395 = RX10_TEMP392 != RX10_TEMP394 ; if ( RX10_TEMP395 ) { String RX10_TEMP393 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP393 ) ; }
 final int RX10_TEMP396 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP388 ) ; final int X10_TEMP122 = ( RX10_TEMP396 ) ; final int surplus = ( X10_TEMP122 - expected ) ; final double X10_TEMP124 = ( 0.0 ) ; final boolean X10_TEMP126 = surplus > X10_TEMP124 ; if ( X10_TEMP126 ) { final int X10_TEMP132 = ( 0 ) ; final Point1 RX10_TEMP397 = new Point1 ( pl ) ; final Dist1 RX10_TEMP398 = sendGrids . distValue ; final Region1 RX10_TEMP399 = RX10_TEMP398 . dReg ; final int RX10_TEMP400 = Program . searchPointInRegion1 ( RX10_TEMP399 , RX10_TEMP397 ) ; final int RX10_TEMP401 = 0 ; final boolean RX10_TEMP402 = RX10_TEMP400 < RX10_TEMP401 ; if ( RX10_TEMP402 ) { String RX10_TEMP403 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP403 ) ; }
 final place RX10_TEMP404 = Program . getPlaceFromDist1 ( RX10_TEMP398 , RX10_TEMP400 ) ; final place RX10_TEMP406 = here ; final boolean RX10_TEMP407 = RX10_TEMP404 != RX10_TEMP406 ; if ( RX10_TEMP407 ) { String RX10_TEMP405 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP405 ) ; }
 final int RX10_TEMP408 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP400 ) ; final int X10_TEMP129 = ( RX10_TEMP408 ) ; final int X10_TEMP130 = ( 1 ) ; final int X10_TEMP133 = ( X10_TEMP129 - X10_TEMP130 ) ; final Region1 dSBuffer = Program . createNewRegion1R ( X10_TEMP132 , X10_TEMP133 ) ; final Region1 RX10_TEMP409 = dSBuffer ; final int RX10_TEMP426 = dSBuffer . regSize ; final int RX10_TEMP427 = 1 ; final int RX10_TEMP428 = RX10_TEMP426 - RX10_TEMP427 ; final region ( : rank==1 ) RX10_TEMP425 = [ 0 : RX10_TEMP428 ] ; final int value [ : rank==1 ] RX10_TEMP429 = ( int value [ : rank==1 ] ) ( new int value [ RX10_TEMP425 ] ( point ( : rank==1 ) RX10_TEMP410 ) { final int RX10_TEMP412 = RX10_TEMP410 [0] ; final Point1 RX10_TEMP411 = Program . regionOrdinalPoint1 ( RX10_TEMP409 , RX10_TEMP412 ) ; final int i = RX10_TEMP411 . f0 ; final Point2 RX10_TEMP413 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP414 = sCountBuffer . distValue ; final Region2 RX10_TEMP415 = RX10_TEMP414 . dReg ; final int RX10_TEMP416 = Program . searchPointInRegion2 ( RX10_TEMP415 , RX10_TEMP413 ) ; final int RX10_TEMP417 = 0 ; final boolean RX10_TEMP418 = RX10_TEMP416 < RX10_TEMP417 ; if ( RX10_TEMP418 ) { String RX10_TEMP419 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP419 ) ; }
 final place RX10_TEMP420 = Program . getPlaceFromDist2 ( RX10_TEMP414 , RX10_TEMP416 ) ; final place RX10_TEMP422 = here ; final boolean RX10_TEMP423 = RX10_TEMP420 != RX10_TEMP422 ; if ( RX10_TEMP423 ) { String RX10_TEMP421 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP421 ) ; }
 final int RX10_TEMP424 = Program . getRefArrayValue2int ( sCountBuffer , RX10_TEMP416 ) ; final int X10_TEMP138 = ( RX10_TEMP424 ) ; return X10_TEMP138 ; }
 ) ; final intValArray1 RX10_TEMP430 = new intValArray1 ( dSBuffer , RX10_TEMP429 ) ; final intValArray1 X10_TEMP139 = RX10_TEMP430 ; final intValArray1 sBuffer = X10_TEMP139 ; final Point1 RX10_TEMP431 = new Point1 ( pl ) ; final Dist1 RX10_TEMP432 = sendCount . distValue ; final Region1 RX10_TEMP433 = RX10_TEMP432 . dReg ; final int RX10_TEMP434 = Program . searchPointInRegion1 ( RX10_TEMP433 , RX10_TEMP431 ) ; final int RX10_TEMP435 = 0 ; final boolean RX10_TEMP436 = RX10_TEMP434 < RX10_TEMP435 ; if ( RX10_TEMP436 ) { String RX10_TEMP437 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP437 ) ; }
 final place RX10_TEMP438 = Program . getPlaceFromDist1 ( RX10_TEMP432 , RX10_TEMP434 ) ; final place RX10_TEMP440 = here ; final boolean RX10_TEMP441 = RX10_TEMP438 != RX10_TEMP440 ; if ( RX10_TEMP441 ) { String RX10_TEMP439 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP439 ) ; }
 final int RX10_TEMP442 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP434 ) ; final int nCount = ( RX10_TEMP442 ) ; final Point1 RX10_TEMP443 = new Point1 ( pl ) ; final Dist1 RX10_TEMP444 = sendGrids . distValue ; final Region1 RX10_TEMP445 = RX10_TEMP444 . dReg ; final int RX10_TEMP446 = Program . searchPointInRegion1 ( RX10_TEMP445 , RX10_TEMP443 ) ; final int RX10_TEMP447 = 0 ; final boolean RX10_TEMP448 = RX10_TEMP446 < RX10_TEMP447 ; if ( RX10_TEMP448 ) { String RX10_TEMP449 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP449 ) ; }
 final place RX10_TEMP450 = Program . getPlaceFromDist1 ( RX10_TEMP444 , RX10_TEMP446 ) ; final place RX10_TEMP452 = here ; final boolean RX10_TEMP453 = RX10_TEMP450 != RX10_TEMP452 ; if ( RX10_TEMP453 ) { String RX10_TEMP451 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP451 ) ; }
 final int RX10_TEMP454 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP446 ) ; final int nGrids = ( RX10_TEMP454 ) ; finish { final place X10_TEMP145 = ( here ) ; final place X10_TEMP147 = X10_TEMP145 . next ( ) ; 
 final T295 utmp295 = new T295(nGrids, nCount, sBuffer, dSBuffer, recvGrids, recvCount, rCountBuffer);
 async (X10_TEMP147) {Program.thread295(utmp295); }
 }
 }
 }
 }
 public static void thread130(final T130 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 runningGTotals = utmpz.runningGTotals;
final  intRefArray1 runningPTotals = utmpz.runningPTotals;
final  intRefArray1 finished = utmpz.finished;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray1 sendGrids = utmpz.sendGrids;
final  intRefArray1 sendCount = utmpz.sendCount;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
final  doubleRefArray1 border = utmpz.border;
final  double countAve = utmpz.countAve;
 { final int X10_TEMP174 = ( 0 ) ; final int X10_TEMP175 = ( X10_TEMP174 ) ; final Point1 RX10_TEMP513 = new Point1 ( pl ) ; final Dist1 RX10_TEMP514 = finished . distValue ; final Region1 RX10_TEMP515 = RX10_TEMP514 . dReg ; final int RX10_TEMP516 = Program . searchPointInRegion1 ( RX10_TEMP515 , RX10_TEMP513 ) ; final int RX10_TEMP517 = 0 ; final boolean RX10_TEMP518 = RX10_TEMP516 < RX10_TEMP517 ; if ( RX10_TEMP518 ) { String RX10_TEMP519 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP519 ) ; }
 final place RX10_TEMP520 = Program . getPlaceFromDist1 ( RX10_TEMP514 , RX10_TEMP516 ) ; final place RX10_TEMP522 = here ; final boolean RX10_TEMP523 = RX10_TEMP520 != RX10_TEMP522 ; if ( RX10_TEMP523 ) { String RX10_TEMP521 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP521 ) ; }
 Program . setRefArrayValue1int ( finished , RX10_TEMP516 , X10_TEMP175 ) ; final double X10_TEMP176 = ( pl * countAve ) ; final double X10_TEMP177 = ( 0.5 ) ; final double X10_TEMP179 = ( X10_TEMP176 + X10_TEMP177 ) ; final int expected1 = ( ( int ) X10_TEMP179 ) ; final int X10_TEMP181 = ( 1 ) ; final int X10_TEMP183 = ( pl + X10_TEMP181 ) ; final double X10_TEMP184 = ( X10_TEMP183 * countAve ) ; final double X10_TEMP185 = ( 0.5 ) ; final double X10_TEMP187 = ( X10_TEMP184 + X10_TEMP185 ) ; final int expected2 = ( ( int ) X10_TEMP187 ) ; final Point1 RX10_TEMP524 = new Point1 ( pl ) ; final Dist1 RX10_TEMP525 = runningPTotals . distValue ; final Region1 RX10_TEMP526 = RX10_TEMP525 . dReg ; final int RX10_TEMP527 = Program . searchPointInRegion1 ( RX10_TEMP526 , RX10_TEMP524 ) ; final int RX10_TEMP528 = 0 ; final boolean RX10_TEMP529 = RX10_TEMP527 < RX10_TEMP528 ; if ( RX10_TEMP529 ) { String RX10_TEMP530 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP530 ) ; }
 final place RX10_TEMP531 = Program . getPlaceFromDist1 ( RX10_TEMP525 , RX10_TEMP527 ) ; final place RX10_TEMP533 = here ; final boolean RX10_TEMP534 = RX10_TEMP531 != RX10_TEMP533 ; if ( RX10_TEMP534 ) { String RX10_TEMP532 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP532 ) ; }
 final int RX10_TEMP535 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP527 ) ; final int X10_TEMP190 = ( RX10_TEMP535 ) ; final int X10_TEMP192 = ( expected1 - X10_TEMP190 ) ; final Point1 RX10_TEMP536 = new Point1 ( pl ) ; final Dist1 RX10_TEMP537 = sendCount . distValue ; final Region1 RX10_TEMP538 = RX10_TEMP537 . dReg ; final int RX10_TEMP539 = Program . searchPointInRegion1 ( RX10_TEMP538 , RX10_TEMP536 ) ; final int RX10_TEMP540 = 0 ; final boolean RX10_TEMP541 = RX10_TEMP539 < RX10_TEMP540 ; if ( RX10_TEMP541 ) { String RX10_TEMP542 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP542 ) ; }
 final place RX10_TEMP543 = Program . getPlaceFromDist1 ( RX10_TEMP537 , RX10_TEMP539 ) ; final place RX10_TEMP545 = here ; final boolean RX10_TEMP546 = RX10_TEMP543 != RX10_TEMP545 ; if ( RX10_TEMP546 ) { String RX10_TEMP544 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP544 ) ; }
 final int RX10_TEMP547 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP539 ) ; final int X10_TEMP193 = ( RX10_TEMP547 ) ; final int lDeficit = ( X10_TEMP192 + X10_TEMP193 ) ; final Point1 RX10_TEMP548 = new Point1 ( pl ) ; final Dist1 RX10_TEMP549 = runningPTotals . distValue ; final Region1 RX10_TEMP550 = RX10_TEMP549 . dReg ; final int RX10_TEMP551 = Program . searchPointInRegion1 ( RX10_TEMP550 , RX10_TEMP548 ) ; final int RX10_TEMP552 = 0 ; final boolean RX10_TEMP553 = RX10_TEMP551 < RX10_TEMP552 ; if ( RX10_TEMP553 ) { String RX10_TEMP554 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP554 ) ; }
 final place RX10_TEMP555 = Program . getPlaceFromDist1 ( RX10_TEMP549 , RX10_TEMP551 ) ; final place RX10_TEMP557 = here ; final boolean RX10_TEMP558 = RX10_TEMP555 != RX10_TEMP557 ; if ( RX10_TEMP558 ) { String RX10_TEMP556 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP556 ) ; }
 final int RX10_TEMP559 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP551 ) ; final int X10_TEMP196 = ( RX10_TEMP559 ) ; final int rDeficit = ( X10_TEMP196 - expected2 ) ; final double X10_TEMP198 = ( 0.0 ) ; final boolean X10_TEMP200 = lDeficit < X10_TEMP198 ; if ( X10_TEMP200 ) { final Point1 RX10_TEMP560 = new Point1 ( pl ) ; final Dist1 RX10_TEMP561 = recvCount . distValue ; final Region1 RX10_TEMP562 = RX10_TEMP561 . dReg ; final int RX10_TEMP563 = Program . searchPointInRegion1 ( RX10_TEMP562 , RX10_TEMP560 ) ; final int RX10_TEMP564 = 0 ; final boolean RX10_TEMP565 = RX10_TEMP563 < RX10_TEMP564 ; if ( RX10_TEMP565 ) { String RX10_TEMP566 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP566 ) ; }
 final place RX10_TEMP567 = Program . getPlaceFromDist1 ( RX10_TEMP561 , RX10_TEMP563 ) ; final place RX10_TEMP569 = here ; final boolean RX10_TEMP570 = RX10_TEMP567 != RX10_TEMP569 ; if ( RX10_TEMP570 ) { String RX10_TEMP568 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP568 ) ; }
 final int RX10_TEMP571 = Program . getRefArrayValue1int ( recvCount , RX10_TEMP563 ) ; final int X10_TEMP202 = ( RX10_TEMP571 ) ; final int X10_TEMP203 = ( lDeficit + X10_TEMP202 ) ; final double X10_TEMP204 = ( 0.0 ) ; final boolean X10_TEMP206 = X10_TEMP203 >= X10_TEMP204 ; if ( X10_TEMP206 ) { int total = ( 0 ) ; int oldTotal = ( 0 ) ; final Point1 RX10_TEMP572 = new Point1 ( pl ) ; final Dist1 RX10_TEMP573 = recvGrids . distValue ; final Region1 RX10_TEMP574 = RX10_TEMP573 . dReg ; final int RX10_TEMP575 = Program . searchPointInRegion1 ( RX10_TEMP574 , RX10_TEMP572 ) ; final int RX10_TEMP576 = 0 ; final boolean RX10_TEMP577 = RX10_TEMP575 < RX10_TEMP576 ; if ( RX10_TEMP577 ) { String RX10_TEMP578 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP578 ) ; }
 final place RX10_TEMP579 = Program . getPlaceFromDist1 ( RX10_TEMP573 , RX10_TEMP575 ) ; final place RX10_TEMP581 = here ; final boolean RX10_TEMP582 = RX10_TEMP579 != RX10_TEMP581 ; if ( RX10_TEMP582 ) { String RX10_TEMP580 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP580 ) ; }
 final int RX10_TEMP583 = Program . getRefArrayValue1int ( recvGrids , RX10_TEMP575 ) ; int gsize = ( RX10_TEMP583 ) ; int i = ( gsize ) ; boolean X10_TEMP212 = false ; do { final int X10_TEMP213 = ( i ) ; final int X10_TEMP214 = 1 ; i = i - X10_TEMP214 ; oldTotal = ( total ) ; final Point2 RX10_TEMP584 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP585 = rCountBuffer . distValue ; final Region2 RX10_TEMP586 = RX10_TEMP585 . dReg ; final int RX10_TEMP587 = Program . searchPointInRegion2 ( RX10_TEMP586 , RX10_TEMP584 ) ; final int RX10_TEMP588 = 0 ; final boolean RX10_TEMP589 = RX10_TEMP587 < RX10_TEMP588 ; if ( RX10_TEMP589 ) { String RX10_TEMP590 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP590 ) ; }
 final place RX10_TEMP591 = Program . getPlaceFromDist2 ( RX10_TEMP585 , RX10_TEMP587 ) ; final place RX10_TEMP593 = here ; final boolean RX10_TEMP594 = RX10_TEMP591 != RX10_TEMP593 ; if ( RX10_TEMP594 ) { String RX10_TEMP592 = "Bad place access for array rCountBuffer" ; throw new RuntimeException ( RX10_TEMP592 ) ; }
 final int RX10_TEMP595 = Program . getRefArrayValue2int ( rCountBuffer , RX10_TEMP587 ) ; final int X10_TEMP218 = ( RX10_TEMP595 ) ; final int X10_TEMP220 = ( total - X10_TEMP218 ) ; total = ( X10_TEMP220 ) ; final boolean X10_TEMP222 = ( total > lDeficit ) ; final int X10_TEMP221 = ( 0 ) ; final boolean X10_TEMP223 = ( i >= X10_TEMP221 ) ; X10_TEMP212 = X10_TEMP222 && X10_TEMP223 ; }
 while ( X10_TEMP212 ) ; final int X10_TEMP226 = ( gsize - i ) ; final int X10_TEMP228 = ( lDeficit - oldTotal ) ; final double X10_TEMP230 = ( ( double ) X10_TEMP228 ) ; final int X10_TEMP232 = ( total - oldTotal ) ; final double X10_TEMP234 = ( ( double ) X10_TEMP232 ) ; final double X10_TEMP236 = ( X10_TEMP230 / X10_TEMP234 ) ; final double X10_TEMP238 = ( X10_TEMP226 + X10_TEMP236 ) ; double offset = ( X10_TEMP238 ) ; final Point1 RX10_TEMP596 = new Point1 ( pl ) ; final Dist1 RX10_TEMP597 = runningGTotals . distValue ; final Region1 RX10_TEMP598 = RX10_TEMP597 . dReg ; final int RX10_TEMP599 = Program . searchPointInRegion1 ( RX10_TEMP598 , RX10_TEMP596 ) ; final int RX10_TEMP600 = 0 ; final boolean RX10_TEMP601 = RX10_TEMP599 < RX10_TEMP600 ; if ( RX10_TEMP601 ) { String RX10_TEMP602 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP602 ) ; }
 final place RX10_TEMP603 = Program . getPlaceFromDist1 ( RX10_TEMP597 , RX10_TEMP599 ) ; final place RX10_TEMP605 = here ; final boolean RX10_TEMP606 = RX10_TEMP603 != RX10_TEMP605 ; if ( RX10_TEMP606 ) { String RX10_TEMP604 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP604 ) ; }
 final int RX10_TEMP607 = Program . getRefArrayValue1int ( runningGTotals , RX10_TEMP599 ) ; final int X10_TEMP243 = ( RX10_TEMP607 ) ; final Point1 RX10_TEMP608 = new Point1 ( pl ) ; final Dist1 RX10_TEMP609 = sendGrids . distValue ; final Region1 RX10_TEMP610 = RX10_TEMP609 . dReg ; final int RX10_TEMP611 = Program . searchPointInRegion1 ( RX10_TEMP610 , RX10_TEMP608 ) ; final int RX10_TEMP612 = 0 ; final boolean RX10_TEMP613 = RX10_TEMP611 < RX10_TEMP612 ; if ( RX10_TEMP613 ) { String RX10_TEMP614 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP614 ) ; }
 final place RX10_TEMP615 = Program . getPlaceFromDist1 ( RX10_TEMP609 , RX10_TEMP611 ) ; final place RX10_TEMP617 = here ; final boolean RX10_TEMP618 = RX10_TEMP615 != RX10_TEMP617 ; if ( RX10_TEMP618 ) { String RX10_TEMP616 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP616 ) ; }
 final int RX10_TEMP619 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP611 ) ; final int X10_TEMP244 = ( RX10_TEMP619 ) ; final double X10_TEMP245 = ( X10_TEMP243 - X10_TEMP244 ) ; final double X10_TEMP247 = ( X10_TEMP245 - offset ) ; final double X10_TEMP248 = ( X10_TEMP247 ) ; final Point1 RX10_TEMP620 = new Point1 ( pl ) ; final Dist1 RX10_TEMP621 = border . distValue ; final Region1 RX10_TEMP622 = RX10_TEMP621 . dReg ; final int RX10_TEMP623 = Program . searchPointInRegion1 ( RX10_TEMP622 , RX10_TEMP620 ) ; final int RX10_TEMP624 = 0 ; final boolean RX10_TEMP625 = RX10_TEMP623 < RX10_TEMP624 ; if ( RX10_TEMP625 ) { String RX10_TEMP626 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP626 ) ; }
 final place RX10_TEMP627 = Program . getPlaceFromDist1 ( RX10_TEMP621 , RX10_TEMP623 ) ; final place RX10_TEMP629 = here ; final boolean RX10_TEMP630 = RX10_TEMP627 != RX10_TEMP629 ; if ( RX10_TEMP630 ) { String RX10_TEMP628 = "Bad place access for array border" ; throw new RuntimeException ( RX10_TEMP628 ) ; }
 Program . setRefArrayValue1double ( border , RX10_TEMP623 , X10_TEMP248 ) ; }
 else { final Point1 RX10_TEMP631 = new Point1 ( pl ) ; final Dist1 RX10_TEMP632 = finished . distValue ; final Region1 RX10_TEMP633 = RX10_TEMP632 . dReg ; final int RX10_TEMP634 = Program . searchPointInRegion1 ( RX10_TEMP633 , RX10_TEMP631 ) ; final int RX10_TEMP635 = 0 ; final boolean RX10_TEMP636 = RX10_TEMP634 < RX10_TEMP635 ; if ( RX10_TEMP636 ) { String RX10_TEMP637 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP637 ) ; }
 final place RX10_TEMP638 = Program . getPlaceFromDist1 ( RX10_TEMP632 , RX10_TEMP634 ) ; final place RX10_TEMP640 = here ; final boolean RX10_TEMP641 = RX10_TEMP638 != RX10_TEMP640 ; if ( RX10_TEMP641 ) { String RX10_TEMP639 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP639 ) ; }
 final int RX10_TEMP642 = Program . getRefArrayValue1int ( finished , RX10_TEMP634 ) ; final int X10_TEMP250 = ( RX10_TEMP642 ) ; final int X10_TEMP251 = 1 ; final Point1 RX10_TEMP643 = new Point1 ( pl ) ; final Dist1 RX10_TEMP644 = finished . distValue ; final Region1 RX10_TEMP645 = RX10_TEMP644 . dReg ; final int RX10_TEMP646 = Program . searchPointInRegion1 ( RX10_TEMP645 , RX10_TEMP643 ) ; final int RX10_TEMP647 = 0 ; final boolean RX10_TEMP648 = RX10_TEMP646 < RX10_TEMP647 ; if ( RX10_TEMP648 ) { String RX10_TEMP649 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP649 ) ; }
 final place RX10_TEMP650 = Program . getPlaceFromDist1 ( RX10_TEMP644 , RX10_TEMP646 ) ; final place RX10_TEMP652 = here ; final boolean RX10_TEMP653 = RX10_TEMP650 != RX10_TEMP652 ; if ( RX10_TEMP653 ) { String RX10_TEMP651 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP651 ) ; }
 final int RX10_TEMP654 = Program . getRefArrayValue1int ( finished , RX10_TEMP646 ) ; final int X10_TEMP252 = ( RX10_TEMP654 ) ; final int X10_TEMP253 = ( X10_TEMP252 + X10_TEMP251 ) ; final Point1 RX10_TEMP655 = new Point1 ( pl ) ; final Dist1 RX10_TEMP656 = finished . distValue ; final Region1 RX10_TEMP657 = RX10_TEMP656 . dReg ; final int RX10_TEMP658 = Program . searchPointInRegion1 ( RX10_TEMP657 , RX10_TEMP655 ) ; final int RX10_TEMP659 = 0 ; final boolean RX10_TEMP660 = RX10_TEMP658 < RX10_TEMP659 ; if ( RX10_TEMP660 ) { String RX10_TEMP661 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP661 ) ; }
 final place RX10_TEMP662 = Program . getPlaceFromDist1 ( RX10_TEMP656 , RX10_TEMP658 ) ; final place RX10_TEMP664 = here ; final boolean RX10_TEMP665 = RX10_TEMP662 != RX10_TEMP664 ; if ( RX10_TEMP665 ) { String RX10_TEMP663 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP663 ) ; }
 Program . setRefArrayValue1int ( finished , RX10_TEMP658 , X10_TEMP253 ) ; }
 }
 else { final Point1 RX10_TEMP666 = new Point1 ( pl ) ; final Dist1 RX10_TEMP667 = runningPTotals . distValue ; final Region1 RX10_TEMP668 = RX10_TEMP667 . dReg ; final int RX10_TEMP669 = Program . searchPointInRegion1 ( RX10_TEMP668 , RX10_TEMP666 ) ; final int RX10_TEMP670 = 0 ; final boolean RX10_TEMP671 = RX10_TEMP669 < RX10_TEMP670 ; if ( RX10_TEMP671 ) { String RX10_TEMP672 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP672 ) ; }
 final place RX10_TEMP673 = Program . getPlaceFromDist1 ( RX10_TEMP667 , RX10_TEMP669 ) ; final place RX10_TEMP675 = here ; final boolean RX10_TEMP676 = RX10_TEMP673 != RX10_TEMP675 ; if ( RX10_TEMP676 ) { String RX10_TEMP674 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP674 ) ; }
 final int RX10_TEMP677 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP669 ) ; final int X10_TEMP255 = ( RX10_TEMP677 ) ; final boolean X10_TEMP257 = X10_TEMP255 >= expected1 ; if ( X10_TEMP257 ) { final Point1 RX10_TEMP678 = new Point1 ( pl ) ; final Dist1 RX10_TEMP679 = sendGrids . distValue ; final Region1 RX10_TEMP680 = RX10_TEMP679 . dReg ; final int RX10_TEMP681 = Program . searchPointInRegion1 ( RX10_TEMP680 , RX10_TEMP678 ) ; final int RX10_TEMP682 = 0 ; final boolean RX10_TEMP683 = RX10_TEMP681 < RX10_TEMP682 ; if ( RX10_TEMP683 ) { String RX10_TEMP684 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP684 ) ; }
 final place RX10_TEMP685 = Program . getPlaceFromDist1 ( RX10_TEMP679 , RX10_TEMP681 ) ; final place RX10_TEMP687 = here ; final boolean RX10_TEMP688 = RX10_TEMP685 != RX10_TEMP687 ; if ( RX10_TEMP688 ) { String RX10_TEMP686 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP686 ) ; }
 final int RX10_TEMP689 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP681 ) ; int gsize = ( RX10_TEMP689 ) ; int i = ( 0 ) ; int total = ( 0 ) ; int oldTotal = ( 0 ) ; boolean X10_TEMP263 = false ; do { oldTotal = ( total ) ; final Point2 RX10_TEMP690 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP691 = sCountBuffer . distValue ; final Region2 RX10_TEMP692 = RX10_TEMP691 . dReg ; final int RX10_TEMP693 = Program . searchPointInRegion2 ( RX10_TEMP692 , RX10_TEMP690 ) ; final int RX10_TEMP694 = 0 ; final boolean RX10_TEMP695 = RX10_TEMP693 < RX10_TEMP694 ; if ( RX10_TEMP695 ) { String RX10_TEMP696 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP696 ) ; }
 final place RX10_TEMP697 = Program . getPlaceFromDist2 ( RX10_TEMP691 , RX10_TEMP693 ) ; final place RX10_TEMP699 = here ; final boolean RX10_TEMP700 = RX10_TEMP697 != RX10_TEMP699 ; if ( RX10_TEMP700 ) { String RX10_TEMP698 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP698 ) ; }
 final int RX10_TEMP701 = Program . getRefArrayValue2int ( sCountBuffer , RX10_TEMP693 ) ; final int X10_TEMP267 = ( RX10_TEMP701 ) ; final int X10_TEMP269 = ( total + X10_TEMP267 ) ; total = ( X10_TEMP269 ) ; final int X10_TEMP270 = ( i ) ; final int X10_TEMP271 = 1 ; i = i + X10_TEMP271 ; final boolean X10_TEMP272 = ( total < lDeficit ) ; final boolean X10_TEMP273 = ( i < gsize ) ; X10_TEMP263 = X10_TEMP272 && X10_TEMP273 ; }
 while ( X10_TEMP263 ) ; final int X10_TEMP275 = ( 1 ) ; double offset = ( i - X10_TEMP275 ) ; final boolean X10_TEMP278 = total > oldTotal ; if ( X10_TEMP278 ) { final int X10_TEMP280 = ( lDeficit - oldTotal ) ; final double X10_TEMP282 = ( ( double ) X10_TEMP280 ) ; final int X10_TEMP284 = ( total - oldTotal ) ; final double X10_TEMP286 = ( ( double ) X10_TEMP284 ) ; final double X10_TEMP288 = ( X10_TEMP282 / X10_TEMP286 ) ; final double X10_TEMP290 = ( offset + X10_TEMP288 ) ; offset = ( X10_TEMP290 ) ; }
 final Point1 RX10_TEMP702 = new Point1 ( pl ) ; final Dist1 RX10_TEMP703 = runningGTotals . distValue ; final Region1 RX10_TEMP704 = RX10_TEMP703 . dReg ; final int RX10_TEMP705 = Program . searchPointInRegion1 ( RX10_TEMP704 , RX10_TEMP702 ) ; final int RX10_TEMP706 = 0 ; final boolean RX10_TEMP707 = RX10_TEMP705 < RX10_TEMP706 ; if ( RX10_TEMP707 ) { String RX10_TEMP708 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP708 ) ; }
 final place RX10_TEMP709 = Program . getPlaceFromDist1 ( RX10_TEMP703 , RX10_TEMP705 ) ; final place RX10_TEMP711 = here ; final boolean RX10_TEMP712 = RX10_TEMP709 != RX10_TEMP711 ; if ( RX10_TEMP712 ) { String RX10_TEMP710 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP710 ) ; }
 final int RX10_TEMP713 = Program . getRefArrayValue1int ( runningGTotals , RX10_TEMP705 ) ; final int X10_TEMP294 = ( RX10_TEMP713 ) ; final Point1 RX10_TEMP714 = new Point1 ( pl ) ; final Dist1 RX10_TEMP715 = sendGrids . distValue ; final Region1 RX10_TEMP716 = RX10_TEMP715 . dReg ; final int RX10_TEMP717 = Program . searchPointInRegion1 ( RX10_TEMP716 , RX10_TEMP714 ) ; final int RX10_TEMP718 = 0 ; final boolean RX10_TEMP719 = RX10_TEMP717 < RX10_TEMP718 ; if ( RX10_TEMP719 ) { String RX10_TEMP720 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP720 ) ; }
 final place RX10_TEMP721 = Program . getPlaceFromDist1 ( RX10_TEMP715 , RX10_TEMP717 ) ; final place RX10_TEMP723 = here ; final boolean RX10_TEMP724 = RX10_TEMP721 != RX10_TEMP723 ; if ( RX10_TEMP724 ) { String RX10_TEMP722 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP722 ) ; }
 final int RX10_TEMP725 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP717 ) ; final int X10_TEMP295 = ( RX10_TEMP725 ) ; final int X10_TEMP296 = ( X10_TEMP294 - X10_TEMP295 ) ; final double X10_TEMP298 = ( X10_TEMP296 + offset ) ; final double X10_TEMP299 = ( X10_TEMP298 ) ; final Point1 RX10_TEMP726 = new Point1 ( pl ) ; final Dist1 RX10_TEMP727 = border . distValue ; final Region1 RX10_TEMP728 = RX10_TEMP727 . dReg ; final int RX10_TEMP729 = Program . searchPointInRegion1 ( RX10_TEMP728 , RX10_TEMP726 ) ; final int RX10_TEMP730 = 0 ; final boolean RX10_TEMP731 = RX10_TEMP729 < RX10_TEMP730 ; if ( RX10_TEMP731 ) { String RX10_TEMP732 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP732 ) ; }
 final place RX10_TEMP733 = Program . getPlaceFromDist1 ( RX10_TEMP727 , RX10_TEMP729 ) ; final place RX10_TEMP735 = here ; final boolean RX10_TEMP736 = RX10_TEMP733 != RX10_TEMP735 ; if ( RX10_TEMP736 ) { String RX10_TEMP734 = "Bad place access for array border" ; throw new RuntimeException ( RX10_TEMP734 ) ; }
 Program . setRefArrayValue1double ( border , RX10_TEMP729 , X10_TEMP299 ) ; }
 }
 final Point1 RX10_TEMP737 = new Point1 ( pl ) ; final Dist1 RX10_TEMP738 = sendCount . distValue ; final Region1 RX10_TEMP739 = RX10_TEMP738 . dReg ; final int RX10_TEMP740 = Program . searchPointInRegion1 ( RX10_TEMP739 , RX10_TEMP737 ) ; final int RX10_TEMP741 = 0 ; final boolean RX10_TEMP742 = RX10_TEMP740 < RX10_TEMP741 ; if ( RX10_TEMP742 ) { String RX10_TEMP743 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP743 ) ; }
 final place RX10_TEMP744 = Program . getPlaceFromDist1 ( RX10_TEMP738 , RX10_TEMP740 ) ; final place RX10_TEMP746 = here ; final boolean RX10_TEMP747 = RX10_TEMP744 != RX10_TEMP746 ; if ( RX10_TEMP747 ) { String RX10_TEMP745 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP745 ) ; }
 final int RX10_TEMP748 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP740 ) ; final int X10_TEMP301 = ( RX10_TEMP748 ) ; final boolean X10_TEMP303 = rDeficit > X10_TEMP301 ; if ( X10_TEMP303 ) { final Point1 RX10_TEMP749 = new Point1 ( pl ) ; final Dist1 RX10_TEMP750 = finished . distValue ; final Region1 RX10_TEMP751 = RX10_TEMP750 . dReg ; final int RX10_TEMP752 = Program . searchPointInRegion1 ( RX10_TEMP751 , RX10_TEMP749 ) ; final int RX10_TEMP753 = 0 ; final boolean RX10_TEMP754 = RX10_TEMP752 < RX10_TEMP753 ; if ( RX10_TEMP754 ) { String RX10_TEMP755 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP755 ) ; }
 final place RX10_TEMP756 = Program . getPlaceFromDist1 ( RX10_TEMP750 , RX10_TEMP752 ) ; final place RX10_TEMP758 = here ; final boolean RX10_TEMP759 = RX10_TEMP756 != RX10_TEMP758 ; if ( RX10_TEMP759 ) { String RX10_TEMP757 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP757 ) ; }
 final int RX10_TEMP760 = Program . getRefArrayValue1int ( finished , RX10_TEMP752 ) ; final int X10_TEMP305 = ( RX10_TEMP760 ) ; final int X10_TEMP306 = 1 ; final Point1 RX10_TEMP761 = new Point1 ( pl ) ; final Dist1 RX10_TEMP762 = finished . distValue ; final Region1 RX10_TEMP763 = RX10_TEMP762 . dReg ; final int RX10_TEMP764 = Program . searchPointInRegion1 ( RX10_TEMP763 , RX10_TEMP761 ) ; final int RX10_TEMP765 = 0 ; final boolean RX10_TEMP766 = RX10_TEMP764 < RX10_TEMP765 ; if ( RX10_TEMP766 ) { String RX10_TEMP767 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP767 ) ; }
 final place RX10_TEMP768 = Program . getPlaceFromDist1 ( RX10_TEMP762 , RX10_TEMP764 ) ; final place RX10_TEMP770 = here ; final boolean RX10_TEMP771 = RX10_TEMP768 != RX10_TEMP770 ; if ( RX10_TEMP771 ) { String RX10_TEMP769 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP769 ) ; }
 final int RX10_TEMP772 = Program . getRefArrayValue1int ( finished , RX10_TEMP764 ) ; final int X10_TEMP307 = ( RX10_TEMP772 ) ; final int X10_TEMP308 = ( X10_TEMP307 + X10_TEMP306 ) ; final Point1 RX10_TEMP773 = new Point1 ( pl ) ; final Dist1 RX10_TEMP774 = finished . distValue ; final Region1 RX10_TEMP775 = RX10_TEMP774 . dReg ; final int RX10_TEMP776 = Program . searchPointInRegion1 ( RX10_TEMP775 , RX10_TEMP773 ) ; final int RX10_TEMP777 = 0 ; final boolean RX10_TEMP778 = RX10_TEMP776 < RX10_TEMP777 ; if ( RX10_TEMP778 ) { String RX10_TEMP779 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP779 ) ; }
 final place RX10_TEMP780 = Program . getPlaceFromDist1 ( RX10_TEMP774 , RX10_TEMP776 ) ; final place RX10_TEMP782 = here ; final boolean RX10_TEMP783 = RX10_TEMP780 != RX10_TEMP782 ; if ( RX10_TEMP783 ) { String RX10_TEMP781 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP781 ) ; }
 Program . setRefArrayValue1int ( finished , RX10_TEMP776 , X10_TEMP308 ) ; }
 final place X10_TEMP309 = ( here ) ; final boolean X10_TEMP310 = ( X10_TEMP309 . isFirst ( ) ) ; final boolean X10_TEMP312 = ! X10_TEMP310 ; if ( X10_TEMP312 ) { final Point1 RX10_TEMP784 = new Point1 ( pl ) ; final Dist1 RX10_TEMP785 = recvGrids . distValue ; final Region1 RX10_TEMP786 = RX10_TEMP785 . dReg ; final int RX10_TEMP787 = Program . searchPointInRegion1 ( RX10_TEMP786 , RX10_TEMP784 ) ; final int RX10_TEMP788 = 0 ; final boolean RX10_TEMP789 = RX10_TEMP787 < RX10_TEMP788 ; if ( RX10_TEMP789 ) { String RX10_TEMP790 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP790 ) ; }
 final place RX10_TEMP791 = Program . getPlaceFromDist1 ( RX10_TEMP785 , RX10_TEMP787 ) ; final place RX10_TEMP793 = here ; final boolean RX10_TEMP794 = RX10_TEMP791 != RX10_TEMP793 ; if ( RX10_TEMP794 ) { String RX10_TEMP792 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP792 ) ; }
 final int RX10_TEMP795 = Program . getRefArrayValue1int ( recvGrids , RX10_TEMP787 ) ; int gsize = ( RX10_TEMP795 ) ; final Point1 RX10_TEMP796 = new Point1 ( pl ) ; final Dist1 RX10_TEMP797 = runningPTotals . distValue ; final Region1 RX10_TEMP798 = RX10_TEMP797 . dReg ; final int RX10_TEMP799 = Program . searchPointInRegion1 ( RX10_TEMP798 , RX10_TEMP796 ) ; final int RX10_TEMP800 = 0 ; final boolean RX10_TEMP801 = RX10_TEMP799 < RX10_TEMP800 ; if ( RX10_TEMP801 ) { String RX10_TEMP802 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP802 ) ; }
 final place RX10_TEMP803 = Program . getPlaceFromDist1 ( RX10_TEMP797 , RX10_TEMP799 ) ; final place RX10_TEMP805 = here ; final boolean RX10_TEMP806 = RX10_TEMP803 != RX10_TEMP805 ; if ( RX10_TEMP806 ) { String RX10_TEMP804 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP804 ) ; }
 final int RX10_TEMP807 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP799 ) ; final int X10_TEMP318 = ( RX10_TEMP807 ) ; final Point1 RX10_TEMP808 = new Point1 ( pl ) ; final Dist1 RX10_TEMP809 = sendCount . distValue ; final Region1 RX10_TEMP810 = RX10_TEMP809 . dReg ; final int RX10_TEMP811 = Program . searchPointInRegion1 ( RX10_TEMP810 , RX10_TEMP808 ) ; final int RX10_TEMP812 = 0 ; final boolean RX10_TEMP813 = RX10_TEMP811 < RX10_TEMP812 ; if ( RX10_TEMP813 ) { String RX10_TEMP814 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP814 ) ; }
 final place RX10_TEMP815 = Program . getPlaceFromDist1 ( RX10_TEMP809 , RX10_TEMP811 ) ; final place RX10_TEMP817 = here ; final boolean RX10_TEMP818 = RX10_TEMP815 != RX10_TEMP817 ; if ( RX10_TEMP818 ) { String RX10_TEMP816 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP816 ) ; }
 final int RX10_TEMP819 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP811 ) ; final int X10_TEMP319 = ( RX10_TEMP819 ) ; final int X10_TEMP321 = ( X10_TEMP318 - X10_TEMP319 ) ; final int X10_TEMP322 = ( X10_TEMP321 ) ; final Point1 RX10_TEMP820 = new Point1 ( pl ) ; final Dist1 RX10_TEMP821 = runningPTotals . distValue ; final Region1 RX10_TEMP822 = RX10_TEMP821 . dReg ; final int RX10_TEMP823 = Program . searchPointInRegion1 ( RX10_TEMP822 , RX10_TEMP820 ) ; final int RX10_TEMP824 = 0 ; final boolean RX10_TEMP825 = RX10_TEMP823 < RX10_TEMP824 ; if ( RX10_TEMP825 ) { String RX10_TEMP826 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP826 ) ; }
 final place RX10_TEMP827 = Program . getPlaceFromDist1 ( RX10_TEMP821 , RX10_TEMP823 ) ; final place RX10_TEMP829 = here ; final boolean RX10_TEMP830 = RX10_TEMP827 != RX10_TEMP829 ; if ( RX10_TEMP830 ) { String RX10_TEMP828 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP828 ) ; }
 Program . setRefArrayValue1int ( runningPTotals , RX10_TEMP823 , X10_TEMP322 ) ; final Point1 RX10_TEMP831 = new Point1 ( pl ) ; final Dist1 RX10_TEMP832 = runningGTotals . distValue ; final Region1 RX10_TEMP833 = RX10_TEMP832 . dReg ; final int RX10_TEMP834 = Program . searchPointInRegion1 ( RX10_TEMP833 , RX10_TEMP831 ) ; final int RX10_TEMP835 = 0 ; final boolean RX10_TEMP836 = RX10_TEMP834 < RX10_TEMP835 ; if ( RX10_TEMP836 ) { String RX10_TEMP837 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP837 ) ; }
 final place RX10_TEMP838 = Program . getPlaceFromDist1 ( RX10_TEMP832 , RX10_TEMP834 ) ; final place RX10_TEMP840 = here ; final boolean RX10_TEMP841 = RX10_TEMP838 != RX10_TEMP840 ; if ( RX10_TEMP841 ) { String RX10_TEMP839 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP839 ) ; }
 final int RX10_TEMP842 = Program . getRefArrayValue1int ( runningGTotals , RX10_TEMP834 ) ; final int X10_TEMP326 = ( RX10_TEMP842 ) ; final Point1 RX10_TEMP843 = new Point1 ( pl ) ; final Dist1 RX10_TEMP844 = sendGrids . distValue ; final Region1 RX10_TEMP845 = RX10_TEMP844 . dReg ; final int RX10_TEMP846 = Program . searchPointInRegion1 ( RX10_TEMP845 , RX10_TEMP843 ) ; final int RX10_TEMP847 = 0 ; final boolean RX10_TEMP848 = RX10_TEMP846 < RX10_TEMP847 ; if ( RX10_TEMP848 ) { String RX10_TEMP849 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP849 ) ; }
 final place RX10_TEMP850 = Program . getPlaceFromDist1 ( RX10_TEMP844 , RX10_TEMP846 ) ; final place RX10_TEMP852 = here ; final boolean RX10_TEMP853 = RX10_TEMP850 != RX10_TEMP852 ; if ( RX10_TEMP853 ) { String RX10_TEMP851 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP851 ) ; }
 final int RX10_TEMP854 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP846 ) ; final int X10_TEMP327 = ( RX10_TEMP854 ) ; final int X10_TEMP329 = ( X10_TEMP326 - X10_TEMP327 ) ; final int X10_TEMP330 = ( X10_TEMP329 ) ; final Point1 RX10_TEMP855 = new Point1 ( pl ) ; final Dist1 RX10_TEMP856 = runningGTotals . distValue ; final Region1 RX10_TEMP857 = RX10_TEMP856 . dReg ; final int RX10_TEMP858 = Program . searchPointInRegion1 ( RX10_TEMP857 , RX10_TEMP855 ) ; final int RX10_TEMP859 = 0 ; final boolean RX10_TEMP860 = RX10_TEMP858 < RX10_TEMP859 ; if ( RX10_TEMP860 ) { String RX10_TEMP861 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP861 ) ; }
 final place RX10_TEMP862 = Program . getPlaceFromDist1 ( RX10_TEMP856 , RX10_TEMP858 ) ; final place RX10_TEMP864 = here ; final boolean RX10_TEMP865 = RX10_TEMP862 != RX10_TEMP864 ; if ( RX10_TEMP865 ) { String RX10_TEMP863 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP863 ) ; }
 Program . setRefArrayValue1int ( runningGTotals , RX10_TEMP858 , X10_TEMP330 ) ; final Point1 RX10_TEMP866 = new Point1 ( pl ) ; final Dist1 RX10_TEMP867 = recvCount . distValue ; final Region1 RX10_TEMP868 = RX10_TEMP867 . dReg ; final int RX10_TEMP869 = Program . searchPointInRegion1 ( RX10_TEMP868 , RX10_TEMP866 ) ; final int RX10_TEMP870 = 0 ; final boolean RX10_TEMP871 = RX10_TEMP869 < RX10_TEMP870 ; if ( RX10_TEMP871 ) { String RX10_TEMP872 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP872 ) ; }
 final place RX10_TEMP873 = Program . getPlaceFromDist1 ( RX10_TEMP867 , RX10_TEMP869 ) ; final place RX10_TEMP875 = here ; final boolean RX10_TEMP876 = RX10_TEMP873 != RX10_TEMP875 ; if ( RX10_TEMP876 ) { String RX10_TEMP874 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP874 ) ; }
 final int RX10_TEMP877 = Program . getRefArrayValue1int ( recvCount , RX10_TEMP869 ) ; final int X10_TEMP334 = ( RX10_TEMP877 ) ; final int X10_TEMP335 = ( X10_TEMP334 ) ; final Point1 RX10_TEMP878 = new Point1 ( pl ) ; final Dist1 RX10_TEMP879 = sendCount . distValue ; final Region1 RX10_TEMP880 = RX10_TEMP879 . dReg ; final int RX10_TEMP881 = Program . searchPointInRegion1 ( RX10_TEMP880 , RX10_TEMP878 ) ; final int RX10_TEMP882 = 0 ; final boolean RX10_TEMP883 = RX10_TEMP881 < RX10_TEMP882 ; if ( RX10_TEMP883 ) { String RX10_TEMP884 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP884 ) ; }
 final place RX10_TEMP885 = Program . getPlaceFromDist1 ( RX10_TEMP879 , RX10_TEMP881 ) ; final place RX10_TEMP887 = here ; final boolean RX10_TEMP888 = RX10_TEMP885 != RX10_TEMP887 ; if ( RX10_TEMP888 ) { String RX10_TEMP886 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP886 ) ; }
 Program . setRefArrayValue1int ( sendCount , RX10_TEMP881 , X10_TEMP335 ) ; final Point1 RX10_TEMP889 = new Point1 ( pl ) ; final Dist1 RX10_TEMP890 = recvGrids . distValue ; final Region1 RX10_TEMP891 = RX10_TEMP890 . dReg ; final int RX10_TEMP892 = Program . searchPointInRegion1 ( RX10_TEMP891 , RX10_TEMP889 ) ; final int RX10_TEMP893 = 0 ; final boolean RX10_TEMP894 = RX10_TEMP892 < RX10_TEMP893 ; if ( RX10_TEMP894 ) { String RX10_TEMP895 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP895 ) ; }
 final place RX10_TEMP896 = Program . getPlaceFromDist1 ( RX10_TEMP890 , RX10_TEMP892 ) ; final place RX10_TEMP898 = here ; final boolean RX10_TEMP899 = RX10_TEMP896 != RX10_TEMP898 ; if ( RX10_TEMP899 ) { String RX10_TEMP897 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP897 ) ; }
 final int RX10_TEMP900 = Program . getRefArrayValue1int ( recvGrids , RX10_TEMP892 ) ; final int X10_TEMP339 = ( RX10_TEMP900 ) ; final int X10_TEMP340 = ( X10_TEMP339 ) ; final Point1 RX10_TEMP901 = new Point1 ( pl ) ; final Dist1 RX10_TEMP902 = sendGrids . distValue ; final Region1 RX10_TEMP903 = RX10_TEMP902 . dReg ; final int RX10_TEMP904 = Program . searchPointInRegion1 ( RX10_TEMP903 , RX10_TEMP901 ) ; final int RX10_TEMP905 = 0 ; final boolean RX10_TEMP906 = RX10_TEMP904 < RX10_TEMP905 ; if ( RX10_TEMP906 ) { String RX10_TEMP907 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP907 ) ; }
 final place RX10_TEMP908 = Program . getPlaceFromDist1 ( RX10_TEMP902 , RX10_TEMP904 ) ; final place RX10_TEMP910 = here ; final boolean RX10_TEMP911 = RX10_TEMP908 != RX10_TEMP910 ; if ( RX10_TEMP911 ) { String RX10_TEMP909 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP909 ) ; }
 Program . setRefArrayValue1int ( sendGrids , RX10_TEMP904 , X10_TEMP340 ) ; finish { final int X10_TEMP346 = ( 0 ) ; final int X10_TEMP344 = ( 1 ) ; final int X10_TEMP347 = ( gsize - X10_TEMP344 ) ; final Region2 X10_TEMP349 = Program . createNewRegion2RR ( pl , pl , X10_TEMP346 , X10_TEMP347 ) ; final place X10_TEMP350 = here ; final int RX10_TEMP915 = 1 ; int RX10_TEMP913 = X10_TEMP349 . regSize ; RX10_TEMP913 = RX10_TEMP913 - RX10_TEMP915 ; final region ( : rank==1 ) RX10_TEMP914 = [ 0 : RX10_TEMP913 ] ; for ( point ( : rank==1 ) RX10_TEMP912 : RX10_TEMP914 ) { final int RX10_TEMP916 = RX10_TEMP912 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP349 , RX10_TEMP916 ) ; 
 final T296 utmp296 = new T296(pt, rCountBuffer, sCountBuffer);
 async (X10_TEMP350) {Program.thread296(utmp296); }
 }
 }
 }
 }
 }
 public static void thread131(final T131 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 runningGTotals = utmpz.runningGTotals;
final  intRefArray1 runningPTotals = utmpz.runningPTotals;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray1 sendGrids = utmpz.sendGrids;
final  intRefArray1 sendCount = utmpz.sendCount;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
final  intRefArray1 gridTotals = utmpz.gridTotals;
final  intRefArray1 particleTotals = utmpz.particleTotals;
final  intRefArray1 particleCount = utmpz.particleCount;
 { final Dist1 RX10_TEMP950 = particleCount . distValue ; final Dist1 dPC = RX10_TEMP950 ; final Region1 rLocal = Program . X10Util_get1DLRegion ( dPC ) ; final int rsize = ( rLocal . regSize ) ; final int X10_TEMP367 = ( 0 ) ; final boolean X10_TEMP369 = ( rsize > X10_TEMP367 ) ; final boolean X10_TEMP370 = X10_TEMP369 ; int X10_TEMP373 = 0 ; if ( X10_TEMP370 ) { final int RX10_TEMP951 = rLocal . regSize ; final int RX10_TEMP952 = 0 ; final boolean RX10_TEMP953 = RX10_TEMP951 <= RX10_TEMP952 ; if ( RX10_TEMP953 ) { final String RX10_TEMP954 = "Operation low() not defined on empty region rLocal" ; throw new RuntimeException ( RX10_TEMP954 ) ; }
 X10_TEMP373 = Program . regionLow ( rLocal ) ; }
 final int X10_TEMP374 = X10_TEMP373 ; final int offset = ( X10_TEMP374 ) ; int total = ( 0 ) ; final Dist1 RX10_TEMP955 = particleCount . distValue ; final Dist1 X10_TEMP376 = RX10_TEMP955 ; final place X10_TEMP377 = ( here ) ; final Dist1 X10_TEMP379 = Program . restrictDist1 ( X10_TEMP376 , X10_TEMP377 ) ; final Region1 RX10_TEMP958 = X10_TEMP379 . dReg ; final int RX10_TEMP961 = 1 ; int RX10_TEMP959 = RX10_TEMP958 . regSize ; RX10_TEMP959 = RX10_TEMP959 - RX10_TEMP961 ; final region ( : rank==1 ) RX10_TEMP960 = [ 0 : RX10_TEMP959 ] ; for ( point ( : rank==1 ) RX10_TEMP956 : RX10_TEMP960 ) { final int RX10_TEMP962 = RX10_TEMP956 [0] ; final Point1 RX10_TEMP957 = Program . regionOrdinalPoint1 ( RX10_TEMP958 , RX10_TEMP962 ) ; final int i = RX10_TEMP957 . f0 ; final Point1 RX10_TEMP963 = new Point1 ( i ) ; final Dist1 RX10_TEMP964 = particleCount . distValue ; final Region1 RX10_TEMP965 = RX10_TEMP964 . dReg ; final int RX10_TEMP966 = Program . searchPointInRegion1 ( RX10_TEMP965 , RX10_TEMP963 ) ; final int RX10_TEMP967 = 0 ; final boolean RX10_TEMP968 = RX10_TEMP966 < RX10_TEMP967 ; if ( RX10_TEMP968 ) { String RX10_TEMP969 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP969 ) ; }
 final place RX10_TEMP970 = Program . getPlaceFromDist1 ( RX10_TEMP964 , RX10_TEMP966 ) ; final place RX10_TEMP972 = here ; final boolean RX10_TEMP973 = RX10_TEMP970 != RX10_TEMP972 ; if ( RX10_TEMP973 ) { String RX10_TEMP971 = "Bad place access for array particleCount" ; throw new RuntimeException ( RX10_TEMP971 ) ; }
 final int RX10_TEMP974 = Program . getRefArrayValue1int ( particleCount , RX10_TEMP966 ) ; final int count = ( RX10_TEMP974 ) ; final int X10_TEMP384 = ( i - offset ) ; final int X10_TEMP386 = ( count ) ; final Point2 RX10_TEMP975 = new Point2 ( pl , X10_TEMP384 ) ; final Dist2 RX10_TEMP976 = sCountBuffer . distValue ; final Region2 RX10_TEMP977 = RX10_TEMP976 . dReg ; final int RX10_TEMP978 = Program . searchPointInRegion2 ( RX10_TEMP977 , RX10_TEMP975 ) ; final int RX10_TEMP979 = 0 ; final boolean RX10_TEMP980 = RX10_TEMP978 < RX10_TEMP979 ; if ( RX10_TEMP980 ) { String RX10_TEMP981 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP981 ) ; }
 final place RX10_TEMP982 = Program . getPlaceFromDist2 ( RX10_TEMP976 , RX10_TEMP978 ) ; final place RX10_TEMP984 = here ; final boolean RX10_TEMP985 = RX10_TEMP982 != RX10_TEMP984 ; if ( RX10_TEMP985 ) { String RX10_TEMP983 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP983 ) ; }
 Program . setRefArrayValue2int ( sCountBuffer , RX10_TEMP978 , X10_TEMP386 ) ; final int X10_TEMP388 = ( total + count ) ; total = ( X10_TEMP388 ) ; }
 final Point1 RX10_TEMP986 = new Point1 ( pl ) ; final Dist1 RX10_TEMP987 = particleTotals . distValue ; final Region1 RX10_TEMP988 = RX10_TEMP987 . dReg ; final int RX10_TEMP989 = Program . searchPointInRegion1 ( RX10_TEMP988 , RX10_TEMP986 ) ; final int RX10_TEMP990 = 0 ; final boolean RX10_TEMP991 = RX10_TEMP989 < RX10_TEMP990 ; if ( RX10_TEMP991 ) { String RX10_TEMP992 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP992 ) ; }
 final place RX10_TEMP993 = Program . getPlaceFromDist1 ( RX10_TEMP987 , RX10_TEMP989 ) ; final place RX10_TEMP995 = here ; final boolean RX10_TEMP996 = RX10_TEMP993 != RX10_TEMP995 ; if ( RX10_TEMP996 ) { String RX10_TEMP994 = "Bad place access for array particleTotals" ; throw new RuntimeException ( RX10_TEMP994 ) ; }
 final int RX10_TEMP997 = Program . getRefArrayValue1int ( particleTotals , RX10_TEMP989 ) ; final int X10_TEMP392 = ( RX10_TEMP997 ) ; final int X10_TEMP393 = ( X10_TEMP392 ) ; final Point1 RX10_TEMP998 = new Point1 ( pl ) ; final Dist1 RX10_TEMP999 = runningPTotals . distValue ; final Region1 RX10_TEMP1000 = RX10_TEMP999 . dReg ; final int RX10_TEMP1001 = Program . searchPointInRegion1 ( RX10_TEMP1000 , RX10_TEMP998 ) ; final int RX10_TEMP1002 = 0 ; final boolean RX10_TEMP1003 = RX10_TEMP1001 < RX10_TEMP1002 ; if ( RX10_TEMP1003 ) { String RX10_TEMP1004 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1004 ) ; }
 final place RX10_TEMP1005 = Program . getPlaceFromDist1 ( RX10_TEMP999 , RX10_TEMP1001 ) ; final place RX10_TEMP1007 = here ; final boolean RX10_TEMP1008 = RX10_TEMP1005 != RX10_TEMP1007 ; if ( RX10_TEMP1008 ) { String RX10_TEMP1006 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1006 ) ; }
 Program . setRefArrayValue1int ( runningPTotals , RX10_TEMP1001 , X10_TEMP393 ) ; final Point1 RX10_TEMP1009 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1010 = gridTotals . distValue ; final Region1 RX10_TEMP1011 = RX10_TEMP1010 . dReg ; final int RX10_TEMP1012 = Program . searchPointInRegion1 ( RX10_TEMP1011 , RX10_TEMP1009 ) ; final int RX10_TEMP1013 = 0 ; final boolean RX10_TEMP1014 = RX10_TEMP1012 < RX10_TEMP1013 ; if ( RX10_TEMP1014 ) { String RX10_TEMP1015 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1015 ) ; }
 final place RX10_TEMP1016 = Program . getPlaceFromDist1 ( RX10_TEMP1010 , RX10_TEMP1012 ) ; final place RX10_TEMP1018 = here ; final boolean RX10_TEMP1019 = RX10_TEMP1016 != RX10_TEMP1018 ; if ( RX10_TEMP1019 ) { String RX10_TEMP1017 = "Bad place access for array gridTotals" ; throw new RuntimeException ( RX10_TEMP1017 ) ; }
 final int RX10_TEMP1020 = Program . getRefArrayValue1int ( gridTotals , RX10_TEMP1012 ) ; final int X10_TEMP397 = ( RX10_TEMP1020 ) ; final int X10_TEMP398 = ( X10_TEMP397 ) ; final Point1 RX10_TEMP1021 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1022 = runningGTotals . distValue ; final Region1 RX10_TEMP1023 = RX10_TEMP1022 . dReg ; final int RX10_TEMP1024 = Program . searchPointInRegion1 ( RX10_TEMP1023 , RX10_TEMP1021 ) ; final int RX10_TEMP1025 = 0 ; final boolean RX10_TEMP1026 = RX10_TEMP1024 < RX10_TEMP1025 ; if ( RX10_TEMP1026 ) { String RX10_TEMP1027 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1027 ) ; }
 final place RX10_TEMP1028 = Program . getPlaceFromDist1 ( RX10_TEMP1022 , RX10_TEMP1024 ) ; final place RX10_TEMP1030 = here ; final boolean RX10_TEMP1031 = RX10_TEMP1028 != RX10_TEMP1030 ; if ( RX10_TEMP1031 ) { String RX10_TEMP1029 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP1029 ) ; }
 Program . setRefArrayValue1int ( runningGTotals , RX10_TEMP1024 , X10_TEMP398 ) ; final int X10_TEMP401 = ( total ) ; final Point1 RX10_TEMP1032 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1033 = sendCount . distValue ; final Region1 RX10_TEMP1034 = RX10_TEMP1033 . dReg ; final int RX10_TEMP1035 = Program . searchPointInRegion1 ( RX10_TEMP1034 , RX10_TEMP1032 ) ; final int RX10_TEMP1036 = 0 ; final boolean RX10_TEMP1037 = RX10_TEMP1035 < RX10_TEMP1036 ; if ( RX10_TEMP1037 ) { String RX10_TEMP1038 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1038 ) ; }
 final place RX10_TEMP1039 = Program . getPlaceFromDist1 ( RX10_TEMP1033 , RX10_TEMP1035 ) ; final place RX10_TEMP1041 = here ; final boolean RX10_TEMP1042 = RX10_TEMP1039 != RX10_TEMP1041 ; if ( RX10_TEMP1042 ) { String RX10_TEMP1040 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP1040 ) ; }
 Program . setRefArrayValue1int ( sendCount , RX10_TEMP1035 , X10_TEMP401 ) ; final int X10_TEMP404 = ( rsize ) ; final Point1 RX10_TEMP1043 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1044 = sendGrids . distValue ; final Region1 RX10_TEMP1045 = RX10_TEMP1044 . dReg ; final int RX10_TEMP1046 = Program . searchPointInRegion1 ( RX10_TEMP1045 , RX10_TEMP1043 ) ; final int RX10_TEMP1047 = 0 ; final boolean RX10_TEMP1048 = RX10_TEMP1046 < RX10_TEMP1047 ; if ( RX10_TEMP1048 ) { String RX10_TEMP1049 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1049 ) ; }
 final place RX10_TEMP1050 = Program . getPlaceFromDist1 ( RX10_TEMP1044 , RX10_TEMP1046 ) ; final place RX10_TEMP1052 = here ; final boolean RX10_TEMP1053 = RX10_TEMP1050 != RX10_TEMP1052 ; if ( RX10_TEMP1053 ) { String RX10_TEMP1051 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP1051 ) ; }
 Program . setRefArrayValue1int ( sendGrids , RX10_TEMP1046 , X10_TEMP404 ) ; final int X10_TEMP407 = ( 0 ) ; final int X10_TEMP408 = ( X10_TEMP407 ) ; final Point1 RX10_TEMP1054 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1055 = recvCount . distValue ; final Region1 RX10_TEMP1056 = RX10_TEMP1055 . dReg ; final int RX10_TEMP1057 = Program . searchPointInRegion1 ( RX10_TEMP1056 , RX10_TEMP1054 ) ; final int RX10_TEMP1058 = 0 ; final boolean RX10_TEMP1059 = RX10_TEMP1057 < RX10_TEMP1058 ; if ( RX10_TEMP1059 ) { String RX10_TEMP1060 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1060 ) ; }
 final place RX10_TEMP1061 = Program . getPlaceFromDist1 ( RX10_TEMP1055 , RX10_TEMP1057 ) ; final place RX10_TEMP1063 = here ; final boolean RX10_TEMP1064 = RX10_TEMP1061 != RX10_TEMP1063 ; if ( RX10_TEMP1064 ) { String RX10_TEMP1062 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP1062 ) ; }
 Program . setRefArrayValue1int ( recvCount , RX10_TEMP1057 , X10_TEMP408 ) ; final int X10_TEMP411 = ( 0 ) ; final int X10_TEMP412 = ( X10_TEMP411 ) ; final Point1 RX10_TEMP1065 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1066 = recvGrids . distValue ; final Region1 RX10_TEMP1067 = RX10_TEMP1066 . dReg ; final int RX10_TEMP1068 = Program . searchPointInRegion1 ( RX10_TEMP1067 , RX10_TEMP1065 ) ; final int RX10_TEMP1069 = 0 ; final boolean RX10_TEMP1070 = RX10_TEMP1068 < RX10_TEMP1069 ; if ( RX10_TEMP1070 ) { String RX10_TEMP1071 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1071 ) ; }
 final place RX10_TEMP1072 = Program . getPlaceFromDist1 ( RX10_TEMP1066 , RX10_TEMP1068 ) ; final place RX10_TEMP1074 = here ; final boolean RX10_TEMP1075 = RX10_TEMP1072 != RX10_TEMP1074 ; if ( RX10_TEMP1075 ) { String RX10_TEMP1073 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP1073 ) ; }
 Program . setRefArrayValue1int ( recvGrids , RX10_TEMP1068 , X10_TEMP412 ) ; }
 }
 public static void thread132(final T132 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 runningPTotals = utmpz.runningPTotals;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray1 sendGrids = utmpz.sendGrids;
final  intRefArray1 sendCount = utmpz.sendCount;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
final  double countAve = utmpz.countAve;
 { final double X10_TEMP418 = ( pl * countAve ) ; final double X10_TEMP419 = ( 0.5 ) ; final double X10_TEMP421 = ( X10_TEMP418 + X10_TEMP419 ) ; final int expected = ( ( int ) X10_TEMP421 ) ; final int X10_TEMP423 = ( 1 ) ; final int X10_TEMP425 = ( pl - X10_TEMP423 ) ; final double X10_TEMP426 = ( X10_TEMP425 * countAve ) ; final double X10_TEMP427 = ( 0.5 ) ; final double X10_TEMP429 = ( X10_TEMP426 + X10_TEMP427 ) ; final int X10_TEMP431 = ( ( int ) X10_TEMP429 ) ; final Point1 RX10_TEMP1088 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1089 = runningPTotals . distValue ; final Region1 RX10_TEMP1090 = RX10_TEMP1089 . dReg ; final int RX10_TEMP1091 = Program . searchPointInRegion1 ( RX10_TEMP1090 , RX10_TEMP1088 ) ; final int RX10_TEMP1092 = 0 ; final boolean RX10_TEMP1093 = RX10_TEMP1091 < RX10_TEMP1092 ; if ( RX10_TEMP1093 ) { String RX10_TEMP1094 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1094 ) ; }
 final place RX10_TEMP1095 = Program . getPlaceFromDist1 ( RX10_TEMP1089 , RX10_TEMP1091 ) ; final place RX10_TEMP1097 = here ; final boolean RX10_TEMP1098 = RX10_TEMP1095 != RX10_TEMP1097 ; if ( RX10_TEMP1098 ) { String RX10_TEMP1096 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1096 ) ; }
 final int RX10_TEMP1099 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP1091 ) ; final int X10_TEMP433 = ( RX10_TEMP1099 ) ; final int X10_TEMP435 = ( X10_TEMP431 - X10_TEMP433 ) ; final Point1 RX10_TEMP1100 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1101 = sendCount . distValue ; final Region1 RX10_TEMP1102 = RX10_TEMP1101 . dReg ; final int RX10_TEMP1103 = Program . searchPointInRegion1 ( RX10_TEMP1102 , RX10_TEMP1100 ) ; final int RX10_TEMP1104 = 0 ; final boolean RX10_TEMP1105 = RX10_TEMP1103 < RX10_TEMP1104 ; if ( RX10_TEMP1105 ) { String RX10_TEMP1106 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1106 ) ; }
 final place RX10_TEMP1107 = Program . getPlaceFromDist1 ( RX10_TEMP1101 , RX10_TEMP1103 ) ; final place RX10_TEMP1109 = here ; final boolean RX10_TEMP1110 = RX10_TEMP1107 != RX10_TEMP1109 ; if ( RX10_TEMP1110 ) { String RX10_TEMP1108 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP1108 ) ; }
 final int RX10_TEMP1111 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP1103 ) ; final int X10_TEMP436 = ( RX10_TEMP1111 ) ; final int X10_TEMP438 = ( X10_TEMP435 + X10_TEMP436 ) ; final int lDeficit = ( X10_TEMP438 ) ; final int X10_TEMP440 = ( 0 ) ; final boolean X10_TEMP442 = lDeficit > X10_TEMP440 ; if ( X10_TEMP442 ) { final int X10_TEMP448 = ( 0 ) ; final Point1 RX10_TEMP1112 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1113 = sendGrids . distValue ; final Region1 RX10_TEMP1114 = RX10_TEMP1113 . dReg ; final int RX10_TEMP1115 = Program . searchPointInRegion1 ( RX10_TEMP1114 , RX10_TEMP1112 ) ; final int RX10_TEMP1116 = 0 ; final boolean RX10_TEMP1117 = RX10_TEMP1115 < RX10_TEMP1116 ; if ( RX10_TEMP1117 ) { String RX10_TEMP1118 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1118 ) ; }
 final place RX10_TEMP1119 = Program . getPlaceFromDist1 ( RX10_TEMP1113 , RX10_TEMP1115 ) ; final place RX10_TEMP1121 = here ; final boolean RX10_TEMP1122 = RX10_TEMP1119 != RX10_TEMP1121 ; if ( RX10_TEMP1122 ) { String RX10_TEMP1120 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP1120 ) ; }
 final int RX10_TEMP1123 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP1115 ) ; final int X10_TEMP445 = ( RX10_TEMP1123 ) ; final int X10_TEMP446 = ( 1 ) ; final int X10_TEMP449 = ( X10_TEMP445 - X10_TEMP446 ) ; final Region1 dSBuffer = Program . createNewRegion1R ( X10_TEMP448 , X10_TEMP449 ) ; final Region1 RX10_TEMP1124 = dSBuffer ; final int RX10_TEMP1141 = dSBuffer . regSize ; final int RX10_TEMP1142 = 1 ; final int RX10_TEMP1143 = RX10_TEMP1141 - RX10_TEMP1142 ; final region ( : rank==1 ) RX10_TEMP1140 = [ 0 : RX10_TEMP1143 ] ; final int value [ : rank==1 ] RX10_TEMP1144 = ( int value [ : rank==1 ] ) ( new int value [ RX10_TEMP1140 ] ( point ( : rank==1 ) RX10_TEMP1125 ) { final int RX10_TEMP1127 = RX10_TEMP1125 [0] ; final Point1 RX10_TEMP1126 = Program . regionOrdinalPoint1 ( RX10_TEMP1124 , RX10_TEMP1127 ) ; final int i = RX10_TEMP1126 . f0 ; final Point2 RX10_TEMP1128 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1129 = sCountBuffer . distValue ; final Region2 RX10_TEMP1130 = RX10_TEMP1129 . dReg ; final int RX10_TEMP1131 = Program . searchPointInRegion2 ( RX10_TEMP1130 , RX10_TEMP1128 ) ; final int RX10_TEMP1132 = 0 ; final boolean RX10_TEMP1133 = RX10_TEMP1131 < RX10_TEMP1132 ; if ( RX10_TEMP1133 ) { String RX10_TEMP1134 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1134 ) ; }
 final place RX10_TEMP1135 = Program . getPlaceFromDist2 ( RX10_TEMP1129 , RX10_TEMP1131 ) ; final place RX10_TEMP1137 = here ; final boolean RX10_TEMP1138 = RX10_TEMP1135 != RX10_TEMP1137 ; if ( RX10_TEMP1138 ) { String RX10_TEMP1136 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP1136 ) ; }
 final int RX10_TEMP1139 = Program . getRefArrayValue2int ( sCountBuffer , RX10_TEMP1131 ) ; final int X10_TEMP454 = ( RX10_TEMP1139 ) ; return X10_TEMP454 ; }
 ) ; final intValArray1 RX10_TEMP1145 = new intValArray1 ( dSBuffer , RX10_TEMP1144 ) ; final intValArray1 X10_TEMP455 = RX10_TEMP1145 ; final intValArray1 sBuffer = X10_TEMP455 ; final Point1 RX10_TEMP1146 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1147 = sendCount . distValue ; final Region1 RX10_TEMP1148 = RX10_TEMP1147 . dReg ; final int RX10_TEMP1149 = Program . searchPointInRegion1 ( RX10_TEMP1148 , RX10_TEMP1146 ) ; final int RX10_TEMP1150 = 0 ; final boolean RX10_TEMP1151 = RX10_TEMP1149 < RX10_TEMP1150 ; if ( RX10_TEMP1151 ) { String RX10_TEMP1152 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1152 ) ; }
 final place RX10_TEMP1153 = Program . getPlaceFromDist1 ( RX10_TEMP1147 , RX10_TEMP1149 ) ; final place RX10_TEMP1155 = here ; final boolean RX10_TEMP1156 = RX10_TEMP1153 != RX10_TEMP1155 ; if ( RX10_TEMP1156 ) { String RX10_TEMP1154 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP1154 ) ; }
 final int RX10_TEMP1157 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP1149 ) ; final int nCount = ( RX10_TEMP1157 ) ; final Point1 RX10_TEMP1158 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1159 = sendGrids . distValue ; final Region1 RX10_TEMP1160 = RX10_TEMP1159 . dReg ; final int RX10_TEMP1161 = Program . searchPointInRegion1 ( RX10_TEMP1160 , RX10_TEMP1158 ) ; final int RX10_TEMP1162 = 0 ; final boolean RX10_TEMP1163 = RX10_TEMP1161 < RX10_TEMP1162 ; if ( RX10_TEMP1163 ) { String RX10_TEMP1164 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1164 ) ; }
 final place RX10_TEMP1165 = Program . getPlaceFromDist1 ( RX10_TEMP1159 , RX10_TEMP1161 ) ; final place RX10_TEMP1167 = here ; final boolean RX10_TEMP1168 = RX10_TEMP1165 != RX10_TEMP1167 ; if ( RX10_TEMP1168 ) { String RX10_TEMP1166 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP1166 ) ; }
 final int RX10_TEMP1169 = Program . getRefArrayValue1int ( sendGrids , RX10_TEMP1161 ) ; final int nGrids = ( RX10_TEMP1169 ) ; finish { final place X10_TEMP461 = ( here ) ; final place X10_TEMP463 = X10_TEMP461 . prev ( ) ; 
 final T297 utmp297 = new T297(nGrids, nCount, sBuffer, dSBuffer, recvGrids, recvCount, rCountBuffer);
 async (X10_TEMP463) {Program.thread297(utmp297); }
 }
 }
 }
 }
 public static void thread133(final T133 utmpz) {final  int pl = utmpz.pl;
final  intRefArray1 runningGTotals = utmpz.runningGTotals;
final  intRefArray1 runningPTotals = utmpz.runningPTotals;
final  intRefArray1 finished = utmpz.finished;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray1 sendGrids = utmpz.sendGrids;
final  intRefArray1 sendCount = utmpz.sendCount;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
final  doubleRefArray1 border = utmpz.border;
final  double countAve = utmpz.countAve;
 { final int X10_TEMP490 = ( 0 ) ; final int X10_TEMP491 = ( X10_TEMP490 ) ; final Point1 RX10_TEMP1228 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1229 = finished . distValue ; final Region1 RX10_TEMP1230 = RX10_TEMP1229 . dReg ; final int RX10_TEMP1231 = Program . searchPointInRegion1 ( RX10_TEMP1230 , RX10_TEMP1228 ) ; final int RX10_TEMP1232 = 0 ; final boolean RX10_TEMP1233 = RX10_TEMP1231 < RX10_TEMP1232 ; if ( RX10_TEMP1233 ) { String RX10_TEMP1234 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1234 ) ; }
 final place RX10_TEMP1235 = Program . getPlaceFromDist1 ( RX10_TEMP1229 , RX10_TEMP1231 ) ; final place RX10_TEMP1237 = here ; final boolean RX10_TEMP1238 = RX10_TEMP1235 != RX10_TEMP1237 ; if ( RX10_TEMP1238 ) { String RX10_TEMP1236 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1236 ) ; }
 Program . setRefArrayValue1int ( finished , RX10_TEMP1231 , X10_TEMP491 ) ; final double X10_TEMP492 = ( pl * countAve ) ; final double X10_TEMP493 = ( 0.5 ) ; final double X10_TEMP495 = ( X10_TEMP492 + X10_TEMP493 ) ; final int expected1 = ( ( int ) X10_TEMP495 ) ; final int X10_TEMP497 = ( 1 ) ; final int X10_TEMP499 = ( pl - X10_TEMP497 ) ; final double X10_TEMP500 = ( X10_TEMP499 * countAve ) ; final double X10_TEMP501 = ( 0.5 ) ; final double X10_TEMP503 = ( X10_TEMP500 + X10_TEMP501 ) ; final int expected2 = ( ( int ) X10_TEMP503 ) ; final Point1 RX10_TEMP1239 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1240 = runningPTotals . distValue ; final Region1 RX10_TEMP1241 = RX10_TEMP1240 . dReg ; final int RX10_TEMP1242 = Program . searchPointInRegion1 ( RX10_TEMP1241 , RX10_TEMP1239 ) ; final int RX10_TEMP1243 = 0 ; final boolean RX10_TEMP1244 = RX10_TEMP1242 < RX10_TEMP1243 ; if ( RX10_TEMP1244 ) { String RX10_TEMP1245 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1245 ) ; }
 final place RX10_TEMP1246 = Program . getPlaceFromDist1 ( RX10_TEMP1240 , RX10_TEMP1242 ) ; final place RX10_TEMP1248 = here ; final boolean RX10_TEMP1249 = RX10_TEMP1246 != RX10_TEMP1248 ; if ( RX10_TEMP1249 ) { String RX10_TEMP1247 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1247 ) ; }
 final int RX10_TEMP1250 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP1242 ) ; final int X10_TEMP506 = ( RX10_TEMP1250 ) ; final int X10_TEMP508 = ( expected2 - X10_TEMP506 ) ; final Point1 RX10_TEMP1251 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1252 = sendCount . distValue ; final Region1 RX10_TEMP1253 = RX10_TEMP1252 . dReg ; final int RX10_TEMP1254 = Program . searchPointInRegion1 ( RX10_TEMP1253 , RX10_TEMP1251 ) ; final int RX10_TEMP1255 = 0 ; final boolean RX10_TEMP1256 = RX10_TEMP1254 < RX10_TEMP1255 ; if ( RX10_TEMP1256 ) { String RX10_TEMP1257 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1257 ) ; }
 final place RX10_TEMP1258 = Program . getPlaceFromDist1 ( RX10_TEMP1252 , RX10_TEMP1254 ) ; final place RX10_TEMP1260 = here ; final boolean RX10_TEMP1261 = RX10_TEMP1258 != RX10_TEMP1260 ; if ( RX10_TEMP1261 ) { String RX10_TEMP1259 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP1259 ) ; }
 final int RX10_TEMP1262 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP1254 ) ; final int X10_TEMP509 = ( RX10_TEMP1262 ) ; final int lDeficit = ( X10_TEMP508 + X10_TEMP509 ) ; final Point1 RX10_TEMP1263 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1264 = runningPTotals . distValue ; final Region1 RX10_TEMP1265 = RX10_TEMP1264 . dReg ; final int RX10_TEMP1266 = Program . searchPointInRegion1 ( RX10_TEMP1265 , RX10_TEMP1263 ) ; final int RX10_TEMP1267 = 0 ; final boolean RX10_TEMP1268 = RX10_TEMP1266 < RX10_TEMP1267 ; if ( RX10_TEMP1268 ) { String RX10_TEMP1269 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1269 ) ; }
 final place RX10_TEMP1270 = Program . getPlaceFromDist1 ( RX10_TEMP1264 , RX10_TEMP1266 ) ; final place RX10_TEMP1272 = here ; final boolean RX10_TEMP1273 = RX10_TEMP1270 != RX10_TEMP1272 ; if ( RX10_TEMP1273 ) { String RX10_TEMP1271 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1271 ) ; }
 final int RX10_TEMP1274 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP1266 ) ; final int X10_TEMP512 = ( RX10_TEMP1274 ) ; final int rDeficit = ( X10_TEMP512 - expected1 ) ; final Point1 RX10_TEMP1275 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1276 = runningPTotals . distValue ; final Region1 RX10_TEMP1277 = RX10_TEMP1276 . dReg ; final int RX10_TEMP1278 = Program . searchPointInRegion1 ( RX10_TEMP1277 , RX10_TEMP1275 ) ; final int RX10_TEMP1279 = 0 ; final boolean RX10_TEMP1280 = RX10_TEMP1278 < RX10_TEMP1279 ; if ( RX10_TEMP1280 ) { String RX10_TEMP1281 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1281 ) ; }
 final place RX10_TEMP1282 = Program . getPlaceFromDist1 ( RX10_TEMP1276 , RX10_TEMP1278 ) ; final place RX10_TEMP1284 = here ; final boolean RX10_TEMP1285 = RX10_TEMP1282 != RX10_TEMP1284 ; if ( RX10_TEMP1285 ) { String RX10_TEMP1283 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1283 ) ; }
 final int RX10_TEMP1286 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP1278 ) ; final int X10_TEMP515 = ( RX10_TEMP1286 ) ; final boolean X10_TEMP517 = X10_TEMP515 < expected1 ; if ( X10_TEMP517 ) { final Point1 RX10_TEMP1287 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1288 = runningPTotals . distValue ; final Region1 RX10_TEMP1289 = RX10_TEMP1288 . dReg ; final int RX10_TEMP1290 = Program . searchPointInRegion1 ( RX10_TEMP1289 , RX10_TEMP1287 ) ; final int RX10_TEMP1291 = 0 ; final boolean RX10_TEMP1292 = RX10_TEMP1290 < RX10_TEMP1291 ; if ( RX10_TEMP1292 ) { String RX10_TEMP1293 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1293 ) ; }
 final place RX10_TEMP1294 = Program . getPlaceFromDist1 ( RX10_TEMP1288 , RX10_TEMP1290 ) ; final place RX10_TEMP1296 = here ; final boolean RX10_TEMP1297 = RX10_TEMP1294 != RX10_TEMP1296 ; if ( RX10_TEMP1297 ) { String RX10_TEMP1295 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1295 ) ; }
 final int RX10_TEMP1298 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP1290 ) ; final int X10_TEMP520 = ( RX10_TEMP1298 ) ; final Point1 RX10_TEMP1299 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1300 = recvCount . distValue ; final Region1 RX10_TEMP1301 = RX10_TEMP1300 . dReg ; final int RX10_TEMP1302 = Program . searchPointInRegion1 ( RX10_TEMP1301 , RX10_TEMP1299 ) ; final int RX10_TEMP1303 = 0 ; final boolean RX10_TEMP1304 = RX10_TEMP1302 < RX10_TEMP1303 ; if ( RX10_TEMP1304 ) { String RX10_TEMP1305 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1305 ) ; }
 final place RX10_TEMP1306 = Program . getPlaceFromDist1 ( RX10_TEMP1300 , RX10_TEMP1302 ) ; final place RX10_TEMP1308 = here ; final boolean RX10_TEMP1309 = RX10_TEMP1306 != RX10_TEMP1308 ; if ( RX10_TEMP1309 ) { String RX10_TEMP1307 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP1307 ) ; }
 final int RX10_TEMP1310 = Program . getRefArrayValue1int ( recvCount , RX10_TEMP1302 ) ; final int X10_TEMP521 = ( RX10_TEMP1310 ) ; final int X10_TEMP522 = ( X10_TEMP520 + X10_TEMP521 ) ; final boolean X10_TEMP524 = X10_TEMP522 >= expected1 ; if ( X10_TEMP524 ) { final Point1 RX10_TEMP1311 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1312 = recvGrids . distValue ; final Region1 RX10_TEMP1313 = RX10_TEMP1312 . dReg ; final int RX10_TEMP1314 = Program . searchPointInRegion1 ( RX10_TEMP1313 , RX10_TEMP1311 ) ; final int RX10_TEMP1315 = 0 ; final boolean RX10_TEMP1316 = RX10_TEMP1314 < RX10_TEMP1315 ; if ( RX10_TEMP1316 ) { String RX10_TEMP1317 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1317 ) ; }
 final place RX10_TEMP1318 = Program . getPlaceFromDist1 ( RX10_TEMP1312 , RX10_TEMP1314 ) ; final place RX10_TEMP1320 = here ; final boolean RX10_TEMP1321 = RX10_TEMP1318 != RX10_TEMP1320 ; if ( RX10_TEMP1321 ) { String RX10_TEMP1319 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP1319 ) ; }
 final int RX10_TEMP1322 = Program . getRefArrayValue1int ( recvGrids , RX10_TEMP1314 ) ; final int gsize = ( RX10_TEMP1322 ) ; int oldTotal = ( 0 ) ; int total = ( 0 ) ; int i = ( 0 ) ; boolean X10_TEMP530 = false ; do { oldTotal = ( total ) ; final Point2 RX10_TEMP1323 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1324 = rCountBuffer . distValue ; final Region2 RX10_TEMP1325 = RX10_TEMP1324 . dReg ; final int RX10_TEMP1326 = Program . searchPointInRegion2 ( RX10_TEMP1325 , RX10_TEMP1323 ) ; final int RX10_TEMP1327 = 0 ; final boolean RX10_TEMP1328 = RX10_TEMP1326 < RX10_TEMP1327 ; if ( RX10_TEMP1328 ) { String RX10_TEMP1329 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1329 ) ; }
 final place RX10_TEMP1330 = Program . getPlaceFromDist2 ( RX10_TEMP1324 , RX10_TEMP1326 ) ; final place RX10_TEMP1332 = here ; final boolean RX10_TEMP1333 = RX10_TEMP1330 != RX10_TEMP1332 ; if ( RX10_TEMP1333 ) { String RX10_TEMP1331 = "Bad place access for array rCountBuffer" ; throw new RuntimeException ( RX10_TEMP1331 ) ; }
 final int RX10_TEMP1334 = Program . getRefArrayValue2int ( rCountBuffer , RX10_TEMP1326 ) ; final int X10_TEMP534 = ( RX10_TEMP1334 ) ; final int X10_TEMP536 = ( total + X10_TEMP534 ) ; total = ( X10_TEMP536 ) ; final int X10_TEMP537 = ( i ) ; final int X10_TEMP538 = 1 ; i = i + X10_TEMP538 ; final int X10_TEMP539 = 0 ; final int X10_TEMP540 = ( X10_TEMP539 - rDeficit ) ; final boolean X10_TEMP541 = ( total < X10_TEMP540 ) ; final boolean X10_TEMP542 = ( i < gsize ) ; X10_TEMP530 = X10_TEMP541 && X10_TEMP542 ; }
 while ( X10_TEMP530 ) ; final int X10_TEMP544 = ( 1 ) ; final int X10_TEMP557 = ( i - X10_TEMP544 ) ; final int X10_TEMP545 = 0 ; final int X10_TEMP546 = ( X10_TEMP545 - rDeficit ) ; final int X10_TEMP548 = ( X10_TEMP546 - oldTotal ) ; final double X10_TEMP550 = ( ( double ) X10_TEMP548 ) ; final int X10_TEMP552 = ( total - oldTotal ) ; final double X10_TEMP554 = ( ( double ) X10_TEMP552 ) ; final double X10_TEMP556 = ( X10_TEMP550 / X10_TEMP554 ) ; final double X10_TEMP559 = ( X10_TEMP557 + X10_TEMP556 ) ; final int offset = ( ( int ) X10_TEMP559 ) ; final Point1 RX10_TEMP1335 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1336 = runningGTotals . distValue ; final Region1 RX10_TEMP1337 = RX10_TEMP1336 . dReg ; final int RX10_TEMP1338 = Program . searchPointInRegion1 ( RX10_TEMP1337 , RX10_TEMP1335 ) ; final int RX10_TEMP1339 = 0 ; final boolean RX10_TEMP1340 = RX10_TEMP1338 < RX10_TEMP1339 ; if ( RX10_TEMP1340 ) { String RX10_TEMP1341 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1341 ) ; }
 final place RX10_TEMP1342 = Program . getPlaceFromDist1 ( RX10_TEMP1336 , RX10_TEMP1338 ) ; final place RX10_TEMP1344 = here ; final boolean RX10_TEMP1345 = RX10_TEMP1342 != RX10_TEMP1344 ; if ( RX10_TEMP1345 ) { String RX10_TEMP1343 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP1343 ) ; }
 final int RX10_TEMP1346 = Program . getRefArrayValue1int ( runningGTotals , RX10_TEMP1338 ) ; final int X10_TEMP563 = ( RX10_TEMP1346 ) ; final double X10_TEMP565 = ( X10_TEMP563 + offset ) ; final double X10_TEMP566 = ( X10_TEMP565 ) ; final Point1 RX10_TEMP1347 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1348 = border . distValue ; final Region1 RX10_TEMP1349 = RX10_TEMP1348 . dReg ; final int RX10_TEMP1350 = Program . searchPointInRegion1 ( RX10_TEMP1349 , RX10_TEMP1347 ) ; final int RX10_TEMP1351 = 0 ; final boolean RX10_TEMP1352 = RX10_TEMP1350 < RX10_TEMP1351 ; if ( RX10_TEMP1352 ) { String RX10_TEMP1353 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1353 ) ; }
 final place RX10_TEMP1354 = Program . getPlaceFromDist1 ( RX10_TEMP1348 , RX10_TEMP1350 ) ; final place RX10_TEMP1356 = here ; final boolean RX10_TEMP1357 = RX10_TEMP1354 != RX10_TEMP1356 ; if ( RX10_TEMP1357 ) { String RX10_TEMP1355 = "Bad place access for array border" ; throw new RuntimeException ( RX10_TEMP1355 ) ; }
 Program . setRefArrayValue1double ( border , RX10_TEMP1350 , X10_TEMP566 ) ; }
 else { final Point1 RX10_TEMP1358 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1359 = finished . distValue ; final Region1 RX10_TEMP1360 = RX10_TEMP1359 . dReg ; final int RX10_TEMP1361 = Program . searchPointInRegion1 ( RX10_TEMP1360 , RX10_TEMP1358 ) ; final int RX10_TEMP1362 = 0 ; final boolean RX10_TEMP1363 = RX10_TEMP1361 < RX10_TEMP1362 ; if ( RX10_TEMP1363 ) { String RX10_TEMP1364 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1364 ) ; }
 final place RX10_TEMP1365 = Program . getPlaceFromDist1 ( RX10_TEMP1359 , RX10_TEMP1361 ) ; final place RX10_TEMP1367 = here ; final boolean RX10_TEMP1368 = RX10_TEMP1365 != RX10_TEMP1367 ; if ( RX10_TEMP1368 ) { String RX10_TEMP1366 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1366 ) ; }
 final int RX10_TEMP1369 = Program . getRefArrayValue1int ( finished , RX10_TEMP1361 ) ; final int X10_TEMP568 = ( RX10_TEMP1369 ) ; final int X10_TEMP569 = 1 ; final Point1 RX10_TEMP1370 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1371 = finished . distValue ; final Region1 RX10_TEMP1372 = RX10_TEMP1371 . dReg ; final int RX10_TEMP1373 = Program . searchPointInRegion1 ( RX10_TEMP1372 , RX10_TEMP1370 ) ; final int RX10_TEMP1374 = 0 ; final boolean RX10_TEMP1375 = RX10_TEMP1373 < RX10_TEMP1374 ; if ( RX10_TEMP1375 ) { String RX10_TEMP1376 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1376 ) ; }
 final place RX10_TEMP1377 = Program . getPlaceFromDist1 ( RX10_TEMP1371 , RX10_TEMP1373 ) ; final place RX10_TEMP1379 = here ; final boolean RX10_TEMP1380 = RX10_TEMP1377 != RX10_TEMP1379 ; if ( RX10_TEMP1380 ) { String RX10_TEMP1378 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1378 ) ; }
 final int RX10_TEMP1381 = Program . getRefArrayValue1int ( finished , RX10_TEMP1373 ) ; final int X10_TEMP570 = ( RX10_TEMP1381 ) ; final int X10_TEMP571 = ( X10_TEMP570 + X10_TEMP569 ) ; final Point1 RX10_TEMP1382 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1383 = finished . distValue ; final Region1 RX10_TEMP1384 = RX10_TEMP1383 . dReg ; final int RX10_TEMP1385 = Program . searchPointInRegion1 ( RX10_TEMP1384 , RX10_TEMP1382 ) ; final int RX10_TEMP1386 = 0 ; final boolean RX10_TEMP1387 = RX10_TEMP1385 < RX10_TEMP1386 ; if ( RX10_TEMP1387 ) { String RX10_TEMP1388 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1388 ) ; }
 final place RX10_TEMP1389 = Program . getPlaceFromDist1 ( RX10_TEMP1383 , RX10_TEMP1385 ) ; final place RX10_TEMP1391 = here ; final boolean RX10_TEMP1392 = RX10_TEMP1389 != RX10_TEMP1391 ; if ( RX10_TEMP1392 ) { String RX10_TEMP1390 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1390 ) ; }
 Program . setRefArrayValue1int ( finished , RX10_TEMP1385 , X10_TEMP571 ) ; }
 }
 final Point1 RX10_TEMP1393 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1394 = sendCount . distValue ; final Region1 RX10_TEMP1395 = RX10_TEMP1394 . dReg ; final int RX10_TEMP1396 = Program . searchPointInRegion1 ( RX10_TEMP1395 , RX10_TEMP1393 ) ; final int RX10_TEMP1397 = 0 ; final boolean RX10_TEMP1398 = RX10_TEMP1396 < RX10_TEMP1397 ; if ( RX10_TEMP1398 ) { String RX10_TEMP1399 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1399 ) ; }
 final place RX10_TEMP1400 = Program . getPlaceFromDist1 ( RX10_TEMP1394 , RX10_TEMP1396 ) ; final place RX10_TEMP1402 = here ; final boolean RX10_TEMP1403 = RX10_TEMP1400 != RX10_TEMP1402 ; if ( RX10_TEMP1403 ) { String RX10_TEMP1401 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP1401 ) ; }
 final int RX10_TEMP1404 = Program . getRefArrayValue1int ( sendCount , RX10_TEMP1396 ) ; final int X10_TEMP573 = ( RX10_TEMP1404 ) ; final boolean X10_TEMP575 = lDeficit > X10_TEMP573 ; if ( X10_TEMP575 ) { final Point1 RX10_TEMP1405 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1406 = finished . distValue ; final Region1 RX10_TEMP1407 = RX10_TEMP1406 . dReg ; final int RX10_TEMP1408 = Program . searchPointInRegion1 ( RX10_TEMP1407 , RX10_TEMP1405 ) ; final int RX10_TEMP1409 = 0 ; final boolean RX10_TEMP1410 = RX10_TEMP1408 < RX10_TEMP1409 ; if ( RX10_TEMP1410 ) { String RX10_TEMP1411 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1411 ) ; }
 final place RX10_TEMP1412 = Program . getPlaceFromDist1 ( RX10_TEMP1406 , RX10_TEMP1408 ) ; final place RX10_TEMP1414 = here ; final boolean RX10_TEMP1415 = RX10_TEMP1412 != RX10_TEMP1414 ; if ( RX10_TEMP1415 ) { String RX10_TEMP1413 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1413 ) ; }
 final int RX10_TEMP1416 = Program . getRefArrayValue1int ( finished , RX10_TEMP1408 ) ; final int X10_TEMP577 = ( RX10_TEMP1416 ) ; final int X10_TEMP578 = 1 ; final Point1 RX10_TEMP1417 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1418 = finished . distValue ; final Region1 RX10_TEMP1419 = RX10_TEMP1418 . dReg ; final int RX10_TEMP1420 = Program . searchPointInRegion1 ( RX10_TEMP1419 , RX10_TEMP1417 ) ; final int RX10_TEMP1421 = 0 ; final boolean RX10_TEMP1422 = RX10_TEMP1420 < RX10_TEMP1421 ; if ( RX10_TEMP1422 ) { String RX10_TEMP1423 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1423 ) ; }
 final place RX10_TEMP1424 = Program . getPlaceFromDist1 ( RX10_TEMP1418 , RX10_TEMP1420 ) ; final place RX10_TEMP1426 = here ; final boolean RX10_TEMP1427 = RX10_TEMP1424 != RX10_TEMP1426 ; if ( RX10_TEMP1427 ) { String RX10_TEMP1425 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1425 ) ; }
 final int RX10_TEMP1428 = Program . getRefArrayValue1int ( finished , RX10_TEMP1420 ) ; final int X10_TEMP579 = ( RX10_TEMP1428 ) ; final int X10_TEMP580 = ( X10_TEMP579 + X10_TEMP578 ) ; final Point1 RX10_TEMP1429 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1430 = finished . distValue ; final Region1 RX10_TEMP1431 = RX10_TEMP1430 . dReg ; final int RX10_TEMP1432 = Program . searchPointInRegion1 ( RX10_TEMP1431 , RX10_TEMP1429 ) ; final int RX10_TEMP1433 = 0 ; final boolean RX10_TEMP1434 = RX10_TEMP1432 < RX10_TEMP1433 ; if ( RX10_TEMP1434 ) { String RX10_TEMP1435 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1435 ) ; }
 final place RX10_TEMP1436 = Program . getPlaceFromDist1 ( RX10_TEMP1430 , RX10_TEMP1432 ) ; final place RX10_TEMP1438 = here ; final boolean RX10_TEMP1439 = RX10_TEMP1436 != RX10_TEMP1438 ; if ( RX10_TEMP1439 ) { String RX10_TEMP1437 = "Bad place access for array finished" ; throw new RuntimeException ( RX10_TEMP1437 ) ; }
 Program . setRefArrayValue1int ( finished , RX10_TEMP1432 , X10_TEMP580 ) ; }
 final place X10_TEMP581 = ( here ) ; final boolean X10_TEMP582 = ( X10_TEMP581 . isLast ( ) ) ; final boolean X10_TEMP584 = ! X10_TEMP582 ; if ( X10_TEMP584 ) { final Point1 RX10_TEMP1440 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1441 = recvCount . distValue ; final Region1 RX10_TEMP1442 = RX10_TEMP1441 . dReg ; final int RX10_TEMP1443 = Program . searchPointInRegion1 ( RX10_TEMP1442 , RX10_TEMP1440 ) ; final int RX10_TEMP1444 = 0 ; final boolean RX10_TEMP1445 = RX10_TEMP1443 < RX10_TEMP1444 ; if ( RX10_TEMP1445 ) { String RX10_TEMP1446 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1446 ) ; }
 final place RX10_TEMP1447 = Program . getPlaceFromDist1 ( RX10_TEMP1441 , RX10_TEMP1443 ) ; final place RX10_TEMP1449 = here ; final boolean RX10_TEMP1450 = RX10_TEMP1447 != RX10_TEMP1449 ; if ( RX10_TEMP1450 ) { String RX10_TEMP1448 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP1448 ) ; }
 final int RX10_TEMP1451 = Program . getRefArrayValue1int ( recvCount , RX10_TEMP1443 ) ; final int count = ( RX10_TEMP1451 ) ; final Point1 RX10_TEMP1452 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1453 = recvGrids . distValue ; final Region1 RX10_TEMP1454 = RX10_TEMP1453 . dReg ; final int RX10_TEMP1455 = Program . searchPointInRegion1 ( RX10_TEMP1454 , RX10_TEMP1452 ) ; final int RX10_TEMP1456 = 0 ; final boolean RX10_TEMP1457 = RX10_TEMP1455 < RX10_TEMP1456 ; if ( RX10_TEMP1457 ) { String RX10_TEMP1458 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1458 ) ; }
 final place RX10_TEMP1459 = Program . getPlaceFromDist1 ( RX10_TEMP1453 , RX10_TEMP1455 ) ; final place RX10_TEMP1461 = here ; final boolean RX10_TEMP1462 = RX10_TEMP1459 != RX10_TEMP1461 ; if ( RX10_TEMP1462 ) { String RX10_TEMP1460 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP1460 ) ; }
 final int RX10_TEMP1463 = Program . getRefArrayValue1int ( recvGrids , RX10_TEMP1455 ) ; final int gsize = ( RX10_TEMP1463 ) ; final Point1 RX10_TEMP1464 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1465 = runningPTotals . distValue ; final Region1 RX10_TEMP1466 = RX10_TEMP1465 . dReg ; final int RX10_TEMP1467 = Program . searchPointInRegion1 ( RX10_TEMP1466 , RX10_TEMP1464 ) ; final int RX10_TEMP1468 = 0 ; final boolean RX10_TEMP1469 = RX10_TEMP1467 < RX10_TEMP1468 ; if ( RX10_TEMP1469 ) { String RX10_TEMP1470 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1470 ) ; }
 final place RX10_TEMP1471 = Program . getPlaceFromDist1 ( RX10_TEMP1465 , RX10_TEMP1467 ) ; final place RX10_TEMP1473 = here ; final boolean RX10_TEMP1474 = RX10_TEMP1471 != RX10_TEMP1473 ; if ( RX10_TEMP1474 ) { String RX10_TEMP1472 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1472 ) ; }
 final int RX10_TEMP1475 = Program . getRefArrayValue1int ( runningPTotals , RX10_TEMP1467 ) ; final int X10_TEMP591 = ( RX10_TEMP1475 ) ; final int X10_TEMP593 = ( X10_TEMP591 + count ) ; final int X10_TEMP594 = ( X10_TEMP593 ) ; final Point1 RX10_TEMP1476 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1477 = runningPTotals . distValue ; final Region1 RX10_TEMP1478 = RX10_TEMP1477 . dReg ; final int RX10_TEMP1479 = Program . searchPointInRegion1 ( RX10_TEMP1478 , RX10_TEMP1476 ) ; final int RX10_TEMP1480 = 0 ; final boolean RX10_TEMP1481 = RX10_TEMP1479 < RX10_TEMP1480 ; if ( RX10_TEMP1481 ) { String RX10_TEMP1482 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1482 ) ; }
 final place RX10_TEMP1483 = Program . getPlaceFromDist1 ( RX10_TEMP1477 , RX10_TEMP1479 ) ; final place RX10_TEMP1485 = here ; final boolean RX10_TEMP1486 = RX10_TEMP1483 != RX10_TEMP1485 ; if ( RX10_TEMP1486 ) { String RX10_TEMP1484 = "Bad place access for array runningPTotals" ; throw new RuntimeException ( RX10_TEMP1484 ) ; }
 Program . setRefArrayValue1int ( runningPTotals , RX10_TEMP1479 , X10_TEMP594 ) ; final Point1 RX10_TEMP1487 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1488 = runningGTotals . distValue ; final Region1 RX10_TEMP1489 = RX10_TEMP1488 . dReg ; final int RX10_TEMP1490 = Program . searchPointInRegion1 ( RX10_TEMP1489 , RX10_TEMP1487 ) ; final int RX10_TEMP1491 = 0 ; final boolean RX10_TEMP1492 = RX10_TEMP1490 < RX10_TEMP1491 ; if ( RX10_TEMP1492 ) { String RX10_TEMP1493 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1493 ) ; }
 final place RX10_TEMP1494 = Program . getPlaceFromDist1 ( RX10_TEMP1488 , RX10_TEMP1490 ) ; final place RX10_TEMP1496 = here ; final boolean RX10_TEMP1497 = RX10_TEMP1494 != RX10_TEMP1496 ; if ( RX10_TEMP1497 ) { String RX10_TEMP1495 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP1495 ) ; }
 final int RX10_TEMP1498 = Program . getRefArrayValue1int ( runningGTotals , RX10_TEMP1490 ) ; final int X10_TEMP597 = ( RX10_TEMP1498 ) ; final int X10_TEMP599 = ( X10_TEMP597 + gsize ) ; final int X10_TEMP600 = ( X10_TEMP599 ) ; final Point1 RX10_TEMP1499 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1500 = runningGTotals . distValue ; final Region1 RX10_TEMP1501 = RX10_TEMP1500 . dReg ; final int RX10_TEMP1502 = Program . searchPointInRegion1 ( RX10_TEMP1501 , RX10_TEMP1499 ) ; final int RX10_TEMP1503 = 0 ; final boolean RX10_TEMP1504 = RX10_TEMP1502 < RX10_TEMP1503 ; if ( RX10_TEMP1504 ) { String RX10_TEMP1505 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1505 ) ; }
 final place RX10_TEMP1506 = Program . getPlaceFromDist1 ( RX10_TEMP1500 , RX10_TEMP1502 ) ; final place RX10_TEMP1508 = here ; final boolean RX10_TEMP1509 = RX10_TEMP1506 != RX10_TEMP1508 ; if ( RX10_TEMP1509 ) { String RX10_TEMP1507 = "Bad place access for array runningGTotals" ; throw new RuntimeException ( RX10_TEMP1507 ) ; }
 Program . setRefArrayValue1int ( runningGTotals , RX10_TEMP1502 , X10_TEMP600 ) ; final int X10_TEMP603 = ( count ) ; final Point1 RX10_TEMP1510 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1511 = sendCount . distValue ; final Region1 RX10_TEMP1512 = RX10_TEMP1511 . dReg ; final int RX10_TEMP1513 = Program . searchPointInRegion1 ( RX10_TEMP1512 , RX10_TEMP1510 ) ; final int RX10_TEMP1514 = 0 ; final boolean RX10_TEMP1515 = RX10_TEMP1513 < RX10_TEMP1514 ; if ( RX10_TEMP1515 ) { String RX10_TEMP1516 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1516 ) ; }
 final place RX10_TEMP1517 = Program . getPlaceFromDist1 ( RX10_TEMP1511 , RX10_TEMP1513 ) ; final place RX10_TEMP1519 = here ; final boolean RX10_TEMP1520 = RX10_TEMP1517 != RX10_TEMP1519 ; if ( RX10_TEMP1520 ) { String RX10_TEMP1518 = "Bad place access for array sendCount" ; throw new RuntimeException ( RX10_TEMP1518 ) ; }
 Program . setRefArrayValue1int ( sendCount , RX10_TEMP1513 , X10_TEMP603 ) ; final int X10_TEMP606 = ( gsize ) ; final Point1 RX10_TEMP1521 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1522 = sendGrids . distValue ; final Region1 RX10_TEMP1523 = RX10_TEMP1522 . dReg ; final int RX10_TEMP1524 = Program . searchPointInRegion1 ( RX10_TEMP1523 , RX10_TEMP1521 ) ; final int RX10_TEMP1525 = 0 ; final boolean RX10_TEMP1526 = RX10_TEMP1524 < RX10_TEMP1525 ; if ( RX10_TEMP1526 ) { String RX10_TEMP1527 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1527 ) ; }
 final place RX10_TEMP1528 = Program . getPlaceFromDist1 ( RX10_TEMP1522 , RX10_TEMP1524 ) ; final place RX10_TEMP1530 = here ; final boolean RX10_TEMP1531 = RX10_TEMP1528 != RX10_TEMP1530 ; if ( RX10_TEMP1531 ) { String RX10_TEMP1529 = "Bad place access for array sendGrids" ; throw new RuntimeException ( RX10_TEMP1529 ) ; }
 Program . setRefArrayValue1int ( sendGrids , RX10_TEMP1524 , X10_TEMP606 ) ; final int X10_TEMP612 = ( 0 ) ; final int X10_TEMP610 = ( 1 ) ; final int X10_TEMP613 = ( gsize - X10_TEMP610 ) ; final Region2 X10_TEMP615 = Program . createNewRegion2RR ( pl , pl , X10_TEMP612 , X10_TEMP613 ) ; final place X10_TEMP616 = here ; final int RX10_TEMP1535 = 1 ; int RX10_TEMP1533 = X10_TEMP615 . regSize ; RX10_TEMP1533 = RX10_TEMP1533 - RX10_TEMP1535 ; final region ( : rank==1 ) RX10_TEMP1534 = [ 0 : RX10_TEMP1533 ] ; for ( point ( : rank==1 ) RX10_TEMP1532 : RX10_TEMP1534 ) { final int RX10_TEMP1536 = RX10_TEMP1532 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP615 , RX10_TEMP1536 ) ; 
 final T298 utmp298 = new T298(pt, rCountBuffer, sCountBuffer);
 async (X10_TEMP616) {Program.thread298(utmp298); }
 }
 }
 }
 }
 public static void thread134(final T134 utmpz) {final  int RX10_TEMP1570 = utmpz.RX10_TEMP1570;
final  place RX10_TEMP1566 = utmpz.RX10_TEMP1566;
final  point ( : rank==1 ) RX10_TEMP1565 = utmpz.RX10_TEMP1565;
final  intStub [ : rank==1 ] RX10_TEMP1564 = utmpz.RX10_TEMP1564;
 { final dist ( : rank==1 ) RX10_TEMP1571 = [ 0 : RX10_TEMP1570 ] -> here ; final int [ : rank==1 ] RX10_TEMP1572 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1571 ] ) ; final intStub RX10_TEMP1573 = new intStub ( RX10_TEMP1572 ) ; 
 final T299 utmp299 = new T299(RX10_TEMP1573, RX10_TEMP1565, RX10_TEMP1564);
 async (RX10_TEMP1566) {Program.thread299(utmp299); }
 }
 }
 public static void thread135(final T135 utmpz) {final  int RX10_TEMP1590 = utmpz.RX10_TEMP1590;
final  place RX10_TEMP1586 = utmpz.RX10_TEMP1586;
final  point ( : rank==1 ) RX10_TEMP1585 = utmpz.RX10_TEMP1585;
final  intStub [ : rank==1 ] RX10_TEMP1584 = utmpz.RX10_TEMP1584;
 { final dist ( : rank==1 ) RX10_TEMP1591 = [ 0 : RX10_TEMP1590 ] -> here ; final int [ : rank==1 ] RX10_TEMP1592 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP1591 ] ) ; final intStub RX10_TEMP1593 = new intStub ( RX10_TEMP1592 ) ; 
 final T300 utmp300 = new T300(RX10_TEMP1593, RX10_TEMP1585, RX10_TEMP1584);
 async (RX10_TEMP1586) {Program.thread300(utmp300); }
 }
 }
 public static void thread136(final T136 utmpz) {final  Point1 pl = utmpz.pl;
final  intRefArray1 lowerbounds = utmpz.lowerbounds;
final  place pHere = utmpz.pHere;
final  doubleRefArray1 border = utmpz.border;
 { final Dist1 RX10_TEMP1610 = border . distValue ; final Region1 RX10_TEMP1611 = RX10_TEMP1610 . dReg ; final int RX10_TEMP1612 = Program . searchPointInRegion1 ( RX10_TEMP1611 , pl ) ; final int RX10_TEMP1613 = 0 ; final boolean RX10_TEMP1614 = RX10_TEMP1612 < RX10_TEMP1613 ; if ( RX10_TEMP1614 ) { String RX10_TEMP1615 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1615 ) ; }
 final place RX10_TEMP1616 = Program . getPlaceFromDist1 ( RX10_TEMP1610 , RX10_TEMP1612 ) ; final place RX10_TEMP1618 = here ; final boolean RX10_TEMP1619 = RX10_TEMP1616 != RX10_TEMP1618 ; if ( RX10_TEMP1619 ) { String RX10_TEMP1617 = "Bad place access for array border" ; throw new RuntimeException ( RX10_TEMP1617 ) ; }
 final double RX10_TEMP1620 = Program . getRefArrayValue1double ( border , RX10_TEMP1612 ) ; final double edge = ( RX10_TEMP1620 ) ; 
 final T301 utmp301 = new T301(edge, pl, lowerbounds);
 async (pHere) {Program.thread301(utmp301); }
 }
 }
 public static void thread137(final T137 utmpz) {final  int RX10_TEMP13 = utmpz.RX10_TEMP13;
final  place RX10_TEMP9 = utmpz.RX10_TEMP9;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  ParticleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP13 ] -> here ; final Particle [ : rank==1 ] RX10_TEMP15 = ( Particle [ : rank==1 ] ) ( new Particle [ RX10_TEMP14 ] ) ; final ParticleStub RX10_TEMP16 = new ParticleStub ( RX10_TEMP15 ) ; 
 final T302 utmp302 = new T302(RX10_TEMP16, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP9) {Program.thread302(utmp302); }
 }
 }
 public static void thread138(final T138 utmpz) {final  int RX10_TEMP33 = utmpz.RX10_TEMP33;
final  place RX10_TEMP29 = utmpz.RX10_TEMP29;
final  point ( : rank==1 ) RX10_TEMP28 = utmpz.RX10_TEMP28;
final  intStub [ : rank==1 ] RX10_TEMP27 = utmpz.RX10_TEMP27;
 { final dist ( : rank==1 ) RX10_TEMP34 = [ 0 : RX10_TEMP33 ] -> here ; final int [ : rank==1 ] RX10_TEMP35 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP34 ] ) ; final intStub RX10_TEMP36 = new intStub ( RX10_TEMP35 ) ; 
 final T303 utmp303 = new T303(RX10_TEMP36, RX10_TEMP28, RX10_TEMP27);
 async (RX10_TEMP29) {Program.thread303(utmp303); }
 }
 }
 public static void thread139(final T139 utmpz) {final  int RX10_TEMP53 = utmpz.RX10_TEMP53;
final  place RX10_TEMP49 = utmpz.RX10_TEMP49;
final  point ( : rank==1 ) RX10_TEMP48 = utmpz.RX10_TEMP48;
final  intStub [ : rank==1 ] RX10_TEMP47 = utmpz.RX10_TEMP47;
 { final dist ( : rank==1 ) RX10_TEMP55 = [ 0 : RX10_TEMP53 ] -> here ; final int [ : rank==1 ] RX10_TEMP56 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP55 ] ( point ( : rank==1 ) RX10_TEMP54 ) { final int X10_TEMP9 = ( 0 ) ; return X10_TEMP9 ; }
 ) ; final intStub RX10_TEMP57 = new intStub ( RX10_TEMP56 ) ; 
 final T304 utmp304 = new T304(RX10_TEMP57, RX10_TEMP48, RX10_TEMP47);
 async (RX10_TEMP49) {Program.thread304(utmp304); }
 }
 }
 public static void thread140(final T140 utmpz) {final  intRefArray1 count = utmpz.count;
final  Dist1 dCount = utmpz.dCount;
final  intRefArray1 indices = utmpz.indices;
final  ParticleRefArray1 result = utmpz.result;
final  ParticleRefArray1 particles = utmpz.particles;
 { final Dist1 RX10_TEMP74 = particles . distValue ; final Dist1 dP = RX10_TEMP74 ; final Region1 rLocalP = Program . X10Util_get1DLRegion ( dP ) ; final Region1 rLocalC = Program . X10Util_get1DLRegion ( dCount ) ; final Dist1 RX10_TEMP75 = particles . distValue ; final Dist1 X10_TEMP19 = RX10_TEMP75 ; final place X10_TEMP20 = ( here ) ; final Dist1 X10_TEMP22 = Program . restrictDist1 ( X10_TEMP19 , X10_TEMP20 ) ; final Region1 RX10_TEMP77 = X10_TEMP22 . dReg ; final int RX10_TEMP80 = 1 ; int RX10_TEMP78 = RX10_TEMP77 . regSize ; RX10_TEMP78 = RX10_TEMP78 - RX10_TEMP80 ; final region ( : rank==1 ) RX10_TEMP79 = [ 0 : RX10_TEMP78 ] ; for ( point ( : rank==1 ) RX10_TEMP76 : RX10_TEMP79 ) { final int RX10_TEMP81 = RX10_TEMP76 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP77 , RX10_TEMP81 ) ; final Dist1 RX10_TEMP82 = particles . distValue ; final Region1 RX10_TEMP83 = RX10_TEMP82 . dReg ; final int RX10_TEMP84 = Program . searchPointInRegion1 ( RX10_TEMP83 , pt ) ; final int RX10_TEMP85 = 0 ; final boolean RX10_TEMP86 = RX10_TEMP84 < RX10_TEMP85 ; if ( RX10_TEMP86 ) { String RX10_TEMP87 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP87 ) ; }
 final place RX10_TEMP88 = Program . getPlaceFromDist1 ( RX10_TEMP82 , RX10_TEMP84 ) ; final place RX10_TEMP90 = here ; final boolean RX10_TEMP91 = RX10_TEMP88 != RX10_TEMP90 ; if ( RX10_TEMP91 ) { String RX10_TEMP89 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP89 ) ; }
 final Particle RX10_TEMP92 = Program . getRefArrayValue1Particle ( particles , RX10_TEMP84 ) ; final Particle X10_TEMP24 = ( RX10_TEMP92 ) ; final double X10_TEMP25 = ( Program . Particle_getY ( X10_TEMP24 ) ) ; final int y = ( ( int ) X10_TEMP25 ) ; final Point1 RX10_TEMP93 = new Point1 ( y ) ; final Dist1 RX10_TEMP94 = count . distValue ; final Region1 RX10_TEMP95 = RX10_TEMP94 . dReg ; final int RX10_TEMP96 = Program . searchPointInRegion1 ( RX10_TEMP95 , RX10_TEMP93 ) ; final int RX10_TEMP97 = 0 ; final boolean RX10_TEMP98 = RX10_TEMP96 < RX10_TEMP97 ; if ( RX10_TEMP98 ) { String RX10_TEMP99 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP99 ) ; }
 final place RX10_TEMP100 = Program . getPlaceFromDist1 ( RX10_TEMP94 , RX10_TEMP96 ) ; final place RX10_TEMP102 = here ; final boolean RX10_TEMP103 = RX10_TEMP100 != RX10_TEMP102 ; if ( RX10_TEMP103 ) { String RX10_TEMP101 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP101 ) ; }
 final int RX10_TEMP104 = Program . getRefArrayValue1int ( count , RX10_TEMP96 ) ; final int X10_TEMP28 = ( RX10_TEMP104 ) ; final int X10_TEMP29 = 1 ; final Point1 RX10_TEMP105 = new Point1 ( y ) ; final Dist1 RX10_TEMP106 = count . distValue ; final Region1 RX10_TEMP107 = RX10_TEMP106 . dReg ; final int RX10_TEMP108 = Program . searchPointInRegion1 ( RX10_TEMP107 , RX10_TEMP105 ) ; final int RX10_TEMP109 = 0 ; final boolean RX10_TEMP110 = RX10_TEMP108 < RX10_TEMP109 ; if ( RX10_TEMP110 ) { String RX10_TEMP111 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP111 ) ; }
 final place RX10_TEMP112 = Program . getPlaceFromDist1 ( RX10_TEMP106 , RX10_TEMP108 ) ; final place RX10_TEMP114 = here ; final boolean RX10_TEMP115 = RX10_TEMP112 != RX10_TEMP114 ; if ( RX10_TEMP115 ) { String RX10_TEMP113 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP113 ) ; }
 final int RX10_TEMP116 = Program . getRefArrayValue1int ( count , RX10_TEMP108 ) ; final int X10_TEMP30 = ( RX10_TEMP116 ) ; final int X10_TEMP31 = ( X10_TEMP30 + X10_TEMP29 ) ; final Point1 RX10_TEMP117 = new Point1 ( y ) ; final Dist1 RX10_TEMP118 = count . distValue ; final Region1 RX10_TEMP119 = RX10_TEMP118 . dReg ; final int RX10_TEMP120 = Program . searchPointInRegion1 ( RX10_TEMP119 , RX10_TEMP117 ) ; final int RX10_TEMP121 = 0 ; final boolean RX10_TEMP122 = RX10_TEMP120 < RX10_TEMP121 ; if ( RX10_TEMP122 ) { String RX10_TEMP123 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP123 ) ; }
 final place RX10_TEMP124 = Program . getPlaceFromDist1 ( RX10_TEMP118 , RX10_TEMP120 ) ; final place RX10_TEMP126 = here ; final boolean RX10_TEMP127 = RX10_TEMP124 != RX10_TEMP126 ; if ( RX10_TEMP127 ) { String RX10_TEMP125 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP125 ) ; }
 Program . setRefArrayValue1int ( count , RX10_TEMP120 , X10_TEMP31 ) ; final int X10_TEMP34 = ( y ) ; final Dist1 RX10_TEMP128 = indices . distValue ; final Region1 RX10_TEMP129 = RX10_TEMP128 . dReg ; final int RX10_TEMP130 = Program . searchPointInRegion1 ( RX10_TEMP129 , pt ) ; final int RX10_TEMP131 = 0 ; final boolean RX10_TEMP132 = RX10_TEMP130 < RX10_TEMP131 ; if ( RX10_TEMP132 ) { String RX10_TEMP133 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP133 ) ; }
 final place RX10_TEMP134 = Program . getPlaceFromDist1 ( RX10_TEMP128 , RX10_TEMP130 ) ; final place RX10_TEMP136 = here ; final boolean RX10_TEMP137 = RX10_TEMP134 != RX10_TEMP136 ; if ( RX10_TEMP137 ) { String RX10_TEMP135 = "Bad place access for array indices" ; throw new RuntimeException ( RX10_TEMP135 ) ; }
 Program . setRefArrayValue1int ( indices , RX10_TEMP130 , X10_TEMP34 ) ; }
 final place X10_TEMP35 = ( here ) ; final Dist1 dLocalC = Program . getPlaceDist1 ( rLocalC , X10_TEMP35 ) ; final int X10_TEMP37 = ( rLocalP . regSize ) ; final int X10_TEMP38 = ( 0 ) ; final boolean X10_TEMP40 = ( X10_TEMP37 > X10_TEMP38 ) ; final boolean X10_TEMP41 = X10_TEMP40 ; int X10_TEMP44 = 0 ; if ( X10_TEMP41 ) { final int RX10_TEMP138 = rLocalP . regSize ; final int RX10_TEMP139 = 0 ; final boolean RX10_TEMP140 = RX10_TEMP138 <= RX10_TEMP139 ; if ( RX10_TEMP140 ) { final String RX10_TEMP141 = "Operation low() not defined on empty region rLocalP" ; throw new RuntimeException ( RX10_TEMP141 ) ; }
 X10_TEMP44 = Program . regionLow ( rLocalP ) ; }
 final int X10_TEMP45 = X10_TEMP44 ; int offset = ( X10_TEMP45 ) ; final Region1 RX10_TEMP142 = dLocalC . dReg ; final int RX10_TEMP143 = 0 ; final int RX10_TEMP144 = 1 ; int RX10_TEMP145 = place.MAX_PLACES ; RX10_TEMP145 = RX10_TEMP145 - RX10_TEMP144 ; final region ( : rank==1 ) RX10_TEMP146 = [ 0 : RX10_TEMP145 ] ; final dist ( : rank==1 ) RX10_TEMP147 = [ 0 : RX10_TEMP145 ] -> here ; final intStub [ : rank==1 ] RX10_TEMP148 = ( intStub [ : rank==1 ] ) ( new intStub [ RX10_TEMP147 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP149 : RX10_TEMP146 ) { final place RX10_TEMP150 = here ; final int RX10_TEMP151 = RX10_TEMP149 [0] ; final place RX10_TEMP152 = place.places ( RX10_TEMP151 ) ; final int RX10_TEMP153 = Program . getDistLocalCount1 ( dLocalC , RX10_TEMP151 ) ; final int RX10_TEMP154 = RX10_TEMP153 - RX10_TEMP144 ; 
 final T305 utmp305 = new T305(RX10_TEMP154, RX10_TEMP150, RX10_TEMP149, RX10_TEMP148);
 async (RX10_TEMP152) {Program.thread305(utmp305); }
 }
 }
 final intStub value [ : rank==1 ] RX10_TEMP158 = ( intStub value [ : rank==1 ] ) ( new intStub value [ RX10_TEMP146 ] ( point ( : rank==1 ) RX10_TEMP160 ) { final intStub RX10_TEMP159 = RX10_TEMP148 [ RX10_TEMP160 ] ; return RX10_TEMP159 ; }
 ) ; final intRefArray1 RX10_TEMP161 = new intRefArray1 ( dLocalC , RX10_TEMP158 ) ; intRefArray1 offsets = RX10_TEMP161 ; final int RX10_TEMP165 = 1 ; int RX10_TEMP163 = rLocalC . regSize ; RX10_TEMP163 = RX10_TEMP163 - RX10_TEMP165 ; final region ( : rank==1 ) RX10_TEMP164 = [ 0 : RX10_TEMP163 ] ; for ( point ( : rank==1 ) RX10_TEMP162 : RX10_TEMP164 ) { final int RX10_TEMP166 = RX10_TEMP162 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( rLocalC , RX10_TEMP166 ) ; final Dist1 RX10_TEMP167 = count . distValue ; final Region1 RX10_TEMP168 = RX10_TEMP167 . dReg ; final int RX10_TEMP169 = Program . searchPointInRegion1 ( RX10_TEMP168 , pt ) ; final int RX10_TEMP170 = 0 ; final boolean RX10_TEMP171 = RX10_TEMP169 < RX10_TEMP170 ; if ( RX10_TEMP171 ) { String RX10_TEMP172 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP172 ) ; }
 final place RX10_TEMP173 = Program . getPlaceFromDist1 ( RX10_TEMP167 , RX10_TEMP169 ) ; final place RX10_TEMP175 = here ; final boolean RX10_TEMP176 = RX10_TEMP173 != RX10_TEMP175 ; if ( RX10_TEMP176 ) { String RX10_TEMP174 = "Bad place access for array count" ; throw new RuntimeException ( RX10_TEMP174 ) ; }
 final int RX10_TEMP177 = Program . getRefArrayValue1int ( count , RX10_TEMP169 ) ; final int n = ( RX10_TEMP177 ) ; final int X10_TEMP52 = ( offset ) ; final Dist1 RX10_TEMP178 = offsets . distValue ; final Region1 RX10_TEMP179 = RX10_TEMP178 . dReg ; final int RX10_TEMP180 = Program . searchPointInRegion1 ( RX10_TEMP179 , pt ) ; final int RX10_TEMP181 = 0 ; final boolean RX10_TEMP182 = RX10_TEMP180 < RX10_TEMP181 ; if ( RX10_TEMP182 ) { String RX10_TEMP183 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP183 ) ; }
 final place RX10_TEMP184 = Program . getPlaceFromDist1 ( RX10_TEMP178 , RX10_TEMP180 ) ; final place RX10_TEMP186 = here ; final boolean RX10_TEMP187 = RX10_TEMP184 != RX10_TEMP186 ; if ( RX10_TEMP187 ) { String RX10_TEMP185 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP185 ) ; }
 Program . setRefArrayValue1int ( offsets , RX10_TEMP180 , X10_TEMP52 ) ; final int X10_TEMP54 = ( offset + n ) ; offset = ( X10_TEMP54 ) ; }
 final int RX10_TEMP191 = 1 ; int RX10_TEMP189 = rLocalP . regSize ; RX10_TEMP189 = RX10_TEMP189 - RX10_TEMP191 ; final region ( : rank==1 ) RX10_TEMP190 = [ 0 : RX10_TEMP189 ] ; for ( point ( : rank==1 ) RX10_TEMP188 : RX10_TEMP190 ) { final int RX10_TEMP192 = RX10_TEMP188 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( rLocalP , RX10_TEMP192 ) ; final Dist1 RX10_TEMP193 = indices . distValue ; final Region1 RX10_TEMP194 = RX10_TEMP193 . dReg ; final int RX10_TEMP195 = Program . searchPointInRegion1 ( RX10_TEMP194 , pt ) ; final int RX10_TEMP196 = 0 ; final boolean RX10_TEMP197 = RX10_TEMP195 < RX10_TEMP196 ; if ( RX10_TEMP197 ) { String RX10_TEMP198 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP198 ) ; }
 final place RX10_TEMP199 = Program . getPlaceFromDist1 ( RX10_TEMP193 , RX10_TEMP195 ) ; final place RX10_TEMP201 = here ; final boolean RX10_TEMP202 = RX10_TEMP199 != RX10_TEMP201 ; if ( RX10_TEMP202 ) { String RX10_TEMP200 = "Bad place access for array indices" ; throw new RuntimeException ( RX10_TEMP200 ) ; }
 final int RX10_TEMP203 = Program . getRefArrayValue1int ( indices , RX10_TEMP195 ) ; final int index = ( RX10_TEMP203 ) ; final Point1 RX10_TEMP204 = new Point1 ( index ) ; final Dist1 RX10_TEMP205 = offsets . distValue ; final Region1 RX10_TEMP206 = RX10_TEMP205 . dReg ; final int RX10_TEMP207 = Program . searchPointInRegion1 ( RX10_TEMP206 , RX10_TEMP204 ) ; final int RX10_TEMP208 = 0 ; final boolean RX10_TEMP209 = RX10_TEMP207 < RX10_TEMP208 ; if ( RX10_TEMP209 ) { String RX10_TEMP210 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP210 ) ; }
 final place RX10_TEMP211 = Program . getPlaceFromDist1 ( RX10_TEMP205 , RX10_TEMP207 ) ; final place RX10_TEMP213 = here ; final boolean RX10_TEMP214 = RX10_TEMP211 != RX10_TEMP213 ; if ( RX10_TEMP214 ) { String RX10_TEMP212 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP212 ) ; }
 final int RX10_TEMP215 = Program . getRefArrayValue1int ( offsets , RX10_TEMP207 ) ; final int X10_TEMP61 = ( RX10_TEMP215 ) ; final int X10_TEMP62 = ( X10_TEMP61 ) ; final Dist1 RX10_TEMP216 = indices . distValue ; final Region1 RX10_TEMP217 = RX10_TEMP216 . dReg ; final int RX10_TEMP218 = Program . searchPointInRegion1 ( RX10_TEMP217 , pt ) ; final int RX10_TEMP219 = 0 ; final boolean RX10_TEMP220 = RX10_TEMP218 < RX10_TEMP219 ; if ( RX10_TEMP220 ) { String RX10_TEMP221 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP221 ) ; }
 final place RX10_TEMP222 = Program . getPlaceFromDist1 ( RX10_TEMP216 , RX10_TEMP218 ) ; final place RX10_TEMP224 = here ; final boolean RX10_TEMP225 = RX10_TEMP222 != RX10_TEMP224 ; if ( RX10_TEMP225 ) { String RX10_TEMP223 = "Bad place access for array indices" ; throw new RuntimeException ( RX10_TEMP223 ) ; }
 Program . setRefArrayValue1int ( indices , RX10_TEMP218 , X10_TEMP62 ) ; final Point1 RX10_TEMP226 = new Point1 ( index ) ; final Dist1 RX10_TEMP227 = offsets . distValue ; final Region1 RX10_TEMP228 = RX10_TEMP227 . dReg ; final int RX10_TEMP229 = Program . searchPointInRegion1 ( RX10_TEMP228 , RX10_TEMP226 ) ; final int RX10_TEMP230 = 0 ; final boolean RX10_TEMP231 = RX10_TEMP229 < RX10_TEMP230 ; if ( RX10_TEMP231 ) { String RX10_TEMP232 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP232 ) ; }
 final place RX10_TEMP233 = Program . getPlaceFromDist1 ( RX10_TEMP227 , RX10_TEMP229 ) ; final place RX10_TEMP235 = here ; final boolean RX10_TEMP236 = RX10_TEMP233 != RX10_TEMP235 ; if ( RX10_TEMP236 ) { String RX10_TEMP234 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP234 ) ; }
 final int RX10_TEMP237 = Program . getRefArrayValue1int ( offsets , RX10_TEMP229 ) ; final int X10_TEMP64 = ( RX10_TEMP237 ) ; final int X10_TEMP65 = 1 ; final Point1 RX10_TEMP238 = new Point1 ( index ) ; final Dist1 RX10_TEMP239 = offsets . distValue ; final Region1 RX10_TEMP240 = RX10_TEMP239 . dReg ; final int RX10_TEMP241 = Program . searchPointInRegion1 ( RX10_TEMP240 , RX10_TEMP238 ) ; final int RX10_TEMP242 = 0 ; final boolean RX10_TEMP243 = RX10_TEMP241 < RX10_TEMP242 ; if ( RX10_TEMP243 ) { String RX10_TEMP244 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP244 ) ; }
 final place RX10_TEMP245 = Program . getPlaceFromDist1 ( RX10_TEMP239 , RX10_TEMP241 ) ; final place RX10_TEMP247 = here ; final boolean RX10_TEMP248 = RX10_TEMP245 != RX10_TEMP247 ; if ( RX10_TEMP248 ) { String RX10_TEMP246 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP246 ) ; }
 final int RX10_TEMP249 = Program . getRefArrayValue1int ( offsets , RX10_TEMP241 ) ; final int X10_TEMP66 = ( RX10_TEMP249 ) ; final int X10_TEMP67 = ( X10_TEMP66 + X10_TEMP65 ) ; final Point1 RX10_TEMP250 = new Point1 ( index ) ; final Dist1 RX10_TEMP251 = offsets . distValue ; final Region1 RX10_TEMP252 = RX10_TEMP251 . dReg ; final int RX10_TEMP253 = Program . searchPointInRegion1 ( RX10_TEMP252 , RX10_TEMP250 ) ; final int RX10_TEMP254 = 0 ; final boolean RX10_TEMP255 = RX10_TEMP253 < RX10_TEMP254 ; if ( RX10_TEMP255 ) { String RX10_TEMP256 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP256 ) ; }
 final place RX10_TEMP257 = Program . getPlaceFromDist1 ( RX10_TEMP251 , RX10_TEMP253 ) ; final place RX10_TEMP259 = here ; final boolean RX10_TEMP260 = RX10_TEMP257 != RX10_TEMP259 ; if ( RX10_TEMP260 ) { String RX10_TEMP258 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP258 ) ; }
 Program . setRefArrayValue1int ( offsets , RX10_TEMP253 , X10_TEMP67 ) ; }
 final place X10_TEMP69 = here ; final int RX10_TEMP264 = 1 ; int RX10_TEMP262 = rLocalP . regSize ; RX10_TEMP262 = RX10_TEMP262 - RX10_TEMP264 ; final region ( : rank==1 ) RX10_TEMP263 = [ 0 : RX10_TEMP262 ] ; for ( point ( : rank==1 ) RX10_TEMP261 : RX10_TEMP263 ) { final int RX10_TEMP265 = RX10_TEMP261 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( rLocalP , RX10_TEMP265 ) ; 
 final T306 utmp306 = new T306(i, indices, result, particles);
 async (X10_TEMP69) {Program.thread306(utmp306); }
 }
 }
 }
 public static void thread141(final T141 utmpz) {final  Region1 RX10_TEMP15 = utmpz.RX10_TEMP15;
final  int RX10_TEMP13 = utmpz.RX10_TEMP13;
final  place RX10_TEMP9 = utmpz.RX10_TEMP9;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  intStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intRefArray1 data = utmpz.data;
 { final dist ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP13 ] -> here ; final int [ : rank==1 ] RX10_TEMP30 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP29 ] ( point ( : rank==1 ) RX10_TEMP16 ) { final int RX10_TEMP17 = RX10_TEMP16 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP15 , RX10_TEMP17 ) ; final Dist1 RX10_TEMP18 = data . distValue ; final Region1 RX10_TEMP19 = RX10_TEMP18 . dReg ; final int RX10_TEMP20 = Program . searchPointInRegion1 ( RX10_TEMP19 , pt ) ; final int RX10_TEMP21 = 0 ; final boolean RX10_TEMP22 = RX10_TEMP20 < RX10_TEMP21 ; if ( RX10_TEMP22 ) { String RX10_TEMP23 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP23 ) ; }
 final place RX10_TEMP24 = Program . getPlaceFromDist1 ( RX10_TEMP18 , RX10_TEMP20 ) ; final place RX10_TEMP26 = here ; final boolean RX10_TEMP27 = RX10_TEMP24 != RX10_TEMP26 ; if ( RX10_TEMP27 ) { String RX10_TEMP25 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP25 ) ; }
 final int RX10_TEMP28 = Program . getRefArrayValue1int ( data , RX10_TEMP20 ) ; final int X10_TEMP4 = ( RX10_TEMP28 ) ; return X10_TEMP4 ; }
 ) ; final intStub RX10_TEMP31 = new intStub ( RX10_TEMP30 ) ; 
 final T307 utmp307 = new T307(RX10_TEMP31, RX10_TEMP8, RX10_TEMP7);
 async (RX10_TEMP9) {Program.thread307(utmp307); }
 }
 }
 public static void thread142(final T142 utmpz) {final  Region1 RX10_TEMP50 = utmpz.RX10_TEMP50;
final  int RX10_TEMP48 = utmpz.RX10_TEMP48;
final  place RX10_TEMP44 = utmpz.RX10_TEMP44;
final  point ( : rank==1 ) RX10_TEMP43 = utmpz.RX10_TEMP43;
final  intStub [ : rank==1 ] RX10_TEMP42 = utmpz.RX10_TEMP42;
final  intRefArray1 data = utmpz.data;
 { final dist ( : rank==1 ) RX10_TEMP64 = [ 0 : RX10_TEMP48 ] -> here ; final int [ : rank==1 ] RX10_TEMP65 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP64 ] ( point ( : rank==1 ) RX10_TEMP51 ) { final int RX10_TEMP52 = RX10_TEMP51 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP50 , RX10_TEMP52 ) ; final Dist1 RX10_TEMP53 = data . distValue ; final Region1 RX10_TEMP54 = RX10_TEMP53 . dReg ; final int RX10_TEMP55 = Program . searchPointInRegion1 ( RX10_TEMP54 , pt ) ; final int RX10_TEMP56 = 0 ; final boolean RX10_TEMP57 = RX10_TEMP55 < RX10_TEMP56 ; if ( RX10_TEMP57 ) { String RX10_TEMP58 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP58 ) ; }
 final place RX10_TEMP59 = Program . getPlaceFromDist1 ( RX10_TEMP53 , RX10_TEMP55 ) ; final place RX10_TEMP61 = here ; final boolean RX10_TEMP62 = RX10_TEMP59 != RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP60 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP60 ) ; }
 final int RX10_TEMP63 = Program . getRefArrayValue1int ( data , RX10_TEMP55 ) ; final int X10_TEMP8 = ( RX10_TEMP63 ) ; return X10_TEMP8 ; }
 ) ; final intStub RX10_TEMP66 = new intStub ( RX10_TEMP65 ) ; 
 final T308 utmp308 = new T308(RX10_TEMP66, RX10_TEMP43, RX10_TEMP42);
 async (RX10_TEMP44) {Program.thread308(utmp308); }
 }
 }
 public static void thread143(final T143 utmpz) {final  int RX10_TEMP83 = utmpz.RX10_TEMP83;
final  place RX10_TEMP79 = utmpz.RX10_TEMP79;
final  point ( : rank==1 ) RX10_TEMP78 = utmpz.RX10_TEMP78;
final  intStub [ : rank==1 ] RX10_TEMP77 = utmpz.RX10_TEMP77;
 { final dist ( : rank==1 ) RX10_TEMP85 = [ 0 : RX10_TEMP83 ] -> here ; final int [ : rank==1 ] RX10_TEMP86 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP85 ] ( point ( : rank==1 ) RX10_TEMP84 ) { final int X10_TEMP11 = ( 0 ) ; return X10_TEMP11 ; }
 ) ; final intStub RX10_TEMP87 = new intStub ( RX10_TEMP86 ) ; 
 final T309 utmp309 = new T309(RX10_TEMP87, RX10_TEMP78, RX10_TEMP77);
 async (RX10_TEMP79) {Program.thread309(utmp309); }
 }
 }
 public static void thread144(final T144 utmpz) {final  Point1 pl = utmpz.pl;
final  int stride = utmpz.stride;
final  intRefArray1 tmp2 = utmpz.tmp2;
final  intRefArray1 tmp1 = utmpz.tmp1;
final  intRefArray1 result = utmpz.result;
 { final int X10_TEMP24 = ( pl . f0 ) ; final int X10_TEMP26 = ( X10_TEMP24 / stride ) ; final int X10_TEMP27 = ( 2 ) ; final int dir = ( X10_TEMP26 % X10_TEMP27 ) ; final Dist1 RX10_TEMP104 = tmp1 . distValue ; final Region1 RX10_TEMP105 = RX10_TEMP104 . dReg ; final int RX10_TEMP106 = Program . searchPointInRegion1 ( RX10_TEMP105 , pl ) ; final int RX10_TEMP107 = 0 ; final boolean RX10_TEMP108 = RX10_TEMP106 < RX10_TEMP107 ; if ( RX10_TEMP108 ) { String RX10_TEMP109 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP109 ) ; }
 final place RX10_TEMP110 = Program . getPlaceFromDist1 ( RX10_TEMP104 , RX10_TEMP106 ) ; final place RX10_TEMP112 = here ; final boolean RX10_TEMP113 = RX10_TEMP110 != RX10_TEMP112 ; if ( RX10_TEMP113 ) { String RX10_TEMP111 = "Bad place access for array tmp1" ; throw new RuntimeException ( RX10_TEMP111 ) ; }
 final int RX10_TEMP114 = Program . getRefArrayValue1int ( tmp1 , RX10_TEMP106 ) ; final int val = ( RX10_TEMP114 ) ; final int X10_TEMP43 = ( pl . f0 ) ; final int X10_TEMP32 = ( 0 ) ; final boolean X10_TEMP34 = ( dir == X10_TEMP32 ) ; final boolean X10_TEMP35 = X10_TEMP34 ; final int X10_TEMP37 = ( 1 ) ; final int X10_TEMP38 = 0 ; int X10_TEMP40 = X10_TEMP38 - X10_TEMP37 ; if ( X10_TEMP35 ) { X10_TEMP40 = 1 ; }
 final int X10_TEMP41 = X10_TEMP40 ; final int X10_TEMP42 = ( X10_TEMP41 ) ; final int X10_TEMP44 = ( X10_TEMP42 * stride ) ; final int X10_TEMP46 = ( X10_TEMP43 + X10_TEMP44 ) ; final place pDst = ( place.places ( X10_TEMP46 ) ) ; finish { 
 final T310 utmp310 = new T310(val, dir, tmp2, result);
 async (pDst) {Program.thread310(utmp310); }
 }
 }
 }
 public static void thread145(final T145 utmpz) {final  Point1 pl = utmpz.pl;
final  intRefArray1 tmp2 = utmpz.tmp2;
final  intRefArray1 tmp1 = utmpz.tmp1;
 { final Dist1 RX10_TEMP161 = tmp1 . distValue ; final Region1 RX10_TEMP162 = RX10_TEMP161 . dReg ; final int RX10_TEMP163 = Program . searchPointInRegion1 ( RX10_TEMP162 , pl ) ; final int RX10_TEMP164 = 0 ; final boolean RX10_TEMP165 = RX10_TEMP163 < RX10_TEMP164 ; if ( RX10_TEMP165 ) { String RX10_TEMP166 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP166 ) ; }
 final place RX10_TEMP167 = Program . getPlaceFromDist1 ( RX10_TEMP161 , RX10_TEMP163 ) ; final place RX10_TEMP169 = here ; final boolean RX10_TEMP170 = RX10_TEMP167 != RX10_TEMP169 ; if ( RX10_TEMP170 ) { String RX10_TEMP168 = "Bad place access for array tmp1" ; throw new RuntimeException ( RX10_TEMP168 ) ; }
 final int RX10_TEMP171 = Program . getRefArrayValue1int ( tmp1 , RX10_TEMP163 ) ; final int X10_TEMP73 = ( RX10_TEMP171 ) ; final Dist1 RX10_TEMP172 = tmp2 . distValue ; final Region1 RX10_TEMP173 = RX10_TEMP172 . dReg ; final int RX10_TEMP174 = Program . searchPointInRegion1 ( RX10_TEMP173 , pl ) ; final int RX10_TEMP175 = 0 ; final boolean RX10_TEMP176 = RX10_TEMP174 < RX10_TEMP175 ; if ( RX10_TEMP176 ) { String RX10_TEMP177 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP177 ) ; }
 final place RX10_TEMP178 = Program . getPlaceFromDist1 ( RX10_TEMP172 , RX10_TEMP174 ) ; final place RX10_TEMP180 = here ; final boolean RX10_TEMP181 = RX10_TEMP178 != RX10_TEMP180 ; if ( RX10_TEMP181 ) { String RX10_TEMP179 = "Bad place access for array tmp2" ; throw new RuntimeException ( RX10_TEMP179 ) ; }
 final int RX10_TEMP182 = Program . getRefArrayValue1int ( tmp2 , RX10_TEMP174 ) ; final int X10_TEMP74 = ( RX10_TEMP182 ) ; final int X10_TEMP76 = ( X10_TEMP73 + X10_TEMP74 ) ; final int X10_TEMP77 = ( X10_TEMP76 ) ; final Dist1 RX10_TEMP183 = tmp1 . distValue ; final Region1 RX10_TEMP184 = RX10_TEMP183 . dReg ; final int RX10_TEMP185 = Program . searchPointInRegion1 ( RX10_TEMP184 , pl ) ; final int RX10_TEMP186 = 0 ; final boolean RX10_TEMP187 = RX10_TEMP185 < RX10_TEMP186 ; if ( RX10_TEMP187 ) { String RX10_TEMP188 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP188 ) ; }
 final place RX10_TEMP189 = Program . getPlaceFromDist1 ( RX10_TEMP183 , RX10_TEMP185 ) ; final place RX10_TEMP191 = here ; final boolean RX10_TEMP192 = RX10_TEMP189 != RX10_TEMP191 ; if ( RX10_TEMP192 ) { String RX10_TEMP190 = "Bad place access for array tmp1" ; throw new RuntimeException ( RX10_TEMP190 ) ; }
 Program . setRefArrayValue1int ( tmp1 , RX10_TEMP185 , X10_TEMP77 ) ; }
 }
 public static void thread146(final T146 utmpz) {final  int RX10_TEMP14 = utmpz.RX10_TEMP14;
final  place RX10_TEMP10 = utmpz.RX10_TEMP10;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  ComplexStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { final dist ( : rank==1 ) RX10_TEMP15 = [ 0 : RX10_TEMP14 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP16 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP15 ] ) ; final ComplexStub RX10_TEMP17 = new ComplexStub ( RX10_TEMP16 ) ; 
 final T311 utmp311 = new T311(RX10_TEMP17, RX10_TEMP9, RX10_TEMP8);
 async (RX10_TEMP10) {Program.thread311(utmp311); }
 }
 }
 public static void thread147(final T147 utmpz) {final  int RX10_TEMP35 = utmpz.RX10_TEMP35;
final  place RX10_TEMP31 = utmpz.RX10_TEMP31;
final  point ( : rank==1 ) RX10_TEMP30 = utmpz.RX10_TEMP30;
final  ComplexStub [ : rank==1 ] RX10_TEMP29 = utmpz.RX10_TEMP29;
 { final dist ( : rank==1 ) RX10_TEMP36 = [ 0 : RX10_TEMP35 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP37 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP36 ] ) ; final ComplexStub RX10_TEMP38 = new ComplexStub ( RX10_TEMP37 ) ; 
 final T312 utmp312 = new T312(RX10_TEMP38, RX10_TEMP30, RX10_TEMP29);
 async (RX10_TEMP31) {Program.thread312(utmp312); }
 }
 }
 public static void thread148(final T148 utmpz) {final  Point2 pt = utmpz.pt;
final  ComplexRefArray2 result = utmpz.result;
final  doubleRefArray2 src = utmpz.src;
 { int X10_TEMP49 = ( 1 ) ; int X10_TEMP50 = ( 2 ) ; int RX10_TEMP55 = pt . f0 ; int RX10_TEMP56 = pt . f1 ; RX10_TEMP55 = RX10_TEMP55 * X10_TEMP49 ; RX10_TEMP56 = RX10_TEMP56 * X10_TEMP50 ; final Point2 X10_TEMP52 = ( new Point2 ( RX10_TEMP55 , RX10_TEMP56 ) ) ; final Dist2 RX10_TEMP57 = src . distValue ; final Region2 RX10_TEMP58 = RX10_TEMP57 . dReg ; final int RX10_TEMP59 = Program . searchPointInRegion2 ( RX10_TEMP58 , X10_TEMP52 ) ; final int RX10_TEMP60 = 0 ; final boolean RX10_TEMP61 = RX10_TEMP59 < RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP62 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP62 ) ; }
 final place RX10_TEMP63 = Program . getPlaceFromDist2 ( RX10_TEMP57 , RX10_TEMP59 ) ; final place RX10_TEMP65 = here ; final boolean RX10_TEMP66 = RX10_TEMP63 != RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP64 = "Bad place access for array src" ; throw new RuntimeException ( RX10_TEMP64 ) ; }
 final double RX10_TEMP67 = Program . getRefArrayValue2double ( src , RX10_TEMP59 ) ; double X10_TEMP66 = ( RX10_TEMP67 ) ; int X10_TEMP56 = ( 1 ) ; int X10_TEMP57 = ( 2 ) ; int RX10_TEMP68 = pt . f0 ; int RX10_TEMP69 = pt . f1 ; RX10_TEMP68 = RX10_TEMP68 * X10_TEMP56 ; RX10_TEMP69 = RX10_TEMP69 * X10_TEMP57 ; final Point2 X10_TEMP60 = ( new Point2 ( RX10_TEMP68 , RX10_TEMP69 ) ) ; int X10_TEMP61 = ( 0 ) ; int X10_TEMP62 = ( 1 ) ; int RX10_TEMP70 = X10_TEMP60 . f0 ; int RX10_TEMP71 = X10_TEMP60 . f1 ; RX10_TEMP70 = RX10_TEMP70 + X10_TEMP61 ; RX10_TEMP71 = RX10_TEMP71 + X10_TEMP62 ; final Point2 X10_TEMP64 = ( new Point2 ( RX10_TEMP70 , RX10_TEMP71 ) ) ; final Dist2 RX10_TEMP72 = src . distValue ; final Region2 RX10_TEMP73 = RX10_TEMP72 . dReg ; final int RX10_TEMP74 = Program . searchPointInRegion2 ( RX10_TEMP73 , X10_TEMP64 ) ; final int RX10_TEMP75 = 0 ; final boolean RX10_TEMP76 = RX10_TEMP74 < RX10_TEMP75 ; if ( RX10_TEMP76 ) { String RX10_TEMP77 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP77 ) ; }
 final place RX10_TEMP78 = Program . getPlaceFromDist2 ( RX10_TEMP72 , RX10_TEMP74 ) ; final place RX10_TEMP80 = here ; final boolean RX10_TEMP81 = RX10_TEMP78 != RX10_TEMP80 ; if ( RX10_TEMP81 ) { String RX10_TEMP79 = "Bad place access for array src" ; throw new RuntimeException ( RX10_TEMP79 ) ; }
 final double RX10_TEMP82 = Program . getRefArrayValue2double ( src , RX10_TEMP74 ) ; double X10_TEMP67 = ( RX10_TEMP82 ) ; final Complex X10_TEMP69 = ( new Complex ( X10_TEMP66 , X10_TEMP67 ) ) ; final Complex X10_TEMP70 = ( X10_TEMP69 ) ; final Dist2 RX10_TEMP83 = result . distValue ; final Region2 RX10_TEMP84 = RX10_TEMP83 . dReg ; final int RX10_TEMP85 = Program . searchPointInRegion2 ( RX10_TEMP84 , pt ) ; final int RX10_TEMP86 = 0 ; final boolean RX10_TEMP87 = RX10_TEMP85 < RX10_TEMP86 ; if ( RX10_TEMP87 ) { String RX10_TEMP88 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP88 ) ; }
 final place RX10_TEMP89 = Program . getPlaceFromDist2 ( RX10_TEMP83 , RX10_TEMP85 ) ; final place RX10_TEMP91 = here ; final boolean RX10_TEMP92 = RX10_TEMP89 != RX10_TEMP91 ; if ( RX10_TEMP92 ) { String RX10_TEMP90 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP90 ) ; }
 Program . setRefArrayValue2Complex ( result , RX10_TEMP85 , X10_TEMP70 ) ; }
 }
 public static void thread149(final T149 utmpz) {final  int RX10_TEMP15 = utmpz.RX10_TEMP15;
final  place RX10_TEMP11 = utmpz.RX10_TEMP11;
final  point ( : rank==1 ) RX10_TEMP10 = utmpz.RX10_TEMP10;
final  doubleStub [ : rank==1 ] RX10_TEMP9 = utmpz.RX10_TEMP9;
 { final dist ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP15 ] -> here ; final double [ : rank==1 ] RX10_TEMP17 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP16 ] ) ; final doubleStub RX10_TEMP18 = new doubleStub ( RX10_TEMP17 ) ; 
 final T313 utmp313 = new T313(RX10_TEMP18, RX10_TEMP10, RX10_TEMP9);
 async (RX10_TEMP11) {Program.thread313(utmp313); }
 }
 }
 public static void thread150(final T150 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 result = utmpz.result;
final  ComplexRefArray2 src = utmpz.src;
 { int X10_TEMP28 = ( 1 ) ; int X10_TEMP29 = ( 2 ) ; int RX10_TEMP35 = pt . f0 ; int RX10_TEMP36 = pt . f1 ; RX10_TEMP35 = RX10_TEMP35 / X10_TEMP28 ; RX10_TEMP36 = RX10_TEMP36 / X10_TEMP29 ; final Point2 ptd2 = ( new Point2 ( RX10_TEMP35 , RX10_TEMP36 ) ) ; final int X10_TEMP32 = ( pt . f1 ) ; final int X10_TEMP33 = ( 2 ) ; final int X10_TEMP34 = ( X10_TEMP32 % X10_TEMP33 ) ; final int X10_TEMP35 = ( 0 ) ; final boolean X10_TEMP37 = X10_TEMP34 == X10_TEMP35 ; if ( X10_TEMP37 ) { final Dist2 RX10_TEMP37 = src . distValue ; final Region2 RX10_TEMP38 = RX10_TEMP37 . dReg ; final int RX10_TEMP39 = Program . searchPointInRegion2 ( RX10_TEMP38 , ptd2 ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final place RX10_TEMP43 = Program . getPlaceFromDist2 ( RX10_TEMP37 , RX10_TEMP39 ) ; final place RX10_TEMP45 = here ; final boolean RX10_TEMP46 = RX10_TEMP43 != RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP44 = "Bad place access for array src" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 final Complex RX10_TEMP47 = Program . getRefArrayValue2Complex ( src , RX10_TEMP39 ) ; final Complex X10_TEMP40 = ( RX10_TEMP47 ) ; final double X10_TEMP42 = ( Program . Complex_getReal ( X10_TEMP40 ) ) ; final double X10_TEMP43 = ( X10_TEMP42 ) ; final Dist2 RX10_TEMP48 = result . distValue ; final Region2 RX10_TEMP49 = RX10_TEMP48 . dReg ; final int RX10_TEMP50 = Program . searchPointInRegion2 ( RX10_TEMP49 , pt ) ; final int RX10_TEMP51 = 0 ; final boolean RX10_TEMP52 = RX10_TEMP50 < RX10_TEMP51 ; if ( RX10_TEMP52 ) { String RX10_TEMP53 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP53 ) ; }
 final place RX10_TEMP54 = Program . getPlaceFromDist2 ( RX10_TEMP48 , RX10_TEMP50 ) ; final place RX10_TEMP56 = here ; final boolean RX10_TEMP57 = RX10_TEMP54 != RX10_TEMP56 ; if ( RX10_TEMP57 ) { String RX10_TEMP55 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP55 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP50 , X10_TEMP43 ) ; }
 else { final Dist2 RX10_TEMP58 = src . distValue ; final Region2 RX10_TEMP59 = RX10_TEMP58 . dReg ; final int RX10_TEMP60 = Program . searchPointInRegion2 ( RX10_TEMP59 , ptd2 ) ; final int RX10_TEMP61 = 0 ; final boolean RX10_TEMP62 = RX10_TEMP60 < RX10_TEMP61 ; if ( RX10_TEMP62 ) { String RX10_TEMP63 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final place RX10_TEMP64 = Program . getPlaceFromDist2 ( RX10_TEMP58 , RX10_TEMP60 ) ; final place RX10_TEMP66 = here ; final boolean RX10_TEMP67 = RX10_TEMP64 != RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP65 = "Bad place access for array src" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final Complex RX10_TEMP68 = Program . getRefArrayValue2Complex ( src , RX10_TEMP60 ) ; final Complex X10_TEMP46 = ( RX10_TEMP68 ) ; final double X10_TEMP48 = ( Program . Complex_getImag ( X10_TEMP46 ) ) ; final double X10_TEMP49 = ( X10_TEMP48 ) ; final Dist2 RX10_TEMP69 = result . distValue ; final Region2 RX10_TEMP70 = RX10_TEMP69 . dReg ; final int RX10_TEMP71 = Program . searchPointInRegion2 ( RX10_TEMP70 , pt ) ; final int RX10_TEMP72 = 0 ; final boolean RX10_TEMP73 = RX10_TEMP71 < RX10_TEMP72 ; if ( RX10_TEMP73 ) { String RX10_TEMP74 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP74 ) ; }
 final place RX10_TEMP75 = Program . getPlaceFromDist2 ( RX10_TEMP69 , RX10_TEMP71 ) ; final place RX10_TEMP77 = here ; final boolean RX10_TEMP78 = RX10_TEMP75 != RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP76 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP76 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP71 , X10_TEMP49 ) ; }
 }
 }
 public static void thread151(final T151 utmpz) {final  int RX10_TEMP15 = utmpz.RX10_TEMP15;
final  place RX10_TEMP11 = utmpz.RX10_TEMP11;
final  point ( : rank==1 ) RX10_TEMP10 = utmpz.RX10_TEMP10;
final  ComplexStub [ : rank==1 ] RX10_TEMP9 = utmpz.RX10_TEMP9;
 { final dist ( : rank==1 ) RX10_TEMP16 = [ 0 : RX10_TEMP15 ] -> here ; final Complex [ : rank==1 ] RX10_TEMP17 = ( Complex [ : rank==1 ] ) ( new Complex [ RX10_TEMP16 ] ) ; final ComplexStub RX10_TEMP18 = new ComplexStub ( RX10_TEMP17 ) ; 
 final T314 utmp314 = new T314(RX10_TEMP18, RX10_TEMP10, RX10_TEMP9);
 async (RX10_TEMP11) {Program.thread314(utmp314); }
 }
 }
 public static void thread152(final T152 utmpz) {final  ComplexRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
final  Dist2 dData = utmpz.dData;
final  ComplexRefArray2 data = utmpz.data;
 { final Region2 rLocal = Program . X10Util_get2DLRegion ( dData ) ; final Region2 rTtmp = Program . X10Util_transposeRegion ( rLocal ) ; final int X10_TEMP25 = ( rLocal . regSize ) ; final int X10_TEMP26 = ( 0 ) ; final boolean X10_TEMP28 = X10_TEMP25 > X10_TEMP26 ; if ( X10_TEMP28 ) { final int X10_TEMP31 = ( 0 ) ; final Region1 rTtmp1 = Program . X10Util_getRank2D ( rTtmp , X10_TEMP31 ) ; final int X10_TEMP35 = ( 1 ) ; final Region1 rTtmp2 = Program . X10Util_getRank2D ( rTtmp , X10_TEMP35 ) ; final int RX10_TEMP35 = rTtmp1 . regSize ; final int RX10_TEMP36 = 0 ; final boolean RX10_TEMP37 = RX10_TEMP35 <= RX10_TEMP36 ; if ( RX10_TEMP37 ) { final String RX10_TEMP38 = "Operation low() not defined on empty region rTtmp1" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 final int X10_TEMP39 = ( Program . regionLow ( rTtmp1 ) ) ; final int RX10_TEMP39 = rTtmp1 . regSize ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 <= RX10_TEMP40 ; if ( RX10_TEMP41 ) { final String RX10_TEMP42 = "Operation high() not defined on empty region rTtmp1" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final int X10_TEMP40 = ( Program . regionHigh ( rTtmp1 ) ) ; final int RX10_TEMP43 = rTtmp2 . regSize ; final int RX10_TEMP44 = 0 ; final boolean RX10_TEMP45 = RX10_TEMP43 <= RX10_TEMP44 ; if ( RX10_TEMP45 ) { final String RX10_TEMP46 = "Operation low() not defined on empty region rTtmp2" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 final int X10_TEMP43 = ( Program . regionLow ( rTtmp2 ) ) ; final int RX10_TEMP47 = rTtmp2 . regSize ; final int RX10_TEMP48 = 0 ; final boolean RX10_TEMP49 = RX10_TEMP47 <= RX10_TEMP48 ; if ( RX10_TEMP49 ) { final String RX10_TEMP50 = "Operation high() not defined on empty region rTtmp2" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 final int X10_TEMP44 = ( Program . regionHigh ( rTtmp2 ) ) ; final Region2 rLocalT = Program . createNewRegion2RR ( X10_TEMP39 , X10_TEMP40 , X10_TEMP43 , X10_TEMP44 ) ; final Dist1 X10_TEMP46 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP51 = X10_TEMP46 . dReg ; final Region1 X10_TEMP47 = RX10_TEMP51 ; final Region1 rRSBuffer = X10_TEMP47 ; final Region1 RX10_TEMP52 = rRSBuffer ; final int RX10_TEMP69 = rRSBuffer . regSize ; final int RX10_TEMP70 = 1 ; final int RX10_TEMP71 = RX10_TEMP69 - RX10_TEMP70 ; final region ( : rank==1 ) RX10_TEMP68 = [ 0 : RX10_TEMP71 ] ; final Region2 value [ : rank==1 ] RX10_TEMP72 = ( Region2 value [ : rank==1 ] ) ( new Region2 value [ RX10_TEMP68 ] ( point ( : rank==1 ) RX10_TEMP53 ) { final int RX10_TEMP54 = RX10_TEMP53 [0] ; final Point1 p = Program . regionOrdinalPoint1 ( RX10_TEMP52 , RX10_TEMP54 ) ; final Dist1 X10_TEMP49 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP55 = X10_TEMP49 . dReg ; final int RX10_TEMP56 = Program . searchPointInRegion1 ( RX10_TEMP55 , p ) ; final int RX10_TEMP57 = 0 ; final boolean RX10_TEMP58 = RX10_TEMP56 < RX10_TEMP57 ; if ( RX10_TEMP58 ) { final String RX10_TEMP59 = "Point p not found in the distribution X10_TEMP49." ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 final place RX10_TEMP60 = Program . getPlaceFromDist1 ( X10_TEMP49 , RX10_TEMP56 ) ; final place X10_TEMP51 = ( RX10_TEMP60 ) ; final Dist2 X10_TEMP53 = Program . restrictDist2 ( dResult , X10_TEMP51 ) ; final Region2 RX10_TEMP61 = X10_TEMP53 . dReg ; final Region2 X10_TEMP54 = RX10_TEMP61 ; final Region2 rTLocal = X10_TEMP54 ; final int X10_TEMP56 = 0 ; final int X10_TEMP57 = 1 ; final int X10_TEMP58 = X10_TEMP56 - X10_TEMP57 ; final place X10_TEMP59 = here ; Region2 X10_TEMP60 = Program . createNewRegion2RR ( X10_TEMP56 , X10_TEMP58 , X10_TEMP56 , X10_TEMP58 ) ; final int RX10_TEMP65 = 1 ; int RX10_TEMP63 = rLocalT . regSize ; RX10_TEMP63 = RX10_TEMP63 - RX10_TEMP65 ; final region ( : rank==1 ) RX10_TEMP64 = [ 0 : RX10_TEMP63 ] ; for ( point ( : rank==1 ) RX10_TEMP62 : RX10_TEMP64 ) { final int RX10_TEMP66 = RX10_TEMP62 [0] ; final Point2 X10_TEMP61 = Program . regionOrdinalPoint2 ( rLocalT , RX10_TEMP66 ) ; final int X10_TEMP62 = X10_TEMP61 . f0 ; final int X10_TEMP63 = X10_TEMP61 . f1 ; final boolean RX10_TEMP67 = Program . regionContainsPoint2 ( rTLocal , X10_TEMP61 ) ; final boolean X10_TEMP64 = RX10_TEMP67 ; if ( X10_TEMP64 ) { final Region2 X10_TEMP65 = Program . createNewRegion2RR ( X10_TEMP62 , X10_TEMP62 , X10_TEMP63 , X10_TEMP63 ) ; X10_TEMP60 = Program . unionRegion2 ( X10_TEMP60 , X10_TEMP65 ) ; }
 }
 final Region2 X10_TEMP66 = X10_TEMP60 ; return X10_TEMP66 ; }
 ) ; final Region2ValArray1 RX10_TEMP73 = new Region2ValArray1 ( rRSBuffer , RX10_TEMP72 ) ; final Region2ValArray1 X10_TEMP68 = RX10_TEMP73 ; final Region2ValArray1 rSBuffer = X10_TEMP68 ; final Region2 RX10_TEMP74 = rLocalT ; final int RX10_TEMP91 = rLocalT . regSize ; final int RX10_TEMP92 = 1 ; final int RX10_TEMP93 = RX10_TEMP91 - RX10_TEMP92 ; final region ( : rank==1 ) RX10_TEMP90 = [ 0 : RX10_TEMP93 ] ; final Complex value [ : rank==1 ] RX10_TEMP94 = ( Complex value [ : rank==1 ] ) ( new Complex value [ RX10_TEMP90 ] ( point ( : rank==1 ) RX10_TEMP75 ) { final int RX10_TEMP77 = RX10_TEMP75 [0] ; final Point2 RX10_TEMP76 = Program . regionOrdinalPoint2 ( RX10_TEMP74 , RX10_TEMP77 ) ; final int i = RX10_TEMP76 . f0 ; final int j = RX10_TEMP76 . f1 ; final Point2 RX10_TEMP78 = new Point2 ( j , i ) ; final Dist2 RX10_TEMP79 = data . distValue ; final Region2 RX10_TEMP80 = RX10_TEMP79 . dReg ; final int RX10_TEMP81 = Program . searchPointInRegion2 ( RX10_TEMP80 , RX10_TEMP78 ) ; final int RX10_TEMP82 = 0 ; final boolean RX10_TEMP83 = RX10_TEMP81 < RX10_TEMP82 ; if ( RX10_TEMP83 ) { String RX10_TEMP84 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP84 ) ; }
 final place RX10_TEMP85 = Program . getPlaceFromDist2 ( RX10_TEMP79 , RX10_TEMP81 ) ; final place RX10_TEMP87 = here ; final boolean RX10_TEMP88 = RX10_TEMP85 != RX10_TEMP87 ; if ( RX10_TEMP88 ) { String RX10_TEMP86 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP86 ) ; }
 final Complex RX10_TEMP89 = Program . getRefArrayValue2Complex ( data , RX10_TEMP81 ) ; final Complex X10_TEMP73 = ( RX10_TEMP89 ) ; return X10_TEMP73 ; }
 ) ; final ComplexValArray2 RX10_TEMP95 = new ComplexValArray2 ( rLocalT , RX10_TEMP94 ) ; final ComplexValArray2 X10_TEMP74 = RX10_TEMP95 ; final ComplexValArray2 sBuffer = X10_TEMP74 ; final place X10_TEMP77 = here ; final Region1 RX10_TEMP97 = rSBuffer . regionValue ; final int RX10_TEMP100 = 1 ; int RX10_TEMP98 = RX10_TEMP97 . regSize ; RX10_TEMP98 = RX10_TEMP98 - RX10_TEMP100 ; final region ( : rank==1 ) RX10_TEMP99 = [ 0 : RX10_TEMP98 ] ; for ( point ( : rank==1 ) RX10_TEMP96 : RX10_TEMP99 ) { final int RX10_TEMP101 = RX10_TEMP96 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( RX10_TEMP97 , RX10_TEMP101 ) ; 
 final T315 utmp315 = new T315(i, sBuffer, rSBuffer, result);
 async (X10_TEMP77) {Program.thread315(utmp315); }
 }
 }
 }
 }
 public static void thread153(final T153 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
final  double initVal = utmpz.initVal;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP15 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { return initVal ; }
 ) ; final doubleStub RX10_TEMP16 = new doubleStub ( RX10_TEMP15 ) ; 
 final T316 utmp316 = new T316(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread316(utmp316); }
 }
 }
 public static void thread154(final T154 utmpz) {final  doubleRefArray1 localSumArray = utmpz.localSumArray;
final  place source = utmpz.source;
final  int zero = utmpz.zero;
final  doubleRefArray1 sumArray = utmpz.sumArray;
 { double localSumTemp = 0 ; final place thisPlace = here ; final Dist1 RX10_TEMP33 = sumArray . distValue ; final Dist1 sumArrayDist = RX10_TEMP33 ; final Dist1 sumArrayDistHere = Program . restrictDist1 ( sumArrayDist , thisPlace ) ; final Region1 RX10_TEMP35 = sumArrayDistHere . dReg ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = RX10_TEMP35 . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP34 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP34 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP35 , RX10_TEMP39 ) ; final Dist1 RX10_TEMP40 = sumArray . distValue ; final Region1 RX10_TEMP41 = RX10_TEMP40 . dReg ; final int RX10_TEMP42 = Program . searchPointInRegion1 ( RX10_TEMP41 , pt ) ; final int RX10_TEMP43 = 0 ; final boolean RX10_TEMP44 = RX10_TEMP42 < RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP45 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP45 ) ; }
 final place RX10_TEMP46 = Program . getPlaceFromDist1 ( RX10_TEMP40 , RX10_TEMP42 ) ; final place RX10_TEMP48 = here ; final boolean RX10_TEMP49 = RX10_TEMP46 != RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP47 = "Bad place access for array sumArray" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final double RX10_TEMP50 = Program . getRefArrayValue1double ( sumArray , RX10_TEMP42 ) ; final double localSumCurr = RX10_TEMP50 ; localSumTemp = localSumTemp + localSumCurr ; }
 final boolean isNotEqual = localSumTemp != zero ; if ( isNotEqual ) { final int index = thisPlace . id ; final double localSum = localSumTemp ; 
 final T317 utmp317 = new T317(localSum, index, localSumArray);
 async (source) {Program.thread317(utmp317); }
 }
 }
 }
 public static void thread155(final T155 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
final  int initVal = utmpz.initVal;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final int [ : rank==1 ] RX10_TEMP15 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { return initVal ; }
 ) ; final intStub RX10_TEMP16 = new intStub ( RX10_TEMP15 ) ; 
 final T318 utmp318 = new T318(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread318(utmp318); }
 }
 }
 public static void thread156(final T156 utmpz) {final  intRefArray1 localMaxArray = utmpz.localMaxArray;
final  int initVal = utmpz.initVal;
final  place source = utmpz.source;
final  intRefArray1 maxArray = utmpz.maxArray;
 { int localMaxTemp = initVal ; final place thisPlace = here ; final Dist1 RX10_TEMP33 = maxArray . distValue ; final Dist1 maxArrayDist = RX10_TEMP33 ; final Dist1 maxArrayDistHere = Program . restrictDist1 ( maxArrayDist , thisPlace ) ; final Region1 RX10_TEMP35 = maxArrayDistHere . dReg ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = RX10_TEMP35 . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP34 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP34 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP35 , RX10_TEMP39 ) ; final Dist1 RX10_TEMP40 = maxArray . distValue ; final Region1 RX10_TEMP41 = RX10_TEMP40 . dReg ; final int RX10_TEMP42 = Program . searchPointInRegion1 ( RX10_TEMP41 , pt ) ; final int RX10_TEMP43 = 0 ; final boolean RX10_TEMP44 = RX10_TEMP42 < RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP45 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP45 ) ; }
 final place RX10_TEMP46 = Program . getPlaceFromDist1 ( RX10_TEMP40 , RX10_TEMP42 ) ; final place RX10_TEMP48 = here ; final boolean RX10_TEMP49 = RX10_TEMP46 != RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP47 = "Bad place access for array maxArray" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final int RX10_TEMP50 = Program . getRefArrayValue1int ( maxArray , RX10_TEMP42 ) ; final int localMaxCurr = RX10_TEMP50 ; final boolean isGreater = localMaxCurr > localMaxTemp ; if ( isGreater ) { localMaxTemp = localMaxCurr ; }
 }
 final int index = thisPlace . id ; final int localMax = localMaxTemp ; 
 final T319 utmp319 = new T319(localMax, index, localMaxArray);
 async (source) {Program.thread319(utmp319); }
 }
 }
 public static void thread157(final T157 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
final  int initVal = utmpz.initVal;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final int [ : rank==1 ] RX10_TEMP15 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { return initVal ; }
 ) ; final intStub RX10_TEMP16 = new intStub ( RX10_TEMP15 ) ; 
 final T320 utmp320 = new T320(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {Program.thread320(utmp320); }
 }
 }
 public static void thread158(final T158 utmpz) {final  intRefArray1 localSumArray = utmpz.localSumArray;
final  place source = utmpz.source;
final  int zero = utmpz.zero;
final  intRefArray1 sumArray = utmpz.sumArray;
 { int localSumTemp = 0 ; final place thisPlace = here ; final Dist1 RX10_TEMP33 = sumArray . distValue ; final Dist1 sumArrayDist = RX10_TEMP33 ; final Dist1 sumArrayDistHere = Program . restrictDist1 ( sumArrayDist , thisPlace ) ; final Region1 RX10_TEMP35 = sumArrayDistHere . dReg ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = RX10_TEMP35 . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP34 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP34 [0] ; final Point1 pt = Program . regionOrdinalPoint1 ( RX10_TEMP35 , RX10_TEMP39 ) ; final Dist1 RX10_TEMP40 = sumArray . distValue ; final Region1 RX10_TEMP41 = RX10_TEMP40 . dReg ; final int RX10_TEMP42 = Program . searchPointInRegion1 ( RX10_TEMP41 , pt ) ; final int RX10_TEMP43 = 0 ; final boolean RX10_TEMP44 = RX10_TEMP42 < RX10_TEMP43 ; if ( RX10_TEMP44 ) { String RX10_TEMP45 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP45 ) ; }
 final place RX10_TEMP46 = Program . getPlaceFromDist1 ( RX10_TEMP40 , RX10_TEMP42 ) ; final place RX10_TEMP48 = here ; final boolean RX10_TEMP49 = RX10_TEMP46 != RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP47 = "Bad place access for array sumArray" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final int RX10_TEMP50 = Program . getRefArrayValue1int ( sumArray , RX10_TEMP42 ) ; final int localSumCurr = RX10_TEMP50 ; localSumTemp = localSumTemp + localSumCurr ; }
 final boolean isNotEqual = localSumTemp != zero ; if ( isNotEqual ) { final int index = thisPlace . id ; final int localSum = localSumTemp ; 
 final T321 utmp321 = new T321(localSum, index, localSumArray);
 async (source) {Program.thread321(utmp321); }
 }
 }
 }
 public static void thread177(final T177 utmpz) {final  ComplexStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ComplexStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread178(final T178 utmpz) {final  ComplexStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ComplexStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread179(final T179 utmpz) {final  ComplexStub RX10_TEMP35 = utmpz.RX10_TEMP35;
final  point ( : rank==1 ) RX10_TEMP27 = utmpz.RX10_TEMP27;
final  ComplexStub [ : rank==1 ] RX10_TEMP26 = utmpz.RX10_TEMP26;
 { RX10_TEMP26 [ RX10_TEMP27 ] = ( RX10_TEMP35 ) ; }
 }
 public static void thread180(final T180 utmpz) {final  doubleStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread181(final T181 utmpz) {final  booleanStub RX10_TEMP31 = utmpz.RX10_TEMP31;
final  point ( : rank==1 ) RX10_TEMP22 = utmpz.RX10_TEMP22;
final  booleanStub [ : rank==1 ] RX10_TEMP21 = utmpz.RX10_TEMP21;
 { RX10_TEMP21 [ RX10_TEMP22 ] = ( RX10_TEMP31 ) ; }
 }
 public static void thread182(final T182 utmpz) {final  booleanStub RX10_TEMP81 = utmpz.RX10_TEMP81;
final  point ( : rank==1 ) RX10_TEMP72 = utmpz.RX10_TEMP72;
final  booleanStub [ : rank==1 ] RX10_TEMP71 = utmpz.RX10_TEMP71;
 { RX10_TEMP71 [ RX10_TEMP72 ] = ( RX10_TEMP81 ) ; }
 }
 public static void thread183(final T183 utmpz) {final  booleanStub RX10_TEMP31 = utmpz.RX10_TEMP31;
final  point ( : rank==1 ) RX10_TEMP22 = utmpz.RX10_TEMP22;
final  booleanStub [ : rank==1 ] RX10_TEMP21 = utmpz.RX10_TEMP21;
 { RX10_TEMP21 [ RX10_TEMP22 ] = ( RX10_TEMP31 ) ; }
 }
 public static void thread184(final T184 utmpz) {final  booleanStub RX10_TEMP81 = utmpz.RX10_TEMP81;
final  point ( : rank==1 ) RX10_TEMP72 = utmpz.RX10_TEMP72;
final  booleanStub [ : rank==1 ] RX10_TEMP71 = utmpz.RX10_TEMP71;
 { RX10_TEMP71 [ RX10_TEMP72 ] = ( RX10_TEMP81 ) ; }
 }
 public static void thread185(final T185 utmpz) {final  booleanStub RX10_TEMP23 = utmpz.RX10_TEMP23;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  booleanStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { RX10_TEMP14 [ RX10_TEMP15 ] = ( RX10_TEMP23 ) ; }
 }
 public static void thread186(final T186 utmpz) {final  boolean val = utmpz.val;
final  booleanRefArray1 result = utmpz.result;
 { final int X10_TEMP33 = ( 0 ) ; final boolean X10_TEMP35 = ( val ) ; final Point1 RX10_TEMP46 = new Point1 ( X10_TEMP33 ) ; final Dist1 RX10_TEMP47 = result . distValue ; final Region1 RX10_TEMP48 = RX10_TEMP47 . dReg ; final int RX10_TEMP49 = Program . searchPointInRegion1 ( RX10_TEMP48 , RX10_TEMP46 ) ; final int RX10_TEMP50 = 0 ; final boolean RX10_TEMP51 = RX10_TEMP49 < RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP52 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final place RX10_TEMP53 = Program . getPlaceFromDist1 ( RX10_TEMP47 , RX10_TEMP49 ) ; final place RX10_TEMP55 = here ; final boolean RX10_TEMP56 = RX10_TEMP53 != RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP54 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP54 ) ; }
 Program . setRefArrayValue1boolean ( result , RX10_TEMP49 , X10_TEMP35 ) ; }
 }
 public static void thread187(final T187 utmpz) {final  ComplexStub RX10_TEMP23 = utmpz.RX10_TEMP23;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  ComplexStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { RX10_TEMP14 [ RX10_TEMP15 ] = ( RX10_TEMP23 ) ; }
 }
 public static void thread188(final T188 utmpz) {final  Complex val = utmpz.val;
final  ComplexRefArray1 result = utmpz.result;
 { final int X10_TEMP33 = ( 0 ) ; final Complex X10_TEMP35 = ( val ) ; final Point1 RX10_TEMP46 = new Point1 ( X10_TEMP33 ) ; final Dist1 RX10_TEMP47 = result . distValue ; final Region1 RX10_TEMP48 = RX10_TEMP47 . dReg ; final int RX10_TEMP49 = Program . searchPointInRegion1 ( RX10_TEMP48 , RX10_TEMP46 ) ; final int RX10_TEMP50 = 0 ; final boolean RX10_TEMP51 = RX10_TEMP49 < RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP52 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final place RX10_TEMP53 = Program . getPlaceFromDist1 ( RX10_TEMP47 , RX10_TEMP49 ) ; final place RX10_TEMP55 = here ; final boolean RX10_TEMP56 = RX10_TEMP53 != RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP54 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP54 ) ; }
 Program . setRefArrayValue1Complex ( result , RX10_TEMP49 , X10_TEMP35 ) ; }
 }
 public static void thread189(final T189 utmpz) {final  intStub RX10_TEMP23 = utmpz.RX10_TEMP23;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  intStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { RX10_TEMP14 [ RX10_TEMP15 ] = ( RX10_TEMP23 ) ; }
 }
 public static void thread190(final T190 utmpz) {final  int val = utmpz.val;
final  intRefArray1 result = utmpz.result;
 { final int X10_TEMP33 = ( 0 ) ; final int X10_TEMP35 = ( val ) ; final Point1 RX10_TEMP46 = new Point1 ( X10_TEMP33 ) ; final Dist1 RX10_TEMP47 = result . distValue ; final Region1 RX10_TEMP48 = RX10_TEMP47 . dReg ; final int RX10_TEMP49 = Program . searchPointInRegion1 ( RX10_TEMP48 , RX10_TEMP46 ) ; final int RX10_TEMP50 = 0 ; final boolean RX10_TEMP51 = RX10_TEMP49 < RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP52 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final place RX10_TEMP53 = Program . getPlaceFromDist1 ( RX10_TEMP47 , RX10_TEMP49 ) ; final place RX10_TEMP55 = here ; final boolean RX10_TEMP56 = RX10_TEMP53 != RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP54 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP54 ) ; }
 Program . setRefArrayValue1int ( result , RX10_TEMP49 , X10_TEMP35 ) ; }
 }
 public static void thread191(final T191 utmpz) {final  doubleStub RX10_TEMP23 = utmpz.RX10_TEMP23;
final  point ( : rank==1 ) RX10_TEMP15 = utmpz.RX10_TEMP15;
final  doubleStub [ : rank==1 ] RX10_TEMP14 = utmpz.RX10_TEMP14;
 { RX10_TEMP14 [ RX10_TEMP15 ] = ( RX10_TEMP23 ) ; }
 }
 public static void thread192(final T192 utmpz) {final  double val = utmpz.val;
final  doubleRefArray1 result = utmpz.result;
 { final int X10_TEMP33 = ( 0 ) ; final double X10_TEMP35 = ( val ) ; final Point1 RX10_TEMP46 = new Point1 ( X10_TEMP33 ) ; final Dist1 RX10_TEMP47 = result . distValue ; final Region1 RX10_TEMP48 = RX10_TEMP47 . dReg ; final int RX10_TEMP49 = Program . searchPointInRegion1 ( RX10_TEMP48 , RX10_TEMP46 ) ; final int RX10_TEMP50 = 0 ; final boolean RX10_TEMP51 = RX10_TEMP49 < RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP52 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final place RX10_TEMP53 = Program . getPlaceFromDist1 ( RX10_TEMP47 , RX10_TEMP49 ) ; final place RX10_TEMP55 = here ; final boolean RX10_TEMP56 = RX10_TEMP53 != RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP54 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP54 ) ; }
 Program . setRefArrayValue1double ( result , RX10_TEMP49 , X10_TEMP35 ) ; }
 }
 public static void thread193(final T193 utmpz) {final  int j1 = utmpz.j1;
final  Region1 rLocal1 = utmpz.rLocal1;
final  int nBits = utmpz.nBits;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final intValArray1 X10_TEMP41 = X10_TEMP0 . tableBitReverse ; final Point1 RX10_TEMP19 = new Point1 ( j1 ) ; final Region1 RX10_TEMP20 = X10_TEMP41 . regionValue ; final int RX10_TEMP21 = Program . searchPointInRegion1 ( RX10_TEMP20 , RX10_TEMP19 ) ; final int RX10_TEMP22 = 0 ; final boolean RX10_TEMP23 = RX10_TEMP21 < RX10_TEMP22 ; if ( RX10_TEMP23 ) { String RX10_TEMP24 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final int value [ : rank==1 ] RX10_TEMP25 = ( int value [ : rank==1 ] ) ( X10_TEMP41 . contents ) ; final int X10_TEMP46 = ( RX10_TEMP25 [ RX10_TEMP21 ] ) ; final int X10_TEMP43 = ( X10_TEMP0 . maxBits ) ; final int X10_TEMP45 = ( X10_TEMP43 - nBits ) ; final int j2 = ( X10_TEMP46 >> X10_TEMP45 ) ; final boolean X10_TEMP49 = j1 < j2 ; if ( X10_TEMP49 ) { finish { final place X10_TEMP51 = here ; final int RX10_TEMP30 = 1 ; int RX10_TEMP28 = rLocal1 . regSize ; RX10_TEMP28 = RX10_TEMP28 - RX10_TEMP30 ; final region ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP28 ] ; for ( point ( : rank==1 ) RX10_TEMP26 : RX10_TEMP29 ) { final int RX10_TEMP31 = RX10_TEMP26 [0] ; final Point1 RX10_TEMP27 = Program . regionOrdinalPoint1 ( rLocal1 , RX10_TEMP31 ) ; final int i = RX10_TEMP27 . f0 ; 
 final T343 utmp343 = new T343(i, j2, j1, f);
 async (X10_TEMP51) {Program.thread343(utmp343); }
 }
 }
 }
 }
 }
 public static void thread194(final T194 utmpz) {final  Point2 pt = utmpz.pt;
final  ComplexRefArray2 f = utmpz.f;
 { final Dist2 RX10_TEMP18 = f . distValue ; final Region2 RX10_TEMP19 = RX10_TEMP18 . dReg ; final int RX10_TEMP20 = Program . searchPointInRegion2 ( RX10_TEMP19 , pt ) ; final int RX10_TEMP21 = 0 ; final boolean RX10_TEMP22 = RX10_TEMP20 < RX10_TEMP21 ; if ( RX10_TEMP22 ) { String RX10_TEMP23 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP23 ) ; }
 final place RX10_TEMP24 = Program . getPlaceFromDist2 ( RX10_TEMP18 , RX10_TEMP20 ) ; final place RX10_TEMP26 = here ; final boolean RX10_TEMP27 = RX10_TEMP24 != RX10_TEMP26 ; if ( RX10_TEMP27 ) { String RX10_TEMP25 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP25 ) ; }
 final Complex RX10_TEMP28 = Program . getRefArrayValue2Complex ( f , RX10_TEMP20 ) ; final Complex X10_TEMP31 = ( RX10_TEMP28 ) ; final Complex X10_TEMP33 = ( Program . Complex_getConjg ( X10_TEMP31 ) ) ; final int X10_TEMP35 = ( 2 ) ; final Complex X10_TEMP37 = ( Program . Complex_multS ( X10_TEMP33 , X10_TEMP35 ) ) ; final Complex X10_TEMP38 = ( X10_TEMP37 ) ; final Dist2 RX10_TEMP29 = f . distValue ; final Region2 RX10_TEMP30 = RX10_TEMP29 . dReg ; final int RX10_TEMP31 = Program . searchPointInRegion2 ( RX10_TEMP30 , pt ) ; final int RX10_TEMP32 = 0 ; final boolean RX10_TEMP33 = RX10_TEMP31 < RX10_TEMP32 ; if ( RX10_TEMP33 ) { String RX10_TEMP34 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP34 ) ; }
 final place RX10_TEMP35 = Program . getPlaceFromDist2 ( RX10_TEMP29 , RX10_TEMP31 ) ; final place RX10_TEMP37 = here ; final boolean RX10_TEMP38 = RX10_TEMP35 != RX10_TEMP37 ; if ( RX10_TEMP38 ) { String RX10_TEMP36 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP31 , X10_TEMP38 ) ; int X10_TEMP41 = ( 1 ) ; int X10_TEMP42 = ( 0 ) ; int RX10_TEMP39 = pt . f0 ; int RX10_TEMP40 = pt . f1 ; RX10_TEMP39 = RX10_TEMP39 * X10_TEMP41 ; RX10_TEMP40 = RX10_TEMP40 * X10_TEMP42 ; final Point2 pt0 = ( new Point2 ( RX10_TEMP39 , RX10_TEMP40 ) ) ; final Dist2 RX10_TEMP41 = f . distValue ; final Region2 RX10_TEMP42 = RX10_TEMP41 . dReg ; final int RX10_TEMP43 = Program . searchPointInRegion2 ( RX10_TEMP42 , pt0 ) ; final int RX10_TEMP44 = 0 ; final boolean RX10_TEMP45 = RX10_TEMP43 < RX10_TEMP44 ; if ( RX10_TEMP45 ) { String RX10_TEMP46 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 final place RX10_TEMP47 = Program . getPlaceFromDist2 ( RX10_TEMP41 , RX10_TEMP43 ) ; final place RX10_TEMP49 = here ; final boolean RX10_TEMP50 = RX10_TEMP47 != RX10_TEMP49 ; if ( RX10_TEMP50 ) { String RX10_TEMP48 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP48 ) ; }
 final Complex RX10_TEMP51 = Program . getRefArrayValue2Complex ( f , RX10_TEMP43 ) ; final Complex t2 = ( RX10_TEMP51 ) ; final double t2Real = ( Program . Complex_getReal ( t2 ) ) ; final double t2Imag = ( Program . Complex_getImag ( t2 ) ) ; double X10_TEMP51 = ( t2Real + t2Imag ) ; double X10_TEMP52 = ( t2Real - t2Imag ) ; final Complex X10_TEMP54 = ( new Complex ( X10_TEMP51 , X10_TEMP52 ) ) ; final Complex X10_TEMP55 = ( X10_TEMP54 ) ; final Dist2 RX10_TEMP52 = f . distValue ; final Region2 RX10_TEMP53 = RX10_TEMP52 . dReg ; final int RX10_TEMP54 = Program . searchPointInRegion2 ( RX10_TEMP53 , pt0 ) ; final int RX10_TEMP55 = 0 ; final boolean RX10_TEMP56 = RX10_TEMP54 < RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP57 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final place RX10_TEMP58 = Program . getPlaceFromDist2 ( RX10_TEMP52 , RX10_TEMP54 ) ; final place RX10_TEMP60 = here ; final boolean RX10_TEMP61 = RX10_TEMP58 != RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP59 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP54 , X10_TEMP55 ) ; }
 }
 public static void thread195(final T195 utmpz) {final  int i = utmpz.i;
final  Complex t1 = utmpz.t1;
final  int j2 = utmpz.j2;
final  int j1 = utmpz.j1;
final  ComplexRefArray2 f = utmpz.f;
 { final Point2 RX10_TEMP81 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP82 = f . distValue ; final Region2 RX10_TEMP83 = RX10_TEMP82 . dReg ; final int RX10_TEMP84 = Program . searchPointInRegion2 ( RX10_TEMP83 , RX10_TEMP81 ) ; final int RX10_TEMP85 = 0 ; final boolean RX10_TEMP86 = RX10_TEMP84 < RX10_TEMP85 ; if ( RX10_TEMP86 ) { String RX10_TEMP87 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP87 ) ; }
 final place RX10_TEMP88 = Program . getPlaceFromDist2 ( RX10_TEMP82 , RX10_TEMP84 ) ; final place RX10_TEMP90 = here ; final boolean RX10_TEMP91 = RX10_TEMP88 != RX10_TEMP90 ; if ( RX10_TEMP91 ) { String RX10_TEMP89 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP89 ) ; }
 final Complex RX10_TEMP92 = Program . getRefArrayValue2Complex ( f , RX10_TEMP84 ) ; final Complex X10_TEMP77 = ( RX10_TEMP92 ) ; final Complex t = ( Program . Complex_getConjg ( X10_TEMP77 ) ) ; final Point2 RX10_TEMP93 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP94 = f . distValue ; final Region2 RX10_TEMP95 = RX10_TEMP94 . dReg ; final int RX10_TEMP96 = Program . searchPointInRegion2 ( RX10_TEMP95 , RX10_TEMP93 ) ; final int RX10_TEMP97 = 0 ; final boolean RX10_TEMP98 = RX10_TEMP96 < RX10_TEMP97 ; if ( RX10_TEMP98 ) { String RX10_TEMP99 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP99 ) ; }
 final place RX10_TEMP100 = Program . getPlaceFromDist2 ( RX10_TEMP94 , RX10_TEMP96 ) ; final place RX10_TEMP102 = here ; final boolean RX10_TEMP103 = RX10_TEMP100 != RX10_TEMP102 ; if ( RX10_TEMP103 ) { String RX10_TEMP101 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP101 ) ; }
 final Complex RX10_TEMP104 = Program . getRefArrayValue2Complex ( f , RX10_TEMP96 ) ; final Complex X10_TEMP81 = ( RX10_TEMP104 ) ; final Complex s = ( Program . Complex_add ( X10_TEMP81 , t ) ) ; final Point2 RX10_TEMP105 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP106 = f . distValue ; final Region2 RX10_TEMP107 = RX10_TEMP106 . dReg ; final int RX10_TEMP108 = Program . searchPointInRegion2 ( RX10_TEMP107 , RX10_TEMP105 ) ; final int RX10_TEMP109 = 0 ; final boolean RX10_TEMP110 = RX10_TEMP108 < RX10_TEMP109 ; if ( RX10_TEMP110 ) { String RX10_TEMP111 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP111 ) ; }
 final place RX10_TEMP112 = Program . getPlaceFromDist2 ( RX10_TEMP106 , RX10_TEMP108 ) ; final place RX10_TEMP114 = here ; final boolean RX10_TEMP115 = RX10_TEMP112 != RX10_TEMP114 ; if ( RX10_TEMP115 ) { String RX10_TEMP113 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP113 ) ; }
 final Complex RX10_TEMP116 = Program . getRefArrayValue2Complex ( f , RX10_TEMP108 ) ; final Complex X10_TEMP86 = ( RX10_TEMP116 ) ; final Complex X10_TEMP89 = ( Program . Complex_sub ( X10_TEMP86 , t ) ) ; final Complex t3 = ( Program . Complex_mult ( X10_TEMP89 , t1 ) ) ; final Complex X10_TEMP96 = ( Program . Complex_add ( s , t3 ) ) ; final Complex X10_TEMP97 = ( X10_TEMP96 ) ; final Point2 RX10_TEMP117 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP118 = f . distValue ; final Region2 RX10_TEMP119 = RX10_TEMP118 . dReg ; final int RX10_TEMP120 = Program . searchPointInRegion2 ( RX10_TEMP119 , RX10_TEMP117 ) ; final int RX10_TEMP121 = 0 ; final boolean RX10_TEMP122 = RX10_TEMP120 < RX10_TEMP121 ; if ( RX10_TEMP122 ) { String RX10_TEMP123 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP123 ) ; }
 final place RX10_TEMP124 = Program . getPlaceFromDist2 ( RX10_TEMP118 , RX10_TEMP120 ) ; final place RX10_TEMP126 = here ; final boolean RX10_TEMP127 = RX10_TEMP124 != RX10_TEMP126 ; if ( RX10_TEMP127 ) { String RX10_TEMP125 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP125 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP120 , X10_TEMP97 ) ; final Complex X10_TEMP102 = ( Program . Complex_sub ( s , t3 ) ) ; final Complex X10_TEMP104 = ( Program . Complex_getConjg ( X10_TEMP102 ) ) ; final Complex X10_TEMP105 = ( X10_TEMP104 ) ; final Point2 RX10_TEMP128 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP129 = f . distValue ; final Region2 RX10_TEMP130 = RX10_TEMP129 . dReg ; final int RX10_TEMP131 = Program . searchPointInRegion2 ( RX10_TEMP130 , RX10_TEMP128 ) ; final int RX10_TEMP132 = 0 ; final boolean RX10_TEMP133 = RX10_TEMP131 < RX10_TEMP132 ; if ( RX10_TEMP133 ) { String RX10_TEMP134 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP134 ) ; }
 final place RX10_TEMP135 = Program . getPlaceFromDist2 ( RX10_TEMP129 , RX10_TEMP131 ) ; final place RX10_TEMP137 = here ; final boolean RX10_TEMP138 = RX10_TEMP135 != RX10_TEMP137 ; if ( RX10_TEMP138 ) { String RX10_TEMP136 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP136 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP131 , X10_TEMP105 ) ; }
 }
 public static void thread196(final T196 utmpz) {final  int j1 = utmpz.j1;
final  Region1 rLocal1 = utmpz.rLocal1;
final  int kmr = utmpz.kmr;
final  int nxh = utmpz.nxh;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int j2 = ( nxh - j1 ) ; final ComplexValArray1 X10_TEMP31 = X10_TEMP0 . tableSineCosine ; final int X10_TEMP33 = ( kmr * j1 ) ; final Point1 RX10_TEMP19 = new Point1 ( X10_TEMP33 ) ; final Region1 RX10_TEMP20 = X10_TEMP31 . regionValue ; final int RX10_TEMP21 = Program . searchPointInRegion1 ( RX10_TEMP20 , RX10_TEMP19 ) ; final int RX10_TEMP22 = 0 ; final boolean RX10_TEMP23 = RX10_TEMP21 < RX10_TEMP22 ; if ( RX10_TEMP23 ) { String RX10_TEMP24 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final Complex value [ : rank==1 ] RX10_TEMP25 = ( Complex value [ : rank==1 ] ) ( X10_TEMP31 . contents ) ; final Complex t0 = ( RX10_TEMP25 [ RX10_TEMP21 ] ) ; double X10_TEMP39 = ( Program . Complex_getImag ( t0 ) ) ; final double X10_TEMP36 = ( Program . Complex_getReal ( t0 ) ) ; final int X10_TEMP37 = 0 ; double X10_TEMP40 = ( X10_TEMP37 - X10_TEMP36 ) ; final Complex t1 = ( new Complex ( X10_TEMP39 , X10_TEMP40 ) ) ; final place X10_TEMP43 = here ; final int RX10_TEMP30 = 1 ; int RX10_TEMP28 = rLocal1 . regSize ; RX10_TEMP28 = RX10_TEMP28 - RX10_TEMP30 ; final region ( : rank==1 ) RX10_TEMP29 = [ 0 : RX10_TEMP28 ] ; for ( point ( : rank==1 ) RX10_TEMP26 : RX10_TEMP29 ) { final int RX10_TEMP31 = RX10_TEMP26 [0] ; final Point1 RX10_TEMP27 = Program . regionOrdinalPoint1 ( rLocal1 , RX10_TEMP31 ) ; final int i = RX10_TEMP27 . f0 ; 
 final T344 utmp344 = new T344(i, t1, j2, j1, f, X10_TEMP0);
 async (X10_TEMP43) {Program.thread344(utmp344); }
 }
 }
 }
 public static void thread197(final T197 utmpz) {final  Point2 pt = utmpz.pt;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { int X10_TEMP91 = ( 1 ) ; int X10_TEMP92 = ( 0 ) ; int RX10_TEMP95 = pt . f0 ; int RX10_TEMP96 = pt . f1 ; RX10_TEMP95 = RX10_TEMP95 * X10_TEMP91 ; RX10_TEMP96 = RX10_TEMP96 * X10_TEMP92 ; final Point2 pt0 = ( new Point2 ( RX10_TEMP95 , RX10_TEMP96 ) ) ; final Dist2 RX10_TEMP97 = f . distValue ; final Region2 RX10_TEMP98 = RX10_TEMP97 . dReg ; final int RX10_TEMP99 = Program . searchPointInRegion2 ( RX10_TEMP98 , pt0 ) ; final int RX10_TEMP100 = 0 ; final boolean RX10_TEMP101 = RX10_TEMP99 < RX10_TEMP100 ; if ( RX10_TEMP101 ) { String RX10_TEMP102 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP102 ) ; }
 final place RX10_TEMP103 = Program . getPlaceFromDist2 ( RX10_TEMP97 , RX10_TEMP99 ) ; final place RX10_TEMP105 = here ; final boolean RX10_TEMP106 = RX10_TEMP103 != RX10_TEMP105 ; if ( RX10_TEMP106 ) { String RX10_TEMP104 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP104 ) ; }
 final Complex RX10_TEMP107 = Program . getRefArrayValue2Complex ( f , RX10_TEMP99 ) ; final Complex t1 = ( RX10_TEMP107 ) ; final Dist2 RX10_TEMP108 = f . distValue ; final Region2 RX10_TEMP109 = RX10_TEMP108 . dReg ; final int RX10_TEMP110 = Program . searchPointInRegion2 ( RX10_TEMP109 , pt ) ; final int RX10_TEMP111 = 0 ; final boolean RX10_TEMP112 = RX10_TEMP110 < RX10_TEMP111 ; if ( RX10_TEMP112 ) { String RX10_TEMP113 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP113 ) ; }
 final place RX10_TEMP114 = Program . getPlaceFromDist2 ( RX10_TEMP108 , RX10_TEMP110 ) ; final place RX10_TEMP116 = here ; final boolean RX10_TEMP117 = RX10_TEMP114 != RX10_TEMP116 ; if ( RX10_TEMP117 ) { String RX10_TEMP115 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP115 ) ; }
 final Complex RX10_TEMP118 = Program . getRefArrayValue2Complex ( f , RX10_TEMP110 ) ; final Complex t2 = ( RX10_TEMP118 ) ; final double t1Real = ( Program . Complex_getReal ( t1 ) ) ; final double t1Imag = ( Program . Complex_getImag ( t1 ) ) ; double X10_TEMP102 = ( t1Real + t1Imag ) ; double X10_TEMP103 = ( t1Real - t1Imag ) ; final Complex t3 = ( new Complex ( X10_TEMP102 , X10_TEMP103 ) ) ; final Complex X10_TEMP107 = ( Program . Complex_getConjg ( t2 ) ) ; final double X10_TEMP108 = ( 2 ) ; final double X10_TEMP109 = ( X10_TEMP0 . invN ) ; final double X10_TEMP111 = ( X10_TEMP108 * X10_TEMP109 ) ; final Complex X10_TEMP113 = ( Program . Complex_multS ( X10_TEMP107 , X10_TEMP111 ) ) ; final Complex X10_TEMP114 = ( X10_TEMP113 ) ; final Dist2 RX10_TEMP119 = f . distValue ; final Region2 RX10_TEMP120 = RX10_TEMP119 . dReg ; final int RX10_TEMP121 = Program . searchPointInRegion2 ( RX10_TEMP120 , pt ) ; final int RX10_TEMP122 = 0 ; final boolean RX10_TEMP123 = RX10_TEMP121 < RX10_TEMP122 ; if ( RX10_TEMP123 ) { String RX10_TEMP124 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP124 ) ; }
 final place RX10_TEMP125 = Program . getPlaceFromDist2 ( RX10_TEMP119 , RX10_TEMP121 ) ; final place RX10_TEMP127 = here ; final boolean RX10_TEMP128 = RX10_TEMP125 != RX10_TEMP127 ; if ( RX10_TEMP128 ) { String RX10_TEMP126 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP126 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP121 , X10_TEMP114 ) ; final double X10_TEMP116 = ( 2 ) ; final double X10_TEMP117 = ( X10_TEMP0 . invN ) ; final double X10_TEMP119 = ( X10_TEMP116 * X10_TEMP117 ) ; final Complex X10_TEMP121 = ( Program . Complex_multS ( t3 , X10_TEMP119 ) ) ; final Complex X10_TEMP122 = ( X10_TEMP121 ) ; final Dist2 RX10_TEMP129 = f . distValue ; final Region2 RX10_TEMP130 = RX10_TEMP129 . dReg ; final int RX10_TEMP131 = Program . searchPointInRegion2 ( RX10_TEMP130 , pt0 ) ; final int RX10_TEMP132 = 0 ; final boolean RX10_TEMP133 = RX10_TEMP131 < RX10_TEMP132 ; if ( RX10_TEMP133 ) { String RX10_TEMP134 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP134 ) ; }
 final place RX10_TEMP135 = Program . getPlaceFromDist2 ( RX10_TEMP129 , RX10_TEMP131 ) ; final place RX10_TEMP137 = here ; final boolean RX10_TEMP138 = RX10_TEMP135 != RX10_TEMP137 ; if ( RX10_TEMP138 ) { String RX10_TEMP136 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP136 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP131 , X10_TEMP122 ) ; }
 }
 public static void thread198(final T198 utmpz) {final  int j1 = utmpz.j1;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP15 = ( X10_TEMP0 . length1 ) ; final int j2 = ( X10_TEMP15 - j1 ) ; final int X10_TEMP19 = ( 0 ) ; final Point2 RX10_TEMP6 = new Point2 ( X10_TEMP19 , j2 ) ; final Dist2 RX10_TEMP7 = f . distValue ; final Region2 RX10_TEMP8 = RX10_TEMP7 . dReg ; final int RX10_TEMP9 = Program . searchPointInRegion2 ( RX10_TEMP8 , RX10_TEMP6 ) ; final int RX10_TEMP10 = 0 ; final boolean RX10_TEMP11 = RX10_TEMP9 < RX10_TEMP10 ; if ( RX10_TEMP11 ) { String RX10_TEMP12 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP12 ) ; }
 final place RX10_TEMP13 = Program . getPlaceFromDist2 ( RX10_TEMP7 , RX10_TEMP9 ) ; final place RX10_TEMP15 = here ; final boolean RX10_TEMP16 = RX10_TEMP13 != RX10_TEMP15 ; if ( RX10_TEMP16 ) { String RX10_TEMP14 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP14 ) ; }
 final Complex RX10_TEMP17 = Program . getRefArrayValue2Complex ( f , RX10_TEMP9 ) ; final Complex t1 = ( RX10_TEMP17 ) ; final int X10_TEMP23 = ( 0 ) ; final Point2 RX10_TEMP18 = new Point2 ( X10_TEMP23 , j1 ) ; final Dist2 RX10_TEMP19 = f . distValue ; final Region2 RX10_TEMP20 = RX10_TEMP19 . dReg ; final int RX10_TEMP21 = Program . searchPointInRegion2 ( RX10_TEMP20 , RX10_TEMP18 ) ; final int RX10_TEMP22 = 0 ; final boolean RX10_TEMP23 = RX10_TEMP21 < RX10_TEMP22 ; if ( RX10_TEMP23 ) { String RX10_TEMP24 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final place RX10_TEMP25 = Program . getPlaceFromDist2 ( RX10_TEMP19 , RX10_TEMP21 ) ; final place RX10_TEMP27 = here ; final boolean RX10_TEMP28 = RX10_TEMP25 != RX10_TEMP27 ; if ( RX10_TEMP28 ) { String RX10_TEMP26 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP26 ) ; }
 final Complex RX10_TEMP29 = Program . getRefArrayValue2Complex ( f , RX10_TEMP21 ) ; final Complex t2 = ( RX10_TEMP29 ) ; double X10_TEMP27 = ( Program . Complex_getImag ( t1 ) ) ; double X10_TEMP28 = ( Program . Complex_getReal ( t1 ) ) ; final Complex s = ( new Complex ( X10_TEMP27 , X10_TEMP28 ) ) ; final int X10_TEMP32 = ( 0 ) ; final Complex X10_TEMP35 = ( Program . Complex_sub ( t2 , s ) ) ; final Complex X10_TEMP37 = ( Program . Complex_getConjg ( X10_TEMP35 ) ) ; final Complex X10_TEMP38 = ( X10_TEMP37 ) ; final Point2 RX10_TEMP30 = new Point2 ( X10_TEMP32 , j2 ) ; final Dist2 RX10_TEMP31 = f . distValue ; final Region2 RX10_TEMP32 = RX10_TEMP31 . dReg ; final int RX10_TEMP33 = Program . searchPointInRegion2 ( RX10_TEMP32 , RX10_TEMP30 ) ; final int RX10_TEMP34 = 0 ; final boolean RX10_TEMP35 = RX10_TEMP33 < RX10_TEMP34 ; if ( RX10_TEMP35 ) { String RX10_TEMP36 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 final place RX10_TEMP37 = Program . getPlaceFromDist2 ( RX10_TEMP31 , RX10_TEMP33 ) ; final place RX10_TEMP39 = here ; final boolean RX10_TEMP40 = RX10_TEMP37 != RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP38 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP33 , X10_TEMP38 ) ; final int X10_TEMP41 = ( 0 ) ; final Complex X10_TEMP44 = ( Program . Complex_add ( t2 , s ) ) ; final Complex X10_TEMP45 = ( X10_TEMP44 ) ; final Point2 RX10_TEMP41 = new Point2 ( X10_TEMP41 , j1 ) ; final Dist2 RX10_TEMP42 = f . distValue ; final Region2 RX10_TEMP43 = RX10_TEMP42 . dReg ; final int RX10_TEMP44 = Program . searchPointInRegion2 ( RX10_TEMP43 , RX10_TEMP41 ) ; final int RX10_TEMP45 = 0 ; final boolean RX10_TEMP46 = RX10_TEMP44 < RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP47 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final place RX10_TEMP48 = Program . getPlaceFromDist2 ( RX10_TEMP42 , RX10_TEMP44 ) ; final place RX10_TEMP50 = here ; final boolean RX10_TEMP51 = RX10_TEMP48 != RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP49 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP49 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP44 , X10_TEMP45 ) ; }
 }
 public static void thread199(final T199 utmpz) {final  int j1 = utmpz.j1;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int X10_TEMP15 = ( X10_TEMP0 . length1 ) ; final int j2 = ( X10_TEMP15 - j1 ) ; final int X10_TEMP19 = ( 0 ) ; final Point2 RX10_TEMP6 = new Point2 ( X10_TEMP19 , j2 ) ; final Dist2 RX10_TEMP7 = f . distValue ; final Region2 RX10_TEMP8 = RX10_TEMP7 . dReg ; final int RX10_TEMP9 = Program . searchPointInRegion2 ( RX10_TEMP8 , RX10_TEMP6 ) ; final int RX10_TEMP10 = 0 ; final boolean RX10_TEMP11 = RX10_TEMP9 < RX10_TEMP10 ; if ( RX10_TEMP11 ) { String RX10_TEMP12 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP12 ) ; }
 final place RX10_TEMP13 = Program . getPlaceFromDist2 ( RX10_TEMP7 , RX10_TEMP9 ) ; final place RX10_TEMP15 = here ; final boolean RX10_TEMP16 = RX10_TEMP13 != RX10_TEMP15 ; if ( RX10_TEMP16 ) { String RX10_TEMP14 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP14 ) ; }
 final Complex RX10_TEMP17 = Program . getRefArrayValue2Complex ( f , RX10_TEMP9 ) ; final Complex s = ( RX10_TEMP17 ) ; final int X10_TEMP23 = ( 0 ) ; final Point2 RX10_TEMP18 = new Point2 ( X10_TEMP23 , j1 ) ; final Dist2 RX10_TEMP19 = f . distValue ; final Region2 RX10_TEMP20 = RX10_TEMP19 . dReg ; final int RX10_TEMP21 = Program . searchPointInRegion2 ( RX10_TEMP20 , RX10_TEMP18 ) ; final int RX10_TEMP22 = 0 ; final boolean RX10_TEMP23 = RX10_TEMP21 < RX10_TEMP22 ; if ( RX10_TEMP23 ) { String RX10_TEMP24 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final place RX10_TEMP25 = Program . getPlaceFromDist2 ( RX10_TEMP19 , RX10_TEMP21 ) ; final place RX10_TEMP27 = here ; final boolean RX10_TEMP28 = RX10_TEMP25 != RX10_TEMP27 ; if ( RX10_TEMP28 ) { String RX10_TEMP26 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP26 ) ; }
 final Complex RX10_TEMP29 = Program . getRefArrayValue2Complex ( f , RX10_TEMP21 ) ; final Complex t = ( RX10_TEMP29 ) ; final Complex t1 = ( Program . Complex_add ( t , s ) ) ; final Complex t2 = ( Program . Complex_sub ( t , s ) ) ; final int X10_TEMP31 = ( 0 ) ; double X10_TEMP34 = ( Program . Complex_getImag ( t1 ) ) ; double X10_TEMP35 = ( Program . Complex_getReal ( t2 ) ) ; final Complex X10_TEMP37 = ( new Complex ( X10_TEMP34 , X10_TEMP35 ) ) ; final double X10_TEMP39 = ( 0.5 ) ; final Complex X10_TEMP41 = ( Program . Complex_multS ( X10_TEMP37 , X10_TEMP39 ) ) ; final Complex X10_TEMP42 = ( X10_TEMP41 ) ; final Point2 RX10_TEMP30 = new Point2 ( X10_TEMP31 , j2 ) ; final Dist2 RX10_TEMP31 = f . distValue ; final Region2 RX10_TEMP32 = RX10_TEMP31 . dReg ; final int RX10_TEMP33 = Program . searchPointInRegion2 ( RX10_TEMP32 , RX10_TEMP30 ) ; final int RX10_TEMP34 = 0 ; final boolean RX10_TEMP35 = RX10_TEMP33 < RX10_TEMP34 ; if ( RX10_TEMP35 ) { String RX10_TEMP36 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP36 ) ; }
 final place RX10_TEMP37 = Program . getPlaceFromDist2 ( RX10_TEMP31 , RX10_TEMP33 ) ; final place RX10_TEMP39 = here ; final boolean RX10_TEMP40 = RX10_TEMP37 != RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP38 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP33 , X10_TEMP42 ) ; final int X10_TEMP45 = ( 0 ) ; double X10_TEMP48 = ( Program . Complex_getReal ( t1 ) ) ; double X10_TEMP49 = ( Program . Complex_getImag ( t2 ) ) ; final Complex X10_TEMP51 = ( new Complex ( X10_TEMP48 , X10_TEMP49 ) ) ; final double X10_TEMP53 = ( 0.5 ) ; final Complex X10_TEMP55 = ( Program . Complex_multS ( X10_TEMP51 , X10_TEMP53 ) ) ; final Complex X10_TEMP56 = ( X10_TEMP55 ) ; final Point2 RX10_TEMP41 = new Point2 ( X10_TEMP45 , j1 ) ; final Dist2 RX10_TEMP42 = f . distValue ; final Region2 RX10_TEMP43 = RX10_TEMP42 . dReg ; final int RX10_TEMP44 = Program . searchPointInRegion2 ( RX10_TEMP43 , RX10_TEMP41 ) ; final int RX10_TEMP45 = 0 ; final boolean RX10_TEMP46 = RX10_TEMP44 < RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP47 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP47 ) ; }
 final place RX10_TEMP48 = Program . getPlaceFromDist2 ( RX10_TEMP42 , RX10_TEMP44 ) ; final place RX10_TEMP50 = here ; final boolean RX10_TEMP51 = RX10_TEMP48 != RX10_TEMP50 ; if ( RX10_TEMP51 ) { String RX10_TEMP49 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP49 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP44 , X10_TEMP56 ) ; }
 }
 public static void thread200(final T200 utmpz) {final  int j = utmpz.j;
final  int mb = utmpz.mb;
final  int lb = utmpz.lb;
final  int kmr = utmpz.kmr;
final  boolean inverse = utmpz.inverse;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final int j1 = ( j + lb ) ; final int j2 = ( j + mb ) ; final boolean X10_TEMP82 = ( inverse ) ; final boolean X10_TEMP83 = X10_TEMP82 ; final ComplexValArray1 X10_TEMP84 = X10_TEMP0 . tableSineCosine ; final int X10_TEMP86 = ( kmr * j ) ; final ComplexValArray1 X10_TEMP88 = X10_TEMP0 . tableSineCosine ; final int X10_TEMP90 = ( kmr * j ) ; final Point1 RX10_TEMP29 = new Point1 ( X10_TEMP90 ) ; final Region1 RX10_TEMP30 = X10_TEMP88 . regionValue ; final int RX10_TEMP31 = Program . searchPointInRegion1 ( RX10_TEMP30 , RX10_TEMP29 ) ; final int RX10_TEMP32 = 0 ; final boolean RX10_TEMP33 = RX10_TEMP31 < RX10_TEMP32 ; if ( RX10_TEMP33 ) { String RX10_TEMP34 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP34 ) ; }
 final Complex value [ : rank==1 ] RX10_TEMP35 = ( Complex value [ : rank==1 ] ) ( X10_TEMP88 . contents ) ; final Complex X10_TEMP91 = ( RX10_TEMP35 [ RX10_TEMP31 ] ) ; Complex X10_TEMP93 = Program . Complex_getConjg ( X10_TEMP91 ) ; if ( X10_TEMP83 ) { final Point1 RX10_TEMP36 = new Point1 ( X10_TEMP86 ) ; final Region1 RX10_TEMP37 = X10_TEMP84 . regionValue ; final int RX10_TEMP38 = Program . searchPointInRegion1 ( RX10_TEMP37 , RX10_TEMP36 ) ; final int RX10_TEMP39 = 0 ; final boolean RX10_TEMP40 = RX10_TEMP38 < RX10_TEMP39 ; if ( RX10_TEMP40 ) { String RX10_TEMP41 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP41 ) ; }
 final Complex value [ : rank==1 ] RX10_TEMP42 = ( Complex value [ : rank==1 ] ) ( X10_TEMP84 . contents ) ; X10_TEMP93 = RX10_TEMP42 [ RX10_TEMP38 ] ; }
 final Complex X10_TEMP94 = X10_TEMP93 ; final Complex X10_TEMP95 = ( X10_TEMP94 ) ; final Complex s = ( X10_TEMP95 ) ; final Dist2 RX10_TEMP43 = f . distValue ; final Dist2 dF = RX10_TEMP43 ; final int X10_TEMP100 = ( 0 ) ; final Region1 rLocal1 = Program . X10Util_getLRank2D ( dF , X10_TEMP100 ) ; final place X10_TEMP103 = here ; final int RX10_TEMP48 = 1 ; int RX10_TEMP46 = rLocal1 . regSize ; RX10_TEMP46 = RX10_TEMP46 - RX10_TEMP48 ; final region ( : rank==1 ) RX10_TEMP47 = [ 0 : RX10_TEMP46 ] ; for ( point ( : rank==1 ) RX10_TEMP44 : RX10_TEMP47 ) { final int RX10_TEMP49 = RX10_TEMP44 [0] ; final Point1 RX10_TEMP45 = Program . regionOrdinalPoint1 ( rLocal1 , RX10_TEMP49 ) ; final int i = RX10_TEMP45 . f0 ; 
 final T345 utmp345 = new T345(i, s, j2, j1, f);
 async (X10_TEMP103) {Program.thread345(utmp345); }
 }
 }
 }
 public static void thread201(final T201 utmpz) {final  doubleStub RX10_TEMP57 = utmpz.RX10_TEMP57;
final  point ( : rank==1 ) RX10_TEMP49 = utmpz.RX10_TEMP49;
final  doubleStub [ : rank==1 ] RX10_TEMP48 = utmpz.RX10_TEMP48;
 { RX10_TEMP48 [ RX10_TEMP49 ] = ( RX10_TEMP57 ) ; }
 }
 public static void thread202(final T202 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread203(final T203 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread204(final T204 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread205(final T205 utmpz) {final  intStub RX10_TEMP77 = utmpz.RX10_TEMP77;
final  point ( : rank==1 ) RX10_TEMP68 = utmpz.RX10_TEMP68;
final  intStub [ : rank==1 ] RX10_TEMP67 = utmpz.RX10_TEMP67;
 { RX10_TEMP67 [ RX10_TEMP68 ] = ( RX10_TEMP77 ) ; }
 }
 public static void thread206(final T206 utmpz) {final  doubleStub RX10_TEMP98 = utmpz.RX10_TEMP98;
final  point ( : rank==1 ) RX10_TEMP89 = utmpz.RX10_TEMP89;
final  doubleStub [ : rank==1 ] RX10_TEMP88 = utmpz.RX10_TEMP88;
 { RX10_TEMP88 [ RX10_TEMP89 ] = ( RX10_TEMP98 ) ; }
 }
 public static void thread207(final T207 utmpz) {final  doubleStub RX10_TEMP119 = utmpz.RX10_TEMP119;
final  point ( : rank==1 ) RX10_TEMP110 = utmpz.RX10_TEMP110;
final  doubleStub [ : rank==1 ] RX10_TEMP109 = utmpz.RX10_TEMP109;
 { RX10_TEMP109 [ RX10_TEMP110 ] = ( RX10_TEMP119 ) ; }
 }
 public static void thread208(final T208 utmpz) {final  Point2 pt = utmpz.pt;
final  double driftX = utmpz.driftX;
final  doubleRefArray2 result = utmpz.result;
 { final Dist2 RX10_TEMP248 = result . distValue ; final Region2 RX10_TEMP249 = RX10_TEMP248 . dReg ; final int RX10_TEMP250 = Program . searchPointInRegion2 ( RX10_TEMP249 , pt ) ; final int RX10_TEMP251 = 0 ; final boolean RX10_TEMP252 = RX10_TEMP250 < RX10_TEMP251 ; if ( RX10_TEMP252 ) { String RX10_TEMP253 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP253 ) ; }
 final place RX10_TEMP254 = Program . getPlaceFromDist2 ( RX10_TEMP248 , RX10_TEMP250 ) ; final place RX10_TEMP256 = here ; final boolean RX10_TEMP257 = RX10_TEMP254 != RX10_TEMP256 ; if ( RX10_TEMP257 ) { String RX10_TEMP255 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP255 ) ; }
 final double RX10_TEMP258 = Program . getRefArrayValue2double ( result , RX10_TEMP250 ) ; final double X10_TEMP128 = ( RX10_TEMP258 ) ; final double X10_TEMP130 = ( X10_TEMP128 - driftX ) ; final double X10_TEMP131 = ( X10_TEMP130 ) ; final Dist2 RX10_TEMP259 = result . distValue ; final Region2 RX10_TEMP260 = RX10_TEMP259 . dReg ; final int RX10_TEMP261 = Program . searchPointInRegion2 ( RX10_TEMP260 , pt ) ; final int RX10_TEMP262 = 0 ; final boolean RX10_TEMP263 = RX10_TEMP261 < RX10_TEMP262 ; if ( RX10_TEMP263 ) { String RX10_TEMP264 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP264 ) ; }
 final place RX10_TEMP265 = Program . getPlaceFromDist2 ( RX10_TEMP259 , RX10_TEMP261 ) ; final place RX10_TEMP267 = here ; final boolean RX10_TEMP268 = RX10_TEMP265 != RX10_TEMP267 ; if ( RX10_TEMP268 ) { String RX10_TEMP266 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP266 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP261 , X10_TEMP131 ) ; }
 }
 public static void thread209(final T209 utmpz) {final  Point2 pt = utmpz.pt;
final  double driftY = utmpz.driftY;
final  doubleRefArray2 result = utmpz.result;
 { final Dist2 RX10_TEMP274 = result . distValue ; final Region2 RX10_TEMP275 = RX10_TEMP274 . dReg ; final int RX10_TEMP276 = Program . searchPointInRegion2 ( RX10_TEMP275 , pt ) ; final int RX10_TEMP277 = 0 ; final boolean RX10_TEMP278 = RX10_TEMP276 < RX10_TEMP277 ; if ( RX10_TEMP278 ) { String RX10_TEMP279 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP279 ) ; }
 final place RX10_TEMP280 = Program . getPlaceFromDist2 ( RX10_TEMP274 , RX10_TEMP276 ) ; final place RX10_TEMP282 = here ; final boolean RX10_TEMP283 = RX10_TEMP280 != RX10_TEMP282 ; if ( RX10_TEMP283 ) { String RX10_TEMP281 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP281 ) ; }
 final double RX10_TEMP284 = Program . getRefArrayValue2double ( result , RX10_TEMP276 ) ; final double X10_TEMP140 = ( RX10_TEMP284 ) ; final double X10_TEMP142 = ( X10_TEMP140 - driftY ) ; final double X10_TEMP143 = ( X10_TEMP142 ) ; final Dist2 RX10_TEMP285 = result . distValue ; final Region2 RX10_TEMP286 = RX10_TEMP285 . dReg ; final int RX10_TEMP287 = Program . searchPointInRegion2 ( RX10_TEMP286 , pt ) ; final int RX10_TEMP288 = 0 ; final boolean RX10_TEMP289 = RX10_TEMP287 < RX10_TEMP288 ; if ( RX10_TEMP289 ) { String RX10_TEMP290 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP290 ) ; }
 final place RX10_TEMP291 = Program . getPlaceFromDist2 ( RX10_TEMP285 , RX10_TEMP287 ) ; final place RX10_TEMP293 = here ; final boolean RX10_TEMP294 = RX10_TEMP291 != RX10_TEMP293 ; if ( RX10_TEMP294 ) { String RX10_TEMP292 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP292 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP287 , X10_TEMP143 ) ; }
 }
 public static void thread210(final T210 utmpz) {final  ParticleStub RX10_TEMP68 = utmpz.RX10_TEMP68;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ParticleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP68 ) ; }
 }
 public static void thread211(final T211 utmpz) {final  Region1Stub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  Region1Stub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread212(final T212 utmpz) {final  Region1Stub RX10_TEMP57 = utmpz.RX10_TEMP57;
final  point ( : rank==1 ) RX10_TEMP49 = utmpz.RX10_TEMP49;
final  Region1Stub [ : rank==1 ] RX10_TEMP48 = utmpz.RX10_TEMP48;
 { RX10_TEMP48 [ RX10_TEMP49 ] = ( RX10_TEMP57 ) ; }
 }
 public static void thread213(final T213 utmpz) {final  Region1 r = utmpz.r;
final  Point1 pl = utmpz.pl;
final  Region1RefArray1 rBuffer = utmpz.rBuffer;
 { final Region1 X10_TEMP165 = r ; final Dist1 RX10_TEMP85 = rBuffer . distValue ; final Region1 RX10_TEMP86 = RX10_TEMP85 . dReg ; final int RX10_TEMP87 = Program . searchPointInRegion1 ( RX10_TEMP86 , pl ) ; final int RX10_TEMP88 = 0 ; final boolean RX10_TEMP89 = RX10_TEMP87 < RX10_TEMP88 ; if ( RX10_TEMP89 ) { String RX10_TEMP90 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP90 ) ; }
 final place RX10_TEMP91 = Program . getPlaceFromDist1 ( RX10_TEMP85 , RX10_TEMP87 ) ; final place RX10_TEMP93 = here ; final boolean RX10_TEMP94 = RX10_TEMP91 != RX10_TEMP93 ; if ( RX10_TEMP94 ) { String RX10_TEMP92 = "Bad place access for array rBuffer" ; throw new RuntimeException ( RX10_TEMP92 ) ; }
 Program . setRefArrayValue1Region1 ( rBuffer , RX10_TEMP87 , X10_TEMP165 ) ; }
 }
 public static void thread214(final T214 utmpz) {final  doubleStub RX10_TEMP17 = utmpz.RX10_TEMP17;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { RX10_TEMP7 [ RX10_TEMP8 ] = ( RX10_TEMP17 ) ; }
 }
 public static void thread215(final T215 utmpz) {final  doubleStub RX10_TEMP83 = utmpz.RX10_TEMP83;
final  point ( : rank==1 ) RX10_TEMP75 = utmpz.RX10_TEMP75;
final  doubleStub [ : rank==1 ] RX10_TEMP74 = utmpz.RX10_TEMP74;
 { RX10_TEMP74 [ RX10_TEMP75 ] = ( RX10_TEMP83 ) ; }
 }
 public static void thread216(final T216 utmpz) {final  doubleStub RX10_TEMP103 = utmpz.RX10_TEMP103;
final  point ( : rank==1 ) RX10_TEMP95 = utmpz.RX10_TEMP95;
final  doubleStub [ : rank==1 ] RX10_TEMP94 = utmpz.RX10_TEMP94;
 { RX10_TEMP94 [ RX10_TEMP95 ] = ( RX10_TEMP103 ) ; }
 }
 public static void thread217(final T217 utmpz) {final  doubleStub RX10_TEMP159 = utmpz.RX10_TEMP159;
final  point ( : rank==1 ) RX10_TEMP151 = utmpz.RX10_TEMP151;
final  doubleStub [ : rank==1 ] RX10_TEMP150 = utmpz.RX10_TEMP150;
 { RX10_TEMP150 [ RX10_TEMP151 ] = ( RX10_TEMP159 ) ; }
 }
 public static void thread218(final T218 utmpz) {final  doubleStub RX10_TEMP32 = utmpz.RX10_TEMP32;
final  point ( : rank==1 ) RX10_TEMP23 = utmpz.RX10_TEMP23;
final  doubleStub [ : rank==1 ] RX10_TEMP22 = utmpz.RX10_TEMP22;
 { RX10_TEMP22 [ RX10_TEMP23 ] = ( RX10_TEMP32 ) ; }
 }
 public static void thread219(final T219 utmpz) {final  int RX10_TEMP26 = utmpz.RX10_TEMP26;
final  place RX10_TEMP22 = utmpz.RX10_TEMP22;
final  point ( : rank==1 ) RX10_TEMP21 = utmpz.RX10_TEMP21;
final  doubleStub [ : rank==1 ] RX10_TEMP20 = utmpz.RX10_TEMP20;
 { final dist ( : rank==1 ) RX10_TEMP28 = [ 0 : RX10_TEMP26 ] -> here ; final double [ : rank==1 ] RX10_TEMP29 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP28 ] ( point ( : rank==1 ) RX10_TEMP27 ) { final double X10_TEMP17 = ( 0.0 ) ; return X10_TEMP17 ; }
 ) ; final doubleStub RX10_TEMP30 = new doubleStub ( RX10_TEMP29 ) ; 
 final T346 utmp346 = new T346(RX10_TEMP30, RX10_TEMP21, RX10_TEMP20);
 async (RX10_TEMP22) {Program.thread346(utmp346); }
 }
 }
 public static void thread220(final T220 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 localCharge = utmpz.localCharge;
final  doubleRefArray2 fieldCharge = utmpz.fieldCharge;
 { final Dist2 RX10_TEMP152 = localCharge . distValue ; final Region2 RX10_TEMP153 = RX10_TEMP152 . dReg ; final int RX10_TEMP154 = Program . searchPointInRegion2 ( RX10_TEMP153 , pt ) ; final int RX10_TEMP155 = 0 ; final boolean RX10_TEMP156 = RX10_TEMP154 < RX10_TEMP155 ; if ( RX10_TEMP156 ) { String RX10_TEMP157 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP157 ) ; }
 final place RX10_TEMP158 = Program . getPlaceFromDist2 ( RX10_TEMP152 , RX10_TEMP154 ) ; final place RX10_TEMP160 = here ; final boolean RX10_TEMP161 = RX10_TEMP158 != RX10_TEMP160 ; if ( RX10_TEMP161 ) { String RX10_TEMP159 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP159 ) ; }
 final double RX10_TEMP162 = Program . getRefArrayValue2double ( localCharge , RX10_TEMP154 ) ; final double X10_TEMP113 = ( RX10_TEMP162 ) ; final double X10_TEMP114 = ( X10_TEMP113 ) ; final Dist2 RX10_TEMP163 = fieldCharge . distValue ; final Region2 RX10_TEMP164 = RX10_TEMP163 . dReg ; final int RX10_TEMP165 = Program . searchPointInRegion2 ( RX10_TEMP164 , pt ) ; final int RX10_TEMP166 = 0 ; final boolean RX10_TEMP167 = RX10_TEMP165 < RX10_TEMP166 ; if ( RX10_TEMP167 ) { String RX10_TEMP168 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP168 ) ; }
 final place RX10_TEMP169 = Program . getPlaceFromDist2 ( RX10_TEMP163 , RX10_TEMP165 ) ; final place RX10_TEMP171 = here ; final boolean RX10_TEMP172 = RX10_TEMP169 != RX10_TEMP171 ; if ( RX10_TEMP172 ) { String RX10_TEMP170 = "Bad place access for array fieldCharge" ; throw new RuntimeException ( RX10_TEMP170 ) ; }
 Program . setRefArrayValue2double ( fieldCharge , RX10_TEMP165 , X10_TEMP114 ) ; }
 }
 public static void thread221(final T221 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 localCharge = utmpz.localCharge;
final  doubleRefArray2 guards = utmpz.guards;
 { final Dist2 RX10_TEMP180 = localCharge . distValue ; final Region2 RX10_TEMP181 = RX10_TEMP180 . dReg ; final int RX10_TEMP182 = Program . searchPointInRegion2 ( RX10_TEMP181 , pt ) ; final int RX10_TEMP183 = 0 ; final boolean RX10_TEMP184 = RX10_TEMP182 < RX10_TEMP183 ; if ( RX10_TEMP184 ) { String RX10_TEMP185 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP185 ) ; }
 final place RX10_TEMP186 = Program . getPlaceFromDist2 ( RX10_TEMP180 , RX10_TEMP182 ) ; final place RX10_TEMP188 = here ; final boolean RX10_TEMP189 = RX10_TEMP186 != RX10_TEMP188 ; if ( RX10_TEMP189 ) { String RX10_TEMP187 = "Bad place access for array localCharge" ; throw new RuntimeException ( RX10_TEMP187 ) ; }
 final double RX10_TEMP190 = Program . getRefArrayValue2double ( localCharge , RX10_TEMP182 ) ; final double X10_TEMP123 = ( RX10_TEMP190 ) ; final double X10_TEMP124 = ( X10_TEMP123 ) ; final Dist2 RX10_TEMP191 = guards . distValue ; final Region2 RX10_TEMP192 = RX10_TEMP191 . dReg ; final int RX10_TEMP193 = Program . searchPointInRegion2 ( RX10_TEMP192 , pt ) ; final int RX10_TEMP194 = 0 ; final boolean RX10_TEMP195 = RX10_TEMP193 < RX10_TEMP194 ; if ( RX10_TEMP195 ) { String RX10_TEMP196 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP196 ) ; }
 final place RX10_TEMP197 = Program . getPlaceFromDist2 ( RX10_TEMP191 , RX10_TEMP193 ) ; final place RX10_TEMP199 = here ; final boolean RX10_TEMP200 = RX10_TEMP197 != RX10_TEMP199 ; if ( RX10_TEMP200 ) { String RX10_TEMP198 = "Bad place access for array guards" ; throw new RuntimeException ( RX10_TEMP198 ) ; }
 Program . setRefArrayValue2double ( guards , RX10_TEMP193 , X10_TEMP124 ) ; }
 }
 public static void thread222(final T222 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  Region2 rLocalG = utmpz.rLocalG;
final  doubleRefArray2 data = utmpz.data;
 { final Dist2 RX10_TEMP34 = data . distValue ; final Dist2 dData = RX10_TEMP34 ; final Region2 rLocalD = Program . X10Util_get2DLRegion ( dData ) ; final int X10_TEMP24 = 0 ; final int X10_TEMP25 = 1 ; final int X10_TEMP26 = X10_TEMP24 - X10_TEMP25 ; final place X10_TEMP27 = here ; Region2 X10_TEMP28 = Program . createNewRegion2RR ( X10_TEMP24 , X10_TEMP26 , X10_TEMP24 , X10_TEMP26 ) ; final int RX10_TEMP38 = 1 ; int RX10_TEMP36 = rLocalD . regSize ; RX10_TEMP36 = RX10_TEMP36 - RX10_TEMP38 ; final region ( : rank==1 ) RX10_TEMP37 = [ 0 : RX10_TEMP36 ] ; for ( point ( : rank==1 ) RX10_TEMP35 : RX10_TEMP37 ) { final int RX10_TEMP39 = RX10_TEMP35 [0] ; final Point2 X10_TEMP29 = Program . regionOrdinalPoint2 ( rLocalD , RX10_TEMP39 ) ; final int X10_TEMP30 = X10_TEMP29 . f0 ; final int X10_TEMP31 = X10_TEMP29 . f1 ; final boolean RX10_TEMP40 = Program . regionContainsPoint2 ( rLocalG , X10_TEMP29 ) ; final boolean X10_TEMP32 = RX10_TEMP40 ; if ( X10_TEMP32 ) { final Region2 X10_TEMP33 = Program . createNewRegion2RR ( X10_TEMP30 , X10_TEMP30 , X10_TEMP31 , X10_TEMP31 ) ; X10_TEMP28 = Program . unionRegion2 ( X10_TEMP28 , X10_TEMP33 ) ; }
 }
 final Region2 X10_TEMP34 = X10_TEMP28 ; final Region2 X10_TEMP36 = X10_TEMP34 ; final place X10_TEMP38 = here ; final int RX10_TEMP44 = 1 ; int RX10_TEMP42 = X10_TEMP36 . regSize ; RX10_TEMP42 = RX10_TEMP42 - RX10_TEMP44 ; final region ( : rank==1 ) RX10_TEMP43 = [ 0 : RX10_TEMP42 ] ; for ( point ( : rank==1 ) RX10_TEMP41 : RX10_TEMP43 ) { final int RX10_TEMP45 = RX10_TEMP41 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( X10_TEMP36 , RX10_TEMP45 ) ; 
 final T347 utmp347 = new T347(pt, sBuffer, data);
 async (X10_TEMP38) {Program.thread347(utmp347); }
 }
 }
 }
 public static void thread223(final T223 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleRefArray2 guards = utmpz.guards;
 { final double X10_TEMP51 = ( 0.0 ) ; final double X10_TEMP52 = ( X10_TEMP51 ) ; final Dist2 RX10_TEMP78 = guards . distValue ; final Region2 RX10_TEMP79 = RX10_TEMP78 . dReg ; final int RX10_TEMP80 = Program . searchPointInRegion2 ( RX10_TEMP79 , pt ) ; final int RX10_TEMP81 = 0 ; final boolean RX10_TEMP82 = RX10_TEMP80 < RX10_TEMP81 ; if ( RX10_TEMP82 ) { String RX10_TEMP83 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP83 ) ; }
 final place RX10_TEMP84 = Program . getPlaceFromDist2 ( RX10_TEMP78 , RX10_TEMP80 ) ; final place RX10_TEMP86 = here ; final boolean RX10_TEMP87 = RX10_TEMP84 != RX10_TEMP86 ; if ( RX10_TEMP87 ) { String RX10_TEMP85 = "Bad place access for array guards" ; throw new RuntimeException ( RX10_TEMP85 ) ; }
 Program . setRefArrayValue2double ( guards , RX10_TEMP80 , X10_TEMP52 ) ; }
 }
 public static void thread224(final T224 utmpz) {final  doubleStub RX10_TEMP18 = utmpz.RX10_TEMP18;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  doubleStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { RX10_TEMP8 [ RX10_TEMP9 ] = ( RX10_TEMP18 ) ; }
 }
 public static void thread225(final T225 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  Region2 rLocal = utmpz.rLocal;
final  doubleRefArray2 result = utmpz.result;
 { final place X10_TEMP53 = here ; final int RX10_TEMP59 = 1 ; int RX10_TEMP57 = rLocal . regSize ; RX10_TEMP57 = RX10_TEMP57 - RX10_TEMP59 ; final region ( : rank==1 ) RX10_TEMP58 = [ 0 : RX10_TEMP57 ] ; for ( point ( : rank==1 ) RX10_TEMP56 : RX10_TEMP58 ) { final int RX10_TEMP60 = RX10_TEMP56 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( rLocal , RX10_TEMP60 ) ; 
 final T348 utmp348 = new T348(pt, sBuffer, result);
 async (X10_TEMP53) {Program.thread348(utmp348); }
 }
 }
 }
 public static void thread226(final T226 utmpz) {final  doubleStub RX10_TEMP18 = utmpz.RX10_TEMP18;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  doubleStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { RX10_TEMP8 [ RX10_TEMP9 ] = ( RX10_TEMP18 ) ; }
 }
 public static void thread227(final T227 utmpz) {final  doubleStub RX10_TEMP39 = utmpz.RX10_TEMP39;
final  point ( : rank==1 ) RX10_TEMP30 = utmpz.RX10_TEMP30;
final  doubleStub [ : rank==1 ] RX10_TEMP29 = utmpz.RX10_TEMP29;
 { RX10_TEMP29 [ RX10_TEMP30 ] = ( RX10_TEMP39 ) ; }
 }
 public static void thread228(final T228 utmpz) {final  intStub RX10_TEMP60 = utmpz.RX10_TEMP60;
final  point ( : rank==1 ) RX10_TEMP51 = utmpz.RX10_TEMP51;
final  intStub [ : rank==1 ] RX10_TEMP50 = utmpz.RX10_TEMP50;
 { RX10_TEMP50 [ RX10_TEMP51 ] = ( RX10_TEMP60 ) ; }
 }
 public static void thread229(final T229 utmpz) {final  intStub RX10_TEMP81 = utmpz.RX10_TEMP81;
final  point ( : rank==1 ) RX10_TEMP72 = utmpz.RX10_TEMP72;
final  intStub [ : rank==1 ] RX10_TEMP71 = utmpz.RX10_TEMP71;
 { RX10_TEMP71 [ RX10_TEMP72 ] = ( RX10_TEMP81 ) ; }
 }
 public static void thread230(final T230 utmpz) {final  intStub RX10_TEMP102 = utmpz.RX10_TEMP102;
final  point ( : rank==1 ) RX10_TEMP93 = utmpz.RX10_TEMP93;
final  intStub [ : rank==1 ] RX10_TEMP92 = utmpz.RX10_TEMP92;
 { RX10_TEMP92 [ RX10_TEMP93 ] = ( RX10_TEMP102 ) ; }
 }
 public static void thread231(final T231 utmpz) {final  intStub RX10_TEMP123 = utmpz.RX10_TEMP123;
final  point ( : rank==1 ) RX10_TEMP114 = utmpz.RX10_TEMP114;
final  intStub [ : rank==1 ] RX10_TEMP113 = utmpz.RX10_TEMP113;
 { RX10_TEMP113 [ RX10_TEMP114 ] = ( RX10_TEMP123 ) ; }
 }
 public static void thread232(final T232 utmpz) {final  intStub RX10_TEMP144 = utmpz.RX10_TEMP144;
final  point ( : rank==1 ) RX10_TEMP135 = utmpz.RX10_TEMP135;
final  intStub [ : rank==1 ] RX10_TEMP134 = utmpz.RX10_TEMP134;
 { RX10_TEMP134 [ RX10_TEMP135 ] = ( RX10_TEMP144 ) ; }
 }
 public static void thread233(final T233 utmpz) {final  intStub RX10_TEMP165 = utmpz.RX10_TEMP165;
final  point ( : rank==1 ) RX10_TEMP156 = utmpz.RX10_TEMP156;
final  intStub [ : rank==1 ] RX10_TEMP155 = utmpz.RX10_TEMP155;
 { RX10_TEMP155 [ RX10_TEMP156 ] = ( RX10_TEMP165 ) ; }
 }
 public static void thread234(final T234 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int offset = utmpz.offset;
final  int pl = utmpz.pl;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  doubleRefArray2 data = utmpz.data;
 { final int X10_TEMP81 = ( i - offset ) ; final Point2 RX10_TEMP193 = new Point2 ( i , j ) ; final Dist2 RX10_TEMP194 = data . distValue ; final Region2 RX10_TEMP195 = RX10_TEMP194 . dReg ; final int RX10_TEMP196 = Program . searchPointInRegion2 ( RX10_TEMP195 , RX10_TEMP193 ) ; final int RX10_TEMP197 = 0 ; final boolean RX10_TEMP198 = RX10_TEMP196 < RX10_TEMP197 ; if ( RX10_TEMP198 ) { String RX10_TEMP199 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP199 ) ; }
 final place RX10_TEMP200 = Program . getPlaceFromDist2 ( RX10_TEMP194 , RX10_TEMP196 ) ; final place RX10_TEMP202 = here ; final boolean RX10_TEMP203 = RX10_TEMP200 != RX10_TEMP202 ; if ( RX10_TEMP203 ) { String RX10_TEMP201 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP201 ) ; }
 final double RX10_TEMP204 = Program . getRefArrayValue2double ( data , RX10_TEMP196 ) ; final double X10_TEMP85 = ( RX10_TEMP204 ) ; final double X10_TEMP86 = ( X10_TEMP85 ) ; final Point3 RX10_TEMP205 = new Point3 ( pl , X10_TEMP81 , j ) ; final Dist3 RX10_TEMP206 = srcBuffer . distValue ; final Region3 RX10_TEMP207 = RX10_TEMP206 . dReg ; final int RX10_TEMP208 = Program . searchPointInRegion3 ( RX10_TEMP207 , RX10_TEMP205 ) ; final int RX10_TEMP209 = 0 ; final boolean RX10_TEMP210 = RX10_TEMP208 < RX10_TEMP209 ; if ( RX10_TEMP210 ) { String RX10_TEMP211 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP211 ) ; }
 final place RX10_TEMP212 = Program . getPlaceFromDist3 ( RX10_TEMP206 , RX10_TEMP208 ) ; final place RX10_TEMP214 = here ; final boolean RX10_TEMP215 = RX10_TEMP212 != RX10_TEMP214 ; if ( RX10_TEMP215 ) { String RX10_TEMP213 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP213 ) ; }
 Program . setRefArrayValue3double ( srcBuffer , RX10_TEMP208 , X10_TEMP86 ) ; }
 }
 public static void thread235(final T235 utmpz) {final  intStub RX10_TEMP364 = utmpz.RX10_TEMP364;
final  point ( : rank==1 ) RX10_TEMP355 = utmpz.RX10_TEMP355;
final  intStub [ : rank==1 ] RX10_TEMP354 = utmpz.RX10_TEMP354;
 { RX10_TEMP354 [ RX10_TEMP355 ] = ( RX10_TEMP364 ) ; }
 }
 public static void thread236(final T236 utmpz) {final  intStub RX10_TEMP385 = utmpz.RX10_TEMP385;
final  point ( : rank==1 ) RX10_TEMP376 = utmpz.RX10_TEMP376;
final  intStub [ : rank==1 ] RX10_TEMP375 = utmpz.RX10_TEMP375;
 { RX10_TEMP375 [ RX10_TEMP376 ] = ( RX10_TEMP385 ) ; }
 }
 public static void thread237(final T237 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  Region2 rBuffer = utmpz.rBuffer;
final  int bsize = utmpz.bsize;
final  intRefArray1 inLt = utmpz.inLt;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
 { final place X10_TEMP212 = here ; final int RX10_TEMP508 = 1 ; int RX10_TEMP506 = rBuffer . regSize ; RX10_TEMP506 = RX10_TEMP506 - RX10_TEMP508 ; final region ( : rank==1 ) RX10_TEMP507 = [ 0 : RX10_TEMP506 ] ; for ( point ( : rank==1 ) RX10_TEMP504 : RX10_TEMP507 ) { final int RX10_TEMP509 = RX10_TEMP504 [0] ; final Point2 RX10_TEMP505 = Program . regionOrdinalPoint2 ( rBuffer , RX10_TEMP509 ) ; final int i = RX10_TEMP505 . f0 ; final int j = RX10_TEMP505 . f1 ; 
 final T349 utmp349 = new T349(j, i, sBuffer, dstBuffer);
 async (X10_TEMP212) {Program.thread349(utmp349); }
 }
 final place X10_TEMP223 = ( here ) ; final int X10_TEMP225 = ( X10_TEMP223 . id ) ; final int X10_TEMP227 = ( bsize ) ; final Point1 RX10_TEMP528 = new Point1 ( X10_TEMP225 ) ; final Dist1 RX10_TEMP529 = inLt . distValue ; final Region1 RX10_TEMP530 = RX10_TEMP529 . dReg ; final int RX10_TEMP531 = Program . searchPointInRegion1 ( RX10_TEMP530 , RX10_TEMP528 ) ; final int RX10_TEMP532 = 0 ; final boolean RX10_TEMP533 = RX10_TEMP531 < RX10_TEMP532 ; if ( RX10_TEMP533 ) { String RX10_TEMP534 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP534 ) ; }
 final place RX10_TEMP535 = Program . getPlaceFromDist1 ( RX10_TEMP529 , RX10_TEMP531 ) ; final place RX10_TEMP537 = here ; final boolean RX10_TEMP538 = RX10_TEMP535 != RX10_TEMP537 ; if ( RX10_TEMP538 ) { String RX10_TEMP536 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP536 ) ; }
 Program . setRefArrayValue1int ( inLt , RX10_TEMP531 , X10_TEMP227 ) ; }
 }
 public static void thread238(final T238 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int rsize = utmpz.rsize;
final  int pl = utmpz.pl;
final  intRefArray1 sizes = utmpz.sizes;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
final  int MAX_ROWS = utmpz.MAX_ROWS;
 { final int X10_TEMP294 = ( MAX_ROWS - rsize ) ; final int X10_TEMP297 = ( X10_TEMP294 + i ) ; final Point1 RX10_TEMP733 = new Point1 ( pl ) ; final Dist1 RX10_TEMP734 = sizes . distValue ; final Region1 RX10_TEMP735 = RX10_TEMP734 . dReg ; final int RX10_TEMP736 = Program . searchPointInRegion1 ( RX10_TEMP735 , RX10_TEMP733 ) ; final int RX10_TEMP737 = 0 ; final boolean RX10_TEMP738 = RX10_TEMP736 < RX10_TEMP737 ; if ( RX10_TEMP738 ) { String RX10_TEMP739 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP739 ) ; }
 final place RX10_TEMP740 = Program . getPlaceFromDist1 ( RX10_TEMP734 , RX10_TEMP736 ) ; final place RX10_TEMP742 = here ; final boolean RX10_TEMP743 = RX10_TEMP740 != RX10_TEMP742 ; if ( RX10_TEMP743 ) { String RX10_TEMP741 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP741 ) ; }
 final int RX10_TEMP744 = Program . getRefArrayValue1int ( sizes , RX10_TEMP736 ) ; final int X10_TEMP300 = ( RX10_TEMP744 ) ; final int X10_TEMP303 = ( X10_TEMP300 + i ) ; final Point3 RX10_TEMP745 = new Point3 ( pl , X10_TEMP303 , j ) ; final Dist3 RX10_TEMP746 = srcBuffer . distValue ; final Region3 RX10_TEMP747 = RX10_TEMP746 . dReg ; final int RX10_TEMP748 = Program . searchPointInRegion3 ( RX10_TEMP747 , RX10_TEMP745 ) ; final int RX10_TEMP749 = 0 ; final boolean RX10_TEMP750 = RX10_TEMP748 < RX10_TEMP749 ; if ( RX10_TEMP750 ) { String RX10_TEMP751 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP751 ) ; }
 final place RX10_TEMP752 = Program . getPlaceFromDist3 ( RX10_TEMP746 , RX10_TEMP748 ) ; final place RX10_TEMP754 = here ; final boolean RX10_TEMP755 = RX10_TEMP752 != RX10_TEMP754 ; if ( RX10_TEMP755 ) { String RX10_TEMP753 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP753 ) ; }
 final double RX10_TEMP756 = Program . getRefArrayValue3double ( srcBuffer , RX10_TEMP748 ) ; final double X10_TEMP305 = ( RX10_TEMP756 ) ; final double X10_TEMP306 = ( X10_TEMP305 ) ; final Point3 RX10_TEMP757 = new Point3 ( pl , X10_TEMP297 , j ) ; final Dist3 RX10_TEMP758 = dstBuffer . distValue ; final Region3 RX10_TEMP759 = RX10_TEMP758 . dReg ; final int RX10_TEMP760 = Program . searchPointInRegion3 ( RX10_TEMP759 , RX10_TEMP757 ) ; final int RX10_TEMP761 = 0 ; final boolean RX10_TEMP762 = RX10_TEMP760 < RX10_TEMP761 ; if ( RX10_TEMP762 ) { String RX10_TEMP763 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP763 ) ; }
 final place RX10_TEMP764 = Program . getPlaceFromDist3 ( RX10_TEMP758 , RX10_TEMP760 ) ; final place RX10_TEMP766 = here ; final boolean RX10_TEMP767 = RX10_TEMP764 != RX10_TEMP766 ; if ( RX10_TEMP767 ) { String RX10_TEMP765 = "Bad place access for array dstBuffer" ; throw new RuntimeException ( RX10_TEMP765 ) ; }
 Program . setRefArrayValue3double ( dstBuffer , RX10_TEMP760 , X10_TEMP306 ) ; }
 }
 public static void thread239(final T239 utmpz) {final  int j = utmpz.j;
final  int i2 = utmpz.i2;
final  int pl = utmpz.pl;
final  intRefArray1 inLt = utmpz.inLt;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
 { final Point1 RX10_TEMP828 = new Point1 ( pl ) ; final Dist1 RX10_TEMP829 = inLt . distValue ; final Region1 RX10_TEMP830 = RX10_TEMP829 . dReg ; final int RX10_TEMP831 = Program . searchPointInRegion1 ( RX10_TEMP830 , RX10_TEMP828 ) ; final int RX10_TEMP832 = 0 ; final boolean RX10_TEMP833 = RX10_TEMP831 < RX10_TEMP832 ; if ( RX10_TEMP833 ) { String RX10_TEMP834 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP834 ) ; }
 final place RX10_TEMP835 = Program . getPlaceFromDist1 ( RX10_TEMP829 , RX10_TEMP831 ) ; final place RX10_TEMP837 = here ; final boolean RX10_TEMP838 = RX10_TEMP835 != RX10_TEMP837 ; if ( RX10_TEMP838 ) { String RX10_TEMP836 = "Bad place access for array inLt" ; throw new RuntimeException ( RX10_TEMP836 ) ; }
 final int RX10_TEMP839 = Program . getRefArrayValue1int ( inLt , RX10_TEMP831 ) ; final int X10_TEMP331 = ( RX10_TEMP839 ) ; final int X10_TEMP334 = ( i2 + X10_TEMP331 ) ; final Point3 RX10_TEMP840 = new Point3 ( pl , i2 , j ) ; final Dist3 RX10_TEMP841 = srcBuffer . distValue ; final Region3 RX10_TEMP842 = RX10_TEMP841 . dReg ; final int RX10_TEMP843 = Program . searchPointInRegion3 ( RX10_TEMP842 , RX10_TEMP840 ) ; final int RX10_TEMP844 = 0 ; final boolean RX10_TEMP845 = RX10_TEMP843 < RX10_TEMP844 ; if ( RX10_TEMP845 ) { String RX10_TEMP846 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP846 ) ; }
 final place RX10_TEMP847 = Program . getPlaceFromDist3 ( RX10_TEMP841 , RX10_TEMP843 ) ; final place RX10_TEMP849 = here ; final boolean RX10_TEMP850 = RX10_TEMP847 != RX10_TEMP849 ; if ( RX10_TEMP850 ) { String RX10_TEMP848 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP848 ) ; }
 final double RX10_TEMP851 = Program . getRefArrayValue3double ( srcBuffer , RX10_TEMP843 ) ; final double X10_TEMP339 = ( RX10_TEMP851 ) ; final double X10_TEMP340 = ( X10_TEMP339 ) ; final Point3 RX10_TEMP852 = new Point3 ( pl , X10_TEMP334 , j ) ; final Dist3 RX10_TEMP853 = srcBuffer . distValue ; final Region3 RX10_TEMP854 = RX10_TEMP853 . dReg ; final int RX10_TEMP855 = Program . searchPointInRegion3 ( RX10_TEMP854 , RX10_TEMP852 ) ; final int RX10_TEMP856 = 0 ; final boolean RX10_TEMP857 = RX10_TEMP855 < RX10_TEMP856 ; if ( RX10_TEMP857 ) { String RX10_TEMP858 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP858 ) ; }
 final place RX10_TEMP859 = Program . getPlaceFromDist3 ( RX10_TEMP853 , RX10_TEMP855 ) ; final place RX10_TEMP861 = here ; final boolean RX10_TEMP862 = RX10_TEMP859 != RX10_TEMP861 ; if ( RX10_TEMP862 ) { String RX10_TEMP860 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP860 ) ; }
 Program . setRefArrayValue3double ( srcBuffer , RX10_TEMP855 , X10_TEMP340 ) ; }
 }
 public static void thread240(final T240 utmpz) {final  Point3 pt = utmpz.pt;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
 { final Dist3 RX10_TEMP880 = dstBuffer . distValue ; final Region3 RX10_TEMP881 = RX10_TEMP880 . dReg ; final int RX10_TEMP882 = Program . searchPointInRegion3 ( RX10_TEMP881 , pt ) ; final int RX10_TEMP883 = 0 ; final boolean RX10_TEMP884 = RX10_TEMP882 < RX10_TEMP883 ; if ( RX10_TEMP884 ) { String RX10_TEMP885 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP885 ) ; }
 final place RX10_TEMP886 = Program . getPlaceFromDist3 ( RX10_TEMP880 , RX10_TEMP882 ) ; final place RX10_TEMP888 = here ; final boolean RX10_TEMP889 = RX10_TEMP886 != RX10_TEMP888 ; if ( RX10_TEMP889 ) { String RX10_TEMP887 = "Bad place access for array dstBuffer" ; throw new RuntimeException ( RX10_TEMP887 ) ; }
 final double RX10_TEMP890 = Program . getRefArrayValue3double ( dstBuffer , RX10_TEMP882 ) ; final double X10_TEMP357 = ( RX10_TEMP890 ) ; final double X10_TEMP358 = ( X10_TEMP357 ) ; final Dist3 RX10_TEMP891 = srcBuffer . distValue ; final Region3 RX10_TEMP892 = RX10_TEMP891 . dReg ; final int RX10_TEMP893 = Program . searchPointInRegion3 ( RX10_TEMP892 , pt ) ; final int RX10_TEMP894 = 0 ; final boolean RX10_TEMP895 = RX10_TEMP893 < RX10_TEMP894 ; if ( RX10_TEMP895 ) { String RX10_TEMP896 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP896 ) ; }
 final place RX10_TEMP897 = Program . getPlaceFromDist3 ( RX10_TEMP891 , RX10_TEMP893 ) ; final place RX10_TEMP899 = here ; final boolean RX10_TEMP900 = RX10_TEMP897 != RX10_TEMP899 ; if ( RX10_TEMP900 ) { String RX10_TEMP898 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP898 ) ; }
 Program . setRefArrayValue3double ( srcBuffer , RX10_TEMP893 , X10_TEMP358 ) ; }
 }
 public static void thread241(final T241 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  Region2 rBuffer = utmpz.rBuffer;
final  int bsize = utmpz.bsize;
final  intRefArray1 inRt = utmpz.inRt;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
 { final place X10_TEMP404 = here ; final int RX10_TEMP1033 = 1 ; int RX10_TEMP1031 = rBuffer . regSize ; RX10_TEMP1031 = RX10_TEMP1031 - RX10_TEMP1033 ; final region ( : rank==1 ) RX10_TEMP1032 = [ 0 : RX10_TEMP1031 ] ; for ( point ( : rank==1 ) RX10_TEMP1029 : RX10_TEMP1032 ) { final int RX10_TEMP1034 = RX10_TEMP1029 [0] ; final Point2 RX10_TEMP1030 = Program . regionOrdinalPoint2 ( rBuffer , RX10_TEMP1034 ) ; final int i = RX10_TEMP1030 . f0 ; final int j = RX10_TEMP1030 . f1 ; 
 final T350 utmp350 = new T350(j, i, sBuffer, dstBuffer);
 async (X10_TEMP404) {Program.thread350(utmp350); }
 }
 final place X10_TEMP415 = ( here ) ; final int X10_TEMP417 = ( X10_TEMP415 . id ) ; final int X10_TEMP419 = ( bsize ) ; final Point1 RX10_TEMP1053 = new Point1 ( X10_TEMP417 ) ; final Dist1 RX10_TEMP1054 = inRt . distValue ; final Region1 RX10_TEMP1055 = RX10_TEMP1054 . dReg ; final int RX10_TEMP1056 = Program . searchPointInRegion1 ( RX10_TEMP1055 , RX10_TEMP1053 ) ; final int RX10_TEMP1057 = 0 ; final boolean RX10_TEMP1058 = RX10_TEMP1056 < RX10_TEMP1057 ; if ( RX10_TEMP1058 ) { String RX10_TEMP1059 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1059 ) ; }
 final place RX10_TEMP1060 = Program . getPlaceFromDist1 ( RX10_TEMP1054 , RX10_TEMP1056 ) ; final place RX10_TEMP1062 = here ; final boolean RX10_TEMP1063 = RX10_TEMP1060 != RX10_TEMP1062 ; if ( RX10_TEMP1063 ) { String RX10_TEMP1061 = "Bad place access for array inRt" ; throw new RuntimeException ( RX10_TEMP1061 ) ; }
 Program . setRefArrayValue1int ( inRt , RX10_TEMP1056 , X10_TEMP419 ) ; }
 }
 public static void thread242(final T242 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int pl = utmpz.pl;
final  intRefArray1 outLt = utmpz.outLt;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
 { final Point1 RX10_TEMP1194 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1195 = outLt . distValue ; final Region1 RX10_TEMP1196 = RX10_TEMP1195 . dReg ; final int RX10_TEMP1197 = Program . searchPointInRegion1 ( RX10_TEMP1196 , RX10_TEMP1194 ) ; final int RX10_TEMP1198 = 0 ; final boolean RX10_TEMP1199 = RX10_TEMP1197 < RX10_TEMP1198 ; if ( RX10_TEMP1199 ) { String RX10_TEMP1200 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1200 ) ; }
 final place RX10_TEMP1201 = Program . getPlaceFromDist1 ( RX10_TEMP1195 , RX10_TEMP1197 ) ; final place RX10_TEMP1203 = here ; final boolean RX10_TEMP1204 = RX10_TEMP1201 != RX10_TEMP1203 ; if ( RX10_TEMP1204 ) { String RX10_TEMP1202 = "Bad place access for array outLt" ; throw new RuntimeException ( RX10_TEMP1202 ) ; }
 final int RX10_TEMP1205 = Program . getRefArrayValue1int ( outLt , RX10_TEMP1197 ) ; final int X10_TEMP466 = ( RX10_TEMP1205 ) ; final int X10_TEMP469 = ( i + X10_TEMP466 ) ; final Point3 RX10_TEMP1206 = new Point3 ( pl , X10_TEMP469 , j ) ; final Dist3 RX10_TEMP1207 = srcBuffer . distValue ; final Region3 RX10_TEMP1208 = RX10_TEMP1207 . dReg ; final int RX10_TEMP1209 = Program . searchPointInRegion3 ( RX10_TEMP1208 , RX10_TEMP1206 ) ; final int RX10_TEMP1210 = 0 ; final boolean RX10_TEMP1211 = RX10_TEMP1209 < RX10_TEMP1210 ; if ( RX10_TEMP1211 ) { String RX10_TEMP1212 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1212 ) ; }
 final place RX10_TEMP1213 = Program . getPlaceFromDist3 ( RX10_TEMP1207 , RX10_TEMP1209 ) ; final place RX10_TEMP1215 = here ; final boolean RX10_TEMP1216 = RX10_TEMP1213 != RX10_TEMP1215 ; if ( RX10_TEMP1216 ) { String RX10_TEMP1214 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP1214 ) ; }
 final double RX10_TEMP1217 = Program . getRefArrayValue3double ( srcBuffer , RX10_TEMP1209 ) ; final double X10_TEMP471 = ( RX10_TEMP1217 ) ; final double X10_TEMP472 = ( X10_TEMP471 ) ; final Point3 RX10_TEMP1218 = new Point3 ( pl , i , j ) ; final Dist3 RX10_TEMP1219 = srcBuffer . distValue ; final Region3 RX10_TEMP1220 = RX10_TEMP1219 . dReg ; final int RX10_TEMP1221 = Program . searchPointInRegion3 ( RX10_TEMP1220 , RX10_TEMP1218 ) ; final int RX10_TEMP1222 = 0 ; final boolean RX10_TEMP1223 = RX10_TEMP1221 < RX10_TEMP1222 ; if ( RX10_TEMP1223 ) { String RX10_TEMP1224 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1224 ) ; }
 final place RX10_TEMP1225 = Program . getPlaceFromDist3 ( RX10_TEMP1219 , RX10_TEMP1221 ) ; final place RX10_TEMP1227 = here ; final boolean RX10_TEMP1228 = RX10_TEMP1225 != RX10_TEMP1227 ; if ( RX10_TEMP1228 ) { String RX10_TEMP1226 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP1226 ) ; }
 Program . setRefArrayValue3double ( srcBuffer , RX10_TEMP1221 , X10_TEMP472 ) ; }
 }
 public static void thread243(final T243 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int pl = utmpz.pl;
final  intRefArray1 sizes = utmpz.sizes;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
 { final Point1 RX10_TEMP1376 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1377 = sizes . distValue ; final Region1 RX10_TEMP1378 = RX10_TEMP1377 . dReg ; final int RX10_TEMP1379 = Program . searchPointInRegion1 ( RX10_TEMP1378 , RX10_TEMP1376 ) ; final int RX10_TEMP1380 = 0 ; final boolean RX10_TEMP1381 = RX10_TEMP1379 < RX10_TEMP1380 ; if ( RX10_TEMP1381 ) { String RX10_TEMP1382 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1382 ) ; }
 final place RX10_TEMP1383 = Program . getPlaceFromDist1 ( RX10_TEMP1377 , RX10_TEMP1379 ) ; final place RX10_TEMP1385 = here ; final boolean RX10_TEMP1386 = RX10_TEMP1383 != RX10_TEMP1385 ; if ( RX10_TEMP1386 ) { String RX10_TEMP1384 = "Bad place access for array sizes" ; throw new RuntimeException ( RX10_TEMP1384 ) ; }
 final int RX10_TEMP1387 = Program . getRefArrayValue1int ( sizes , RX10_TEMP1379 ) ; final int X10_TEMP527 = ( RX10_TEMP1387 ) ; final int X10_TEMP530 = ( i + X10_TEMP527 ) ; final Point3 RX10_TEMP1388 = new Point3 ( pl , i , j ) ; final Dist3 RX10_TEMP1389 = dstBuffer . distValue ; final Region3 RX10_TEMP1390 = RX10_TEMP1389 . dReg ; final int RX10_TEMP1391 = Program . searchPointInRegion3 ( RX10_TEMP1390 , RX10_TEMP1388 ) ; final int RX10_TEMP1392 = 0 ; final boolean RX10_TEMP1393 = RX10_TEMP1391 < RX10_TEMP1392 ; if ( RX10_TEMP1393 ) { String RX10_TEMP1394 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1394 ) ; }
 final place RX10_TEMP1395 = Program . getPlaceFromDist3 ( RX10_TEMP1389 , RX10_TEMP1391 ) ; final place RX10_TEMP1397 = here ; final boolean RX10_TEMP1398 = RX10_TEMP1395 != RX10_TEMP1397 ; if ( RX10_TEMP1398 ) { String RX10_TEMP1396 = "Bad place access for array dstBuffer" ; throw new RuntimeException ( RX10_TEMP1396 ) ; }
 final double RX10_TEMP1399 = Program . getRefArrayValue3double ( dstBuffer , RX10_TEMP1391 ) ; final double X10_TEMP535 = ( RX10_TEMP1399 ) ; final double X10_TEMP536 = ( X10_TEMP535 ) ; final Point3 RX10_TEMP1400 = new Point3 ( pl , X10_TEMP530 , j ) ; final Dist3 RX10_TEMP1401 = srcBuffer . distValue ; final Region3 RX10_TEMP1402 = RX10_TEMP1401 . dReg ; final int RX10_TEMP1403 = Program . searchPointInRegion3 ( RX10_TEMP1402 , RX10_TEMP1400 ) ; final int RX10_TEMP1404 = 0 ; final boolean RX10_TEMP1405 = RX10_TEMP1403 < RX10_TEMP1404 ; if ( RX10_TEMP1405 ) { String RX10_TEMP1406 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1406 ) ; }
 final place RX10_TEMP1407 = Program . getPlaceFromDist3 ( RX10_TEMP1401 , RX10_TEMP1403 ) ; final place RX10_TEMP1409 = here ; final boolean RX10_TEMP1410 = RX10_TEMP1407 != RX10_TEMP1409 ; if ( RX10_TEMP1410 ) { String RX10_TEMP1408 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP1408 ) ; }
 Program . setRefArrayValue3double ( srcBuffer , RX10_TEMP1403 , X10_TEMP536 ) ; }
 }
 public static void thread244(final T244 utmpz) {final  intStub RX10_TEMP1500 = utmpz.RX10_TEMP1500;
final  point ( : rank==1 ) RX10_TEMP1492 = utmpz.RX10_TEMP1492;
final  intStub [ : rank==1 ] RX10_TEMP1491 = utmpz.RX10_TEMP1491;
 { RX10_TEMP1491 [ RX10_TEMP1492 ] = ( RX10_TEMP1500 ) ; }
 }
 public static void thread245(final T245 utmpz) {final  doubleStub RX10_TEMP1590 = utmpz.RX10_TEMP1590;
final  point ( : rank==1 ) RX10_TEMP1582 = utmpz.RX10_TEMP1582;
final  doubleStub [ : rank==1 ] RX10_TEMP1581 = utmpz.RX10_TEMP1581;
 { RX10_TEMP1581 [ RX10_TEMP1582 ] = ( RX10_TEMP1590 ) ; }
 }
 public static void thread246(final T246 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int pl = utmpz.pl;
final  doubleRefArray2 result = utmpz.result;
final  intRefArray1 offsets = utmpz.offsets;
final  doubleRefArray3 srcBuffer = utmpz.srcBuffer;
 { final Point1 RX10_TEMP1665 = new Point1 ( pl ) ; final Dist1 RX10_TEMP1666 = offsets . distValue ; final Region1 RX10_TEMP1667 = RX10_TEMP1666 . dReg ; final int RX10_TEMP1668 = Program . searchPointInRegion1 ( RX10_TEMP1667 , RX10_TEMP1665 ) ; final int RX10_TEMP1669 = 0 ; final boolean RX10_TEMP1670 = RX10_TEMP1668 < RX10_TEMP1669 ; if ( RX10_TEMP1670 ) { String RX10_TEMP1671 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1671 ) ; }
 final place RX10_TEMP1672 = Program . getPlaceFromDist1 ( RX10_TEMP1666 , RX10_TEMP1668 ) ; final place RX10_TEMP1674 = here ; final boolean RX10_TEMP1675 = RX10_TEMP1672 != RX10_TEMP1674 ; if ( RX10_TEMP1675 ) { String RX10_TEMP1673 = "Bad place access for array offsets" ; throw new RuntimeException ( RX10_TEMP1673 ) ; }
 final int RX10_TEMP1676 = Program . getRefArrayValue1int ( offsets , RX10_TEMP1668 ) ; final int X10_TEMP690 = ( RX10_TEMP1676 ) ; final int X10_TEMP693 = ( X10_TEMP690 + i ) ; final Point3 RX10_TEMP1677 = new Point3 ( pl , i , j ) ; final Dist3 RX10_TEMP1678 = srcBuffer . distValue ; final Region3 RX10_TEMP1679 = RX10_TEMP1678 . dReg ; final int RX10_TEMP1680 = Program . searchPointInRegion3 ( RX10_TEMP1679 , RX10_TEMP1677 ) ; final int RX10_TEMP1681 = 0 ; final boolean RX10_TEMP1682 = RX10_TEMP1680 < RX10_TEMP1681 ; if ( RX10_TEMP1682 ) { String RX10_TEMP1683 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1683 ) ; }
 final place RX10_TEMP1684 = Program . getPlaceFromDist3 ( RX10_TEMP1678 , RX10_TEMP1680 ) ; final place RX10_TEMP1686 = here ; final boolean RX10_TEMP1687 = RX10_TEMP1684 != RX10_TEMP1686 ; if ( RX10_TEMP1687 ) { String RX10_TEMP1685 = "Bad place access for array srcBuffer" ; throw new RuntimeException ( RX10_TEMP1685 ) ; }
 final double RX10_TEMP1688 = Program . getRefArrayValue3double ( srcBuffer , RX10_TEMP1680 ) ; final double X10_TEMP698 = ( RX10_TEMP1688 ) ; final double X10_TEMP699 = ( X10_TEMP698 ) ; final Point2 RX10_TEMP1689 = new Point2 ( X10_TEMP693 , j ) ; final Dist2 RX10_TEMP1690 = result . distValue ; final Region2 RX10_TEMP1691 = RX10_TEMP1690 . dReg ; final int RX10_TEMP1692 = Program . searchPointInRegion2 ( RX10_TEMP1691 , RX10_TEMP1689 ) ; final int RX10_TEMP1693 = 0 ; final boolean RX10_TEMP1694 = RX10_TEMP1692 < RX10_TEMP1693 ; if ( RX10_TEMP1694 ) { String RX10_TEMP1695 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1695 ) ; }
 final place RX10_TEMP1696 = Program . getPlaceFromDist2 ( RX10_TEMP1690 , RX10_TEMP1692 ) ; final place RX10_TEMP1698 = here ; final boolean RX10_TEMP1699 = RX10_TEMP1696 != RX10_TEMP1698 ; if ( RX10_TEMP1699 ) { String RX10_TEMP1697 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP1697 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP1692 , X10_TEMP699 ) ; }
 }
 public static void thread247(final T247 utmpz) {final  doubleStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { RX10_TEMP7 [ RX10_TEMP8 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread248(final T248 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
 { final Region2 rLocalD = Program . X10Util_get2DLRegion ( dResult ) ; final place X10_TEMP67 = here ; final int RX10_TEMP61 = 1 ; int RX10_TEMP59 = rLocalD . regSize ; RX10_TEMP59 = RX10_TEMP59 - RX10_TEMP61 ; final region ( : rank==1 ) RX10_TEMP60 = [ 0 : RX10_TEMP59 ] ; for ( point ( : rank==1 ) RX10_TEMP58 : RX10_TEMP60 ) { final int RX10_TEMP62 = RX10_TEMP58 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( rLocalD , RX10_TEMP62 ) ; 
 final T351 utmp351 = new T351(pt, sBuffer, result);
 async (X10_TEMP67) {Program.thread351(utmp351); }
 }
 }
 }
 public static void thread249(final T249 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 result = utmpz.result;
final  Dist2 dResult = utmpz.dResult;
 { final Region2 rLocalD = Program . X10Util_get2DLRegion ( dResult ) ; final place X10_TEMP77 = here ; final int RX10_TEMP82 = 1 ; int RX10_TEMP80 = rLocalD . regSize ; RX10_TEMP80 = RX10_TEMP80 - RX10_TEMP82 ; final region ( : rank==1 ) RX10_TEMP81 = [ 0 : RX10_TEMP80 ] ; for ( point ( : rank==1 ) RX10_TEMP79 : RX10_TEMP81 ) { final int RX10_TEMP83 = RX10_TEMP79 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( rLocalD , RX10_TEMP83 ) ; 
 final T352 utmp352 = new T352(pt, sBuffer, result);
 async (X10_TEMP77) {Program.thread352(utmp352); }
 }
 }
 }
 public static void thread250(final T250 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  Region2 rGuard = utmpz.rGuard;
final  doubleRefArray2 guards = utmpz.guards;
 { final place X10_TEMP98 = here ; final int RX10_TEMP125 = 1 ; int RX10_TEMP123 = rGuard . regSize ; RX10_TEMP123 = RX10_TEMP123 - RX10_TEMP125 ; final region ( : rank==1 ) RX10_TEMP124 = [ 0 : RX10_TEMP123 ] ; for ( point ( : rank==1 ) RX10_TEMP122 : RX10_TEMP124 ) { final int RX10_TEMP126 = RX10_TEMP122 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( rGuard , RX10_TEMP126 ) ; 
 final T353 utmp353 = new T353(pt, sBuffer, guards);
 async (X10_TEMP98) {Program.thread353(utmp353); }
 }
 }
 }
 public static void thread251(final T251 utmpz) {final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  Region2 rGuard = utmpz.rGuard;
final  doubleRefArray2 guards = utmpz.guards;
 { final place X10_TEMP23 = here ; final int RX10_TEMP36 = 1 ; int RX10_TEMP34 = rGuard . regSize ; RX10_TEMP34 = RX10_TEMP34 - RX10_TEMP36 ; final region ( : rank==1 ) RX10_TEMP35 = [ 0 : RX10_TEMP34 ] ; for ( point ( : rank==1 ) RX10_TEMP33 : RX10_TEMP35 ) { final int RX10_TEMP37 = RX10_TEMP33 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( rGuard , RX10_TEMP37 ) ; 
 final T354 utmp354 = new T354(pt, sBuffer, guards);
 async (X10_TEMP23) {Program.thread354(utmp354); }
 }
 }
 }
 public static void thread252(final T252 utmpz) {final  intStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread253(final T253 utmpz) {final  ParticleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  ParticleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public static void thread254(final T254 utmpz) {final  ParticleStub RX10_TEMP35 = utmpz.RX10_TEMP35;
final  point ( : rank==1 ) RX10_TEMP27 = utmpz.RX10_TEMP27;
final  ParticleStub [ : rank==1 ] RX10_TEMP26 = utmpz.RX10_TEMP26;
 { RX10_TEMP26 [ RX10_TEMP27 ] = ( RX10_TEMP35 ) ; }
 }
 public static void thread255(final T255 utmpz) {final  ParticleStub RX10_TEMP55 = utmpz.RX10_TEMP55;
final  point ( : rank==1 ) RX10_TEMP47 = utmpz.RX10_TEMP47;
final  ParticleStub [ : rank==1 ] RX10_TEMP46 = utmpz.RX10_TEMP46;
 { RX10_TEMP46 [ RX10_TEMP47 ] = ( RX10_TEMP55 ) ; }
 }
 public static void thread256(final T256 utmpz) {final  ParticleStub RX10_TEMP75 = utmpz.RX10_TEMP75;
final  point ( : rank==1 ) RX10_TEMP67 = utmpz.RX10_TEMP67;
final  ParticleStub [ : rank==1 ] RX10_TEMP66 = utmpz.RX10_TEMP66;
 { RX10_TEMP66 [ RX10_TEMP67 ] = ( RX10_TEMP75 ) ; }
 }
 public static void thread257(final T257 utmpz) {final  ParticleStub RX10_TEMP95 = utmpz.RX10_TEMP95;
final  point ( : rank==1 ) RX10_TEMP87 = utmpz.RX10_TEMP87;
final  ParticleStub [ : rank==1 ] RX10_TEMP86 = utmpz.RX10_TEMP86;
 { RX10_TEMP86 [ RX10_TEMP87 ] = ( RX10_TEMP95 ) ; }
 }
 public static void thread258(final T258 utmpz) {final  intStub RX10_TEMP116 = utmpz.RX10_TEMP116;
final  point ( : rank==1 ) RX10_TEMP107 = utmpz.RX10_TEMP107;
final  intStub [ : rank==1 ] RX10_TEMP106 = utmpz.RX10_TEMP106;
 { RX10_TEMP106 [ RX10_TEMP107 ] = ( RX10_TEMP116 ) ; }
 }
 public static void thread259(final T259 utmpz) {final  intStub RX10_TEMP137 = utmpz.RX10_TEMP137;
final  point ( : rank==1 ) RX10_TEMP128 = utmpz.RX10_TEMP128;
final  intStub [ : rank==1 ] RX10_TEMP127 = utmpz.RX10_TEMP127;
 { RX10_TEMP127 [ RX10_TEMP128 ] = ( RX10_TEMP137 ) ; }
 }
 public static void thread260(final T260 utmpz) {final  intStub RX10_TEMP158 = utmpz.RX10_TEMP158;
final  point ( : rank==1 ) RX10_TEMP149 = utmpz.RX10_TEMP149;
final  intStub [ : rank==1 ] RX10_TEMP148 = utmpz.RX10_TEMP148;
 { RX10_TEMP148 [ RX10_TEMP149 ] = ( RX10_TEMP158 ) ; }
 }
 public static void thread261(final T261 utmpz) {final  intStub RX10_TEMP179 = utmpz.RX10_TEMP179;
final  point ( : rank==1 ) RX10_TEMP170 = utmpz.RX10_TEMP170;
final  intStub [ : rank==1 ] RX10_TEMP169 = utmpz.RX10_TEMP169;
 { RX10_TEMP169 [ RX10_TEMP170 ] = ( RX10_TEMP179 ) ; }
 }
 public static void thread262(final T262 utmpz) {final  intStub RX10_TEMP200 = utmpz.RX10_TEMP200;
final  point ( : rank==1 ) RX10_TEMP191 = utmpz.RX10_TEMP191;
final  intStub [ : rank==1 ] RX10_TEMP190 = utmpz.RX10_TEMP190;
 { RX10_TEMP190 [ RX10_TEMP191 ] = ( RX10_TEMP200 ) ; }
 }
 public static void thread263(final T263 utmpz) {final  intStub RX10_TEMP221 = utmpz.RX10_TEMP221;
final  point ( : rank==1 ) RX10_TEMP212 = utmpz.RX10_TEMP212;
final  intStub [ : rank==1 ] RX10_TEMP211 = utmpz.RX10_TEMP211;
 { RX10_TEMP211 [ RX10_TEMP212 ] = ( RX10_TEMP221 ) ; }
 }
 public static void thread264(final T264 utmpz) {final  intStub RX10_TEMP242 = utmpz.RX10_TEMP242;
final  point ( : rank==1 ) RX10_TEMP233 = utmpz.RX10_TEMP233;
final  intStub [ : rank==1 ] RX10_TEMP232 = utmpz.RX10_TEMP232;
 { RX10_TEMP232 [ RX10_TEMP233 ] = ( RX10_TEMP242 ) ; }
 }
 public static void thread265(final T265 utmpz) {final  intStub RX10_TEMP263 = utmpz.RX10_TEMP263;
final  point ( : rank==1 ) RX10_TEMP254 = utmpz.RX10_TEMP254;
final  intStub [ : rank==1 ] RX10_TEMP253 = utmpz.RX10_TEMP253;
 { RX10_TEMP253 [ RX10_TEMP254 ] = ( RX10_TEMP263 ) ; }
 }
 public static void thread266(final T266 utmpz) {final  intStub RX10_TEMP284 = utmpz.RX10_TEMP284;
final  point ( : rank==1 ) RX10_TEMP275 = utmpz.RX10_TEMP275;
final  intStub [ : rank==1 ] RX10_TEMP274 = utmpz.RX10_TEMP274;
 { RX10_TEMP274 [ RX10_TEMP275 ] = ( RX10_TEMP284 ) ; }
 }
 public static void thread267(final T267 utmpz) {final  int i = utmpz.i;
final  int offset = utmpz.offset;
final  int pl = utmpz.pl;
final  ParticleRefArray2 part = utmpz.part;
final  ParticleRefArray1 particles = utmpz.particles;
 { final int X10_TEMP82 = ( i - offset ) ; final Point1 RX10_TEMP313 = new Point1 ( i ) ; final Dist1 RX10_TEMP314 = particles . distValue ; final Region1 RX10_TEMP315 = RX10_TEMP314 . dReg ; final int RX10_TEMP316 = Program . searchPointInRegion1 ( RX10_TEMP315 , RX10_TEMP313 ) ; final int RX10_TEMP317 = 0 ; final boolean RX10_TEMP318 = RX10_TEMP316 < RX10_TEMP317 ; if ( RX10_TEMP318 ) { String RX10_TEMP319 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP319 ) ; }
 final place RX10_TEMP320 = Program . getPlaceFromDist1 ( RX10_TEMP314 , RX10_TEMP316 ) ; final place RX10_TEMP322 = here ; final boolean RX10_TEMP323 = RX10_TEMP320 != RX10_TEMP322 ; if ( RX10_TEMP323 ) { String RX10_TEMP321 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP321 ) ; }
 final Particle RX10_TEMP324 = Program . getRefArrayValue1Particle ( particles , RX10_TEMP316 ) ; final Particle X10_TEMP85 = ( RX10_TEMP324 ) ; final Particle X10_TEMP86 = ( X10_TEMP85 ) ; final Point2 RX10_TEMP325 = new Point2 ( pl , X10_TEMP82 ) ; final Dist2 RX10_TEMP326 = part . distValue ; final Region2 RX10_TEMP327 = RX10_TEMP326 . dReg ; final int RX10_TEMP328 = Program . searchPointInRegion2 ( RX10_TEMP327 , RX10_TEMP325 ) ; final int RX10_TEMP329 = 0 ; final boolean RX10_TEMP330 = RX10_TEMP328 < RX10_TEMP329 ; if ( RX10_TEMP330 ) { String RX10_TEMP331 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP331 ) ; }
 final place RX10_TEMP332 = Program . getPlaceFromDist2 ( RX10_TEMP326 , RX10_TEMP328 ) ; final place RX10_TEMP334 = here ; final boolean RX10_TEMP335 = RX10_TEMP332 != RX10_TEMP334 ; if ( RX10_TEMP335 ) { String RX10_TEMP333 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP333 ) ; }
 Program . setRefArrayValue2Particle ( part , RX10_TEMP328 , X10_TEMP86 ) ; }
 }
 public static void thread268(final T268 utmpz) {final  intStub RX10_TEMP404 = utmpz.RX10_TEMP404;
final  point ( : rank==1 ) RX10_TEMP370 = utmpz.RX10_TEMP370;
final  intStub [ : rank==1 ] RX10_TEMP369 = utmpz.RX10_TEMP369;
 { RX10_TEMP369 [ RX10_TEMP370 ] = ( RX10_TEMP404 ) ; }
 }
 public static void thread269(final T269 utmpz) {final  intStub RX10_TEMP425 = utmpz.RX10_TEMP425;
final  point ( : rank==1 ) RX10_TEMP416 = utmpz.RX10_TEMP416;
final  intStub [ : rank==1 ] RX10_TEMP415 = utmpz.RX10_TEMP415;
 { RX10_TEMP415 [ RX10_TEMP416 ] = ( RX10_TEMP425 ) ; }
 }
 public static void thread270(final T270 utmpz) {final  intStub RX10_TEMP796 = utmpz.RX10_TEMP796;
final  point ( : rank==1 ) RX10_TEMP788 = utmpz.RX10_TEMP788;
final  intStub [ : rank==1 ] RX10_TEMP787 = utmpz.RX10_TEMP787;
 { RX10_TEMP787 [ RX10_TEMP788 ] = ( RX10_TEMP796 ) ; }
 }
 public static void thread271(final T271 utmpz) {final  intStub RX10_TEMP1579 = utmpz.RX10_TEMP1579;
final  point ( : rank==1 ) RX10_TEMP1545 = utmpz.RX10_TEMP1545;
final  intStub [ : rank==1 ] RX10_TEMP1544 = utmpz.RX10_TEMP1544;
 { RX10_TEMP1544 [ RX10_TEMP1545 ] = ( RX10_TEMP1579 ) ; }
 }
 public static void thread272(final T272 utmpz) {final  intStub RX10_TEMP1625 = utmpz.RX10_TEMP1625;
final  point ( : rank==1 ) RX10_TEMP1591 = utmpz.RX10_TEMP1591;
final  intStub [ : rank==1 ] RX10_TEMP1590 = utmpz.RX10_TEMP1590;
 { RX10_TEMP1590 [ RX10_TEMP1591 ] = ( RX10_TEMP1625 ) ; }
 }
 public static void thread273(final T273 utmpz) {final  intStub RX10_TEMP1671 = utmpz.RX10_TEMP1671;
final  point ( : rank==1 ) RX10_TEMP1637 = utmpz.RX10_TEMP1637;
final  intStub [ : rank==1 ] RX10_TEMP1636 = utmpz.RX10_TEMP1636;
 { RX10_TEMP1636 [ RX10_TEMP1637 ] = ( RX10_TEMP1671 ) ; }
 }
 public static void thread274(final T274 utmpz) {final  intStub RX10_TEMP1692 = utmpz.RX10_TEMP1692;
final  point ( : rank==1 ) RX10_TEMP1683 = utmpz.RX10_TEMP1683;
final  intStub [ : rank==1 ] RX10_TEMP1682 = utmpz.RX10_TEMP1682;
 { RX10_TEMP1682 [ RX10_TEMP1683 ] = ( RX10_TEMP1692 ) ; }
 }
 public static void thread275(final T275 utmpz) {final  intStub RX10_TEMP1738 = utmpz.RX10_TEMP1738;
final  point ( : rank==1 ) RX10_TEMP1704 = utmpz.RX10_TEMP1704;
final  intStub [ : rank==1 ] RX10_TEMP1703 = utmpz.RX10_TEMP1703;
 { RX10_TEMP1703 [ RX10_TEMP1704 ] = ( RX10_TEMP1738 ) ; }
 }
 public static void thread276(final T276 utmpz) {final  int i = utmpz.i;
final  int pl = utmpz.pl;
final  intRefArray2 holes = utmpz.holes;
final  ParticleRefArray2 rBufferL = utmpz.rBufferL;
final  ParticleRefArray2 part = utmpz.part;
 { final Point2 RX10_TEMP1842 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1843 = holes . distValue ; final Region2 RX10_TEMP1844 = RX10_TEMP1843 . dReg ; final int RX10_TEMP1845 = Program . searchPointInRegion2 ( RX10_TEMP1844 , RX10_TEMP1842 ) ; final int RX10_TEMP1846 = 0 ; final boolean RX10_TEMP1847 = RX10_TEMP1845 < RX10_TEMP1846 ; if ( RX10_TEMP1847 ) { String RX10_TEMP1848 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1848 ) ; }
 final place RX10_TEMP1849 = Program . getPlaceFromDist2 ( RX10_TEMP1843 , RX10_TEMP1845 ) ; final place RX10_TEMP1851 = here ; final boolean RX10_TEMP1852 = RX10_TEMP1849 != RX10_TEMP1851 ; if ( RX10_TEMP1852 ) { String RX10_TEMP1850 = "Bad place access for array holes" ; throw new RuntimeException ( RX10_TEMP1850 ) ; }
 final int RX10_TEMP1853 = Program . getRefArrayValue2int ( holes , RX10_TEMP1845 ) ; final int X10_TEMP653 = ( RX10_TEMP1853 ) ; final Point2 RX10_TEMP1854 = new Point2 ( pl , i ) ; final Dist2 RX10_TEMP1855 = rBufferL . distValue ; final Region2 RX10_TEMP1856 = RX10_TEMP1855 . dReg ; final int RX10_TEMP1857 = Program . searchPointInRegion2 ( RX10_TEMP1856 , RX10_TEMP1854 ) ; final int RX10_TEMP1858 = 0 ; final boolean RX10_TEMP1859 = RX10_TEMP1857 < RX10_TEMP1858 ; if ( RX10_TEMP1859 ) { String RX10_TEMP1860 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1860 ) ; }
 final place RX10_TEMP1861 = Program . getPlaceFromDist2 ( RX10_TEMP1855 , RX10_TEMP1857 ) ; final place RX10_TEMP1863 = here ; final boolean RX10_TEMP1864 = RX10_TEMP1861 != RX10_TEMP1863 ; if ( RX10_TEMP1864 ) { String RX10_TEMP1862 = "Bad place access for array rBufferL" ; throw new RuntimeException ( RX10_TEMP1862 ) ; }
 final Particle RX10_TEMP1865 = Program . getRefArrayValue2Particle ( rBufferL , RX10_TEMP1857 ) ; final Particle X10_TEMP657 = ( RX10_TEMP1865 ) ; final Particle X10_TEMP658 = ( X10_TEMP657 ) ; final Point2 RX10_TEMP1866 = new Point2 ( pl , X10_TEMP653 ) ; final Dist2 RX10_TEMP1867 = part . distValue ; final Region2 RX10_TEMP1868 = RX10_TEMP1867 . dReg ; final int RX10_TEMP1869 = Program . searchPointInRegion2 ( RX10_TEMP1868 , RX10_TEMP1866 ) ; final int RX10_TEMP1870 = 0 ; final boolean RX10_TEMP1871 = RX10_TEMP1869 < RX10_TEMP1870 ; if ( RX10_TEMP1871 ) { String RX10_TEMP1872 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1872 ) ; }
 final place RX10_TEMP1873 = Program . getPlaceFromDist2 ( RX10_TEMP1867 , RX10_TEMP1869 ) ; final place RX10_TEMP1875 = here ; final boolean RX10_TEMP1876 = RX10_TEMP1873 != RX10_TEMP1875 ; if ( RX10_TEMP1876 ) { String RX10_TEMP1874 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP1874 ) ; }
 Program . setRefArrayValue2Particle ( part , RX10_TEMP1869 , X10_TEMP658 ) ; }
 }
 public static void thread277(final T277 utmpz) {final  ParticleValArray1 lBuffer = utmpz.lBuffer;
final  intRefArray1 inRight = utmpz.inRight;
final  ParticleRefArray2 rightInBuffer = utmpz.rightInBuffer;
 { final place X10_TEMP38 = ( here ) ; final int pid = ( X10_TEMP38 . id ) ; final Region1 RX10_TEMP80 = lBuffer . regionValue ; final Region1 X10_TEMP41 = RX10_TEMP80 ; final int X10_TEMP43 = ( X10_TEMP41 . regSize ) ; final int X10_TEMP44 = ( X10_TEMP43 ) ; final Point1 RX10_TEMP81 = new Point1 ( pid ) ; final Dist1 RX10_TEMP82 = inRight . distValue ; final Region1 RX10_TEMP83 = RX10_TEMP82 . dReg ; final int RX10_TEMP84 = Program . searchPointInRegion1 ( RX10_TEMP83 , RX10_TEMP81 ) ; final int RX10_TEMP85 = 0 ; final boolean RX10_TEMP86 = RX10_TEMP84 < RX10_TEMP85 ; if ( RX10_TEMP86 ) { String RX10_TEMP87 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP87 ) ; }
 final place RX10_TEMP88 = Program . getPlaceFromDist1 ( RX10_TEMP82 , RX10_TEMP84 ) ; final place RX10_TEMP90 = here ; final boolean RX10_TEMP91 = RX10_TEMP88 != RX10_TEMP90 ; if ( RX10_TEMP91 ) { String RX10_TEMP89 = "Bad place access for array inRight" ; throw new RuntimeException ( RX10_TEMP89 ) ; }
 Program . setRefArrayValue1int ( inRight , RX10_TEMP84 , X10_TEMP44 ) ; final place X10_TEMP46 = here ; final Region1 RX10_TEMP94 = lBuffer . regionValue ; final int RX10_TEMP97 = 1 ; int RX10_TEMP95 = RX10_TEMP94 . regSize ; RX10_TEMP95 = RX10_TEMP95 - RX10_TEMP97 ; final region ( : rank==1 ) RX10_TEMP96 = [ 0 : RX10_TEMP95 ] ; for ( point ( : rank==1 ) RX10_TEMP92 : RX10_TEMP96 ) { final int RX10_TEMP98 = RX10_TEMP92 [0] ; final Point1 RX10_TEMP93 = Program . regionOrdinalPoint1 ( RX10_TEMP94 , RX10_TEMP98 ) ; final int i = RX10_TEMP93 . f0 ; 
 final T355 utmp355 = new T355(i, pid, lBuffer, rightInBuffer);
 async (X10_TEMP46) {Program.thread355(utmp355); }
 }
 }
 }
 public static void thread278(final T278 utmpz) {final  ParticleValArray1 rBuffer = utmpz.rBuffer;
final  intRefArray1 inLeft = utmpz.inLeft;
final  ParticleRefArray2 leftInBuffer = utmpz.leftInBuffer;
 { final place X10_TEMP54 = ( here ) ; final int pid = ( X10_TEMP54 . id ) ; final Region1 RX10_TEMP117 = rBuffer . regionValue ; final Region1 X10_TEMP57 = RX10_TEMP117 ; final int X10_TEMP59 = ( X10_TEMP57 . regSize ) ; final int X10_TEMP60 = ( X10_TEMP59 ) ; final Point1 RX10_TEMP118 = new Point1 ( pid ) ; final Dist1 RX10_TEMP119 = inLeft . distValue ; final Region1 RX10_TEMP120 = RX10_TEMP119 . dReg ; final int RX10_TEMP121 = Program . searchPointInRegion1 ( RX10_TEMP120 , RX10_TEMP118 ) ; final int RX10_TEMP122 = 0 ; final boolean RX10_TEMP123 = RX10_TEMP121 < RX10_TEMP122 ; if ( RX10_TEMP123 ) { String RX10_TEMP124 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP124 ) ; }
 final place RX10_TEMP125 = Program . getPlaceFromDist1 ( RX10_TEMP119 , RX10_TEMP121 ) ; final place RX10_TEMP127 = here ; final boolean RX10_TEMP128 = RX10_TEMP125 != RX10_TEMP127 ; if ( RX10_TEMP128 ) { String RX10_TEMP126 = "Bad place access for array inLeft" ; throw new RuntimeException ( RX10_TEMP126 ) ; }
 Program . setRefArrayValue1int ( inLeft , RX10_TEMP121 , X10_TEMP60 ) ; final place X10_TEMP62 = here ; final Region1 RX10_TEMP131 = rBuffer . regionValue ; final int RX10_TEMP134 = 1 ; int RX10_TEMP132 = RX10_TEMP131 . regSize ; RX10_TEMP132 = RX10_TEMP132 - RX10_TEMP134 ; final region ( : rank==1 ) RX10_TEMP133 = [ 0 : RX10_TEMP132 ] ; for ( point ( : rank==1 ) RX10_TEMP129 : RX10_TEMP133 ) { final int RX10_TEMP135 = RX10_TEMP129 [0] ; final Point1 RX10_TEMP130 = Program . regionOrdinalPoint1 ( RX10_TEMP131 , RX10_TEMP135 ) ; final int i = RX10_TEMP130 . f0 ; 
 final T356 utmp356 = new T356(i, pid, rBuffer, leftInBuffer);
 async (X10_TEMP62) {Program.thread356(utmp356); }
 }
 }
 }
 public static void thread279(final T279 utmpz) {final  ParticleStub RX10_TEMP21 = utmpz.RX10_TEMP21;
final  point ( : rank==1 ) RX10_TEMP13 = utmpz.RX10_TEMP13;
final  ParticleStub [ : rank==1 ] RX10_TEMP12 = utmpz.RX10_TEMP12;
 { RX10_TEMP12 [ RX10_TEMP13 ] = ( RX10_TEMP21 ) ; }
 }
 public static void thread280(final T280 utmpz) {final  int i = utmpz.i;
final  int offset = utmpz.offset;
final  int pl = utmpz.pl;
final  ParticleRefArray1 result = utmpz.result;
final  ParticleRefArray2 part = utmpz.part;
 { final int X10_TEMP52 = ( i - offset ) ; final Point2 RX10_TEMP50 = new Point2 ( pl , X10_TEMP52 ) ; final Dist2 RX10_TEMP51 = part . distValue ; final Region2 RX10_TEMP52 = RX10_TEMP51 . dReg ; final int RX10_TEMP53 = Program . searchPointInRegion2 ( RX10_TEMP52 , RX10_TEMP50 ) ; final int RX10_TEMP54 = 0 ; final boolean RX10_TEMP55 = RX10_TEMP53 < RX10_TEMP54 ; if ( RX10_TEMP55 ) { String RX10_TEMP56 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP56 ) ; }
 final place RX10_TEMP57 = Program . getPlaceFromDist2 ( RX10_TEMP51 , RX10_TEMP53 ) ; final place RX10_TEMP59 = here ; final boolean RX10_TEMP60 = RX10_TEMP57 != RX10_TEMP59 ; if ( RX10_TEMP60 ) { String RX10_TEMP58 = "Bad place access for array part" ; throw new RuntimeException ( RX10_TEMP58 ) ; }
 final Particle RX10_TEMP61 = Program . getRefArrayValue2Particle ( part , RX10_TEMP53 ) ; final Particle X10_TEMP54 = ( RX10_TEMP61 ) ; final Particle X10_TEMP55 = ( X10_TEMP54 ) ; final Point1 RX10_TEMP62 = new Point1 ( i ) ; final Dist1 RX10_TEMP63 = result . distValue ; final Region1 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP65 = Program . searchPointInRegion1 ( RX10_TEMP64 , RX10_TEMP62 ) ; final int RX10_TEMP66 = 0 ; final boolean RX10_TEMP67 = RX10_TEMP65 < RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP68 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP68 ) ; }
 final place RX10_TEMP69 = Program . getPlaceFromDist1 ( RX10_TEMP63 , RX10_TEMP65 ) ; final place RX10_TEMP71 = here ; final boolean RX10_TEMP72 = RX10_TEMP69 != RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP70 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 Program . setRefArrayValue1Particle ( result , RX10_TEMP65 , X10_TEMP55 ) ; }
 }
 public static void thread281(final T281 utmpz) {final  doubleStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { RX10_TEMP7 [ RX10_TEMP8 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread282(final T282 utmpz) {final  Point1 pt = utmpz.pt;
final  doubleRefArray2 fcLocalY = utmpz.fcLocalY;
final  doubleRefArray2 fcLocalX = utmpz.fcLocalX;
final  doubleRefArray1 energy = utmpz.energy;
final  double quantum = utmpz.quantum;
final  double edgery = utmpz.edgery;
final  double edgerx = utmpz.edgerx;
final  double edgely = utmpz.edgely;
final  double edgelx = utmpz.edgelx;
final  ParticleRefArray1 particles = utmpz.particles;
final  LinearESOpenPIC2D X10_TEMP0 = utmpz.X10_TEMP0;
 { Program . LinearESOpenPIC2D_pushParticle ( X10_TEMP0 , particles , pt , fcLocalX , fcLocalY , quantum , edgelx , edgely , edgerx , edgery , energy ) ; }
 }
 public static void thread283(final T283 utmpz) {final  doubleStub RX10_TEMP17 = utmpz.RX10_TEMP17;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  doubleStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { RX10_TEMP8 [ RX10_TEMP9 ] = ( RX10_TEMP17 ) ; }
 }
 public static void thread284(final T284 utmpz) {final  intStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread285(final T285 utmpz) {final  doubleStub RX10_TEMP17 = utmpz.RX10_TEMP17;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  doubleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { RX10_TEMP7 [ RX10_TEMP8 ] = ( RX10_TEMP17 ) ; }
 }
 public static void thread286(final T286 utmpz) {final  intStub RX10_TEMP38 = utmpz.RX10_TEMP38;
final  point ( : rank==1 ) RX10_TEMP29 = utmpz.RX10_TEMP29;
final  intStub [ : rank==1 ] RX10_TEMP28 = utmpz.RX10_TEMP28;
 { RX10_TEMP28 [ RX10_TEMP29 ] = ( RX10_TEMP38 ) ; }
 }
 public static void thread287(final T287 utmpz) {final  intStub RX10_TEMP59 = utmpz.RX10_TEMP59;
final  point ( : rank==1 ) RX10_TEMP50 = utmpz.RX10_TEMP50;
final  intStub [ : rank==1 ] RX10_TEMP49 = utmpz.RX10_TEMP49;
 { RX10_TEMP49 [ RX10_TEMP50 ] = ( RX10_TEMP59 ) ; }
 }
 public static void thread288(final T288 utmpz) {final  intStub RX10_TEMP79 = utmpz.RX10_TEMP79;
final  point ( : rank==1 ) RX10_TEMP71 = utmpz.RX10_TEMP71;
final  intStub [ : rank==1 ] RX10_TEMP70 = utmpz.RX10_TEMP70;
 { RX10_TEMP70 [ RX10_TEMP71 ] = ( RX10_TEMP79 ) ; }
 }
 public static void thread289(final T289 utmpz) {final  intStub RX10_TEMP99 = utmpz.RX10_TEMP99;
final  point ( : rank==1 ) RX10_TEMP91 = utmpz.RX10_TEMP91;
final  intStub [ : rank==1 ] RX10_TEMP90 = utmpz.RX10_TEMP90;
 { RX10_TEMP90 [ RX10_TEMP91 ] = ( RX10_TEMP99 ) ; }
 }
 public static void thread290(final T290 utmpz) {final  intStub RX10_TEMP119 = utmpz.RX10_TEMP119;
final  point ( : rank==1 ) RX10_TEMP111 = utmpz.RX10_TEMP111;
final  intStub [ : rank==1 ] RX10_TEMP110 = utmpz.RX10_TEMP110;
 { RX10_TEMP110 [ RX10_TEMP111 ] = ( RX10_TEMP119 ) ; }
 }
 public static void thread291(final T291 utmpz) {final  intStub RX10_TEMP139 = utmpz.RX10_TEMP139;
final  point ( : rank==1 ) RX10_TEMP131 = utmpz.RX10_TEMP131;
final  intStub [ : rank==1 ] RX10_TEMP130 = utmpz.RX10_TEMP130;
 { RX10_TEMP130 [ RX10_TEMP131 ] = ( RX10_TEMP139 ) ; }
 }
 public static void thread292(final T292 utmpz) {final  intStub RX10_TEMP159 = utmpz.RX10_TEMP159;
final  point ( : rank==1 ) RX10_TEMP151 = utmpz.RX10_TEMP151;
final  intStub [ : rank==1 ] RX10_TEMP150 = utmpz.RX10_TEMP150;
 { RX10_TEMP150 [ RX10_TEMP151 ] = ( RX10_TEMP159 ) ; }
 }
 public static void thread293(final T293 utmpz) {final  intStub RX10_TEMP179 = utmpz.RX10_TEMP179;
final  point ( : rank==1 ) RX10_TEMP171 = utmpz.RX10_TEMP171;
final  intStub [ : rank==1 ] RX10_TEMP170 = utmpz.RX10_TEMP170;
 { RX10_TEMP170 [ RX10_TEMP171 ] = ( RX10_TEMP179 ) ; }
 }
 public static void thread294(final T294 utmpz) {final  intStub RX10_TEMP200 = utmpz.RX10_TEMP200;
final  point ( : rank==1 ) RX10_TEMP191 = utmpz.RX10_TEMP191;
final  intStub [ : rank==1 ] RX10_TEMP190 = utmpz.RX10_TEMP190;
 { RX10_TEMP190 [ RX10_TEMP191 ] = ( RX10_TEMP200 ) ; }
 }
 public static void thread295(final T295 utmpz) {final  int nGrids = utmpz.nGrids;
final  int nCount = utmpz.nCount;
final  intValArray1 sBuffer = utmpz.sBuffer;
final  Region1 dSBuffer = utmpz.dSBuffer;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
 { final place X10_TEMP148 = ( here ) ; final int X10_TEMP150 = ( X10_TEMP148 . id ) ; final int X10_TEMP152 = ( nCount ) ; final Point1 RX10_TEMP455 = new Point1 ( X10_TEMP150 ) ; final Dist1 RX10_TEMP456 = recvCount . distValue ; final Region1 RX10_TEMP457 = RX10_TEMP456 . dReg ; final int RX10_TEMP458 = Program . searchPointInRegion1 ( RX10_TEMP457 , RX10_TEMP455 ) ; final int RX10_TEMP459 = 0 ; final boolean RX10_TEMP460 = RX10_TEMP458 < RX10_TEMP459 ; if ( RX10_TEMP460 ) { String RX10_TEMP461 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP461 ) ; }
 final place RX10_TEMP462 = Program . getPlaceFromDist1 ( RX10_TEMP456 , RX10_TEMP458 ) ; final place RX10_TEMP464 = here ; final boolean RX10_TEMP465 = RX10_TEMP462 != RX10_TEMP464 ; if ( RX10_TEMP465 ) { String RX10_TEMP463 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP463 ) ; }
 Program . setRefArrayValue1int ( recvCount , RX10_TEMP458 , X10_TEMP152 ) ; final place X10_TEMP153 = ( here ) ; final int X10_TEMP155 = ( X10_TEMP153 . id ) ; final int X10_TEMP157 = ( nGrids ) ; final Point1 RX10_TEMP466 = new Point1 ( X10_TEMP155 ) ; final Dist1 RX10_TEMP467 = recvGrids . distValue ; final Region1 RX10_TEMP468 = RX10_TEMP467 . dReg ; final int RX10_TEMP469 = Program . searchPointInRegion1 ( RX10_TEMP468 , RX10_TEMP466 ) ; final int RX10_TEMP470 = 0 ; final boolean RX10_TEMP471 = RX10_TEMP469 < RX10_TEMP470 ; if ( RX10_TEMP471 ) { String RX10_TEMP472 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP472 ) ; }
 final place RX10_TEMP473 = Program . getPlaceFromDist1 ( RX10_TEMP467 , RX10_TEMP469 ) ; final place RX10_TEMP475 = here ; final boolean RX10_TEMP476 = RX10_TEMP473 != RX10_TEMP475 ; if ( RX10_TEMP476 ) { String RX10_TEMP474 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP474 ) ; }
 Program . setRefArrayValue1int ( recvGrids , RX10_TEMP469 , X10_TEMP157 ) ; finish { final place X10_TEMP159 = here ; final int RX10_TEMP481 = 1 ; int RX10_TEMP479 = dSBuffer . regSize ; RX10_TEMP479 = RX10_TEMP479 - RX10_TEMP481 ; final region ( : rank==1 ) RX10_TEMP480 = [ 0 : RX10_TEMP479 ] ; for ( point ( : rank==1 ) RX10_TEMP477 : RX10_TEMP480 ) { final int RX10_TEMP482 = RX10_TEMP477 [0] ; final Point1 RX10_TEMP478 = Program . regionOrdinalPoint1 ( dSBuffer , RX10_TEMP482 ) ; final int i = RX10_TEMP478 . f0 ; 
 final T357 utmp357 = new T357(i, sBuffer, rCountBuffer);
 async (X10_TEMP159) {Program.thread357(utmp357); }
 }
 }
 }
 }
 public static void thread296(final T296 utmpz) {final  Point2 pt = utmpz.pt;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
 { final Dist2 RX10_TEMP917 = rCountBuffer . distValue ; final Region2 RX10_TEMP918 = RX10_TEMP917 . dReg ; final int RX10_TEMP919 = Program . searchPointInRegion2 ( RX10_TEMP918 , pt ) ; final int RX10_TEMP920 = 0 ; final boolean RX10_TEMP921 = RX10_TEMP919 < RX10_TEMP920 ; if ( RX10_TEMP921 ) { String RX10_TEMP922 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP922 ) ; }
 final place RX10_TEMP923 = Program . getPlaceFromDist2 ( RX10_TEMP917 , RX10_TEMP919 ) ; final place RX10_TEMP925 = here ; final boolean RX10_TEMP926 = RX10_TEMP923 != RX10_TEMP925 ; if ( RX10_TEMP926 ) { String RX10_TEMP924 = "Bad place access for array rCountBuffer" ; throw new RuntimeException ( RX10_TEMP924 ) ; }
 final int RX10_TEMP927 = Program . getRefArrayValue2int ( rCountBuffer , RX10_TEMP919 ) ; final int X10_TEMP354 = ( RX10_TEMP927 ) ; final int X10_TEMP355 = ( X10_TEMP354 ) ; final Dist2 RX10_TEMP928 = sCountBuffer . distValue ; final Region2 RX10_TEMP929 = RX10_TEMP928 . dReg ; final int RX10_TEMP930 = Program . searchPointInRegion2 ( RX10_TEMP929 , pt ) ; final int RX10_TEMP931 = 0 ; final boolean RX10_TEMP932 = RX10_TEMP930 < RX10_TEMP931 ; if ( RX10_TEMP932 ) { String RX10_TEMP933 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP933 ) ; }
 final place RX10_TEMP934 = Program . getPlaceFromDist2 ( RX10_TEMP928 , RX10_TEMP930 ) ; final place RX10_TEMP936 = here ; final boolean RX10_TEMP937 = RX10_TEMP934 != RX10_TEMP936 ; if ( RX10_TEMP937 ) { String RX10_TEMP935 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP935 ) ; }
 Program . setRefArrayValue2int ( sCountBuffer , RX10_TEMP930 , X10_TEMP355 ) ; }
 }
 public static void thread297(final T297 utmpz) {final  int nGrids = utmpz.nGrids;
final  int nCount = utmpz.nCount;
final  intValArray1 sBuffer = utmpz.sBuffer;
final  Region1 dSBuffer = utmpz.dSBuffer;
final  intRefArray1 recvGrids = utmpz.recvGrids;
final  intRefArray1 recvCount = utmpz.recvCount;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
 { final place X10_TEMP464 = ( here ) ; final int X10_TEMP466 = ( X10_TEMP464 . id ) ; final int X10_TEMP468 = ( nCount ) ; final Point1 RX10_TEMP1170 = new Point1 ( X10_TEMP466 ) ; final Dist1 RX10_TEMP1171 = recvCount . distValue ; final Region1 RX10_TEMP1172 = RX10_TEMP1171 . dReg ; final int RX10_TEMP1173 = Program . searchPointInRegion1 ( RX10_TEMP1172 , RX10_TEMP1170 ) ; final int RX10_TEMP1174 = 0 ; final boolean RX10_TEMP1175 = RX10_TEMP1173 < RX10_TEMP1174 ; if ( RX10_TEMP1175 ) { String RX10_TEMP1176 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1176 ) ; }
 final place RX10_TEMP1177 = Program . getPlaceFromDist1 ( RX10_TEMP1171 , RX10_TEMP1173 ) ; final place RX10_TEMP1179 = here ; final boolean RX10_TEMP1180 = RX10_TEMP1177 != RX10_TEMP1179 ; if ( RX10_TEMP1180 ) { String RX10_TEMP1178 = "Bad place access for array recvCount" ; throw new RuntimeException ( RX10_TEMP1178 ) ; }
 Program . setRefArrayValue1int ( recvCount , RX10_TEMP1173 , X10_TEMP468 ) ; final place X10_TEMP469 = ( here ) ; final int X10_TEMP471 = ( X10_TEMP469 . id ) ; final int X10_TEMP473 = ( nGrids ) ; final Point1 RX10_TEMP1181 = new Point1 ( X10_TEMP471 ) ; final Dist1 RX10_TEMP1182 = recvGrids . distValue ; final Region1 RX10_TEMP1183 = RX10_TEMP1182 . dReg ; final int RX10_TEMP1184 = Program . searchPointInRegion1 ( RX10_TEMP1183 , RX10_TEMP1181 ) ; final int RX10_TEMP1185 = 0 ; final boolean RX10_TEMP1186 = RX10_TEMP1184 < RX10_TEMP1185 ; if ( RX10_TEMP1186 ) { String RX10_TEMP1187 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1187 ) ; }
 final place RX10_TEMP1188 = Program . getPlaceFromDist1 ( RX10_TEMP1182 , RX10_TEMP1184 ) ; final place RX10_TEMP1190 = here ; final boolean RX10_TEMP1191 = RX10_TEMP1188 != RX10_TEMP1190 ; if ( RX10_TEMP1191 ) { String RX10_TEMP1189 = "Bad place access for array recvGrids" ; throw new RuntimeException ( RX10_TEMP1189 ) ; }
 Program . setRefArrayValue1int ( recvGrids , RX10_TEMP1184 , X10_TEMP473 ) ; final place X10_TEMP475 = here ; final int RX10_TEMP1196 = 1 ; int RX10_TEMP1194 = dSBuffer . regSize ; RX10_TEMP1194 = RX10_TEMP1194 - RX10_TEMP1196 ; final region ( : rank==1 ) RX10_TEMP1195 = [ 0 : RX10_TEMP1194 ] ; for ( point ( : rank==1 ) RX10_TEMP1192 : RX10_TEMP1195 ) { final int RX10_TEMP1197 = RX10_TEMP1192 [0] ; final Point1 RX10_TEMP1193 = Program . regionOrdinalPoint1 ( dSBuffer , RX10_TEMP1197 ) ; final int i = RX10_TEMP1193 . f0 ; 
 final T358 utmp358 = new T358(i, sBuffer, rCountBuffer);
 async (X10_TEMP475) {Program.thread358(utmp358); }
 }
 }
 }
 public static void thread298(final T298 utmpz) {final  Point2 pt = utmpz.pt;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
final  intRefArray2 sCountBuffer = utmpz.sCountBuffer;
 { final Dist2 RX10_TEMP1537 = rCountBuffer . distValue ; final Region2 RX10_TEMP1538 = RX10_TEMP1537 . dReg ; final int RX10_TEMP1539 = Program . searchPointInRegion2 ( RX10_TEMP1538 , pt ) ; final int RX10_TEMP1540 = 0 ; final boolean RX10_TEMP1541 = RX10_TEMP1539 < RX10_TEMP1540 ; if ( RX10_TEMP1541 ) { String RX10_TEMP1542 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1542 ) ; }
 final place RX10_TEMP1543 = Program . getPlaceFromDist2 ( RX10_TEMP1537 , RX10_TEMP1539 ) ; final place RX10_TEMP1545 = here ; final boolean RX10_TEMP1546 = RX10_TEMP1543 != RX10_TEMP1545 ; if ( RX10_TEMP1546 ) { String RX10_TEMP1544 = "Bad place access for array rCountBuffer" ; throw new RuntimeException ( RX10_TEMP1544 ) ; }
 final int RX10_TEMP1547 = Program . getRefArrayValue2int ( rCountBuffer , RX10_TEMP1539 ) ; final int X10_TEMP620 = ( RX10_TEMP1547 ) ; final int X10_TEMP621 = ( X10_TEMP620 ) ; final Dist2 RX10_TEMP1548 = sCountBuffer . distValue ; final Region2 RX10_TEMP1549 = RX10_TEMP1548 . dReg ; final int RX10_TEMP1550 = Program . searchPointInRegion2 ( RX10_TEMP1549 , pt ) ; final int RX10_TEMP1551 = 0 ; final boolean RX10_TEMP1552 = RX10_TEMP1550 < RX10_TEMP1551 ; if ( RX10_TEMP1552 ) { String RX10_TEMP1553 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1553 ) ; }
 final place RX10_TEMP1554 = Program . getPlaceFromDist2 ( RX10_TEMP1548 , RX10_TEMP1550 ) ; final place RX10_TEMP1556 = here ; final boolean RX10_TEMP1557 = RX10_TEMP1554 != RX10_TEMP1556 ; if ( RX10_TEMP1557 ) { String RX10_TEMP1555 = "Bad place access for array sCountBuffer" ; throw new RuntimeException ( RX10_TEMP1555 ) ; }
 Program . setRefArrayValue2int ( sCountBuffer , RX10_TEMP1550 , X10_TEMP621 ) ; }
 }
 public static void thread299(final T299 utmpz) {final  intStub RX10_TEMP1573 = utmpz.RX10_TEMP1573;
final  point ( : rank==1 ) RX10_TEMP1565 = utmpz.RX10_TEMP1565;
final  intStub [ : rank==1 ] RX10_TEMP1564 = utmpz.RX10_TEMP1564;
 { RX10_TEMP1564 [ RX10_TEMP1565 ] = ( RX10_TEMP1573 ) ; }
 }
 public static void thread300(final T300 utmpz) {final  intStub RX10_TEMP1593 = utmpz.RX10_TEMP1593;
final  point ( : rank==1 ) RX10_TEMP1585 = utmpz.RX10_TEMP1585;
final  intStub [ : rank==1 ] RX10_TEMP1584 = utmpz.RX10_TEMP1584;
 { RX10_TEMP1584 [ RX10_TEMP1585 ] = ( RX10_TEMP1593 ) ; }
 }
 public static void thread301(final T301 utmpz) {final  double edge = utmpz.edge;
final  Point1 pl = utmpz.pl;
final  intRefArray1 lowerbounds = utmpz.lowerbounds;
 { final double X10_TEMP642 = ( 0.5 ) ; final double X10_TEMP644 = ( edge + X10_TEMP642 ) ; final int X10_TEMP646 = ( ( int ) X10_TEMP644 ) ; final int X10_TEMP647 = ( X10_TEMP646 ) ; final Dist1 RX10_TEMP1621 = lowerbounds . distValue ; final Region1 RX10_TEMP1622 = RX10_TEMP1621 . dReg ; final int RX10_TEMP1623 = Program . searchPointInRegion1 ( RX10_TEMP1622 , pl ) ; final int RX10_TEMP1624 = 0 ; final boolean RX10_TEMP1625 = RX10_TEMP1623 < RX10_TEMP1624 ; if ( RX10_TEMP1625 ) { String RX10_TEMP1626 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1626 ) ; }
 final place RX10_TEMP1627 = Program . getPlaceFromDist1 ( RX10_TEMP1621 , RX10_TEMP1623 ) ; final place RX10_TEMP1629 = here ; final boolean RX10_TEMP1630 = RX10_TEMP1627 != RX10_TEMP1629 ; if ( RX10_TEMP1630 ) { String RX10_TEMP1628 = "Bad place access for array lowerbounds" ; throw new RuntimeException ( RX10_TEMP1628 ) ; }
 Program . setRefArrayValue1int ( lowerbounds , RX10_TEMP1623 , X10_TEMP647 ) ; }
 }
 public static void thread302(final T302 utmpz) {final  ParticleStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  ParticleStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { RX10_TEMP7 [ RX10_TEMP8 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread303(final T303 utmpz) {final  intStub RX10_TEMP36 = utmpz.RX10_TEMP36;
final  point ( : rank==1 ) RX10_TEMP28 = utmpz.RX10_TEMP28;
final  intStub [ : rank==1 ] RX10_TEMP27 = utmpz.RX10_TEMP27;
 { RX10_TEMP27 [ RX10_TEMP28 ] = ( RX10_TEMP36 ) ; }
 }
 public static void thread304(final T304 utmpz) {final  intStub RX10_TEMP57 = utmpz.RX10_TEMP57;
final  point ( : rank==1 ) RX10_TEMP48 = utmpz.RX10_TEMP48;
final  intStub [ : rank==1 ] RX10_TEMP47 = utmpz.RX10_TEMP47;
 { RX10_TEMP47 [ RX10_TEMP48 ] = ( RX10_TEMP57 ) ; }
 }
 public static void thread305(final T305 utmpz) {final  int RX10_TEMP154 = utmpz.RX10_TEMP154;
final  place RX10_TEMP150 = utmpz.RX10_TEMP150;
final  point ( : rank==1 ) RX10_TEMP149 = utmpz.RX10_TEMP149;
final  intStub [ : rank==1 ] RX10_TEMP148 = utmpz.RX10_TEMP148;
 { final dist ( : rank==1 ) RX10_TEMP155 = [ 0 : RX10_TEMP154 ] -> here ; final int [ : rank==1 ] RX10_TEMP156 = ( int [ : rank==1 ] ) ( new int [ RX10_TEMP155 ] ) ; final intStub RX10_TEMP157 = new intStub ( RX10_TEMP156 ) ; 
 final T359 utmp359 = new T359(RX10_TEMP157, RX10_TEMP149, RX10_TEMP148);
 async (RX10_TEMP150) {Program.thread359(utmp359); }
 }
 }
 public static void thread306(final T306 utmpz) {final  Point1 i = utmpz.i;
final  intRefArray1 indices = utmpz.indices;
final  ParticleRefArray1 result = utmpz.result;
final  ParticleRefArray1 particles = utmpz.particles;
 { final Dist1 RX10_TEMP266 = indices . distValue ; final Region1 RX10_TEMP267 = RX10_TEMP266 . dReg ; final int RX10_TEMP268 = Program . searchPointInRegion1 ( RX10_TEMP267 , i ) ; final int RX10_TEMP269 = 0 ; final boolean RX10_TEMP270 = RX10_TEMP268 < RX10_TEMP269 ; if ( RX10_TEMP270 ) { String RX10_TEMP271 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP271 ) ; }
 final place RX10_TEMP272 = Program . getPlaceFromDist1 ( RX10_TEMP266 , RX10_TEMP268 ) ; final place RX10_TEMP274 = here ; final boolean RX10_TEMP275 = RX10_TEMP272 != RX10_TEMP274 ; if ( RX10_TEMP275 ) { String RX10_TEMP273 = "Bad place access for array indices" ; throw new RuntimeException ( RX10_TEMP273 ) ; }
 final int RX10_TEMP276 = Program . getRefArrayValue1int ( indices , RX10_TEMP268 ) ; final int X10_TEMP72 = ( RX10_TEMP276 ) ; final Dist1 RX10_TEMP277 = particles . distValue ; final Region1 RX10_TEMP278 = RX10_TEMP277 . dReg ; final int RX10_TEMP279 = Program . searchPointInRegion1 ( RX10_TEMP278 , i ) ; final int RX10_TEMP280 = 0 ; final boolean RX10_TEMP281 = RX10_TEMP279 < RX10_TEMP280 ; if ( RX10_TEMP281 ) { String RX10_TEMP282 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP282 ) ; }
 final place RX10_TEMP283 = Program . getPlaceFromDist1 ( RX10_TEMP277 , RX10_TEMP279 ) ; final place RX10_TEMP285 = here ; final boolean RX10_TEMP286 = RX10_TEMP283 != RX10_TEMP285 ; if ( RX10_TEMP286 ) { String RX10_TEMP284 = "Bad place access for array particles" ; throw new RuntimeException ( RX10_TEMP284 ) ; }
 final Particle RX10_TEMP287 = Program . getRefArrayValue1Particle ( particles , RX10_TEMP279 ) ; final Particle X10_TEMP75 = ( RX10_TEMP287 ) ; final Particle X10_TEMP76 = ( X10_TEMP75 ) ; final Point1 RX10_TEMP288 = new Point1 ( X10_TEMP72 ) ; final Dist1 RX10_TEMP289 = result . distValue ; final Region1 RX10_TEMP290 = RX10_TEMP289 . dReg ; final int RX10_TEMP291 = Program . searchPointInRegion1 ( RX10_TEMP290 , RX10_TEMP288 ) ; final int RX10_TEMP292 = 0 ; final boolean RX10_TEMP293 = RX10_TEMP291 < RX10_TEMP292 ; if ( RX10_TEMP293 ) { String RX10_TEMP294 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP294 ) ; }
 final place RX10_TEMP295 = Program . getPlaceFromDist1 ( RX10_TEMP289 , RX10_TEMP291 ) ; final place RX10_TEMP297 = here ; final boolean RX10_TEMP298 = RX10_TEMP295 != RX10_TEMP297 ; if ( RX10_TEMP298 ) { String RX10_TEMP296 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP296 ) ; }
 Program . setRefArrayValue1Particle ( result , RX10_TEMP291 , X10_TEMP76 ) ; }
 }
 public static void thread307(final T307 utmpz) {final  intStub RX10_TEMP31 = utmpz.RX10_TEMP31;
final  point ( : rank==1 ) RX10_TEMP8 = utmpz.RX10_TEMP8;
final  intStub [ : rank==1 ] RX10_TEMP7 = utmpz.RX10_TEMP7;
 { RX10_TEMP7 [ RX10_TEMP8 ] = ( RX10_TEMP31 ) ; }
 }
 public static void thread308(final T308 utmpz) {final  intStub RX10_TEMP66 = utmpz.RX10_TEMP66;
final  point ( : rank==1 ) RX10_TEMP43 = utmpz.RX10_TEMP43;
final  intStub [ : rank==1 ] RX10_TEMP42 = utmpz.RX10_TEMP42;
 { RX10_TEMP42 [ RX10_TEMP43 ] = ( RX10_TEMP66 ) ; }
 }
 public static void thread309(final T309 utmpz) {final  intStub RX10_TEMP87 = utmpz.RX10_TEMP87;
final  point ( : rank==1 ) RX10_TEMP78 = utmpz.RX10_TEMP78;
final  intStub [ : rank==1 ] RX10_TEMP77 = utmpz.RX10_TEMP77;
 { RX10_TEMP77 [ RX10_TEMP78 ] = ( RX10_TEMP87 ) ; }
 }
 public static void thread310(final T310 utmpz) {final  int val = utmpz.val;
final  int dir = utmpz.dir;
final  intRefArray1 tmp2 = utmpz.tmp2;
final  intRefArray1 result = utmpz.result;
 { final int X10_TEMP49 = ( 0 ) ; final boolean X10_TEMP51 = dir == X10_TEMP49 ; if ( X10_TEMP51 ) { final place X10_TEMP52 = ( here ) ; final int X10_TEMP54 = ( X10_TEMP52 . id ) ; final place X10_TEMP55 = ( here ) ; final int X10_TEMP57 = ( X10_TEMP55 . id ) ; final Point1 RX10_TEMP115 = new Point1 ( X10_TEMP57 ) ; final Dist1 RX10_TEMP116 = result . distValue ; final Region1 RX10_TEMP117 = RX10_TEMP116 . dReg ; final int RX10_TEMP118 = Program . searchPointInRegion1 ( RX10_TEMP117 , RX10_TEMP115 ) ; final int RX10_TEMP119 = 0 ; final boolean RX10_TEMP120 = RX10_TEMP118 < RX10_TEMP119 ; if ( RX10_TEMP120 ) { String RX10_TEMP121 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP121 ) ; }
 final place RX10_TEMP122 = Program . getPlaceFromDist1 ( RX10_TEMP116 , RX10_TEMP118 ) ; final place RX10_TEMP124 = here ; final boolean RX10_TEMP125 = RX10_TEMP122 != RX10_TEMP124 ; if ( RX10_TEMP125 ) { String RX10_TEMP123 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP123 ) ; }
 final int RX10_TEMP126 = Program . getRefArrayValue1int ( result , RX10_TEMP118 ) ; final int X10_TEMP58 = ( RX10_TEMP126 ) ; final int X10_TEMP60 = ( X10_TEMP58 + val ) ; final int X10_TEMP61 = ( X10_TEMP60 ) ; final Point1 RX10_TEMP127 = new Point1 ( X10_TEMP54 ) ; final Dist1 RX10_TEMP128 = result . distValue ; final Region1 RX10_TEMP129 = RX10_TEMP128 . dReg ; final int RX10_TEMP130 = Program . searchPointInRegion1 ( RX10_TEMP129 , RX10_TEMP127 ) ; final int RX10_TEMP131 = 0 ; final boolean RX10_TEMP132 = RX10_TEMP130 < RX10_TEMP131 ; if ( RX10_TEMP132 ) { String RX10_TEMP133 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP133 ) ; }
 final place RX10_TEMP134 = Program . getPlaceFromDist1 ( RX10_TEMP128 , RX10_TEMP130 ) ; final place RX10_TEMP136 = here ; final boolean RX10_TEMP137 = RX10_TEMP134 != RX10_TEMP136 ; if ( RX10_TEMP137 ) { String RX10_TEMP135 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP135 ) ; }
 Program . setRefArrayValue1int ( result , RX10_TEMP130 , X10_TEMP61 ) ; }
 final place X10_TEMP62 = ( here ) ; final int X10_TEMP64 = ( X10_TEMP62 . id ) ; final int X10_TEMP66 = ( val ) ; final Point1 RX10_TEMP138 = new Point1 ( X10_TEMP64 ) ; final Dist1 RX10_TEMP139 = tmp2 . distValue ; final Region1 RX10_TEMP140 = RX10_TEMP139 . dReg ; final int RX10_TEMP141 = Program . searchPointInRegion1 ( RX10_TEMP140 , RX10_TEMP138 ) ; final int RX10_TEMP142 = 0 ; final boolean RX10_TEMP143 = RX10_TEMP141 < RX10_TEMP142 ; if ( RX10_TEMP143 ) { String RX10_TEMP144 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP144 ) ; }
 final place RX10_TEMP145 = Program . getPlaceFromDist1 ( RX10_TEMP139 , RX10_TEMP141 ) ; final place RX10_TEMP147 = here ; final boolean RX10_TEMP148 = RX10_TEMP145 != RX10_TEMP147 ; if ( RX10_TEMP148 ) { String RX10_TEMP146 = "Bad place access for array tmp2" ; throw new RuntimeException ( RX10_TEMP146 ) ; }
 Program . setRefArrayValue1int ( tmp2 , RX10_TEMP141 , X10_TEMP66 ) ; }
 }
 public static void thread311(final T311 utmpz) {final  ComplexStub RX10_TEMP17 = utmpz.RX10_TEMP17;
final  point ( : rank==1 ) RX10_TEMP9 = utmpz.RX10_TEMP9;
final  ComplexStub [ : rank==1 ] RX10_TEMP8 = utmpz.RX10_TEMP8;
 { RX10_TEMP8 [ RX10_TEMP9 ] = ( RX10_TEMP17 ) ; }
 }
 public static void thread312(final T312 utmpz) {final  ComplexStub RX10_TEMP38 = utmpz.RX10_TEMP38;
final  point ( : rank==1 ) RX10_TEMP30 = utmpz.RX10_TEMP30;
final  ComplexStub [ : rank==1 ] RX10_TEMP29 = utmpz.RX10_TEMP29;
 { RX10_TEMP29 [ RX10_TEMP30 ] = ( RX10_TEMP38 ) ; }
 }
 public static void thread313(final T313 utmpz) {final  doubleStub RX10_TEMP18 = utmpz.RX10_TEMP18;
final  point ( : rank==1 ) RX10_TEMP10 = utmpz.RX10_TEMP10;
final  doubleStub [ : rank==1 ] RX10_TEMP9 = utmpz.RX10_TEMP9;
 { RX10_TEMP9 [ RX10_TEMP10 ] = ( RX10_TEMP18 ) ; }
 }
 public static void thread314(final T314 utmpz) {final  ComplexStub RX10_TEMP18 = utmpz.RX10_TEMP18;
final  point ( : rank==1 ) RX10_TEMP10 = utmpz.RX10_TEMP10;
final  ComplexStub [ : rank==1 ] RX10_TEMP9 = utmpz.RX10_TEMP9;
 { RX10_TEMP9 [ RX10_TEMP10 ] = ( RX10_TEMP18 ) ; }
 }
 public static void thread315(final T315 utmpz) {final  Point1 i = utmpz.i;
final  ComplexValArray2 sBuffer = utmpz.sBuffer;
final  Region2ValArray1 rSBuffer = utmpz.rSBuffer;
final  ComplexRefArray2 result = utmpz.result;
 { final Region1 RX10_TEMP102 = rSBuffer . regionValue ; final int RX10_TEMP103 = Program . searchPointInRegion1 ( RX10_TEMP102 , i ) ; final int RX10_TEMP104 = 0 ; final boolean RX10_TEMP105 = RX10_TEMP103 < RX10_TEMP104 ; if ( RX10_TEMP105 ) { String RX10_TEMP106 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP106 ) ; }
 final Region2 value [ : rank==1 ] RX10_TEMP107 = ( Region2 value [ : rank==1 ] ) ( rSBuffer . contents ) ; final Region2 X10_TEMP81 = RX10_TEMP107 [ RX10_TEMP103 ] ; final Dist1 X10_TEMP79 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP108 = X10_TEMP79 . dReg ; final int RX10_TEMP109 = Program . searchPointInRegion1 ( RX10_TEMP108 , i ) ; final int RX10_TEMP110 = 0 ; final boolean RX10_TEMP111 = RX10_TEMP109 < RX10_TEMP110 ; if ( RX10_TEMP111 ) { final String RX10_TEMP112 = "Point i not found in the distribution X10_TEMP79." ; throw new RuntimeException ( RX10_TEMP112 ) ; }
 final place RX10_TEMP113 = Program . getPlaceFromDist1 ( X10_TEMP79 , RX10_TEMP109 ) ; final place X10_TEMP82 = ( RX10_TEMP113 ) ; final Dist2 X10_TEMP84 = Program . getPlaceDist2 ( X10_TEMP81 , X10_TEMP82 ) ; final Region2 RX10_TEMP115 = X10_TEMP84 . dReg ; final int RX10_TEMP118 = 1 ; int RX10_TEMP116 = RX10_TEMP115 . regSize ; RX10_TEMP116 = RX10_TEMP116 - RX10_TEMP118 ; final region ( : rank==1 ) RX10_TEMP117 = [ 0 : RX10_TEMP116 ] ; for ( point ( : rank==1 ) RX10_TEMP114 : RX10_TEMP117 ) { final int RX10_TEMP119 = RX10_TEMP114 [0] ; final Point2 pt = Program . regionOrdinalPoint2 ( RX10_TEMP115 , RX10_TEMP119 ) ; final Region2 RX10_TEMP120 = X10_TEMP84 . dReg ; final int RX10_TEMP121 = Program . searchPointInRegion2 ( RX10_TEMP120 , pt ) ; final int RX10_TEMP122 = 0 ; final boolean RX10_TEMP123 = RX10_TEMP121 < RX10_TEMP122 ; if ( RX10_TEMP123 ) { final String RX10_TEMP124 = "Point pt not found in the distribution X10_TEMP84." ; throw new RuntimeException ( RX10_TEMP124 ) ; }
 final place RX10_TEMP125 = Program . getPlaceFromDist2 ( X10_TEMP84 , RX10_TEMP121 ) ; final place X10_TEMP85 = RX10_TEMP125 ; 
 final T360 utmp360 = new T360(pt, sBuffer, result);
 async (X10_TEMP85) {Program.thread360(utmp360); }
 }
 }
 }
 public static void thread316(final T316 utmpz) {final  doubleStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread317(final T317 utmpz) {final  double localSum = utmpz.localSum;
final  int index = utmpz.index;
final  doubleRefArray1 localSumArray = utmpz.localSumArray;
 { final Point1 RX10_TEMP51 = new Point1 ( index ) ; final Dist1 RX10_TEMP52 = localSumArray . distValue ; final Region1 RX10_TEMP53 = RX10_TEMP52 . dReg ; final int RX10_TEMP54 = Program . searchPointInRegion1 ( RX10_TEMP53 , RX10_TEMP51 ) ; final int RX10_TEMP55 = 0 ; final boolean RX10_TEMP56 = RX10_TEMP54 < RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP57 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final place RX10_TEMP58 = Program . getPlaceFromDist1 ( RX10_TEMP52 , RX10_TEMP54 ) ; final place RX10_TEMP60 = here ; final boolean RX10_TEMP61 = RX10_TEMP58 != RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP59 = "Bad place access for array localSumArray" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 Program . setRefArrayValue1double ( localSumArray , RX10_TEMP54 , localSum ) ; }
 }
 public static void thread318(final T318 utmpz) {final  intStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread319(final T319 utmpz) {final  int localMax = utmpz.localMax;
final  int index = utmpz.index;
final  intRefArray1 localMaxArray = utmpz.localMaxArray;
 { final Point1 RX10_TEMP51 = new Point1 ( index ) ; final Dist1 RX10_TEMP52 = localMaxArray . distValue ; final Region1 RX10_TEMP53 = RX10_TEMP52 . dReg ; final int RX10_TEMP54 = Program . searchPointInRegion1 ( RX10_TEMP53 , RX10_TEMP51 ) ; final int RX10_TEMP55 = 0 ; final boolean RX10_TEMP56 = RX10_TEMP54 < RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP57 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final place RX10_TEMP58 = Program . getPlaceFromDist1 ( RX10_TEMP52 , RX10_TEMP54 ) ; final place RX10_TEMP60 = here ; final boolean RX10_TEMP61 = RX10_TEMP58 != RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP59 = "Bad place access for array localMaxArray" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 Program . setRefArrayValue1int ( localMaxArray , RX10_TEMP54 , localMax ) ; }
 }
 public static void thread320(final T320 utmpz) {final  intStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  intStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public static void thread321(final T321 utmpz) {final  int localSum = utmpz.localSum;
final  int index = utmpz.index;
final  intRefArray1 localSumArray = utmpz.localSumArray;
 { final Point1 RX10_TEMP51 = new Point1 ( index ) ; final Dist1 RX10_TEMP52 = localSumArray . distValue ; final Region1 RX10_TEMP53 = RX10_TEMP52 . dReg ; final int RX10_TEMP54 = Program . searchPointInRegion1 ( RX10_TEMP53 , RX10_TEMP51 ) ; final int RX10_TEMP55 = 0 ; final boolean RX10_TEMP56 = RX10_TEMP54 < RX10_TEMP55 ; if ( RX10_TEMP56 ) { String RX10_TEMP57 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final place RX10_TEMP58 = Program . getPlaceFromDist1 ( RX10_TEMP52 , RX10_TEMP54 ) ; final place RX10_TEMP60 = here ; final boolean RX10_TEMP61 = RX10_TEMP58 != RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP59 = "Bad place access for array localSumArray" ; throw new RuntimeException ( RX10_TEMP59 ) ; }
 Program . setRefArrayValue1int ( localSumArray , RX10_TEMP54 , localSum ) ; }
 }
 public static void thread343(final T343 utmpz) {final  int i = utmpz.i;
final  int j2 = utmpz.j2;
final  int j1 = utmpz.j1;
final  ComplexRefArray2 f = utmpz.f;
 { final Point2 RX10_TEMP32 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP33 = f . distValue ; final Region2 RX10_TEMP34 = RX10_TEMP33 . dReg ; final int RX10_TEMP35 = Program . searchPointInRegion2 ( RX10_TEMP34 , RX10_TEMP32 ) ; final int RX10_TEMP36 = 0 ; final boolean RX10_TEMP37 = RX10_TEMP35 < RX10_TEMP36 ; if ( RX10_TEMP37 ) { String RX10_TEMP38 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 final place RX10_TEMP39 = Program . getPlaceFromDist2 ( RX10_TEMP33 , RX10_TEMP35 ) ; final place RX10_TEMP41 = here ; final boolean RX10_TEMP42 = RX10_TEMP39 != RX10_TEMP41 ; if ( RX10_TEMP42 ) { String RX10_TEMP40 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 final Complex RX10_TEMP43 = Program . getRefArrayValue2Complex ( f , RX10_TEMP35 ) ; final Complex temp = ( RX10_TEMP43 ) ; final Point2 RX10_TEMP44 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP45 = f . distValue ; final Region2 RX10_TEMP46 = RX10_TEMP45 . dReg ; final int RX10_TEMP47 = Program . searchPointInRegion2 ( RX10_TEMP46 , RX10_TEMP44 ) ; final int RX10_TEMP48 = 0 ; final boolean RX10_TEMP49 = RX10_TEMP47 < RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP50 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 final place RX10_TEMP51 = Program . getPlaceFromDist2 ( RX10_TEMP45 , RX10_TEMP47 ) ; final place RX10_TEMP53 = here ; final boolean RX10_TEMP54 = RX10_TEMP51 != RX10_TEMP53 ; if ( RX10_TEMP54 ) { String RX10_TEMP52 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final Complex RX10_TEMP55 = Program . getRefArrayValue2Complex ( f , RX10_TEMP47 ) ; final Complex X10_TEMP60 = ( RX10_TEMP55 ) ; final Complex X10_TEMP61 = ( X10_TEMP60 ) ; final Point2 RX10_TEMP56 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP57 = f . distValue ; final Region2 RX10_TEMP58 = RX10_TEMP57 . dReg ; final int RX10_TEMP59 = Program . searchPointInRegion2 ( RX10_TEMP58 , RX10_TEMP56 ) ; final int RX10_TEMP60 = 0 ; final boolean RX10_TEMP61 = RX10_TEMP59 < RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP62 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP62 ) ; }
 final place RX10_TEMP63 = Program . getPlaceFromDist2 ( RX10_TEMP57 , RX10_TEMP59 ) ; final place RX10_TEMP65 = here ; final boolean RX10_TEMP66 = RX10_TEMP63 != RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP64 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP64 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP59 , X10_TEMP61 ) ; final Complex X10_TEMP65 = ( temp ) ; final Point2 RX10_TEMP67 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP68 = f . distValue ; final Region2 RX10_TEMP69 = RX10_TEMP68 . dReg ; final int RX10_TEMP70 = Program . searchPointInRegion2 ( RX10_TEMP69 , RX10_TEMP67 ) ; final int RX10_TEMP71 = 0 ; final boolean RX10_TEMP72 = RX10_TEMP70 < RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP73 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP73 ) ; }
 final place RX10_TEMP74 = Program . getPlaceFromDist2 ( RX10_TEMP68 , RX10_TEMP70 ) ; final place RX10_TEMP76 = here ; final boolean RX10_TEMP77 = RX10_TEMP74 != RX10_TEMP76 ; if ( RX10_TEMP77 ) { String RX10_TEMP75 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP75 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP70 , X10_TEMP65 ) ; }
 }
 public static void thread344(final T344 utmpz) {final  int i = utmpz.i;
final  Complex t1 = utmpz.t1;
final  int j2 = utmpz.j2;
final  int j1 = utmpz.j1;
final  ComplexRefArray2 f = utmpz.f;
final  FourierTransform2D X10_TEMP0 = utmpz.X10_TEMP0;
 { final Point2 RX10_TEMP32 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP33 = f . distValue ; final Region2 RX10_TEMP34 = RX10_TEMP33 . dReg ; final int RX10_TEMP35 = Program . searchPointInRegion2 ( RX10_TEMP34 , RX10_TEMP32 ) ; final int RX10_TEMP36 = 0 ; final boolean RX10_TEMP37 = RX10_TEMP35 < RX10_TEMP36 ; if ( RX10_TEMP37 ) { String RX10_TEMP38 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 final place RX10_TEMP39 = Program . getPlaceFromDist2 ( RX10_TEMP33 , RX10_TEMP35 ) ; final place RX10_TEMP41 = here ; final boolean RX10_TEMP42 = RX10_TEMP39 != RX10_TEMP41 ; if ( RX10_TEMP42 ) { String RX10_TEMP40 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 final Complex RX10_TEMP43 = Program . getRefArrayValue2Complex ( f , RX10_TEMP35 ) ; final Complex X10_TEMP46 = ( RX10_TEMP43 ) ; final Complex t = ( Program . Complex_getConjg ( X10_TEMP46 ) ) ; final Point2 RX10_TEMP44 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP45 = f . distValue ; final Region2 RX10_TEMP46 = RX10_TEMP45 . dReg ; final int RX10_TEMP47 = Program . searchPointInRegion2 ( RX10_TEMP46 , RX10_TEMP44 ) ; final int RX10_TEMP48 = 0 ; final boolean RX10_TEMP49 = RX10_TEMP47 < RX10_TEMP48 ; if ( RX10_TEMP49 ) { String RX10_TEMP50 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP50 ) ; }
 final place RX10_TEMP51 = Program . getPlaceFromDist2 ( RX10_TEMP45 , RX10_TEMP47 ) ; final place RX10_TEMP53 = here ; final boolean RX10_TEMP54 = RX10_TEMP51 != RX10_TEMP53 ; if ( RX10_TEMP54 ) { String RX10_TEMP52 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP52 ) ; }
 final Complex RX10_TEMP55 = Program . getRefArrayValue2Complex ( f , RX10_TEMP47 ) ; final Complex X10_TEMP50 = ( RX10_TEMP55 ) ; final Complex s = ( Program . Complex_add ( X10_TEMP50 , t ) ) ; final Point2 RX10_TEMP56 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP57 = f . distValue ; final Region2 RX10_TEMP58 = RX10_TEMP57 . dReg ; final int RX10_TEMP59 = Program . searchPointInRegion2 ( RX10_TEMP58 , RX10_TEMP56 ) ; final int RX10_TEMP60 = 0 ; final boolean RX10_TEMP61 = RX10_TEMP59 < RX10_TEMP60 ; if ( RX10_TEMP61 ) { String RX10_TEMP62 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP62 ) ; }
 final place RX10_TEMP63 = Program . getPlaceFromDist2 ( RX10_TEMP57 , RX10_TEMP59 ) ; final place RX10_TEMP65 = here ; final boolean RX10_TEMP66 = RX10_TEMP63 != RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP64 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP64 ) ; }
 final Complex RX10_TEMP67 = Program . getRefArrayValue2Complex ( f , RX10_TEMP59 ) ; final Complex X10_TEMP55 = ( RX10_TEMP67 ) ; final Complex X10_TEMP58 = ( Program . Complex_sub ( X10_TEMP55 , t ) ) ; final Complex t2 = ( Program . Complex_mult ( X10_TEMP58 , t1 ) ) ; final Complex X10_TEMP65 = ( Program . Complex_add ( s , t2 ) ) ; final double X10_TEMP67 = ( X10_TEMP0 . invN ) ; final Complex X10_TEMP69 = ( Program . Complex_multS ( X10_TEMP65 , X10_TEMP67 ) ) ; final Complex X10_TEMP70 = ( X10_TEMP69 ) ; final Point2 RX10_TEMP68 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP69 = f . distValue ; final Region2 RX10_TEMP70 = RX10_TEMP69 . dReg ; final int RX10_TEMP71 = Program . searchPointInRegion2 ( RX10_TEMP70 , RX10_TEMP68 ) ; final int RX10_TEMP72 = 0 ; final boolean RX10_TEMP73 = RX10_TEMP71 < RX10_TEMP72 ; if ( RX10_TEMP73 ) { String RX10_TEMP74 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP74 ) ; }
 final place RX10_TEMP75 = Program . getPlaceFromDist2 ( RX10_TEMP69 , RX10_TEMP71 ) ; final place RX10_TEMP77 = here ; final boolean RX10_TEMP78 = RX10_TEMP75 != RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP76 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP76 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP71 , X10_TEMP70 ) ; final Complex X10_TEMP75 = ( Program . Complex_sub ( s , t2 ) ) ; final Complex X10_TEMP77 = ( Program . Complex_getConjg ( X10_TEMP75 ) ) ; final double X10_TEMP79 = ( X10_TEMP0 . invN ) ; final Complex X10_TEMP81 = ( Program . Complex_multS ( X10_TEMP77 , X10_TEMP79 ) ) ; final Complex X10_TEMP82 = ( X10_TEMP81 ) ; final Point2 RX10_TEMP79 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP80 = f . distValue ; final Region2 RX10_TEMP81 = RX10_TEMP80 . dReg ; final int RX10_TEMP82 = Program . searchPointInRegion2 ( RX10_TEMP81 , RX10_TEMP79 ) ; final int RX10_TEMP83 = 0 ; final boolean RX10_TEMP84 = RX10_TEMP82 < RX10_TEMP83 ; if ( RX10_TEMP84 ) { String RX10_TEMP85 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP85 ) ; }
 final place RX10_TEMP86 = Program . getPlaceFromDist2 ( RX10_TEMP80 , RX10_TEMP82 ) ; final place RX10_TEMP88 = here ; final boolean RX10_TEMP89 = RX10_TEMP86 != RX10_TEMP88 ; if ( RX10_TEMP89 ) { String RX10_TEMP87 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP87 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP82 , X10_TEMP82 ) ; }
 }
 public static void thread345(final T345 utmpz) {final  int i = utmpz.i;
final  Complex s = utmpz.s;
final  int j2 = utmpz.j2;
final  int j1 = utmpz.j1;
final  ComplexRefArray2 f = utmpz.f;
 { final Point2 RX10_TEMP50 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP51 = f . distValue ; final Region2 RX10_TEMP52 = RX10_TEMP51 . dReg ; final int RX10_TEMP53 = Program . searchPointInRegion2 ( RX10_TEMP52 , RX10_TEMP50 ) ; final int RX10_TEMP54 = 0 ; final boolean RX10_TEMP55 = RX10_TEMP53 < RX10_TEMP54 ; if ( RX10_TEMP55 ) { String RX10_TEMP56 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP56 ) ; }
 final place RX10_TEMP57 = Program . getPlaceFromDist2 ( RX10_TEMP51 , RX10_TEMP53 ) ; final place RX10_TEMP59 = here ; final boolean RX10_TEMP60 = RX10_TEMP57 != RX10_TEMP59 ; if ( RX10_TEMP60 ) { String RX10_TEMP58 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP58 ) ; }
 final Complex RX10_TEMP61 = Program . getRefArrayValue2Complex ( f , RX10_TEMP53 ) ; final Complex tmp1 = ( RX10_TEMP61 ) ; final Point2 RX10_TEMP62 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP63 = f . distValue ; final Region2 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP65 = Program . searchPointInRegion2 ( RX10_TEMP64 , RX10_TEMP62 ) ; final int RX10_TEMP66 = 0 ; final boolean RX10_TEMP67 = RX10_TEMP65 < RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP68 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP68 ) ; }
 final place RX10_TEMP69 = Program . getPlaceFromDist2 ( RX10_TEMP63 , RX10_TEMP65 ) ; final place RX10_TEMP71 = here ; final boolean RX10_TEMP72 = RX10_TEMP69 != RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP70 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 final Complex RX10_TEMP73 = Program . getRefArrayValue2Complex ( f , RX10_TEMP65 ) ; final Complex X10_TEMP110 = ( RX10_TEMP73 ) ; final Complex tmp2 = ( Program . Complex_mult ( s , X10_TEMP110 ) ) ; final Complex X10_TEMP116 = ( Program . Complex_sub ( tmp1 , tmp2 ) ) ; final Complex X10_TEMP117 = ( X10_TEMP116 ) ; final Point2 RX10_TEMP74 = new Point2 ( i , j2 ) ; final Dist2 RX10_TEMP75 = f . distValue ; final Region2 RX10_TEMP76 = RX10_TEMP75 . dReg ; final int RX10_TEMP77 = Program . searchPointInRegion2 ( RX10_TEMP76 , RX10_TEMP74 ) ; final int RX10_TEMP78 = 0 ; final boolean RX10_TEMP79 = RX10_TEMP77 < RX10_TEMP78 ; if ( RX10_TEMP79 ) { String RX10_TEMP80 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP80 ) ; }
 final place RX10_TEMP81 = Program . getPlaceFromDist2 ( RX10_TEMP75 , RX10_TEMP77 ) ; final place RX10_TEMP83 = here ; final boolean RX10_TEMP84 = RX10_TEMP81 != RX10_TEMP83 ; if ( RX10_TEMP84 ) { String RX10_TEMP82 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP82 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP77 , X10_TEMP117 ) ; final Complex X10_TEMP122 = ( Program . Complex_add ( tmp1 , tmp2 ) ) ; final Complex X10_TEMP123 = ( X10_TEMP122 ) ; final Point2 RX10_TEMP85 = new Point2 ( i , j1 ) ; final Dist2 RX10_TEMP86 = f . distValue ; final Region2 RX10_TEMP87 = RX10_TEMP86 . dReg ; final int RX10_TEMP88 = Program . searchPointInRegion2 ( RX10_TEMP87 , RX10_TEMP85 ) ; final int RX10_TEMP89 = 0 ; final boolean RX10_TEMP90 = RX10_TEMP88 < RX10_TEMP89 ; if ( RX10_TEMP90 ) { String RX10_TEMP91 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP91 ) ; }
 final place RX10_TEMP92 = Program . getPlaceFromDist2 ( RX10_TEMP86 , RX10_TEMP88 ) ; final place RX10_TEMP94 = here ; final boolean RX10_TEMP95 = RX10_TEMP92 != RX10_TEMP94 ; if ( RX10_TEMP95 ) { String RX10_TEMP93 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP93 ) ; }
 Program . setRefArrayValue2Complex ( f , RX10_TEMP88 , X10_TEMP123 ) ; }
 }
 public static void thread346(final T346 utmpz) {final  doubleStub RX10_TEMP30 = utmpz.RX10_TEMP30;
final  point ( : rank==1 ) RX10_TEMP21 = utmpz.RX10_TEMP21;
final  doubleStub [ : rank==1 ] RX10_TEMP20 = utmpz.RX10_TEMP20;
 { RX10_TEMP20 [ RX10_TEMP21 ] = ( RX10_TEMP30 ) ; }
 }
 public static void thread347(final T347 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 data = utmpz.data;
 { final Dist2 RX10_TEMP46 = data . distValue ; final Region2 RX10_TEMP47 = RX10_TEMP46 . dReg ; final int RX10_TEMP48 = Program . searchPointInRegion2 ( RX10_TEMP47 , pt ) ; final int RX10_TEMP49 = 0 ; final boolean RX10_TEMP50 = RX10_TEMP48 < RX10_TEMP49 ; if ( RX10_TEMP50 ) { String RX10_TEMP51 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP51 ) ; }
 final place RX10_TEMP52 = Program . getPlaceFromDist2 ( RX10_TEMP46 , RX10_TEMP48 ) ; final place RX10_TEMP54 = here ; final boolean RX10_TEMP55 = RX10_TEMP52 != RX10_TEMP54 ; if ( RX10_TEMP55 ) { String RX10_TEMP53 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP53 ) ; }
 final double RX10_TEMP56 = Program . getRefArrayValue2double ( data , RX10_TEMP48 ) ; final double X10_TEMP42 = ( RX10_TEMP56 ) ; final Region2 RX10_TEMP57 = sBuffer . regionValue ; final int RX10_TEMP58 = Program . searchPointInRegion2 ( RX10_TEMP57 , pt ) ; final int RX10_TEMP59 = 0 ; final boolean RX10_TEMP60 = RX10_TEMP58 < RX10_TEMP59 ; if ( RX10_TEMP60 ) { String RX10_TEMP61 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final double value [ : rank==1 ] RX10_TEMP62 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP43 = ( RX10_TEMP62 [ RX10_TEMP58 ] ) ; final double X10_TEMP45 = ( X10_TEMP42 + X10_TEMP43 ) ; final double X10_TEMP46 = ( X10_TEMP45 ) ; final Dist2 RX10_TEMP63 = data . distValue ; final Region2 RX10_TEMP64 = RX10_TEMP63 . dReg ; final int RX10_TEMP65 = Program . searchPointInRegion2 ( RX10_TEMP64 , pt ) ; final int RX10_TEMP66 = 0 ; final boolean RX10_TEMP67 = RX10_TEMP65 < RX10_TEMP66 ; if ( RX10_TEMP67 ) { String RX10_TEMP68 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP68 ) ; }
 final place RX10_TEMP69 = Program . getPlaceFromDist2 ( RX10_TEMP63 , RX10_TEMP65 ) ; final place RX10_TEMP71 = here ; final boolean RX10_TEMP72 = RX10_TEMP69 != RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP70 = "Bad place access for array data" ; throw new RuntimeException ( RX10_TEMP70 ) ; }
 Program . setRefArrayValue2double ( data , RX10_TEMP65 , X10_TEMP46 ) ; }
 }
 public static void thread348(final T348 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 result = utmpz.result;
 { final Region2 RX10_TEMP61 = sBuffer . regionValue ; final int RX10_TEMP62 = Program . searchPointInRegion2 ( RX10_TEMP61 , pt ) ; final int RX10_TEMP63 = 0 ; final boolean RX10_TEMP64 = RX10_TEMP62 < RX10_TEMP63 ; if ( RX10_TEMP64 ) { String RX10_TEMP65 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP65 ) ; }
 final double value [ : rank==1 ] RX10_TEMP66 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP57 = ( RX10_TEMP66 [ RX10_TEMP62 ] ) ; final double X10_TEMP58 = ( X10_TEMP57 ) ; final Dist2 RX10_TEMP67 = result . distValue ; final Region2 RX10_TEMP68 = RX10_TEMP67 . dReg ; final int RX10_TEMP69 = Program . searchPointInRegion2 ( RX10_TEMP68 , pt ) ; final int RX10_TEMP70 = 0 ; final boolean RX10_TEMP71 = RX10_TEMP69 < RX10_TEMP70 ; if ( RX10_TEMP71 ) { String RX10_TEMP72 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP72 ) ; }
 final place RX10_TEMP73 = Program . getPlaceFromDist2 ( RX10_TEMP67 , RX10_TEMP69 ) ; final place RX10_TEMP75 = here ; final boolean RX10_TEMP76 = RX10_TEMP73 != RX10_TEMP75 ; if ( RX10_TEMP76 ) { String RX10_TEMP74 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP74 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP69 , X10_TEMP58 ) ; }
 }
 public static void thread349(final T349 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
 { final place X10_TEMP213 = ( here ) ; final int X10_TEMP217 = ( X10_TEMP213 . id ) ; final Point2 RX10_TEMP510 = new Point2 ( i , j ) ; final Region2 RX10_TEMP511 = sBuffer . regionValue ; final int RX10_TEMP512 = Program . searchPointInRegion2 ( RX10_TEMP511 , RX10_TEMP510 ) ; final int RX10_TEMP513 = 0 ; final boolean RX10_TEMP514 = RX10_TEMP512 < RX10_TEMP513 ; if ( RX10_TEMP514 ) { String RX10_TEMP515 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP515 ) ; }
 final double value [ : rank==1 ] RX10_TEMP516 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP221 = ( RX10_TEMP516 [ RX10_TEMP512 ] ) ; final double X10_TEMP222 = ( X10_TEMP221 ) ; final Point3 RX10_TEMP517 = new Point3 ( X10_TEMP217 , i , j ) ; final Dist3 RX10_TEMP518 = dstBuffer . distValue ; final Region3 RX10_TEMP519 = RX10_TEMP518 . dReg ; final int RX10_TEMP520 = Program . searchPointInRegion3 ( RX10_TEMP519 , RX10_TEMP517 ) ; final int RX10_TEMP521 = 0 ; final boolean RX10_TEMP522 = RX10_TEMP520 < RX10_TEMP521 ; if ( RX10_TEMP522 ) { String RX10_TEMP523 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP523 ) ; }
 final place RX10_TEMP524 = Program . getPlaceFromDist3 ( RX10_TEMP518 , RX10_TEMP520 ) ; final place RX10_TEMP526 = here ; final boolean RX10_TEMP527 = RX10_TEMP524 != RX10_TEMP526 ; if ( RX10_TEMP527 ) { String RX10_TEMP525 = "Bad place access for array dstBuffer" ; throw new RuntimeException ( RX10_TEMP525 ) ; }
 Program . setRefArrayValue3double ( dstBuffer , RX10_TEMP520 , X10_TEMP222 ) ; }
 }
 public static void thread350(final T350 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray3 dstBuffer = utmpz.dstBuffer;
 { final place X10_TEMP405 = ( here ) ; final int X10_TEMP409 = ( X10_TEMP405 . id ) ; final Point2 RX10_TEMP1035 = new Point2 ( i , j ) ; final Region2 RX10_TEMP1036 = sBuffer . regionValue ; final int RX10_TEMP1037 = Program . searchPointInRegion2 ( RX10_TEMP1036 , RX10_TEMP1035 ) ; final int RX10_TEMP1038 = 0 ; final boolean RX10_TEMP1039 = RX10_TEMP1037 < RX10_TEMP1038 ; if ( RX10_TEMP1039 ) { String RX10_TEMP1040 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1040 ) ; }
 final double value [ : rank==1 ] RX10_TEMP1041 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP413 = ( RX10_TEMP1041 [ RX10_TEMP1037 ] ) ; final double X10_TEMP414 = ( X10_TEMP413 ) ; final Point3 RX10_TEMP1042 = new Point3 ( X10_TEMP409 , i , j ) ; final Dist3 RX10_TEMP1043 = dstBuffer . distValue ; final Region3 RX10_TEMP1044 = RX10_TEMP1043 . dReg ; final int RX10_TEMP1045 = Program . searchPointInRegion3 ( RX10_TEMP1044 , RX10_TEMP1042 ) ; final int RX10_TEMP1046 = 0 ; final boolean RX10_TEMP1047 = RX10_TEMP1045 < RX10_TEMP1046 ; if ( RX10_TEMP1047 ) { String RX10_TEMP1048 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1048 ) ; }
 final place RX10_TEMP1049 = Program . getPlaceFromDist3 ( RX10_TEMP1043 , RX10_TEMP1045 ) ; final place RX10_TEMP1051 = here ; final boolean RX10_TEMP1052 = RX10_TEMP1049 != RX10_TEMP1051 ; if ( RX10_TEMP1052 ) { String RX10_TEMP1050 = "Bad place access for array dstBuffer" ; throw new RuntimeException ( RX10_TEMP1050 ) ; }
 Program . setRefArrayValue3double ( dstBuffer , RX10_TEMP1045 , X10_TEMP414 ) ; }
 }
 public static void thread351(final T351 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 result = utmpz.result;
 { final Region2 RX10_TEMP63 = sBuffer . regionValue ; final int RX10_TEMP64 = Program . searchPointInRegion2 ( RX10_TEMP63 , pt ) ; final int RX10_TEMP65 = 0 ; final boolean RX10_TEMP66 = RX10_TEMP64 < RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP67 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP67 ) ; }
 final double value [ : rank==1 ] RX10_TEMP68 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP71 = ( RX10_TEMP68 [ RX10_TEMP64 ] ) ; final double X10_TEMP72 = ( X10_TEMP71 ) ; final Dist2 RX10_TEMP69 = result . distValue ; final Region2 RX10_TEMP70 = RX10_TEMP69 . dReg ; final int RX10_TEMP71 = Program . searchPointInRegion2 ( RX10_TEMP70 , pt ) ; final int RX10_TEMP72 = 0 ; final boolean RX10_TEMP73 = RX10_TEMP71 < RX10_TEMP72 ; if ( RX10_TEMP73 ) { String RX10_TEMP74 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP74 ) ; }
 final place RX10_TEMP75 = Program . getPlaceFromDist2 ( RX10_TEMP69 , RX10_TEMP71 ) ; final place RX10_TEMP77 = here ; final boolean RX10_TEMP78 = RX10_TEMP75 != RX10_TEMP77 ; if ( RX10_TEMP78 ) { String RX10_TEMP76 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP76 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP71 , X10_TEMP72 ) ; }
 }
 public static void thread352(final T352 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 result = utmpz.result;
 { final Region2 RX10_TEMP84 = sBuffer . regionValue ; final int RX10_TEMP85 = Program . searchPointInRegion2 ( RX10_TEMP84 , pt ) ; final int RX10_TEMP86 = 0 ; final boolean RX10_TEMP87 = RX10_TEMP85 < RX10_TEMP86 ; if ( RX10_TEMP87 ) { String RX10_TEMP88 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP88 ) ; }
 final double value [ : rank==1 ] RX10_TEMP89 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP81 = ( RX10_TEMP89 [ RX10_TEMP85 ] ) ; final double X10_TEMP82 = ( X10_TEMP81 ) ; final Dist2 RX10_TEMP90 = result . distValue ; final Region2 RX10_TEMP91 = RX10_TEMP90 . dReg ; final int RX10_TEMP92 = Program . searchPointInRegion2 ( RX10_TEMP91 , pt ) ; final int RX10_TEMP93 = 0 ; final boolean RX10_TEMP94 = RX10_TEMP92 < RX10_TEMP93 ; if ( RX10_TEMP94 ) { String RX10_TEMP95 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP95 ) ; }
 final place RX10_TEMP96 = Program . getPlaceFromDist2 ( RX10_TEMP90 , RX10_TEMP92 ) ; final place RX10_TEMP98 = here ; final boolean RX10_TEMP99 = RX10_TEMP96 != RX10_TEMP98 ; if ( RX10_TEMP99 ) { String RX10_TEMP97 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP97 ) ; }
 Program . setRefArrayValue2double ( result , RX10_TEMP92 , X10_TEMP82 ) ; }
 }
 public static void thread353(final T353 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 guards = utmpz.guards;
 { final Region2 RX10_TEMP127 = sBuffer . regionValue ; final int RX10_TEMP128 = Program . searchPointInRegion2 ( RX10_TEMP127 , pt ) ; final int RX10_TEMP129 = 0 ; final boolean RX10_TEMP130 = RX10_TEMP128 < RX10_TEMP129 ; if ( RX10_TEMP130 ) { String RX10_TEMP131 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP131 ) ; }
 final double value [ : rank==1 ] RX10_TEMP132 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP102 = ( RX10_TEMP132 [ RX10_TEMP128 ] ) ; final double X10_TEMP103 = ( X10_TEMP102 ) ; final Dist2 RX10_TEMP133 = guards . distValue ; final Region2 RX10_TEMP134 = RX10_TEMP133 . dReg ; final int RX10_TEMP135 = Program . searchPointInRegion2 ( RX10_TEMP134 , pt ) ; final int RX10_TEMP136 = 0 ; final boolean RX10_TEMP137 = RX10_TEMP135 < RX10_TEMP136 ; if ( RX10_TEMP137 ) { String RX10_TEMP138 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP138 ) ; }
 final place RX10_TEMP139 = Program . getPlaceFromDist2 ( RX10_TEMP133 , RX10_TEMP135 ) ; final place RX10_TEMP141 = here ; final boolean RX10_TEMP142 = RX10_TEMP139 != RX10_TEMP141 ; if ( RX10_TEMP142 ) { String RX10_TEMP140 = "Bad place access for array guards" ; throw new RuntimeException ( RX10_TEMP140 ) ; }
 Program . setRefArrayValue2double ( guards , RX10_TEMP135 , X10_TEMP103 ) ; }
 }
 public static void thread354(final T354 utmpz) {final  Point2 pt = utmpz.pt;
final  doubleValArray2 sBuffer = utmpz.sBuffer;
final  doubleRefArray2 guards = utmpz.guards;
 { final Region2 RX10_TEMP38 = sBuffer . regionValue ; final int RX10_TEMP39 = Program . searchPointInRegion2 ( RX10_TEMP38 , pt ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final double value [ : rank==1 ] RX10_TEMP43 = ( double value [ : rank==1 ] ) ( sBuffer . contents ) ; final double X10_TEMP27 = ( RX10_TEMP43 [ RX10_TEMP39 ] ) ; final double X10_TEMP28 = ( X10_TEMP27 ) ; final Dist2 RX10_TEMP44 = guards . distValue ; final Region2 RX10_TEMP45 = RX10_TEMP44 . dReg ; final int RX10_TEMP46 = Program . searchPointInRegion2 ( RX10_TEMP45 , pt ) ; final int RX10_TEMP47 = 0 ; final boolean RX10_TEMP48 = RX10_TEMP46 < RX10_TEMP47 ; if ( RX10_TEMP48 ) { String RX10_TEMP49 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP49 ) ; }
 final place RX10_TEMP50 = Program . getPlaceFromDist2 ( RX10_TEMP44 , RX10_TEMP46 ) ; final place RX10_TEMP52 = here ; final boolean RX10_TEMP53 = RX10_TEMP50 != RX10_TEMP52 ; if ( RX10_TEMP53 ) { String RX10_TEMP51 = "Bad place access for array guards" ; throw new RuntimeException ( RX10_TEMP51 ) ; }
 Program . setRefArrayValue2double ( guards , RX10_TEMP46 , X10_TEMP28 ) ; }
 }
 public static void thread355(final T355 utmpz) {final  int i = utmpz.i;
final  int pid = utmpz.pid;
final  ParticleValArray1 lBuffer = utmpz.lBuffer;
final  ParticleRefArray2 rightInBuffer = utmpz.rightInBuffer;
 { final Point1 RX10_TEMP99 = new Point1 ( i ) ; final Region1 RX10_TEMP100 = lBuffer . regionValue ; final int RX10_TEMP101 = Program . searchPointInRegion1 ( RX10_TEMP100 , RX10_TEMP99 ) ; final int RX10_TEMP102 = 0 ; final boolean RX10_TEMP103 = RX10_TEMP101 < RX10_TEMP102 ; if ( RX10_TEMP103 ) { String RX10_TEMP104 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP104 ) ; }
 final Particle value [ : rank==1 ] RX10_TEMP105 = ( Particle value [ : rank==1 ] ) ( lBuffer . contents ) ; final Particle X10_TEMP51 = ( RX10_TEMP105 [ RX10_TEMP101 ] ) ; final Particle X10_TEMP52 = ( X10_TEMP51 ) ; final Point2 RX10_TEMP106 = new Point2 ( pid , i ) ; final Dist2 RX10_TEMP107 = rightInBuffer . distValue ; final Region2 RX10_TEMP108 = RX10_TEMP107 . dReg ; final int RX10_TEMP109 = Program . searchPointInRegion2 ( RX10_TEMP108 , RX10_TEMP106 ) ; final int RX10_TEMP110 = 0 ; final boolean RX10_TEMP111 = RX10_TEMP109 < RX10_TEMP110 ; if ( RX10_TEMP111 ) { String RX10_TEMP112 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP112 ) ; }
 final place RX10_TEMP113 = Program . getPlaceFromDist2 ( RX10_TEMP107 , RX10_TEMP109 ) ; final place RX10_TEMP115 = here ; final boolean RX10_TEMP116 = RX10_TEMP113 != RX10_TEMP115 ; if ( RX10_TEMP116 ) { String RX10_TEMP114 = "Bad place access for array rightInBuffer" ; throw new RuntimeException ( RX10_TEMP114 ) ; }
 Program . setRefArrayValue2Particle ( rightInBuffer , RX10_TEMP109 , X10_TEMP52 ) ; }
 }
 public static void thread356(final T356 utmpz) {final  int i = utmpz.i;
final  int pid = utmpz.pid;
final  ParticleValArray1 rBuffer = utmpz.rBuffer;
final  ParticleRefArray2 leftInBuffer = utmpz.leftInBuffer;
 { final Point1 RX10_TEMP136 = new Point1 ( i ) ; final Region1 RX10_TEMP137 = rBuffer . regionValue ; final int RX10_TEMP138 = Program . searchPointInRegion1 ( RX10_TEMP137 , RX10_TEMP136 ) ; final int RX10_TEMP139 = 0 ; final boolean RX10_TEMP140 = RX10_TEMP138 < RX10_TEMP139 ; if ( RX10_TEMP140 ) { String RX10_TEMP141 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP141 ) ; }
 final Particle value [ : rank==1 ] RX10_TEMP142 = ( Particle value [ : rank==1 ] ) ( rBuffer . contents ) ; final Particle X10_TEMP67 = ( RX10_TEMP142 [ RX10_TEMP138 ] ) ; final Particle X10_TEMP68 = ( X10_TEMP67 ) ; final Point2 RX10_TEMP143 = new Point2 ( pid , i ) ; final Dist2 RX10_TEMP144 = leftInBuffer . distValue ; final Region2 RX10_TEMP145 = RX10_TEMP144 . dReg ; final int RX10_TEMP146 = Program . searchPointInRegion2 ( RX10_TEMP145 , RX10_TEMP143 ) ; final int RX10_TEMP147 = 0 ; final boolean RX10_TEMP148 = RX10_TEMP146 < RX10_TEMP147 ; if ( RX10_TEMP148 ) { String RX10_TEMP149 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP149 ) ; }
 final place RX10_TEMP150 = Program . getPlaceFromDist2 ( RX10_TEMP144 , RX10_TEMP146 ) ; final place RX10_TEMP152 = here ; final boolean RX10_TEMP153 = RX10_TEMP150 != RX10_TEMP152 ; if ( RX10_TEMP153 ) { String RX10_TEMP151 = "Bad place access for array leftInBuffer" ; throw new RuntimeException ( RX10_TEMP151 ) ; }
 Program . setRefArrayValue2Particle ( leftInBuffer , RX10_TEMP146 , X10_TEMP68 ) ; }
 }
 public static void thread357(final T357 utmpz) {final  int i = utmpz.i;
final  intValArray1 sBuffer = utmpz.sBuffer;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
 { final place X10_TEMP160 = ( here ) ; final int X10_TEMP163 = ( X10_TEMP160 . id ) ; final Point1 RX10_TEMP483 = new Point1 ( i ) ; final Region1 RX10_TEMP484 = sBuffer . regionValue ; final int RX10_TEMP485 = Program . searchPointInRegion1 ( RX10_TEMP484 , RX10_TEMP483 ) ; final int RX10_TEMP486 = 0 ; final boolean RX10_TEMP487 = RX10_TEMP485 < RX10_TEMP486 ; if ( RX10_TEMP487 ) { String RX10_TEMP488 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP488 ) ; }
 final int value [ : rank==1 ] RX10_TEMP489 = ( int value [ : rank==1 ] ) ( sBuffer . contents ) ; final int X10_TEMP166 = ( RX10_TEMP489 [ RX10_TEMP485 ] ) ; final int X10_TEMP167 = ( X10_TEMP166 ) ; final Point2 RX10_TEMP490 = new Point2 ( X10_TEMP163 , i ) ; final Dist2 RX10_TEMP491 = rCountBuffer . distValue ; final Region2 RX10_TEMP492 = RX10_TEMP491 . dReg ; final int RX10_TEMP493 = Program . searchPointInRegion2 ( RX10_TEMP492 , RX10_TEMP490 ) ; final int RX10_TEMP494 = 0 ; final boolean RX10_TEMP495 = RX10_TEMP493 < RX10_TEMP494 ; if ( RX10_TEMP495 ) { String RX10_TEMP496 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP496 ) ; }
 final place RX10_TEMP497 = Program . getPlaceFromDist2 ( RX10_TEMP491 , RX10_TEMP493 ) ; final place RX10_TEMP499 = here ; final boolean RX10_TEMP500 = RX10_TEMP497 != RX10_TEMP499 ; if ( RX10_TEMP500 ) { String RX10_TEMP498 = "Bad place access for array rCountBuffer" ; throw new RuntimeException ( RX10_TEMP498 ) ; }
 Program . setRefArrayValue2int ( rCountBuffer , RX10_TEMP493 , X10_TEMP167 ) ; }
 }
 public static void thread358(final T358 utmpz) {final  int i = utmpz.i;
final  intValArray1 sBuffer = utmpz.sBuffer;
final  intRefArray2 rCountBuffer = utmpz.rCountBuffer;
 { final place X10_TEMP476 = ( here ) ; final int X10_TEMP479 = ( X10_TEMP476 . id ) ; final Point1 RX10_TEMP1198 = new Point1 ( i ) ; final Region1 RX10_TEMP1199 = sBuffer . regionValue ; final int RX10_TEMP1200 = Program . searchPointInRegion1 ( RX10_TEMP1199 , RX10_TEMP1198 ) ; final int RX10_TEMP1201 = 0 ; final boolean RX10_TEMP1202 = RX10_TEMP1200 < RX10_TEMP1201 ; if ( RX10_TEMP1202 ) { String RX10_TEMP1203 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP1203 ) ; }
 final int value [ : rank==1 ] RX10_TEMP1204 = ( int value [ : rank==1 ] ) ( sBuffer . contents ) ; final int X10_TEMP482 = ( RX10_TEMP1204 [ RX10_TEMP1200 ] ) ; final int X10_TEMP483 = ( X10_TEMP482 ) ; final Point2 RX10_TEMP1205 = new Point2 ( X10_TEMP479 , i ) ; final Dist2 RX10_TEMP1206 = rCountBuffer . distValue ; final Region2 RX10_TEMP1207 = RX10_TEMP1206 . dReg ; final int RX10_TEMP1208 = Program . searchPointInRegion2 ( RX10_TEMP1207 , RX10_TEMP1205 ) ; final int RX10_TEMP1209 = 0 ; final boolean RX10_TEMP1210 = RX10_TEMP1208 < RX10_TEMP1209 ; if ( RX10_TEMP1210 ) { String RX10_TEMP1211 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP1211 ) ; }
 final place RX10_TEMP1212 = Program . getPlaceFromDist2 ( RX10_TEMP1206 , RX10_TEMP1208 ) ; final place RX10_TEMP1214 = here ; final boolean RX10_TEMP1215 = RX10_TEMP1212 != RX10_TEMP1214 ; if ( RX10_TEMP1215 ) { String RX10_TEMP1213 = "Bad place access for array rCountBuffer" ; throw new RuntimeException ( RX10_TEMP1213 ) ; }
 Program . setRefArrayValue2int ( rCountBuffer , RX10_TEMP1208 , X10_TEMP483 ) ; }
 }
 public static void thread359(final T359 utmpz) {final  intStub RX10_TEMP157 = utmpz.RX10_TEMP157;
final  point ( : rank==1 ) RX10_TEMP149 = utmpz.RX10_TEMP149;
final  intStub [ : rank==1 ] RX10_TEMP148 = utmpz.RX10_TEMP148;
 { RX10_TEMP148 [ RX10_TEMP149 ] = ( RX10_TEMP157 ) ; }
 }
 public static void thread360(final T360 utmpz) {final  Point2 pt = utmpz.pt;
final  ComplexValArray2 sBuffer = utmpz.sBuffer;
final  ComplexRefArray2 result = utmpz.result;
 { final Region2 RX10_TEMP126 = sBuffer . regionValue ; final int RX10_TEMP127 = Program . searchPointInRegion2 ( RX10_TEMP126 , pt ) ; final int RX10_TEMP128 = 0 ; final boolean RX10_TEMP129 = RX10_TEMP127 < RX10_TEMP128 ; if ( RX10_TEMP129 ) { String RX10_TEMP130 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP130 ) ; }
 final Complex value [ : rank==1 ] RX10_TEMP131 = ( Complex value [ : rank==1 ] ) ( sBuffer . contents ) ; final Complex X10_TEMP89 = ( RX10_TEMP131 [ RX10_TEMP127 ] ) ; final Complex X10_TEMP90 = ( X10_TEMP89 ) ; final Dist2 RX10_TEMP132 = result . distValue ; final Region2 RX10_TEMP133 = RX10_TEMP132 . dReg ; final int RX10_TEMP134 = Program . searchPointInRegion2 ( RX10_TEMP133 , pt ) ; final int RX10_TEMP135 = 0 ; final boolean RX10_TEMP136 = RX10_TEMP134 < RX10_TEMP135 ; if ( RX10_TEMP136 ) { String RX10_TEMP137 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP137 ) ; }
 final place RX10_TEMP138 = Program . getPlaceFromDist2 ( RX10_TEMP132 , RX10_TEMP134 ) ; final place RX10_TEMP140 = here ; final boolean RX10_TEMP141 = RX10_TEMP138 != RX10_TEMP140 ; if ( RX10_TEMP141 ) { String RX10_TEMP139 = "Bad place access for array result" ; throw new RuntimeException ( RX10_TEMP139 ) ; }
 Program . setRefArrayValue2Complex ( result , RX10_TEMP134 , X10_TEMP90 ) ; }
 }

}

 
 value T1 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP6;
public T1( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T2 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP6;
public T2( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T3 {

 public final  int RX10_TEMP32;

 public final  place RX10_TEMP28;

 public final  point ( : rank==1 ) RX10_TEMP27;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP26;
public T3( final  int a_RX10_TEMP32,  final  place a_RX10_TEMP28,  final  point ( : rank==1 ) a_RX10_TEMP27,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP26) { 
 this.RX10_TEMP32 = (a_RX10_TEMP32);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
 this.RX10_TEMP26 = (a_RX10_TEMP26);
}
}
 
 value T4 {

 public final  Point2 pt;

 public final  ComplexRefArray2 fy;

 public final  ComplexRefArray2 fx;

 public final  ComplexRefArray2 forceY;

 public final  ComplexRefArray2 forceX;
public T4( final  Point2 a_pt,  final  ComplexRefArray2 a_fy,  final  ComplexRefArray2 a_fx,  final  ComplexRefArray2 a_forceY,  final  ComplexRefArray2 a_forceX) { 
 this.pt = (a_pt);
 this.fy = (a_fy);
 this.fx = (a_fx);
 this.forceY = (a_forceY);
 this.forceX = (a_forceX);
}
}
 
 value T5 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T5( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T6 {

 public final  Point1 pl;

 public final  doubleRefArray1 energy;

 public final  ComplexRefArray2 forceY;

 public final  ComplexRefArray2 forceX;

 public final  ComplexRefArray2 q;

 public final  PoissonSolver X10_TEMP0;
public T6( final  Point1 a_pl,  final  doubleRefArray1 a_energy,  final  ComplexRefArray2 a_forceY,  final  ComplexRefArray2 a_forceX,  final  ComplexRefArray2 a_q,  final  PoissonSolver a_X10_TEMP0) { 
 this.pl = (a_pl);
 this.energy = (a_energy);
 this.forceY = (a_forceY);
 this.forceX = (a_forceX);
 this.q = (a_q);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T7 {

 public final  int RX10_TEMP27;

 public final  place RX10_TEMP23;

 public final  point ( : rank==1 ) RX10_TEMP22;

 public final  booleanStub [ : rank==1 ] RX10_TEMP21;
public T7( final  int a_RX10_TEMP27,  final  place a_RX10_TEMP23,  final  point ( : rank==1 ) a_RX10_TEMP22,  final  booleanStub [ : rank==1 ] a_RX10_TEMP21) { 
 this.RX10_TEMP27 = (a_RX10_TEMP27);
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
 this.RX10_TEMP21 = (a_RX10_TEMP21);
}
}
 
 value T8 {

 public final  Point1 X10_TEMP43;

 public final  booleanRefArray1 X10_TEMP40;

 public final  boolean X10_TEMP35;

 public final  int X10_TEMP34;

 public final  Region1 rRefLocal;
public T8( final  Point1 a_X10_TEMP43,  final  booleanRefArray1 a_X10_TEMP40,  final  boolean a_X10_TEMP35,  final  int a_X10_TEMP34,  final  Region1 a_rRefLocal) { 
 this.X10_TEMP43 = (a_X10_TEMP43);
 this.X10_TEMP40 = (a_X10_TEMP40);
 this.X10_TEMP35 = (a_X10_TEMP35);
 this.X10_TEMP34 = (a_X10_TEMP34);
 this.rRefLocal = (a_rRefLocal);
}
}
 
 value T9 {

 public final  int RX10_TEMP77;

 public final  place RX10_TEMP73;

 public final  point ( : rank==1 ) RX10_TEMP72;

 public final  booleanStub [ : rank==1 ] RX10_TEMP71;
public T9( final  int a_RX10_TEMP77,  final  place a_RX10_TEMP73,  final  point ( : rank==1 ) a_RX10_TEMP72,  final  booleanStub [ : rank==1 ] a_RX10_TEMP71) { 
 this.RX10_TEMP77 = (a_RX10_TEMP77);
 this.RX10_TEMP73 = (a_RX10_TEMP73);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
}
}
 
 value T10 {

 public final  Point1 X10_TEMP68;

 public final  booleanRefArray1 X10_TEMP65;

 public final  boolean X10_TEMP60;

 public final  int X10_TEMP59;

 public final  Region1 r2;
public T10( final  Point1 a_X10_TEMP68,  final  booleanRefArray1 a_X10_TEMP65,  final  boolean a_X10_TEMP60,  final  int a_X10_TEMP59,  final  Region1 a_r2) { 
 this.X10_TEMP68 = (a_X10_TEMP68);
 this.X10_TEMP65 = (a_X10_TEMP65);
 this.X10_TEMP60 = (a_X10_TEMP60);
 this.X10_TEMP59 = (a_X10_TEMP59);
 this.r2 = (a_r2);
}
}
 
 value T11 {

 public final  int RX10_TEMP27;

 public final  place RX10_TEMP23;

 public final  point ( : rank==1 ) RX10_TEMP22;

 public final  booleanStub [ : rank==1 ] RX10_TEMP21;
public T11( final  int a_RX10_TEMP27,  final  place a_RX10_TEMP23,  final  point ( : rank==1 ) a_RX10_TEMP22,  final  booleanStub [ : rank==1 ] a_RX10_TEMP21) { 
 this.RX10_TEMP27 = (a_RX10_TEMP27);
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
 this.RX10_TEMP21 = (a_RX10_TEMP21);
}
}
 
 value T12 {

 public final  Point1 X10_TEMP43;

 public final  booleanRefArray1 X10_TEMP40;

 public final  boolean X10_TEMP35;

 public final  int X10_TEMP34;

 public final  Region1 r1;
public T12( final  Point1 a_X10_TEMP43,  final  booleanRefArray1 a_X10_TEMP40,  final  boolean a_X10_TEMP35,  final  int a_X10_TEMP34,  final  Region1 a_r1) { 
 this.X10_TEMP43 = (a_X10_TEMP43);
 this.X10_TEMP40 = (a_X10_TEMP40);
 this.X10_TEMP35 = (a_X10_TEMP35);
 this.X10_TEMP34 = (a_X10_TEMP34);
 this.r1 = (a_r1);
}
}
 
 value T13 {

 public final  int RX10_TEMP77;

 public final  place RX10_TEMP73;

 public final  point ( : rank==1 ) RX10_TEMP72;

 public final  booleanStub [ : rank==1 ] RX10_TEMP71;
public T13( final  int a_RX10_TEMP77,  final  place a_RX10_TEMP73,  final  point ( : rank==1 ) a_RX10_TEMP72,  final  booleanStub [ : rank==1 ] a_RX10_TEMP71) { 
 this.RX10_TEMP77 = (a_RX10_TEMP77);
 this.RX10_TEMP73 = (a_RX10_TEMP73);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
}
}
 
 value T14 {

 public final  Point1 X10_TEMP62;

 public final  booleanRefArray1 X10_TEMP59;

 public final  boolean X10_TEMP54;

 public final  int X10_TEMP53;

 public final  Region1 rRefLocal;
public T14( final  Point1 a_X10_TEMP62,  final  booleanRefArray1 a_X10_TEMP59,  final  boolean a_X10_TEMP54,  final  int a_X10_TEMP53,  final  Region1 a_rRefLocal) { 
 this.X10_TEMP62 = (a_X10_TEMP62);
 this.X10_TEMP59 = (a_X10_TEMP59);
 this.X10_TEMP54 = (a_X10_TEMP54);
 this.X10_TEMP53 = (a_X10_TEMP53);
 this.rRefLocal = (a_rRefLocal);
}
}
 
 value T15 {

 public final  int RX10_TEMP20;

 public final  place RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  booleanStub [ : rank==1 ] RX10_TEMP14;
public T15( final  int a_RX10_TEMP20,  final  place a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  booleanStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP20 = (a_RX10_TEMP20);
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T16 {

 public final  booleanRefArray1 result;

 public final  place pHere;

 public final  Point1 pt;

 public final  booleanRefArray1 b;
public T16( final  booleanRefArray1 a_result,  final  place a_pHere,  final  Point1 a_pt,  final  booleanRefArray1 a_b) { 
 this.result = (a_result);
 this.pHere = (a_pHere);
 this.pt = (a_pt);
 this.b = (a_b);
}
}
 
 value T17 {

 public final  int RX10_TEMP20;

 public final  place RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP14;
public T17( final  int a_RX10_TEMP20,  final  place a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP20 = (a_RX10_TEMP20);
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T18 {

 public final  ComplexRefArray1 result;

 public final  place pHere;

 public final  Point1 pt;

 public final  ComplexRefArray1 c;
public T18( final  ComplexRefArray1 a_result,  final  place a_pHere,  final  Point1 a_pt,  final  ComplexRefArray1 a_c) { 
 this.result = (a_result);
 this.pHere = (a_pHere);
 this.pt = (a_pt);
 this.c = (a_c);
}
}
 
 value T19 {

 public final  int RX10_TEMP20;

 public final  place RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  intStub [ : rank==1 ] RX10_TEMP14;
public T19( final  int a_RX10_TEMP20,  final  place a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  intStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP20 = (a_RX10_TEMP20);
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T20 {

 public final  intRefArray1 result;

 public final  place pHere;

 public final  Point1 pt;

 public final  intRefArray1 i;
public T20( final  intRefArray1 a_result,  final  place a_pHere,  final  Point1 a_pt,  final  intRefArray1 a_i) { 
 this.result = (a_result);
 this.pHere = (a_pHere);
 this.pt = (a_pt);
 this.i = (a_i);
}
}
 
 value T21 {

 public final  int RX10_TEMP20;

 public final  place RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  doubleStub [ : rank==1 ] RX10_TEMP14;
public T21( final  int a_RX10_TEMP20,  final  place a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  doubleStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP20 = (a_RX10_TEMP20);
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T22 {

 public final  doubleRefArray1 result;

 public final  place pHere;

 public final  Point1 pt;

 public final  doubleRefArray1 d;
public T22( final  doubleRefArray1 a_result,  final  place a_pHere,  final  Point1 a_pt,  final  doubleRefArray1 a_d) { 
 this.result = (a_result);
 this.pHere = (a_pHere);
 this.pt = (a_pt);
 this.d = (a_d);
}
}
 
 value T23 {

 public final  int r1Length;

 public final  int nBits;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T23( final  int a_r1Length,  final  int a_nBits,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.r1Length = (a_r1Length);
 this.nBits = (a_nBits);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T24 {

 public final  int kmr;

 public final  int nxhh;

 public final  int nxh;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T24( final  int a_kmr,  final  int a_nxhh,  final  int a_nxh,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.kmr = (a_kmr);
 this.nxhh = (a_nxhh);
 this.nxh = (a_nxh);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T25 {

 public final  int kmr;

 public final  int nxhh;

 public final  int nxh;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T25( final  int a_kmr,  final  int a_nxhh,  final  int a_nxh,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.kmr = (a_kmr);
 this.nxhh = (a_nxhh);
 this.nxh = (a_nxh);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T26 {

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T26( final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T27 {

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T27( final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T28 {

 public final  int kmr;

 public final  int km;

 public final  int width;

 public final  int stride;

 public final  boolean inverse;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T28( final  int a_kmr,  final  int a_km,  final  int a_width,  final  int a_stride,  final  boolean a_inverse,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.kmr = (a_kmr);
 this.km = (a_km);
 this.width = (a_width);
 this.stride = (a_stride);
 this.inverse = (a_inverse);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T29 {

 public final  int RX10_TEMP54;

 public final  place RX10_TEMP50;

 public final  point ( : rank==1 ) RX10_TEMP49;

 public final  doubleStub [ : rank==1 ] RX10_TEMP48;
public T29( final  int a_RX10_TEMP54,  final  place a_RX10_TEMP50,  final  point ( : rank==1 ) a_RX10_TEMP49,  final  doubleStub [ : rank==1 ] a_RX10_TEMP48) { 
 this.RX10_TEMP54 = (a_RX10_TEMP54);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
}
}
 
 value T30 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T30( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T31 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T31( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T32 {

 public final  Point1 pl;

 public final  double y0;

 public final  double x0;

 public final  double bny;

 public final  double bnx;

 public final  double any;

 public final  double anx;

 public final  double edgely;

 public final  double edgelx;

 public final  int particlesPerPlace;

 public final  doubleRefArray2 result;

 public final  Dist2 dResult;

 public final  double BIG;

 public final  double ERROR;

 public final  int MAX_ITER;

 public final  int Y;

 public final  int X;

 public final  LinearESOpenPIC2D X10_TEMP0;
public T32( final  Point1 a_pl,  final  double a_y0,  final  double a_x0,  final  double a_bny,  final  double a_bnx,  final  double a_any,  final  double a_anx,  final  double a_edgely,  final  double a_edgelx,  final  int a_particlesPerPlace,  final  doubleRefArray2 a_result,  final  Dist2 a_dResult,  final  double a_BIG,  final  double a_ERROR,  final  int a_MAX_ITER,  final  int a_Y,  final  int a_X,  final  LinearESOpenPIC2D a_X10_TEMP0) { 
 this.pl = (a_pl);
 this.y0 = (a_y0);
 this.x0 = (a_x0);
 this.bny = (a_bny);
 this.bnx = (a_bnx);
 this.any = (a_any);
 this.anx = (a_anx);
 this.edgely = (a_edgely);
 this.edgelx = (a_edgelx);
 this.particlesPerPlace = (a_particlesPerPlace);
 this.result = (a_result);
 this.dResult = (a_dResult);
 this.BIG = (a_BIG);
 this.ERROR = (a_ERROR);
 this.MAX_ITER = (a_MAX_ITER);
 this.Y = (a_Y);
 this.X = (a_X);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T33 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T33( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T34 {

 public final  double vy;

 public final  double vx;

 public final  int idx;

 public final  doubleRefArray2 result;

 public final  int Y;

 public final  int X;
public T34( final  double a_vy,  final  double a_vx,  final  int a_idx,  final  doubleRefArray2 a_result,  final  int a_Y,  final  int a_X) { 
 this.vy = (a_vy);
 this.vx = (a_vx);
 this.idx = (a_idx);
 this.result = (a_result);
 this.Y = (a_Y);
 this.X = (a_X);
}
}
 
 value T35 {

 public final  int RX10_TEMP73;

 public final  place RX10_TEMP69;

 public final  point ( : rank==1 ) RX10_TEMP68;

 public final  intStub [ : rank==1 ] RX10_TEMP67;
public T35( final  int a_RX10_TEMP73,  final  place a_RX10_TEMP69,  final  point ( : rank==1 ) a_RX10_TEMP68,  final  intStub [ : rank==1 ] a_RX10_TEMP67) { 
 this.RX10_TEMP73 = (a_RX10_TEMP73);
 this.RX10_TEMP69 = (a_RX10_TEMP69);
 this.RX10_TEMP68 = (a_RX10_TEMP68);
 this.RX10_TEMP67 = (a_RX10_TEMP67);
}
}
 
 value T36 {

 public final  int RX10_TEMP94;

 public final  place RX10_TEMP90;

 public final  point ( : rank==1 ) RX10_TEMP89;

 public final  doubleStub [ : rank==1 ] RX10_TEMP88;
public T36( final  int a_RX10_TEMP94,  final  place a_RX10_TEMP90,  final  point ( : rank==1 ) a_RX10_TEMP89,  final  doubleStub [ : rank==1 ] a_RX10_TEMP88) { 
 this.RX10_TEMP94 = (a_RX10_TEMP94);
 this.RX10_TEMP90 = (a_RX10_TEMP90);
 this.RX10_TEMP89 = (a_RX10_TEMP89);
 this.RX10_TEMP88 = (a_RX10_TEMP88);
}
}
 
 value T37 {

 public final  int RX10_TEMP115;

 public final  place RX10_TEMP111;

 public final  point ( : rank==1 ) RX10_TEMP110;

 public final  doubleStub [ : rank==1 ] RX10_TEMP109;
public T37( final  int a_RX10_TEMP115,  final  place a_RX10_TEMP111,  final  point ( : rank==1 ) a_RX10_TEMP110,  final  doubleStub [ : rank==1 ] a_RX10_TEMP109) { 
 this.RX10_TEMP115 = (a_RX10_TEMP115);
 this.RX10_TEMP111 = (a_RX10_TEMP111);
 this.RX10_TEMP110 = (a_RX10_TEMP110);
 this.RX10_TEMP109 = (a_RX10_TEMP109);
}
}
 
 value T38 {

 public final  Point1 pl;

 public final  doubleRefArray1 sumY;

 public final  doubleRefArray1 sumX;

 public final  intRefArray1 numParticles;

 public final  doubleRefArray2 result;

 public final  Dist2 dResult;

 public final  int Y;

 public final  int X;
public T38( final  Point1 a_pl,  final  doubleRefArray1 a_sumY,  final  doubleRefArray1 a_sumX,  final  intRefArray1 a_numParticles,  final  doubleRefArray2 a_result,  final  Dist2 a_dResult,  final  int a_Y,  final  int a_X) { 
 this.pl = (a_pl);
 this.sumY = (a_sumY);
 this.sumX = (a_sumX);
 this.numParticles = (a_numParticles);
 this.result = (a_result);
 this.dResult = (a_dResult);
 this.Y = (a_Y);
 this.X = (a_X);
}
}
 
 value T39 {

 public final  double driftY;

 public final  double driftX;

 public final  doubleRefArray2 result;

 public final  Dist2 dResult;

 public final  int Y;

 public final  int X;
public T39( final  double a_driftY,  final  double a_driftX,  final  doubleRefArray2 a_result,  final  Dist2 a_dResult,  final  int a_Y,  final  int a_X) { 
 this.driftY = (a_driftY);
 this.driftX = (a_driftX);
 this.result = (a_result);
 this.dResult = (a_dResult);
 this.Y = (a_Y);
 this.X = (a_X);
}
}
 
 value T40 {

 public final  Region1 RX10_TEMP14;

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP6;

 public final  doubleRefArray2 velocity;

 public final  doubleRefArray2 position;
public T40( final  Region1 a_RX10_TEMP14,  final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP6,  final  doubleRefArray2 a_velocity,  final  doubleRefArray2 a_position) { 
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
 this.velocity = (a_velocity);
 this.position = (a_position);
}
}
 
 value T41 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  Region1Stub [ : rank==1 ] RX10_TEMP6;
public T41( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  Region1Stub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T42 {

 public final  Point1 pl;

 public final  Region1RefArray1 yRegions;

 public final  double nParticlesAve;

 public final  double y0;

 public final  double y;

 public final  double edgely;

 public final  LinearESOpenPIC2D X10_TEMP0;
public T42( final  Point1 a_pl,  final  Region1RefArray1 a_yRegions,  final  double a_nParticlesAve,  final  double a_y0,  final  double a_y,  final  double a_edgely,  final  LinearESOpenPIC2D a_X10_TEMP0) { 
 this.pl = (a_pl);
 this.yRegions = (a_yRegions);
 this.nParticlesAve = (a_nParticlesAve);
 this.y0 = (a_y0);
 this.y = (a_y);
 this.edgely = (a_edgely);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T43 {

 public final  int RX10_TEMP54;

 public final  place RX10_TEMP50;

 public final  point ( : rank==1 ) RX10_TEMP49;

 public final  Region1Stub [ : rank==1 ] RX10_TEMP48;
public T43( final  int a_RX10_TEMP54,  final  place a_RX10_TEMP50,  final  point ( : rank==1 ) a_RX10_TEMP49,  final  Region1Stub [ : rank==1 ] a_RX10_TEMP48) { 
 this.RX10_TEMP54 = (a_RX10_TEMP54);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
}
}
 
 value T44 {

 public final  Point1 pl;

 public final  Region1RefArray1 rBuffer;

 public final  place pHere;

 public final  Region1RefArray1 yRegions;
public T44( final  Point1 a_pl,  final  Region1RefArray1 a_rBuffer,  final  place a_pHere,  final  Region1RefArray1 a_yRegions) { 
 this.pl = (a_pl);
 this.rBuffer = (a_rBuffer);
 this.pHere = (a_pHere);
 this.yRegions = (a_yRegions);
}
}
 
 value T45 {

 public final  int RX10_TEMP13;

 public final  place RX10_TEMP9;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T45( final  int a_RX10_TEMP13,  final  place a_RX10_TEMP9,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T46 {

 public final  Point2 pt;

 public final  doubleRefArray2 chargeDensity;

 public final  doubleRefArray2 ionBackground;
public T46( final  Point2 a_pt,  final  doubleRefArray2 a_chargeDensity,  final  doubleRefArray2 a_ionBackground) { 
 this.pt = (a_pt);
 this.chargeDensity = (a_chargeDensity);
 this.ionBackground = (a_ionBackground);
}
}
 
 value T47 {

 public final  int RX10_TEMP80;

 public final  place RX10_TEMP76;

 public final  point ( : rank==1 ) RX10_TEMP75;

 public final  doubleStub [ : rank==1 ] RX10_TEMP74;
public T47( final  int a_RX10_TEMP80,  final  place a_RX10_TEMP76,  final  point ( : rank==1 ) a_RX10_TEMP75,  final  doubleStub [ : rank==1 ] a_RX10_TEMP74) { 
 this.RX10_TEMP80 = (a_RX10_TEMP80);
 this.RX10_TEMP76 = (a_RX10_TEMP76);
 this.RX10_TEMP75 = (a_RX10_TEMP75);
 this.RX10_TEMP74 = (a_RX10_TEMP74);
}
}
 
 value T48 {

 public final  int RX10_TEMP100;

 public final  place RX10_TEMP96;

 public final  point ( : rank==1 ) RX10_TEMP95;

 public final  doubleStub [ : rank==1 ] RX10_TEMP94;
public T48( final  int a_RX10_TEMP100,  final  place a_RX10_TEMP96,  final  point ( : rank==1 ) a_RX10_TEMP95,  final  doubleStub [ : rank==1 ] a_RX10_TEMP94) { 
 this.RX10_TEMP100 = (a_RX10_TEMP100);
 this.RX10_TEMP96 = (a_RX10_TEMP96);
 this.RX10_TEMP95 = (a_RX10_TEMP95);
 this.RX10_TEMP94 = (a_RX10_TEMP94);
}
}
 
 value T49 {

 public final  int RX10_TEMP156;

 public final  place RX10_TEMP152;

 public final  point ( : rank==1 ) RX10_TEMP151;

 public final  doubleStub [ : rank==1 ] RX10_TEMP150;
public T49( final  int a_RX10_TEMP156,  final  place a_RX10_TEMP152,  final  point ( : rank==1 ) a_RX10_TEMP151,  final  doubleStub [ : rank==1 ] a_RX10_TEMP150) { 
 this.RX10_TEMP156 = (a_RX10_TEMP156);
 this.RX10_TEMP152 = (a_RX10_TEMP152);
 this.RX10_TEMP151 = (a_RX10_TEMP151);
 this.RX10_TEMP150 = (a_RX10_TEMP150);
}
}
 
 value T50 {

 public final  int RX10_TEMP28;

 public final  place RX10_TEMP24;

 public final  point ( : rank==1 ) RX10_TEMP23;

 public final  doubleStub [ : rank==1 ] RX10_TEMP22;
public T50( final  int a_RX10_TEMP28,  final  place a_RX10_TEMP24,  final  point ( : rank==1 ) a_RX10_TEMP23,  final  doubleStub [ : rank==1 ] a_RX10_TEMP22) { 
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP24 = (a_RX10_TEMP24);
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
}
}
 
 value T51 {

 public final  double charge;

 public final  doubleRefArray2 guards;

 public final  doubleRefArray2 fieldCharge;

 public final  ParticleRefArray1 particles;
public T51( final  double a_charge,  final  doubleRefArray2 a_guards,  final  doubleRefArray2 a_fieldCharge,  final  ParticleRefArray1 a_particles) { 
 this.charge = (a_charge);
 this.guards = (a_guards);
 this.fieldCharge = (a_fieldCharge);
 this.particles = (a_particles);
}
}
 
 value T52 {

 public final  doubleRefArray2 guards;

 public final  doubleRefArray2 data;
public T52( final  doubleRefArray2 a_guards,  final  doubleRefArray2 a_data) { 
 this.guards = (a_guards);
 this.data = (a_data);
}
}
 
 value T53 {

 public final  int RX10_TEMP14;

 public final  place RX10_TEMP10;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  doubleStub [ : rank==1 ] RX10_TEMP8;
public T53( final  int a_RX10_TEMP14,  final  place a_RX10_TEMP10,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  doubleStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T54 {

 public final  Point1 pl;

 public final  doubleRefArray2 result;

 public final  doubleRefArray2 data;
public T54( final  Point1 a_pl,  final  doubleRefArray2 a_result,  final  doubleRefArray2 a_data) { 
 this.pl = (a_pl);
 this.result = (a_result);
 this.data = (a_data);
}
}
 
 value T55 {

 public final  int RX10_TEMP14;

 public final  place RX10_TEMP10;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  doubleStub [ : rank==1 ] RX10_TEMP8;
public T55( final  int a_RX10_TEMP14,  final  place a_RX10_TEMP10,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  doubleStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T56 {

 public final  int RX10_TEMP35;

 public final  place RX10_TEMP31;

 public final  point ( : rank==1 ) RX10_TEMP30;

 public final  doubleStub [ : rank==1 ] RX10_TEMP29;
public T56( final  int a_RX10_TEMP35,  final  place a_RX10_TEMP31,  final  point ( : rank==1 ) a_RX10_TEMP30,  final  doubleStub [ : rank==1 ] a_RX10_TEMP29) { 
 this.RX10_TEMP35 = (a_RX10_TEMP35);
 this.RX10_TEMP31 = (a_RX10_TEMP31);
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
}
}
 
 value T57 {

 public final  int RX10_TEMP56;

 public final  place RX10_TEMP52;

 public final  point ( : rank==1 ) RX10_TEMP51;

 public final  intStub [ : rank==1 ] RX10_TEMP50;
public T57( final  int a_RX10_TEMP56,  final  place a_RX10_TEMP52,  final  point ( : rank==1 ) a_RX10_TEMP51,  final  intStub [ : rank==1 ] a_RX10_TEMP50) { 
 this.RX10_TEMP56 = (a_RX10_TEMP56);
 this.RX10_TEMP52 = (a_RX10_TEMP52);
 this.RX10_TEMP51 = (a_RX10_TEMP51);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
}
}
 
 value T58 {

 public final  int RX10_TEMP77;

 public final  place RX10_TEMP73;

 public final  point ( : rank==1 ) RX10_TEMP72;

 public final  intStub [ : rank==1 ] RX10_TEMP71;
public T58( final  int a_RX10_TEMP77,  final  place a_RX10_TEMP73,  final  point ( : rank==1 ) a_RX10_TEMP72,  final  intStub [ : rank==1 ] a_RX10_TEMP71) { 
 this.RX10_TEMP77 = (a_RX10_TEMP77);
 this.RX10_TEMP73 = (a_RX10_TEMP73);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
}
}
 
 value T59 {

 public final  int RX10_TEMP98;

 public final  place RX10_TEMP94;

 public final  point ( : rank==1 ) RX10_TEMP93;

 public final  intStub [ : rank==1 ] RX10_TEMP92;
public T59( final  int a_RX10_TEMP98,  final  place a_RX10_TEMP94,  final  point ( : rank==1 ) a_RX10_TEMP93,  final  intStub [ : rank==1 ] a_RX10_TEMP92) { 
 this.RX10_TEMP98 = (a_RX10_TEMP98);
 this.RX10_TEMP94 = (a_RX10_TEMP94);
 this.RX10_TEMP93 = (a_RX10_TEMP93);
 this.RX10_TEMP92 = (a_RX10_TEMP92);
}
}
 
 value T60 {

 public final  int RX10_TEMP119;

 public final  place RX10_TEMP115;

 public final  point ( : rank==1 ) RX10_TEMP114;

 public final  intStub [ : rank==1 ] RX10_TEMP113;
public T60( final  int a_RX10_TEMP119,  final  place a_RX10_TEMP115,  final  point ( : rank==1 ) a_RX10_TEMP114,  final  intStub [ : rank==1 ] a_RX10_TEMP113) { 
 this.RX10_TEMP119 = (a_RX10_TEMP119);
 this.RX10_TEMP115 = (a_RX10_TEMP115);
 this.RX10_TEMP114 = (a_RX10_TEMP114);
 this.RX10_TEMP113 = (a_RX10_TEMP113);
}
}
 
 value T61 {

 public final  int RX10_TEMP140;

 public final  place RX10_TEMP136;

 public final  point ( : rank==1 ) RX10_TEMP135;

 public final  intStub [ : rank==1 ] RX10_TEMP134;
public T61( final  int a_RX10_TEMP140,  final  place a_RX10_TEMP136,  final  point ( : rank==1 ) a_RX10_TEMP135,  final  intStub [ : rank==1 ] a_RX10_TEMP134) { 
 this.RX10_TEMP140 = (a_RX10_TEMP140);
 this.RX10_TEMP136 = (a_RX10_TEMP136);
 this.RX10_TEMP135 = (a_RX10_TEMP135);
 this.RX10_TEMP134 = (a_RX10_TEMP134);
}
}
 
 value T62 {

 public final  int RX10_TEMP161;

 public final  place RX10_TEMP157;

 public final  point ( : rank==1 ) RX10_TEMP156;

 public final  intStub [ : rank==1 ] RX10_TEMP155;
public T62( final  int a_RX10_TEMP161,  final  place a_RX10_TEMP157,  final  point ( : rank==1 ) a_RX10_TEMP156,  final  intStub [ : rank==1 ] a_RX10_TEMP155) { 
 this.RX10_TEMP161 = (a_RX10_TEMP161);
 this.RX10_TEMP157 = (a_RX10_TEMP157);
 this.RX10_TEMP156 = (a_RX10_TEMP156);
 this.RX10_TEMP155 = (a_RX10_TEMP155);
}
}
 
 value T63 {

 public final  int pl;

 public final  intRefArray1 sizes;

 public final  intRefArray1 offsets;

 public final  doubleRefArray3 srcBuffer;

 public final  doubleRefArray2 data;
public T63( final  int a_pl,  final  intRefArray1 a_sizes,  final  intRefArray1 a_offsets,  final  doubleRefArray3 a_srcBuffer,  final  doubleRefArray2 a_data) { 
 this.pl = (a_pl);
 this.sizes = (a_sizes);
 this.offsets = (a_offsets);
 this.srcBuffer = (a_srcBuffer);
 this.data = (a_data);
}
}
 
 value T64 {

 public final  Point1 pl;

 public final  intRefArray1 outRt;

 public final  intRefArray1 outLt;

 public final  intRefArray1 sizes;

 public final  intRefArray1 offsets;

 public final  Dist2 dDst;
public T64( final  Point1 a_pl,  final  intRefArray1 a_outRt,  final  intRefArray1 a_outLt,  final  intRefArray1 a_sizes,  final  intRefArray1 a_offsets,  final  Dist2 a_dDst) { 
 this.pl = (a_pl);
 this.outRt = (a_outRt);
 this.outLt = (a_outLt);
 this.sizes = (a_sizes);
 this.offsets = (a_offsets);
 this.dDst = (a_dDst);
}
}
 
 value T65 {

 public final  int RX10_TEMP360;

 public final  place RX10_TEMP356;

 public final  point ( : rank==1 ) RX10_TEMP355;

 public final  intStub [ : rank==1 ] RX10_TEMP354;
public T65( final  int a_RX10_TEMP360,  final  place a_RX10_TEMP356,  final  point ( : rank==1 ) a_RX10_TEMP355,  final  intStub [ : rank==1 ] a_RX10_TEMP354) { 
 this.RX10_TEMP360 = (a_RX10_TEMP360);
 this.RX10_TEMP356 = (a_RX10_TEMP356);
 this.RX10_TEMP355 = (a_RX10_TEMP355);
 this.RX10_TEMP354 = (a_RX10_TEMP354);
}
}
 
 value T66 {

 public final  int RX10_TEMP381;

 public final  place RX10_TEMP377;

 public final  point ( : rank==1 ) RX10_TEMP376;

 public final  intStub [ : rank==1 ] RX10_TEMP375;
public T66( final  int a_RX10_TEMP381,  final  place a_RX10_TEMP377,  final  point ( : rank==1 ) a_RX10_TEMP376,  final  intStub [ : rank==1 ] a_RX10_TEMP375) { 
 this.RX10_TEMP381 = (a_RX10_TEMP381);
 this.RX10_TEMP377 = (a_RX10_TEMP377);
 this.RX10_TEMP376 = (a_RX10_TEMP376);
 this.RX10_TEMP375 = (a_RX10_TEMP375);
}
}
 
 value T67 {

 public final  Point1 pl;

 public final  intRefArray1 inRt;

 public final  intRefArray1 inLt;
public T67( final  Point1 a_pl,  final  intRefArray1 a_inRt,  final  intRefArray1 a_inLt) { 
 this.pl = (a_pl);
 this.inRt = (a_inRt);
 this.inLt = (a_inLt);
}
}
 
 value T68 {

 public final  int pl;

 public final  intRefArray1 outRt;

 public final  intRefArray1 inLt;

 public final  intRefArray1 sizes;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;

 public final  Region1 rRank2;
public T68( final  int a_pl,  final  intRefArray1 a_outRt,  final  intRefArray1 a_inLt,  final  intRefArray1 a_sizes,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer,  final  Region1 a_rRank2) { 
 this.pl = (a_pl);
 this.outRt = (a_outRt);
 this.inLt = (a_inLt);
 this.sizes = (a_sizes);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
 this.rRank2 = (a_rRank2);
}
}
 
 value T69 {

 public final  int pl;

 public final  intRefArray1 pr;

 public final  intRefArray1 outRt;

 public final  intRefArray1 inLt;

 public final  intRefArray1 sizes;

 public final  intRefArray1 offsets;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;

 public final  Region1 rRank2;

 public final  int MAX_ROWS;
public T69( final  int a_pl,  final  intRefArray1 a_pr,  final  intRefArray1 a_outRt,  final  intRefArray1 a_inLt,  final  intRefArray1 a_sizes,  final  intRefArray1 a_offsets,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer,  final  Region1 a_rRank2,  final  int a_MAX_ROWS) { 
 this.pl = (a_pl);
 this.pr = (a_pr);
 this.outRt = (a_outRt);
 this.inLt = (a_inLt);
 this.sizes = (a_sizes);
 this.offsets = (a_offsets);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
 this.rRank2 = (a_rRank2);
 this.MAX_ROWS = (a_MAX_ROWS);
}
}
 
 value T70 {

 public final  int pl;

 public final  intRefArray1 outLt;

 public final  intRefArray1 inRt;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;

 public final  Region1 rRank2;
public T70( final  int a_pl,  final  intRefArray1 a_outLt,  final  intRefArray1 a_inRt,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer,  final  Region1 a_rRank2) { 
 this.pl = (a_pl);
 this.outLt = (a_outLt);
 this.inRt = (a_inRt);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
 this.rRank2 = (a_rRank2);
}
}
 
 value T71 {

 public final  int pl;

 public final  intRefArray1 ter;

 public final  intRefArray1 pr;

 public final  intRefArray1 outRt;

 public final  intRefArray1 outLt;

 public final  intRefArray1 inRt;

 public final  intRefArray1 sizes;

 public final  intRefArray1 offsets;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;

 public final  Region1 rRank2;

 public final  int MAX_ROWS;

 public final  Dist2 dDst;
public T71( final  int a_pl,  final  intRefArray1 a_ter,  final  intRefArray1 a_pr,  final  intRefArray1 a_outRt,  final  intRefArray1 a_outLt,  final  intRefArray1 a_inRt,  final  intRefArray1 a_sizes,  final  intRefArray1 a_offsets,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer,  final  Region1 a_rRank2,  final  int a_MAX_ROWS,  final  Dist2 a_dDst) { 
 this.pl = (a_pl);
 this.ter = (a_ter);
 this.pr = (a_pr);
 this.outRt = (a_outRt);
 this.outLt = (a_outLt);
 this.inRt = (a_inRt);
 this.sizes = (a_sizes);
 this.offsets = (a_offsets);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
 this.rRank2 = (a_rRank2);
 this.MAX_ROWS = (a_MAX_ROWS);
 this.dDst = (a_dDst);
}
}
 
 value T72 {

 public final  int RX10_TEMP1497;

 public final  place RX10_TEMP1493;

 public final  point ( : rank==1 ) RX10_TEMP1492;

 public final  intStub [ : rank==1 ] RX10_TEMP1491;
public T72( final  int a_RX10_TEMP1497,  final  place a_RX10_TEMP1493,  final  point ( : rank==1 ) a_RX10_TEMP1492,  final  intStub [ : rank==1 ] a_RX10_TEMP1491) { 
 this.RX10_TEMP1497 = (a_RX10_TEMP1497);
 this.RX10_TEMP1493 = (a_RX10_TEMP1493);
 this.RX10_TEMP1492 = (a_RX10_TEMP1492);
 this.RX10_TEMP1491 = (a_RX10_TEMP1491);
}
}
 
 value T73 {

 public final  int RX10_TEMP1587;

 public final  place RX10_TEMP1583;

 public final  point ( : rank==1 ) RX10_TEMP1582;

 public final  doubleStub [ : rank==1 ] RX10_TEMP1581;
public T73( final  int a_RX10_TEMP1587,  final  place a_RX10_TEMP1583,  final  point ( : rank==1 ) a_RX10_TEMP1582,  final  doubleStub [ : rank==1 ] a_RX10_TEMP1581) { 
 this.RX10_TEMP1587 = (a_RX10_TEMP1587);
 this.RX10_TEMP1583 = (a_RX10_TEMP1583);
 this.RX10_TEMP1582 = (a_RX10_TEMP1582);
 this.RX10_TEMP1581 = (a_RX10_TEMP1581);
}
}
 
 value T74 {

 public final  int pl;

 public final  doubleRefArray2 result;

 public final  intRefArray1 sizes;

 public final  intRefArray1 offsets;

 public final  doubleRefArray3 srcBuffer;

 public final  Region1 rRank2;

 public final  Dist2 dDst;
public T74( final  int a_pl,  final  doubleRefArray2 a_result,  final  intRefArray1 a_sizes,  final  intRefArray1 a_offsets,  final  doubleRefArray3 a_srcBuffer,  final  Region1 a_rRank2,  final  Dist2 a_dDst) { 
 this.pl = (a_pl);
 this.result = (a_result);
 this.sizes = (a_sizes);
 this.offsets = (a_offsets);
 this.srcBuffer = (a_srcBuffer);
 this.rRank2 = (a_rRank2);
 this.dDst = (a_dDst);
}
}
 
 value T75 {

 public final  int RX10_TEMP13;

 public final  place RX10_TEMP9;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T75( final  int a_RX10_TEMP13,  final  place a_RX10_TEMP9,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T76 {

 public final  Point1 pl;

 public final  doubleRefArray2 result;

 public final  Dist2 dResult;

 public final  Region2 rGuard;

 public final  doubleRefArray2 guards;

 public final  doubleRefArray2 data;
public T76( final  Point1 a_pl,  final  doubleRefArray2 a_result,  final  Dist2 a_dResult,  final  Region2 a_rGuard,  final  doubleRefArray2 a_guards,  final  doubleRefArray2 a_data) { 
 this.pl = (a_pl);
 this.result = (a_result);
 this.dResult = (a_dResult);
 this.rGuard = (a_rGuard);
 this.guards = (a_guards);
 this.data = (a_data);
}
}
 
 value T77 {

 public final  doubleRefArray2 guards;

 public final  doubleRefArray2 data;
public T77( final  doubleRefArray2 a_guards,  final  doubleRefArray2 a_data) { 
 this.guards = (a_guards);
 this.data = (a_data);
}
}
 
 value T78 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;
public T78( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T79 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP6;
public T79( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T80 {

 public final  int RX10_TEMP32;

 public final  place RX10_TEMP28;

 public final  point ( : rank==1 ) RX10_TEMP27;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP26;
public T80( final  int a_RX10_TEMP32,  final  place a_RX10_TEMP28,  final  point ( : rank==1 ) a_RX10_TEMP27,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP26) { 
 this.RX10_TEMP32 = (a_RX10_TEMP32);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
 this.RX10_TEMP26 = (a_RX10_TEMP26);
}
}
 
 value T81 {

 public final  int RX10_TEMP52;

 public final  place RX10_TEMP48;

 public final  point ( : rank==1 ) RX10_TEMP47;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP46;
public T81( final  int a_RX10_TEMP52,  final  place a_RX10_TEMP48,  final  point ( : rank==1 ) a_RX10_TEMP47,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP46) { 
 this.RX10_TEMP52 = (a_RX10_TEMP52);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
 this.RX10_TEMP47 = (a_RX10_TEMP47);
 this.RX10_TEMP46 = (a_RX10_TEMP46);
}
}
 
 value T82 {

 public final  int RX10_TEMP72;

 public final  place RX10_TEMP68;

 public final  point ( : rank==1 ) RX10_TEMP67;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP66;
public T82( final  int a_RX10_TEMP72,  final  place a_RX10_TEMP68,  final  point ( : rank==1 ) a_RX10_TEMP67,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP66) { 
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP68 = (a_RX10_TEMP68);
 this.RX10_TEMP67 = (a_RX10_TEMP67);
 this.RX10_TEMP66 = (a_RX10_TEMP66);
}
}
 
 value T83 {

 public final  int RX10_TEMP92;

 public final  place RX10_TEMP88;

 public final  point ( : rank==1 ) RX10_TEMP87;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP86;
public T83( final  int a_RX10_TEMP92,  final  place a_RX10_TEMP88,  final  point ( : rank==1 ) a_RX10_TEMP87,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP86) { 
 this.RX10_TEMP92 = (a_RX10_TEMP92);
 this.RX10_TEMP88 = (a_RX10_TEMP88);
 this.RX10_TEMP87 = (a_RX10_TEMP87);
 this.RX10_TEMP86 = (a_RX10_TEMP86);
}
}
 
 value T84 {

 public final  int RX10_TEMP112;

 public final  place RX10_TEMP108;

 public final  point ( : rank==1 ) RX10_TEMP107;

 public final  intStub [ : rank==1 ] RX10_TEMP106;
public T84( final  int a_RX10_TEMP112,  final  place a_RX10_TEMP108,  final  point ( : rank==1 ) a_RX10_TEMP107,  final  intStub [ : rank==1 ] a_RX10_TEMP106) { 
 this.RX10_TEMP112 = (a_RX10_TEMP112);
 this.RX10_TEMP108 = (a_RX10_TEMP108);
 this.RX10_TEMP107 = (a_RX10_TEMP107);
 this.RX10_TEMP106 = (a_RX10_TEMP106);
}
}
 
 value T85 {

 public final  int RX10_TEMP133;

 public final  place RX10_TEMP129;

 public final  point ( : rank==1 ) RX10_TEMP128;

 public final  intStub [ : rank==1 ] RX10_TEMP127;
public T85( final  int a_RX10_TEMP133,  final  place a_RX10_TEMP129,  final  point ( : rank==1 ) a_RX10_TEMP128,  final  intStub [ : rank==1 ] a_RX10_TEMP127) { 
 this.RX10_TEMP133 = (a_RX10_TEMP133);
 this.RX10_TEMP129 = (a_RX10_TEMP129);
 this.RX10_TEMP128 = (a_RX10_TEMP128);
 this.RX10_TEMP127 = (a_RX10_TEMP127);
}
}
 
 value T86 {

 public final  int RX10_TEMP154;

 public final  place RX10_TEMP150;

 public final  point ( : rank==1 ) RX10_TEMP149;

 public final  intStub [ : rank==1 ] RX10_TEMP148;
public T86( final  int a_RX10_TEMP154,  final  place a_RX10_TEMP150,  final  point ( : rank==1 ) a_RX10_TEMP149,  final  intStub [ : rank==1 ] a_RX10_TEMP148) { 
 this.RX10_TEMP154 = (a_RX10_TEMP154);
 this.RX10_TEMP150 = (a_RX10_TEMP150);
 this.RX10_TEMP149 = (a_RX10_TEMP149);
 this.RX10_TEMP148 = (a_RX10_TEMP148);
}
}
 
 value T87 {

 public final  int RX10_TEMP175;

 public final  place RX10_TEMP171;

 public final  point ( : rank==1 ) RX10_TEMP170;

 public final  intStub [ : rank==1 ] RX10_TEMP169;
public T87( final  int a_RX10_TEMP175,  final  place a_RX10_TEMP171,  final  point ( : rank==1 ) a_RX10_TEMP170,  final  intStub [ : rank==1 ] a_RX10_TEMP169) { 
 this.RX10_TEMP175 = (a_RX10_TEMP175);
 this.RX10_TEMP171 = (a_RX10_TEMP171);
 this.RX10_TEMP170 = (a_RX10_TEMP170);
 this.RX10_TEMP169 = (a_RX10_TEMP169);
}
}
 
 value T88 {

 public final  int RX10_TEMP196;

 public final  place RX10_TEMP192;

 public final  point ( : rank==1 ) RX10_TEMP191;

 public final  intStub [ : rank==1 ] RX10_TEMP190;
public T88( final  int a_RX10_TEMP196,  final  place a_RX10_TEMP192,  final  point ( : rank==1 ) a_RX10_TEMP191,  final  intStub [ : rank==1 ] a_RX10_TEMP190) { 
 this.RX10_TEMP196 = (a_RX10_TEMP196);
 this.RX10_TEMP192 = (a_RX10_TEMP192);
 this.RX10_TEMP191 = (a_RX10_TEMP191);
 this.RX10_TEMP190 = (a_RX10_TEMP190);
}
}
 
 value T89 {

 public final  int RX10_TEMP217;

 public final  place RX10_TEMP213;

 public final  point ( : rank==1 ) RX10_TEMP212;

 public final  intStub [ : rank==1 ] RX10_TEMP211;
public T89( final  int a_RX10_TEMP217,  final  place a_RX10_TEMP213,  final  point ( : rank==1 ) a_RX10_TEMP212,  final  intStub [ : rank==1 ] a_RX10_TEMP211) { 
 this.RX10_TEMP217 = (a_RX10_TEMP217);
 this.RX10_TEMP213 = (a_RX10_TEMP213);
 this.RX10_TEMP212 = (a_RX10_TEMP212);
 this.RX10_TEMP211 = (a_RX10_TEMP211);
}
}
 
 value T90 {

 public final  int RX10_TEMP238;

 public final  place RX10_TEMP234;

 public final  point ( : rank==1 ) RX10_TEMP233;

 public final  intStub [ : rank==1 ] RX10_TEMP232;
public T90( final  int a_RX10_TEMP238,  final  place a_RX10_TEMP234,  final  point ( : rank==1 ) a_RX10_TEMP233,  final  intStub [ : rank==1 ] a_RX10_TEMP232) { 
 this.RX10_TEMP238 = (a_RX10_TEMP238);
 this.RX10_TEMP234 = (a_RX10_TEMP234);
 this.RX10_TEMP233 = (a_RX10_TEMP233);
 this.RX10_TEMP232 = (a_RX10_TEMP232);
}
}
 
 value T91 {

 public final  int RX10_TEMP259;

 public final  place RX10_TEMP255;

 public final  point ( : rank==1 ) RX10_TEMP254;

 public final  intStub [ : rank==1 ] RX10_TEMP253;
public T91( final  int a_RX10_TEMP259,  final  place a_RX10_TEMP255,  final  point ( : rank==1 ) a_RX10_TEMP254,  final  intStub [ : rank==1 ] a_RX10_TEMP253) { 
 this.RX10_TEMP259 = (a_RX10_TEMP259);
 this.RX10_TEMP255 = (a_RX10_TEMP255);
 this.RX10_TEMP254 = (a_RX10_TEMP254);
 this.RX10_TEMP253 = (a_RX10_TEMP253);
}
}
 
 value T92 {

 public final  int RX10_TEMP280;

 public final  place RX10_TEMP276;

 public final  point ( : rank==1 ) RX10_TEMP275;

 public final  intStub [ : rank==1 ] RX10_TEMP274;
public T92( final  int a_RX10_TEMP280,  final  place a_RX10_TEMP276,  final  point ( : rank==1 ) a_RX10_TEMP275,  final  intStub [ : rank==1 ] a_RX10_TEMP274) { 
 this.RX10_TEMP280 = (a_RX10_TEMP280);
 this.RX10_TEMP276 = (a_RX10_TEMP276);
 this.RX10_TEMP275 = (a_RX10_TEMP275);
 this.RX10_TEMP274 = (a_RX10_TEMP274);
}
}
 
 value T93 {

 public final  int pl;

 public final  intRefArray1 nPart;

 public final  ParticleRefArray2 part;

 public final  ParticleRefArray1 particles;
public T93( final  int a_pl,  final  intRefArray1 a_nPart,  final  ParticleRefArray2 a_part,  final  ParticleRefArray1 a_particles) { 
 this.pl = (a_pl);
 this.nPart = (a_nPart);
 this.part = (a_part);
 this.particles = (a_particles);
}
}
 
 value T94 {

 public final  Point1 pt;

 public final  intRefArray1 info;
public T94( final  Point1 a_pt,  final  intRefArray1 a_info) { 
 this.pt = (a_pt);
 this.info = (a_info);
}
}
 
 value T95 {

 public final  Region1 RX10_TEMP377;

 public final  int RX10_TEMP375;

 public final  place RX10_TEMP371;

 public final  point ( : rank==1 ) RX10_TEMP370;

 public final  intStub [ : rank==1 ] RX10_TEMP369;

 public final  intRefArray1 X10_TEMP113;

 public final  intRefArray1 X10_TEMP112;
public T95( final  Region1 a_RX10_TEMP377,  final  int a_RX10_TEMP375,  final  place a_RX10_TEMP371,  final  point ( : rank==1 ) a_RX10_TEMP370,  final  intStub [ : rank==1 ] a_RX10_TEMP369,  final  intRefArray1 a_X10_TEMP113,  final  intRefArray1 a_X10_TEMP112) { 
 this.RX10_TEMP377 = (a_RX10_TEMP377);
 this.RX10_TEMP375 = (a_RX10_TEMP375);
 this.RX10_TEMP371 = (a_RX10_TEMP371);
 this.RX10_TEMP370 = (a_RX10_TEMP370);
 this.RX10_TEMP369 = (a_RX10_TEMP369);
 this.X10_TEMP113 = (a_X10_TEMP113);
 this.X10_TEMP112 = (a_X10_TEMP112);
}
}
 
 value T96 {

 public final  int RX10_TEMP421;

 public final  place RX10_TEMP417;

 public final  point ( : rank==1 ) RX10_TEMP416;

 public final  intStub [ : rank==1 ] RX10_TEMP415;
public T96( final  int a_RX10_TEMP421,  final  place a_RX10_TEMP417,  final  point ( : rank==1 ) a_RX10_TEMP416,  final  intStub [ : rank==1 ] a_RX10_TEMP415) { 
 this.RX10_TEMP421 = (a_RX10_TEMP421);
 this.RX10_TEMP417 = (a_RX10_TEMP417);
 this.RX10_TEMP416 = (a_RX10_TEMP416);
 this.RX10_TEMP415 = (a_RX10_TEMP415);
}
}
 
 value T97 {

 public final  int pl;

 public final  intRefArray1 overflow;

 public final  double rsize;

 public final  intRefArray1 nSent;

 public final  intRefArray2 holes;

 public final  intRefArray1 nPart;

 public final  intRefArray1 outRt;

 public final  intRefArray1 outLt;

 public final  ParticleRefArray2 sBufferR;

 public final  ParticleRefArray2 sBufferL;

 public final  ParticleRefArray2 part;

 public final  Region1 rBuffer;

 public final  Dist2 dFieldSpace;
public T97( final  int a_pl,  final  intRefArray1 a_overflow,  final  double a_rsize,  final  intRefArray1 a_nSent,  final  intRefArray2 a_holes,  final  intRefArray1 a_nPart,  final  intRefArray1 a_outRt,  final  intRefArray1 a_outLt,  final  ParticleRefArray2 a_sBufferR,  final  ParticleRefArray2 a_sBufferL,  final  ParticleRefArray2 a_part,  final  Region1 a_rBuffer,  final  Dist2 a_dFieldSpace) { 
 this.pl = (a_pl);
 this.overflow = (a_overflow);
 this.rsize = (a_rsize);
 this.nSent = (a_nSent);
 this.holes = (a_holes);
 this.nPart = (a_nPart);
 this.outRt = (a_outRt);
 this.outLt = (a_outLt);
 this.sBufferR = (a_sBufferR);
 this.sBufferL = (a_sBufferL);
 this.part = (a_part);
 this.rBuffer = (a_rBuffer);
 this.dFieldSpace = (a_dFieldSpace);
}
}
 
 value T98 {

 public final  int RX10_TEMP793;

 public final  place RX10_TEMP789;

 public final  point ( : rank==1 ) RX10_TEMP788;

 public final  intStub [ : rank==1 ] RX10_TEMP787;
public T98( final  int a_RX10_TEMP793,  final  place a_RX10_TEMP789,  final  point ( : rank==1 ) a_RX10_TEMP788,  final  intStub [ : rank==1 ] a_RX10_TEMP787) { 
 this.RX10_TEMP793 = (a_RX10_TEMP793);
 this.RX10_TEMP789 = (a_RX10_TEMP789);
 this.RX10_TEMP788 = (a_RX10_TEMP788);
 this.RX10_TEMP787 = (a_RX10_TEMP787);
}
}
 
 value T99 {

 public final  int pl;

 public final  intRefArray1 outgoing;

 public final  intRefArray1 outRt;

 public final  intRefArray1 outLt;

 public final  intRefArray1 inRt;

 public final  intRefArray1 inLt;

 public final  ParticleRefArray2 rBufferR;

 public final  ParticleRefArray2 rBufferL;

 public final  Dist2 dFieldSpace;
public T99( final  int a_pl,  final  intRefArray1 a_outgoing,  final  intRefArray1 a_outRt,  final  intRefArray1 a_outLt,  final  intRefArray1 a_inRt,  final  intRefArray1 a_inLt,  final  ParticleRefArray2 a_rBufferR,  final  ParticleRefArray2 a_rBufferL,  final  Dist2 a_dFieldSpace) { 
 this.pl = (a_pl);
 this.outgoing = (a_outgoing);
 this.outRt = (a_outRt);
 this.outLt = (a_outLt);
 this.inRt = (a_inRt);
 this.inLt = (a_inLt);
 this.rBufferR = (a_rBufferR);
 this.rBufferL = (a_rBufferL);
 this.dFieldSpace = (a_dFieldSpace);
}
}
 
 value T100 {

 public final  int pl;

 public final  intRefArray1 overflow;

 public final  double rsize;

 public final  intRefArray1 outRt;

 public final  intRefArray1 outLt;

 public final  intRefArray1 inRt;

 public final  intRefArray1 inLt;

 public final  ParticleRefArray2 rBufferR;

 public final  ParticleRefArray2 rBufferL;

 public final  ParticleRefArray2 sBufferR;

 public final  ParticleRefArray2 sBufferL;

 public final  Region1 rBuffer;

 public final  Dist2 dFieldSpace;
public T100( final  int a_pl,  final  intRefArray1 a_overflow,  final  double a_rsize,  final  intRefArray1 a_outRt,  final  intRefArray1 a_outLt,  final  intRefArray1 a_inRt,  final  intRefArray1 a_inLt,  final  ParticleRefArray2 a_rBufferR,  final  ParticleRefArray2 a_rBufferL,  final  ParticleRefArray2 a_sBufferR,  final  ParticleRefArray2 a_sBufferL,  final  Region1 a_rBuffer,  final  Dist2 a_dFieldSpace) { 
 this.pl = (a_pl);
 this.overflow = (a_overflow);
 this.rsize = (a_rsize);
 this.outRt = (a_outRt);
 this.outLt = (a_outLt);
 this.inRt = (a_inRt);
 this.inLt = (a_inLt);
 this.rBufferR = (a_rBufferR);
 this.rBufferL = (a_rBufferL);
 this.sBufferR = (a_sBufferR);
 this.sBufferL = (a_sBufferL);
 this.rBuffer = (a_rBuffer);
 this.dFieldSpace = (a_dFieldSpace);
}
}
 
 value T101 {

 public final  Region1 RX10_TEMP1552;

 public final  int RX10_TEMP1550;

 public final  place RX10_TEMP1546;

 public final  point ( : rank==1 ) RX10_TEMP1545;

 public final  intStub [ : rank==1 ] RX10_TEMP1544;

 public final  intRefArray1 X10_TEMP569;

 public final  intRefArray1 X10_TEMP568;
public T101( final  Region1 a_RX10_TEMP1552,  final  int a_RX10_TEMP1550,  final  place a_RX10_TEMP1546,  final  point ( : rank==1 ) a_RX10_TEMP1545,  final  intStub [ : rank==1 ] a_RX10_TEMP1544,  final  intRefArray1 a_X10_TEMP569,  final  intRefArray1 a_X10_TEMP568) { 
 this.RX10_TEMP1552 = (a_RX10_TEMP1552);
 this.RX10_TEMP1550 = (a_RX10_TEMP1550);
 this.RX10_TEMP1546 = (a_RX10_TEMP1546);
 this.RX10_TEMP1545 = (a_RX10_TEMP1545);
 this.RX10_TEMP1544 = (a_RX10_TEMP1544);
 this.X10_TEMP569 = (a_X10_TEMP569);
 this.X10_TEMP568 = (a_X10_TEMP568);
}
}
 
 value T102 {

 public final  Region1 RX10_TEMP1598;

 public final  int RX10_TEMP1596;

 public final  place RX10_TEMP1592;

 public final  point ( : rank==1 ) RX10_TEMP1591;

 public final  intStub [ : rank==1 ] RX10_TEMP1590;

 public final  intRefArray1 X10_TEMP576;

 public final  intRefArray1 X10_TEMP575;
public T102( final  Region1 a_RX10_TEMP1598,  final  int a_RX10_TEMP1596,  final  place a_RX10_TEMP1592,  final  point ( : rank==1 ) a_RX10_TEMP1591,  final  intStub [ : rank==1 ] a_RX10_TEMP1590,  final  intRefArray1 a_X10_TEMP576,  final  intRefArray1 a_X10_TEMP575) { 
 this.RX10_TEMP1598 = (a_RX10_TEMP1598);
 this.RX10_TEMP1596 = (a_RX10_TEMP1596);
 this.RX10_TEMP1592 = (a_RX10_TEMP1592);
 this.RX10_TEMP1591 = (a_RX10_TEMP1591);
 this.RX10_TEMP1590 = (a_RX10_TEMP1590);
 this.X10_TEMP576 = (a_X10_TEMP576);
 this.X10_TEMP575 = (a_X10_TEMP575);
}
}
 
 value T103 {

 public final  Region1 RX10_TEMP1644;

 public final  int RX10_TEMP1642;

 public final  place RX10_TEMP1638;

 public final  point ( : rank==1 ) RX10_TEMP1637;

 public final  intStub [ : rank==1 ] RX10_TEMP1636;

 public final  intRefArray1 X10_TEMP583;

 public final  intRefArray1 X10_TEMP582;
public T103( final  Region1 a_RX10_TEMP1644,  final  int a_RX10_TEMP1642,  final  place a_RX10_TEMP1638,  final  point ( : rank==1 ) a_RX10_TEMP1637,  final  intStub [ : rank==1 ] a_RX10_TEMP1636,  final  intRefArray1 a_X10_TEMP583,  final  intRefArray1 a_X10_TEMP582) { 
 this.RX10_TEMP1644 = (a_RX10_TEMP1644);
 this.RX10_TEMP1642 = (a_RX10_TEMP1642);
 this.RX10_TEMP1638 = (a_RX10_TEMP1638);
 this.RX10_TEMP1637 = (a_RX10_TEMP1637);
 this.RX10_TEMP1636 = (a_RX10_TEMP1636);
 this.X10_TEMP583 = (a_X10_TEMP583);
 this.X10_TEMP582 = (a_X10_TEMP582);
}
}
 
 value T104 {

 public final  int RX10_TEMP1688;

 public final  place RX10_TEMP1684;

 public final  point ( : rank==1 ) RX10_TEMP1683;

 public final  intStub [ : rank==1 ] RX10_TEMP1682;

 public final  int rSize;
public T104( final  int a_RX10_TEMP1688,  final  place a_RX10_TEMP1684,  final  point ( : rank==1 ) a_RX10_TEMP1683,  final  intStub [ : rank==1 ] a_RX10_TEMP1682,  final  int a_rSize) { 
 this.RX10_TEMP1688 = (a_RX10_TEMP1688);
 this.RX10_TEMP1684 = (a_RX10_TEMP1684);
 this.RX10_TEMP1683 = (a_RX10_TEMP1683);
 this.RX10_TEMP1682 = (a_RX10_TEMP1682);
 this.rSize = (a_rSize);
}
}
 
 value T105 {

 public final  Region1 RX10_TEMP1711;

 public final  int RX10_TEMP1709;

 public final  place RX10_TEMP1705;

 public final  point ( : rank==1 ) RX10_TEMP1704;

 public final  intStub [ : rank==1 ] RX10_TEMP1703;

 public final  intRefArray1 X10_TEMP596;

 public final  intRefArray1 X10_TEMP595;
public T105( final  Region1 a_RX10_TEMP1711,  final  int a_RX10_TEMP1709,  final  place a_RX10_TEMP1705,  final  point ( : rank==1 ) a_RX10_TEMP1704,  final  intStub [ : rank==1 ] a_RX10_TEMP1703,  final  intRefArray1 a_X10_TEMP596,  final  intRefArray1 a_X10_TEMP595) { 
 this.RX10_TEMP1711 = (a_RX10_TEMP1711);
 this.RX10_TEMP1709 = (a_RX10_TEMP1709);
 this.RX10_TEMP1705 = (a_RX10_TEMP1705);
 this.RX10_TEMP1704 = (a_RX10_TEMP1704);
 this.RX10_TEMP1703 = (a_RX10_TEMP1703);
 this.X10_TEMP596 = (a_X10_TEMP596);
 this.X10_TEMP595 = (a_X10_TEMP595);
}
}
 
 value T106 {

 public final  int pl;

 public final  intRefArray1 nSent;

 public final  intRefArray2 holes;

 public final  intRefArray1 nPart;

 public final  intRefArray1 inRt;

 public final  intRefArray1 inLt;

 public final  ParticleRefArray2 rBufferR;

 public final  ParticleRefArray2 rBufferL;

 public final  ParticleRefArray2 part;
public T106( final  int a_pl,  final  intRefArray1 a_nSent,  final  intRefArray2 a_holes,  final  intRefArray1 a_nPart,  final  intRefArray1 a_inRt,  final  intRefArray1 a_inLt,  final  ParticleRefArray2 a_rBufferR,  final  ParticleRefArray2 a_rBufferL,  final  ParticleRefArray2 a_part) { 
 this.pl = (a_pl);
 this.nSent = (a_nSent);
 this.holes = (a_holes);
 this.nPart = (a_nPart);
 this.inRt = (a_inRt);
 this.inLt = (a_inLt);
 this.rBufferR = (a_rBufferR);
 this.rBufferL = (a_rBufferL);
 this.part = (a_part);
}
}
 
 value T107 {

 public final  int pl;

 public final  intRefArray1 inRight;

 public final  intRefArray1 inLeft;

 public final  ParticleRefArray2 rightInBuffer;

 public final  ParticleRefArray2 leftInBuffer;

 public final  intRefArray1 outRight;

 public final  intRefArray1 outLeft;

 public final  ParticleRefArray2 rightOutBuffer;

 public final  ParticleRefArray2 leftOutBuffer;
public T107( final  int a_pl,  final  intRefArray1 a_inRight,  final  intRefArray1 a_inLeft,  final  ParticleRefArray2 a_rightInBuffer,  final  ParticleRefArray2 a_leftInBuffer,  final  intRefArray1 a_outRight,  final  intRefArray1 a_outLeft,  final  ParticleRefArray2 a_rightOutBuffer,  final  ParticleRefArray2 a_leftOutBuffer) { 
 this.pl = (a_pl);
 this.inRight = (a_inRight);
 this.inLeft = (a_inLeft);
 this.rightInBuffer = (a_rightInBuffer);
 this.leftInBuffer = (a_leftInBuffer);
 this.outRight = (a_outRight);
 this.outLeft = (a_outLeft);
 this.rightOutBuffer = (a_rightOutBuffer);
 this.leftOutBuffer = (a_leftOutBuffer);
}
}
 
 value T108 {

 public final  int RX10_TEMP18;

 public final  place RX10_TEMP14;

 public final  point ( : rank==1 ) RX10_TEMP13;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP12;
public T108( final  int a_RX10_TEMP18,  final  place a_RX10_TEMP14,  final  point ( : rank==1 ) a_RX10_TEMP13,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP12) { 
 this.RX10_TEMP18 = (a_RX10_TEMP18);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP12 = (a_RX10_TEMP12);
}
}
 
 value T109 {

 public final  int pl;

 public final  ParticleRefArray1 result;

 public final  ParticleRefArray2 part;
public T109( final  int a_pl,  final  ParticleRefArray1 a_result,  final  ParticleRefArray2 a_part) { 
 this.pl = (a_pl);
 this.result = (a_result);
 this.part = (a_part);
}
}
 
 value T110 {

 public final  int RX10_TEMP13;

 public final  place RX10_TEMP9;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T110( final  int a_RX10_TEMP13,  final  place a_RX10_TEMP9,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T111 {

 public final  doubleRefArray1 energy;

 public final  double quantum;

 public final  double edgery;

 public final  double edgerx;

 public final  double edgely;

 public final  double edgelx;

 public final  doubleRefArray2 fcGuardY;

 public final  doubleRefArray2 forceChargeY;

 public final  doubleRefArray2 fcGuardX;

 public final  doubleRefArray2 forceChargeX;

 public final  ParticleRefArray1 particles;

 public final  LinearESOpenPIC2D X10_TEMP0;
public T111( final  doubleRefArray1 a_energy,  final  double a_quantum,  final  double a_edgery,  final  double a_edgerx,  final  double a_edgely,  final  double a_edgelx,  final  doubleRefArray2 a_fcGuardY,  final  doubleRefArray2 a_forceChargeY,  final  doubleRefArray2 a_fcGuardX,  final  doubleRefArray2 a_forceChargeX,  final  ParticleRefArray1 a_particles,  final  LinearESOpenPIC2D a_X10_TEMP0) { 
 this.energy = (a_energy);
 this.quantum = (a_quantum);
 this.edgery = (a_edgery);
 this.edgerx = (a_edgerx);
 this.edgely = (a_edgely);
 this.edgelx = (a_edgelx);
 this.fcGuardY = (a_fcGuardY);
 this.forceChargeY = (a_forceChargeY);
 this.fcGuardX = (a_fcGuardX);
 this.forceChargeX = (a_forceChargeX);
 this.particles = (a_particles);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T112 {

 public final  int RX10_TEMP14;

 public final  place RX10_TEMP10;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  doubleStub [ : rank==1 ] RX10_TEMP8;
public T112( final  int a_RX10_TEMP14,  final  place a_RX10_TEMP10,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  doubleStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T113 {

 public final  Point2 pt;

 public final  doubleRefArray2 result;

 public final  doubleRefArray2 data;
public T113( final  Point2 a_pt,  final  doubleRefArray2 a_result,  final  doubleRefArray2 a_data) { 
 this.pt = (a_pt);
 this.result = (a_result);
 this.data = (a_data);
}
}
 
 value T114 {

 public final  Point2 pt;

 public final  doubleRefArray2 result;

 public final  doubleRefArray2 guards;
public T114( final  Point2 a_pt,  final  doubleRefArray2 a_result,  final  doubleRefArray2 a_guards) { 
 this.pt = (a_pt);
 this.result = (a_result);
 this.guards = (a_guards);
}
}
 
 value T115 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;
public T115( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T116 {

 public final  intRefArray1 count;

 public final  ParticleRefArray1 particles;
public T116( final  intRefArray1 a_count,  final  ParticleRefArray1 a_particles) { 
 this.count = (a_count);
 this.particles = (a_particles);
}
}
 
 value T117 {

 public final  int RX10_TEMP13;

 public final  place RX10_TEMP9;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T117( final  int a_RX10_TEMP13,  final  place a_RX10_TEMP9,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T118 {

 public final  int RX10_TEMP34;

 public final  place RX10_TEMP30;

 public final  point ( : rank==1 ) RX10_TEMP29;

 public final  intStub [ : rank==1 ] RX10_TEMP28;
public T118( final  int a_RX10_TEMP34,  final  place a_RX10_TEMP30,  final  point ( : rank==1 ) a_RX10_TEMP29,  final  intStub [ : rank==1 ] a_RX10_TEMP28) { 
 this.RX10_TEMP34 = (a_RX10_TEMP34);
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
}
}
 
 value T119 {

 public final  int RX10_TEMP55;

 public final  place RX10_TEMP51;

 public final  point ( : rank==1 ) RX10_TEMP50;

 public final  intStub [ : rank==1 ] RX10_TEMP49;
public T119( final  int a_RX10_TEMP55,  final  place a_RX10_TEMP51,  final  point ( : rank==1 ) a_RX10_TEMP50,  final  intStub [ : rank==1 ] a_RX10_TEMP49) { 
 this.RX10_TEMP55 = (a_RX10_TEMP55);
 this.RX10_TEMP51 = (a_RX10_TEMP51);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
}
}
 
 value T120 {

 public final  int RX10_TEMP76;

 public final  place RX10_TEMP72;

 public final  point ( : rank==1 ) RX10_TEMP71;

 public final  intStub [ : rank==1 ] RX10_TEMP70;
public T120( final  int a_RX10_TEMP76,  final  place a_RX10_TEMP72,  final  point ( : rank==1 ) a_RX10_TEMP71,  final  intStub [ : rank==1 ] a_RX10_TEMP70) { 
 this.RX10_TEMP76 = (a_RX10_TEMP76);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
 this.RX10_TEMP70 = (a_RX10_TEMP70);
}
}
 
 value T121 {

 public final  int RX10_TEMP96;

 public final  place RX10_TEMP92;

 public final  point ( : rank==1 ) RX10_TEMP91;

 public final  intStub [ : rank==1 ] RX10_TEMP90;
public T121( final  int a_RX10_TEMP96,  final  place a_RX10_TEMP92,  final  point ( : rank==1 ) a_RX10_TEMP91,  final  intStub [ : rank==1 ] a_RX10_TEMP90) { 
 this.RX10_TEMP96 = (a_RX10_TEMP96);
 this.RX10_TEMP92 = (a_RX10_TEMP92);
 this.RX10_TEMP91 = (a_RX10_TEMP91);
 this.RX10_TEMP90 = (a_RX10_TEMP90);
}
}
 
 value T122 {

 public final  int RX10_TEMP116;

 public final  place RX10_TEMP112;

 public final  point ( : rank==1 ) RX10_TEMP111;

 public final  intStub [ : rank==1 ] RX10_TEMP110;
public T122( final  int a_RX10_TEMP116,  final  place a_RX10_TEMP112,  final  point ( : rank==1 ) a_RX10_TEMP111,  final  intStub [ : rank==1 ] a_RX10_TEMP110) { 
 this.RX10_TEMP116 = (a_RX10_TEMP116);
 this.RX10_TEMP112 = (a_RX10_TEMP112);
 this.RX10_TEMP111 = (a_RX10_TEMP111);
 this.RX10_TEMP110 = (a_RX10_TEMP110);
}
}
 
 value T123 {

 public final  int RX10_TEMP136;

 public final  place RX10_TEMP132;

 public final  point ( : rank==1 ) RX10_TEMP131;

 public final  intStub [ : rank==1 ] RX10_TEMP130;
public T123( final  int a_RX10_TEMP136,  final  place a_RX10_TEMP132,  final  point ( : rank==1 ) a_RX10_TEMP131,  final  intStub [ : rank==1 ] a_RX10_TEMP130) { 
 this.RX10_TEMP136 = (a_RX10_TEMP136);
 this.RX10_TEMP132 = (a_RX10_TEMP132);
 this.RX10_TEMP131 = (a_RX10_TEMP131);
 this.RX10_TEMP130 = (a_RX10_TEMP130);
}
}
 
 value T124 {

 public final  int RX10_TEMP156;

 public final  place RX10_TEMP152;

 public final  point ( : rank==1 ) RX10_TEMP151;

 public final  intStub [ : rank==1 ] RX10_TEMP150;
public T124( final  int a_RX10_TEMP156,  final  place a_RX10_TEMP152,  final  point ( : rank==1 ) a_RX10_TEMP151,  final  intStub [ : rank==1 ] a_RX10_TEMP150) { 
 this.RX10_TEMP156 = (a_RX10_TEMP156);
 this.RX10_TEMP152 = (a_RX10_TEMP152);
 this.RX10_TEMP151 = (a_RX10_TEMP151);
 this.RX10_TEMP150 = (a_RX10_TEMP150);
}
}
 
 value T125 {

 public final  int RX10_TEMP176;

 public final  place RX10_TEMP172;

 public final  point ( : rank==1 ) RX10_TEMP171;

 public final  intStub [ : rank==1 ] RX10_TEMP170;
public T125( final  int a_RX10_TEMP176,  final  place a_RX10_TEMP172,  final  point ( : rank==1 ) a_RX10_TEMP171,  final  intStub [ : rank==1 ] a_RX10_TEMP170) { 
 this.RX10_TEMP176 = (a_RX10_TEMP176);
 this.RX10_TEMP172 = (a_RX10_TEMP172);
 this.RX10_TEMP171 = (a_RX10_TEMP171);
 this.RX10_TEMP170 = (a_RX10_TEMP170);
}
}
 
 value T126 {

 public final  int RX10_TEMP196;

 public final  place RX10_TEMP192;

 public final  point ( : rank==1 ) RX10_TEMP191;

 public final  intStub [ : rank==1 ] RX10_TEMP190;
public T126( final  int a_RX10_TEMP196,  final  place a_RX10_TEMP192,  final  point ( : rank==1 ) a_RX10_TEMP191,  final  intStub [ : rank==1 ] a_RX10_TEMP190) { 
 this.RX10_TEMP196 = (a_RX10_TEMP196);
 this.RX10_TEMP192 = (a_RX10_TEMP192);
 this.RX10_TEMP191 = (a_RX10_TEMP191);
 this.RX10_TEMP190 = (a_RX10_TEMP190);
}
}
 
 value T127 {

 public final  int pl;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray1 sendGrids;

 public final  intRefArray1 sendCount;

 public final  intRefArray2 sCountBuffer;

 public final  intRefArray1 gridTotals;

 public final  intRefArray1 particleTotals;

 public final  intRefArray1 particleCount;
public T127( final  int a_pl,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray1 a_sendGrids,  final  intRefArray1 a_sendCount,  final  intRefArray2 a_sCountBuffer,  final  intRefArray1 a_gridTotals,  final  intRefArray1 a_particleTotals,  final  intRefArray1 a_particleCount) { 
 this.pl = (a_pl);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.sendGrids = (a_sendGrids);
 this.sendCount = (a_sendCount);
 this.sCountBuffer = (a_sCountBuffer);
 this.gridTotals = (a_gridTotals);
 this.particleTotals = (a_particleTotals);
 this.particleCount = (a_particleCount);
}
}
 
 value T128 {

 public final  Point1 pl;

 public final  intRefArray1 runningGTotals;

 public final  intRefArray1 runningPTotals;

 public final  intRefArray1 gridTotals;

 public final  intRefArray1 particleTotals;
public T128( final  Point1 a_pl,  final  intRefArray1 a_runningGTotals,  final  intRefArray1 a_runningPTotals,  final  intRefArray1 a_gridTotals,  final  intRefArray1 a_particleTotals) { 
 this.pl = (a_pl);
 this.runningGTotals = (a_runningGTotals);
 this.runningPTotals = (a_runningPTotals);
 this.gridTotals = (a_gridTotals);
 this.particleTotals = (a_particleTotals);
}
}
 
 value T129 {

 public final  int pl;

 public final  intRefArray1 runningPTotals;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray1 sendGrids;

 public final  intRefArray1 sendCount;

 public final  intRefArray2 rCountBuffer;

 public final  intRefArray2 sCountBuffer;

 public final  double countAve;
public T129( final  int a_pl,  final  intRefArray1 a_runningPTotals,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray1 a_sendGrids,  final  intRefArray1 a_sendCount,  final  intRefArray2 a_rCountBuffer,  final  intRefArray2 a_sCountBuffer,  final  double a_countAve) { 
 this.pl = (a_pl);
 this.runningPTotals = (a_runningPTotals);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.sendGrids = (a_sendGrids);
 this.sendCount = (a_sendCount);
 this.rCountBuffer = (a_rCountBuffer);
 this.sCountBuffer = (a_sCountBuffer);
 this.countAve = (a_countAve);
}
}
 
 value T130 {

 public final  int pl;

 public final  intRefArray1 runningGTotals;

 public final  intRefArray1 runningPTotals;

 public final  intRefArray1 finished;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray1 sendGrids;

 public final  intRefArray1 sendCount;

 public final  intRefArray2 rCountBuffer;

 public final  intRefArray2 sCountBuffer;

 public final  doubleRefArray1 border;

 public final  double countAve;
public T130( final  int a_pl,  final  intRefArray1 a_runningGTotals,  final  intRefArray1 a_runningPTotals,  final  intRefArray1 a_finished,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray1 a_sendGrids,  final  intRefArray1 a_sendCount,  final  intRefArray2 a_rCountBuffer,  final  intRefArray2 a_sCountBuffer,  final  doubleRefArray1 a_border,  final  double a_countAve) { 
 this.pl = (a_pl);
 this.runningGTotals = (a_runningGTotals);
 this.runningPTotals = (a_runningPTotals);
 this.finished = (a_finished);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.sendGrids = (a_sendGrids);
 this.sendCount = (a_sendCount);
 this.rCountBuffer = (a_rCountBuffer);
 this.sCountBuffer = (a_sCountBuffer);
 this.border = (a_border);
 this.countAve = (a_countAve);
}
}
 
 value T131 {

 public final  int pl;

 public final  intRefArray1 runningGTotals;

 public final  intRefArray1 runningPTotals;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray1 sendGrids;

 public final  intRefArray1 sendCount;

 public final  intRefArray2 sCountBuffer;

 public final  intRefArray1 gridTotals;

 public final  intRefArray1 particleTotals;

 public final  intRefArray1 particleCount;
public T131( final  int a_pl,  final  intRefArray1 a_runningGTotals,  final  intRefArray1 a_runningPTotals,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray1 a_sendGrids,  final  intRefArray1 a_sendCount,  final  intRefArray2 a_sCountBuffer,  final  intRefArray1 a_gridTotals,  final  intRefArray1 a_particleTotals,  final  intRefArray1 a_particleCount) { 
 this.pl = (a_pl);
 this.runningGTotals = (a_runningGTotals);
 this.runningPTotals = (a_runningPTotals);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.sendGrids = (a_sendGrids);
 this.sendCount = (a_sendCount);
 this.sCountBuffer = (a_sCountBuffer);
 this.gridTotals = (a_gridTotals);
 this.particleTotals = (a_particleTotals);
 this.particleCount = (a_particleCount);
}
}
 
 value T132 {

 public final  int pl;

 public final  intRefArray1 runningPTotals;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray1 sendGrids;

 public final  intRefArray1 sendCount;

 public final  intRefArray2 rCountBuffer;

 public final  intRefArray2 sCountBuffer;

 public final  double countAve;
public T132( final  int a_pl,  final  intRefArray1 a_runningPTotals,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray1 a_sendGrids,  final  intRefArray1 a_sendCount,  final  intRefArray2 a_rCountBuffer,  final  intRefArray2 a_sCountBuffer,  final  double a_countAve) { 
 this.pl = (a_pl);
 this.runningPTotals = (a_runningPTotals);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.sendGrids = (a_sendGrids);
 this.sendCount = (a_sendCount);
 this.rCountBuffer = (a_rCountBuffer);
 this.sCountBuffer = (a_sCountBuffer);
 this.countAve = (a_countAve);
}
}
 
 value T133 {

 public final  int pl;

 public final  intRefArray1 runningGTotals;

 public final  intRefArray1 runningPTotals;

 public final  intRefArray1 finished;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray1 sendGrids;

 public final  intRefArray1 sendCount;

 public final  intRefArray2 rCountBuffer;

 public final  intRefArray2 sCountBuffer;

 public final  doubleRefArray1 border;

 public final  double countAve;
public T133( final  int a_pl,  final  intRefArray1 a_runningGTotals,  final  intRefArray1 a_runningPTotals,  final  intRefArray1 a_finished,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray1 a_sendGrids,  final  intRefArray1 a_sendCount,  final  intRefArray2 a_rCountBuffer,  final  intRefArray2 a_sCountBuffer,  final  doubleRefArray1 a_border,  final  double a_countAve) { 
 this.pl = (a_pl);
 this.runningGTotals = (a_runningGTotals);
 this.runningPTotals = (a_runningPTotals);
 this.finished = (a_finished);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.sendGrids = (a_sendGrids);
 this.sendCount = (a_sendCount);
 this.rCountBuffer = (a_rCountBuffer);
 this.sCountBuffer = (a_sCountBuffer);
 this.border = (a_border);
 this.countAve = (a_countAve);
}
}
 
 value T134 {

 public final  int RX10_TEMP1570;

 public final  place RX10_TEMP1566;

 public final  point ( : rank==1 ) RX10_TEMP1565;

 public final  intStub [ : rank==1 ] RX10_TEMP1564;
public T134( final  int a_RX10_TEMP1570,  final  place a_RX10_TEMP1566,  final  point ( : rank==1 ) a_RX10_TEMP1565,  final  intStub [ : rank==1 ] a_RX10_TEMP1564) { 
 this.RX10_TEMP1570 = (a_RX10_TEMP1570);
 this.RX10_TEMP1566 = (a_RX10_TEMP1566);
 this.RX10_TEMP1565 = (a_RX10_TEMP1565);
 this.RX10_TEMP1564 = (a_RX10_TEMP1564);
}
}
 
 value T135 {

 public final  int RX10_TEMP1590;

 public final  place RX10_TEMP1586;

 public final  point ( : rank==1 ) RX10_TEMP1585;

 public final  intStub [ : rank==1 ] RX10_TEMP1584;
public T135( final  int a_RX10_TEMP1590,  final  place a_RX10_TEMP1586,  final  point ( : rank==1 ) a_RX10_TEMP1585,  final  intStub [ : rank==1 ] a_RX10_TEMP1584) { 
 this.RX10_TEMP1590 = (a_RX10_TEMP1590);
 this.RX10_TEMP1586 = (a_RX10_TEMP1586);
 this.RX10_TEMP1585 = (a_RX10_TEMP1585);
 this.RX10_TEMP1584 = (a_RX10_TEMP1584);
}
}
 
 value T136 {

 public final  Point1 pl;

 public final  intRefArray1 lowerbounds;

 public final  place pHere;

 public final  doubleRefArray1 border;
public T136( final  Point1 a_pl,  final  intRefArray1 a_lowerbounds,  final  place a_pHere,  final  doubleRefArray1 a_border) { 
 this.pl = (a_pl);
 this.lowerbounds = (a_lowerbounds);
 this.pHere = (a_pHere);
 this.border = (a_border);
}
}
 
 value T137 {

 public final  int RX10_TEMP13;

 public final  place RX10_TEMP9;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP7;
public T137( final  int a_RX10_TEMP13,  final  place a_RX10_TEMP9,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T138 {

 public final  int RX10_TEMP33;

 public final  place RX10_TEMP29;

 public final  point ( : rank==1 ) RX10_TEMP28;

 public final  intStub [ : rank==1 ] RX10_TEMP27;
public T138( final  int a_RX10_TEMP33,  final  place a_RX10_TEMP29,  final  point ( : rank==1 ) a_RX10_TEMP28,  final  intStub [ : rank==1 ] a_RX10_TEMP27) { 
 this.RX10_TEMP33 = (a_RX10_TEMP33);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
}
}
 
 value T139 {

 public final  int RX10_TEMP53;

 public final  place RX10_TEMP49;

 public final  point ( : rank==1 ) RX10_TEMP48;

 public final  intStub [ : rank==1 ] RX10_TEMP47;
public T139( final  int a_RX10_TEMP53,  final  place a_RX10_TEMP49,  final  point ( : rank==1 ) a_RX10_TEMP48,  final  intStub [ : rank==1 ] a_RX10_TEMP47) { 
 this.RX10_TEMP53 = (a_RX10_TEMP53);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
 this.RX10_TEMP47 = (a_RX10_TEMP47);
}
}
 
 value T140 {

 public final  intRefArray1 count;

 public final  Dist1 dCount;

 public final  intRefArray1 indices;

 public final  ParticleRefArray1 result;

 public final  ParticleRefArray1 particles;
public T140( final  intRefArray1 a_count,  final  Dist1 a_dCount,  final  intRefArray1 a_indices,  final  ParticleRefArray1 a_result,  final  ParticleRefArray1 a_particles) { 
 this.count = (a_count);
 this.dCount = (a_dCount);
 this.indices = (a_indices);
 this.result = (a_result);
 this.particles = (a_particles);
}
}
 
 value T141 {

 public final  Region1 RX10_TEMP15;

 public final  int RX10_TEMP13;

 public final  place RX10_TEMP9;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  intStub [ : rank==1 ] RX10_TEMP7;

 public final  intRefArray1 data;
public T141( final  Region1 a_RX10_TEMP15,  final  int a_RX10_TEMP13,  final  place a_RX10_TEMP9,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  intStub [ : rank==1 ] a_RX10_TEMP7,  final  intRefArray1 a_data) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.data = (a_data);
}
}
 
 value T142 {

 public final  Region1 RX10_TEMP50;

 public final  int RX10_TEMP48;

 public final  place RX10_TEMP44;

 public final  point ( : rank==1 ) RX10_TEMP43;

 public final  intStub [ : rank==1 ] RX10_TEMP42;

 public final  intRefArray1 data;
public T142( final  Region1 a_RX10_TEMP50,  final  int a_RX10_TEMP48,  final  place a_RX10_TEMP44,  final  point ( : rank==1 ) a_RX10_TEMP43,  final  intStub [ : rank==1 ] a_RX10_TEMP42,  final  intRefArray1 a_data) { 
 this.RX10_TEMP50 = (a_RX10_TEMP50);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
 this.RX10_TEMP44 = (a_RX10_TEMP44);
 this.RX10_TEMP43 = (a_RX10_TEMP43);
 this.RX10_TEMP42 = (a_RX10_TEMP42);
 this.data = (a_data);
}
}
 
 value T143 {

 public final  int RX10_TEMP83;

 public final  place RX10_TEMP79;

 public final  point ( : rank==1 ) RX10_TEMP78;

 public final  intStub [ : rank==1 ] RX10_TEMP77;
public T143( final  int a_RX10_TEMP83,  final  place a_RX10_TEMP79,  final  point ( : rank==1 ) a_RX10_TEMP78,  final  intStub [ : rank==1 ] a_RX10_TEMP77) { 
 this.RX10_TEMP83 = (a_RX10_TEMP83);
 this.RX10_TEMP79 = (a_RX10_TEMP79);
 this.RX10_TEMP78 = (a_RX10_TEMP78);
 this.RX10_TEMP77 = (a_RX10_TEMP77);
}
}
 
 value T144 {

 public final  Point1 pl;

 public final  int stride;

 public final  intRefArray1 tmp2;

 public final  intRefArray1 tmp1;

 public final  intRefArray1 result;
public T144( final  Point1 a_pl,  final  int a_stride,  final  intRefArray1 a_tmp2,  final  intRefArray1 a_tmp1,  final  intRefArray1 a_result) { 
 this.pl = (a_pl);
 this.stride = (a_stride);
 this.tmp2 = (a_tmp2);
 this.tmp1 = (a_tmp1);
 this.result = (a_result);
}
}
 
 value T145 {

 public final  Point1 pl;

 public final  intRefArray1 tmp2;

 public final  intRefArray1 tmp1;
public T145( final  Point1 a_pl,  final  intRefArray1 a_tmp2,  final  intRefArray1 a_tmp1) { 
 this.pl = (a_pl);
 this.tmp2 = (a_tmp2);
 this.tmp1 = (a_tmp1);
}
}
 
 value T146 {

 public final  int RX10_TEMP14;

 public final  place RX10_TEMP10;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP8;
public T146( final  int a_RX10_TEMP14,  final  place a_RX10_TEMP10,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T147 {

 public final  int RX10_TEMP35;

 public final  place RX10_TEMP31;

 public final  point ( : rank==1 ) RX10_TEMP30;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP29;
public T147( final  int a_RX10_TEMP35,  final  place a_RX10_TEMP31,  final  point ( : rank==1 ) a_RX10_TEMP30,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP29) { 
 this.RX10_TEMP35 = (a_RX10_TEMP35);
 this.RX10_TEMP31 = (a_RX10_TEMP31);
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
}
}
 
 value T148 {

 public final  Point2 pt;

 public final  ComplexRefArray2 result;

 public final  doubleRefArray2 src;
public T148( final  Point2 a_pt,  final  ComplexRefArray2 a_result,  final  doubleRefArray2 a_src) { 
 this.pt = (a_pt);
 this.result = (a_result);
 this.src = (a_src);
}
}
 
 value T149 {

 public final  int RX10_TEMP15;

 public final  place RX10_TEMP11;

 public final  point ( : rank==1 ) RX10_TEMP10;

 public final  doubleStub [ : rank==1 ] RX10_TEMP9;
public T149( final  int a_RX10_TEMP15,  final  place a_RX10_TEMP11,  final  point ( : rank==1 ) a_RX10_TEMP10,  final  doubleStub [ : rank==1 ] a_RX10_TEMP9) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP11 = (a_RX10_TEMP11);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
}
}
 
 value T150 {

 public final  Point2 pt;

 public final  doubleRefArray2 result;

 public final  ComplexRefArray2 src;
public T150( final  Point2 a_pt,  final  doubleRefArray2 a_result,  final  ComplexRefArray2 a_src) { 
 this.pt = (a_pt);
 this.result = (a_result);
 this.src = (a_src);
}
}
 
 value T151 {

 public final  int RX10_TEMP15;

 public final  place RX10_TEMP11;

 public final  point ( : rank==1 ) RX10_TEMP10;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP9;
public T151( final  int a_RX10_TEMP15,  final  place a_RX10_TEMP11,  final  point ( : rank==1 ) a_RX10_TEMP10,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP9) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP11 = (a_RX10_TEMP11);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
}
}
 
 value T152 {

 public final  ComplexRefArray2 result;

 public final  Dist2 dResult;

 public final  Dist2 dData;

 public final  ComplexRefArray2 data;
public T152( final  ComplexRefArray2 a_result,  final  Dist2 a_dResult,  final  Dist2 a_dData,  final  ComplexRefArray2 a_data) { 
 this.result = (a_result);
 this.dResult = (a_dResult);
 this.dData = (a_dData);
 this.data = (a_data);
}
}
 
 value T153 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;

 public final  double initVal;
public T153( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6,  final  double a_initVal) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
 this.initVal = (a_initVal);
}
}
 
 value T154 {

 public final  doubleRefArray1 localSumArray;

 public final  place source;

 public final  int zero;

 public final  doubleRefArray1 sumArray;
public T154( final  doubleRefArray1 a_localSumArray,  final  place a_source,  final  int a_zero,  final  doubleRefArray1 a_sumArray) { 
 this.localSumArray = (a_localSumArray);
 this.source = (a_source);
 this.zero = (a_zero);
 this.sumArray = (a_sumArray);
}
}
 
 value T155 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;

 public final  int initVal;
public T155( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6,  final  int a_initVal) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
 this.initVal = (a_initVal);
}
}
 
 value T156 {

 public final  intRefArray1 localMaxArray;

 public final  int initVal;

 public final  place source;

 public final  intRefArray1 maxArray;
public T156( final  intRefArray1 a_localMaxArray,  final  int a_initVal,  final  place a_source,  final  intRefArray1 a_maxArray) { 
 this.localMaxArray = (a_localMaxArray);
 this.initVal = (a_initVal);
 this.source = (a_source);
 this.maxArray = (a_maxArray);
}
}
 
 value T157 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;

 public final  int initVal;
public T157( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6,  final  int a_initVal) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
 this.initVal = (a_initVal);
}
}
 
 value T158 {

 public final  intRefArray1 localSumArray;

 public final  place source;

 public final  int zero;

 public final  intRefArray1 sumArray;
public T158( final  intRefArray1 a_localSumArray,  final  place a_source,  final  int a_zero,  final  intRefArray1 a_sumArray) { 
 this.localSumArray = (a_localSumArray);
 this.source = (a_source);
 this.zero = (a_zero);
 this.sumArray = (a_sumArray);
}
}
 
 value T159 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T159( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T160 {

 public final  Region3 RX10_TEMP14;

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;

 public final  doubleRefArray3 table;
public T160( final  Region3 a_RX10_TEMP14,  final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6,  final  doubleRefArray3 a_table) { 
 this.RX10_TEMP14 = (a_RX10_TEMP14);
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
 this.table = (a_table);
}
}
 
 value T161 {

 public final  int RX10_TEMP16;

 public final  place RX10_TEMP12;

 public final  point ( : rank==1 ) RX10_TEMP11;

 public final  doubleStub [ : rank==1 ] RX10_TEMP10;
public T161( final  int a_RX10_TEMP16,  final  place a_RX10_TEMP12,  final  point ( : rank==1 ) a_RX10_TEMP11,  final  doubleStub [ : rank==1 ] a_RX10_TEMP10) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP11 = (a_RX10_TEMP11);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
}
}
 
 value T162 {

 public final  doubleRefArray1 rcv;

 public final  place pHere;

 public final  int j;

 public final  int i;

 public final  int x;

 public final  doubleRefArray3 table;
public T162( final  doubleRefArray1 a_rcv,  final  place a_pHere,  final  int a_j,  final  int a_i,  final  int a_x,  final  doubleRefArray3 a_table) { 
 this.rcv = (a_rcv);
 this.pHere = (a_pHere);
 this.j = (a_j);
 this.i = (a_i);
 this.x = (a_x);
 this.table = (a_table);
}
}
 
 value T163 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T163( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T164 {

 public final  Point1 pl;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  Dist2 dGreen;

 public final  double affp;

 public final  int y;

 public final  int x;
public T164( final  Point1 a_pl,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  Dist2 a_dGreen,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.pl = (a_pl);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.dGreen = (a_dGreen);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T165 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T165( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T166 {

 public final  Point1 pl;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  Dist2 dShape;

 public final  double affp;

 public final  int y;

 public final  int x;
public T166( final  Point1 a_pl,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  Dist2 a_dShape,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.pl = (a_pl);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.dShape = (a_dShape);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T167 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T167( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T168 {

 public final  Point1 pl;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  Dist2 dElecX;

 public final  double affp;

 public final  int y;

 public final  int x;
public T168( final  Point1 a_pl,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  Dist2 a_dElecX,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.pl = (a_pl);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.dElecX = (a_dElecX);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T169 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T169( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T170 {

 public final  Point1 pl;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  Dist2 dElecX;

 public final  double affp;

 public final  int y;

 public final  int x;
public T170( final  Point1 a_pl,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  Dist2 a_dElecX,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.pl = (a_pl);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.dElecX = (a_dElecX);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T171 {

 public final  Point1 pl;

 public final  int N;

 public final  int y;

 public final  int x;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T171( final  Point1 a_pl,  final  int a_N,  final  int a_y,  final  int a_x,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.pl = (a_pl);
 this.N = (a_N);
 this.y = (a_y);
 this.x = (a_x);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T172 {

 public final  Point1 pl;

 public final  int N;

 public final  int y;

 public final  int x;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T172( final  Point1 a_pl,  final  int a_N,  final  int a_y,  final  int a_x,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.pl = (a_pl);
 this.N = (a_N);
 this.y = (a_y);
 this.x = (a_x);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T173 {

 public final  Point1 pl;

 public final  int N;

 public final  int y;

 public final  int x;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T173( final  Point1 a_pl,  final  int a_N,  final  int a_y,  final  int a_x,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.pl = (a_pl);
 this.N = (a_N);
 this.y = (a_y);
 this.x = (a_x);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T174 {

 public final  int RX10_TEMP12;

 public final  place RX10_TEMP8;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T174( final  int a_RX10_TEMP12,  final  place a_RX10_TEMP8,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP12 = (a_RX10_TEMP12);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T175 {

 public final  int RX10_TEMP33;

 public final  place RX10_TEMP29;

 public final  point ( : rank==1 ) RX10_TEMP28;

 public final  doubleStub [ : rank==1 ] RX10_TEMP27;
public T175( final  int a_RX10_TEMP33,  final  place a_RX10_TEMP29,  final  point ( : rank==1 ) a_RX10_TEMP28,  final  doubleStub [ : rank==1 ] a_RX10_TEMP27) { 
 this.RX10_TEMP33 = (a_RX10_TEMP33);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
}
}
 
 value T176 {

 public final  int RX10_TEMP54;

 public final  place RX10_TEMP50;

 public final  point ( : rank==1 ) RX10_TEMP49;

 public final  doubleStub [ : rank==1 ] RX10_TEMP48;
public T176( final  int a_RX10_TEMP54,  final  place a_RX10_TEMP50,  final  point ( : rank==1 ) a_RX10_TEMP49,  final  doubleStub [ : rank==1 ] a_RX10_TEMP48) { 
 this.RX10_TEMP54 = (a_RX10_TEMP54);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
}
}
 
 value T177 {

 public final  ComplexStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP6;
public T177( final  ComplexStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T178 {

 public final  ComplexStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP6;
public T178( final  ComplexStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T179 {

 public final  ComplexStub RX10_TEMP35;

 public final  point ( : rank==1 ) RX10_TEMP27;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP26;
public T179( final  ComplexStub a_RX10_TEMP35,  final  point ( : rank==1 ) a_RX10_TEMP27,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP26) { 
 this.RX10_TEMP35 = (a_RX10_TEMP35);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
 this.RX10_TEMP26 = (a_RX10_TEMP26);
}
}
 
 value T180 {

 public final  doubleStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T180( final  doubleStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T181 {

 public final  booleanStub RX10_TEMP31;

 public final  point ( : rank==1 ) RX10_TEMP22;

 public final  booleanStub [ : rank==1 ] RX10_TEMP21;
public T181( final  booleanStub a_RX10_TEMP31,  final  point ( : rank==1 ) a_RX10_TEMP22,  final  booleanStub [ : rank==1 ] a_RX10_TEMP21) { 
 this.RX10_TEMP31 = (a_RX10_TEMP31);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
 this.RX10_TEMP21 = (a_RX10_TEMP21);
}
}
 
 value T182 {

 public final  booleanStub RX10_TEMP81;

 public final  point ( : rank==1 ) RX10_TEMP72;

 public final  booleanStub [ : rank==1 ] RX10_TEMP71;
public T182( final  booleanStub a_RX10_TEMP81,  final  point ( : rank==1 ) a_RX10_TEMP72,  final  booleanStub [ : rank==1 ] a_RX10_TEMP71) { 
 this.RX10_TEMP81 = (a_RX10_TEMP81);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
}
}
 
 value T183 {

 public final  booleanStub RX10_TEMP31;

 public final  point ( : rank==1 ) RX10_TEMP22;

 public final  booleanStub [ : rank==1 ] RX10_TEMP21;
public T183( final  booleanStub a_RX10_TEMP31,  final  point ( : rank==1 ) a_RX10_TEMP22,  final  booleanStub [ : rank==1 ] a_RX10_TEMP21) { 
 this.RX10_TEMP31 = (a_RX10_TEMP31);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
 this.RX10_TEMP21 = (a_RX10_TEMP21);
}
}
 
 value T184 {

 public final  booleanStub RX10_TEMP81;

 public final  point ( : rank==1 ) RX10_TEMP72;

 public final  booleanStub [ : rank==1 ] RX10_TEMP71;
public T184( final  booleanStub a_RX10_TEMP81,  final  point ( : rank==1 ) a_RX10_TEMP72,  final  booleanStub [ : rank==1 ] a_RX10_TEMP71) { 
 this.RX10_TEMP81 = (a_RX10_TEMP81);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
}
}
 
 value T185 {

 public final  booleanStub RX10_TEMP23;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  booleanStub [ : rank==1 ] RX10_TEMP14;
public T185( final  booleanStub a_RX10_TEMP23,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  booleanStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T186 {

 public final  boolean val;

 public final  booleanRefArray1 result;
public T186( final  boolean a_val,  final  booleanRefArray1 a_result) { 
 this.val = (a_val);
 this.result = (a_result);
}
}
 
 value T187 {

 public final  ComplexStub RX10_TEMP23;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP14;
public T187( final  ComplexStub a_RX10_TEMP23,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T188 {

 public final  Complex val;

 public final  ComplexRefArray1 result;
public T188( final  Complex a_val,  final  ComplexRefArray1 a_result) { 
 this.val = (a_val);
 this.result = (a_result);
}
}
 
 value T189 {

 public final  intStub RX10_TEMP23;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  intStub [ : rank==1 ] RX10_TEMP14;
public T189( final  intStub a_RX10_TEMP23,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  intStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T190 {

 public final  int val;

 public final  intRefArray1 result;
public T190( final  int a_val,  final  intRefArray1 a_result) { 
 this.val = (a_val);
 this.result = (a_result);
}
}
 
 value T191 {

 public final  doubleStub RX10_TEMP23;

 public final  point ( : rank==1 ) RX10_TEMP15;

 public final  doubleStub [ : rank==1 ] RX10_TEMP14;
public T191( final  doubleStub a_RX10_TEMP23,  final  point ( : rank==1 ) a_RX10_TEMP15,  final  doubleStub [ : rank==1 ] a_RX10_TEMP14) { 
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP14 = (a_RX10_TEMP14);
}
}
 
 value T192 {

 public final  double val;

 public final  doubleRefArray1 result;
public T192( final  double a_val,  final  doubleRefArray1 a_result) { 
 this.val = (a_val);
 this.result = (a_result);
}
}
 
 value T193 {

 public final  int j1;

 public final  Region1 rLocal1;

 public final  int nBits;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T193( final  int a_j1,  final  Region1 a_rLocal1,  final  int a_nBits,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.j1 = (a_j1);
 this.rLocal1 = (a_rLocal1);
 this.nBits = (a_nBits);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T194 {

 public final  Point2 pt;

 public final  ComplexRefArray2 f;
public T194( final  Point2 a_pt,  final  ComplexRefArray2 a_f) { 
 this.pt = (a_pt);
 this.f = (a_f);
}
}
 
 value T195 {

 public final  int i;

 public final  Complex t1;

 public final  int j2;

 public final  int j1;

 public final  ComplexRefArray2 f;
public T195( final  int a_i,  final  Complex a_t1,  final  int a_j2,  final  int a_j1,  final  ComplexRefArray2 a_f) { 
 this.i = (a_i);
 this.t1 = (a_t1);
 this.j2 = (a_j2);
 this.j1 = (a_j1);
 this.f = (a_f);
}
}
 
 value T196 {

 public final  int j1;

 public final  Region1 rLocal1;

 public final  int kmr;

 public final  int nxh;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T196( final  int a_j1,  final  Region1 a_rLocal1,  final  int a_kmr,  final  int a_nxh,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.j1 = (a_j1);
 this.rLocal1 = (a_rLocal1);
 this.kmr = (a_kmr);
 this.nxh = (a_nxh);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T197 {

 public final  Point2 pt;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T197( final  Point2 a_pt,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.pt = (a_pt);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T198 {

 public final  int j1;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T198( final  int a_j1,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.j1 = (a_j1);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T199 {

 public final  int j1;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T199( final  int a_j1,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.j1 = (a_j1);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T200 {

 public final  int j;

 public final  int mb;

 public final  int lb;

 public final  int kmr;

 public final  boolean inverse;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T200( final  int a_j,  final  int a_mb,  final  int a_lb,  final  int a_kmr,  final  boolean a_inverse,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.j = (a_j);
 this.mb = (a_mb);
 this.lb = (a_lb);
 this.kmr = (a_kmr);
 this.inverse = (a_inverse);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T201 {

 public final  doubleStub RX10_TEMP57;

 public final  point ( : rank==1 ) RX10_TEMP49;

 public final  doubleStub [ : rank==1 ] RX10_TEMP48;
public T201( final  doubleStub a_RX10_TEMP57,  final  point ( : rank==1 ) a_RX10_TEMP49,  final  doubleStub [ : rank==1 ] a_RX10_TEMP48) { 
 this.RX10_TEMP57 = (a_RX10_TEMP57);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
}
}
 
 value T202 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T202( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T203 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T203( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T204 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T204( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T205 {

 public final  intStub RX10_TEMP77;

 public final  point ( : rank==1 ) RX10_TEMP68;

 public final  intStub [ : rank==1 ] RX10_TEMP67;
public T205( final  intStub a_RX10_TEMP77,  final  point ( : rank==1 ) a_RX10_TEMP68,  final  intStub [ : rank==1 ] a_RX10_TEMP67) { 
 this.RX10_TEMP77 = (a_RX10_TEMP77);
 this.RX10_TEMP68 = (a_RX10_TEMP68);
 this.RX10_TEMP67 = (a_RX10_TEMP67);
}
}
 
 value T206 {

 public final  doubleStub RX10_TEMP98;

 public final  point ( : rank==1 ) RX10_TEMP89;

 public final  doubleStub [ : rank==1 ] RX10_TEMP88;
public T206( final  doubleStub a_RX10_TEMP98,  final  point ( : rank==1 ) a_RX10_TEMP89,  final  doubleStub [ : rank==1 ] a_RX10_TEMP88) { 
 this.RX10_TEMP98 = (a_RX10_TEMP98);
 this.RX10_TEMP89 = (a_RX10_TEMP89);
 this.RX10_TEMP88 = (a_RX10_TEMP88);
}
}
 
 value T207 {

 public final  doubleStub RX10_TEMP119;

 public final  point ( : rank==1 ) RX10_TEMP110;

 public final  doubleStub [ : rank==1 ] RX10_TEMP109;
public T207( final  doubleStub a_RX10_TEMP119,  final  point ( : rank==1 ) a_RX10_TEMP110,  final  doubleStub [ : rank==1 ] a_RX10_TEMP109) { 
 this.RX10_TEMP119 = (a_RX10_TEMP119);
 this.RX10_TEMP110 = (a_RX10_TEMP110);
 this.RX10_TEMP109 = (a_RX10_TEMP109);
}
}
 
 value T208 {

 public final  Point2 pt;

 public final  double driftX;

 public final  doubleRefArray2 result;
public T208( final  Point2 a_pt,  final  double a_driftX,  final  doubleRefArray2 a_result) { 
 this.pt = (a_pt);
 this.driftX = (a_driftX);
 this.result = (a_result);
}
}
 
 value T209 {

 public final  Point2 pt;

 public final  double driftY;

 public final  doubleRefArray2 result;
public T209( final  Point2 a_pt,  final  double a_driftY,  final  doubleRefArray2 a_result) { 
 this.pt = (a_pt);
 this.driftY = (a_driftY);
 this.result = (a_result);
}
}
 
 value T210 {

 public final  ParticleStub RX10_TEMP68;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP6;
public T210( final  ParticleStub a_RX10_TEMP68,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP68 = (a_RX10_TEMP68);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T211 {

 public final  Region1Stub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  Region1Stub [ : rank==1 ] RX10_TEMP6;
public T211( final  Region1Stub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  Region1Stub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T212 {

 public final  Region1Stub RX10_TEMP57;

 public final  point ( : rank==1 ) RX10_TEMP49;

 public final  Region1Stub [ : rank==1 ] RX10_TEMP48;
public T212( final  Region1Stub a_RX10_TEMP57,  final  point ( : rank==1 ) a_RX10_TEMP49,  final  Region1Stub [ : rank==1 ] a_RX10_TEMP48) { 
 this.RX10_TEMP57 = (a_RX10_TEMP57);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
}
}
 
 value T213 {

 public final  Region1 r;

 public final  Point1 pl;

 public final  Region1RefArray1 rBuffer;
public T213( final  Region1 a_r,  final  Point1 a_pl,  final  Region1RefArray1 a_rBuffer) { 
 this.r = (a_r);
 this.pl = (a_pl);
 this.rBuffer = (a_rBuffer);
}
}
 
 value T214 {

 public final  doubleStub RX10_TEMP17;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T214( final  doubleStub a_RX10_TEMP17,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP17 = (a_RX10_TEMP17);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T215 {

 public final  doubleStub RX10_TEMP83;

 public final  point ( : rank==1 ) RX10_TEMP75;

 public final  doubleStub [ : rank==1 ] RX10_TEMP74;
public T215( final  doubleStub a_RX10_TEMP83,  final  point ( : rank==1 ) a_RX10_TEMP75,  final  doubleStub [ : rank==1 ] a_RX10_TEMP74) { 
 this.RX10_TEMP83 = (a_RX10_TEMP83);
 this.RX10_TEMP75 = (a_RX10_TEMP75);
 this.RX10_TEMP74 = (a_RX10_TEMP74);
}
}
 
 value T216 {

 public final  doubleStub RX10_TEMP103;

 public final  point ( : rank==1 ) RX10_TEMP95;

 public final  doubleStub [ : rank==1 ] RX10_TEMP94;
public T216( final  doubleStub a_RX10_TEMP103,  final  point ( : rank==1 ) a_RX10_TEMP95,  final  doubleStub [ : rank==1 ] a_RX10_TEMP94) { 
 this.RX10_TEMP103 = (a_RX10_TEMP103);
 this.RX10_TEMP95 = (a_RX10_TEMP95);
 this.RX10_TEMP94 = (a_RX10_TEMP94);
}
}
 
 value T217 {

 public final  doubleStub RX10_TEMP159;

 public final  point ( : rank==1 ) RX10_TEMP151;

 public final  doubleStub [ : rank==1 ] RX10_TEMP150;
public T217( final  doubleStub a_RX10_TEMP159,  final  point ( : rank==1 ) a_RX10_TEMP151,  final  doubleStub [ : rank==1 ] a_RX10_TEMP150) { 
 this.RX10_TEMP159 = (a_RX10_TEMP159);
 this.RX10_TEMP151 = (a_RX10_TEMP151);
 this.RX10_TEMP150 = (a_RX10_TEMP150);
}
}
 
 value T218 {

 public final  doubleStub RX10_TEMP32;

 public final  point ( : rank==1 ) RX10_TEMP23;

 public final  doubleStub [ : rank==1 ] RX10_TEMP22;
public T218( final  doubleStub a_RX10_TEMP32,  final  point ( : rank==1 ) a_RX10_TEMP23,  final  doubleStub [ : rank==1 ] a_RX10_TEMP22) { 
 this.RX10_TEMP32 = (a_RX10_TEMP32);
 this.RX10_TEMP23 = (a_RX10_TEMP23);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
}
}
 
 value T219 {

 public final  int RX10_TEMP26;

 public final  place RX10_TEMP22;

 public final  point ( : rank==1 ) RX10_TEMP21;

 public final  doubleStub [ : rank==1 ] RX10_TEMP20;
public T219( final  int a_RX10_TEMP26,  final  place a_RX10_TEMP22,  final  point ( : rank==1 ) a_RX10_TEMP21,  final  doubleStub [ : rank==1 ] a_RX10_TEMP20) { 
 this.RX10_TEMP26 = (a_RX10_TEMP26);
 this.RX10_TEMP22 = (a_RX10_TEMP22);
 this.RX10_TEMP21 = (a_RX10_TEMP21);
 this.RX10_TEMP20 = (a_RX10_TEMP20);
}
}
 
 value T220 {

 public final  Point2 pt;

 public final  doubleRefArray2 localCharge;

 public final  doubleRefArray2 fieldCharge;
public T220( final  Point2 a_pt,  final  doubleRefArray2 a_localCharge,  final  doubleRefArray2 a_fieldCharge) { 
 this.pt = (a_pt);
 this.localCharge = (a_localCharge);
 this.fieldCharge = (a_fieldCharge);
}
}
 
 value T221 {

 public final  Point2 pt;

 public final  doubleRefArray2 localCharge;

 public final  doubleRefArray2 guards;
public T221( final  Point2 a_pt,  final  doubleRefArray2 a_localCharge,  final  doubleRefArray2 a_guards) { 
 this.pt = (a_pt);
 this.localCharge = (a_localCharge);
 this.guards = (a_guards);
}
}
 
 value T222 {

 public final  doubleValArray2 sBuffer;

 public final  Region2 rLocalG;

 public final  doubleRefArray2 data;
public T222( final  doubleValArray2 a_sBuffer,  final  Region2 a_rLocalG,  final  doubleRefArray2 a_data) { 
 this.sBuffer = (a_sBuffer);
 this.rLocalG = (a_rLocalG);
 this.data = (a_data);
}
}
 
 value T223 {

 public final  Point2 pt;

 public final  doubleRefArray2 guards;
public T223( final  Point2 a_pt,  final  doubleRefArray2 a_guards) { 
 this.pt = (a_pt);
 this.guards = (a_guards);
}
}
 
 value T224 {

 public final  doubleStub RX10_TEMP18;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  doubleStub [ : rank==1 ] RX10_TEMP8;
public T224( final  doubleStub a_RX10_TEMP18,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  doubleStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP18 = (a_RX10_TEMP18);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T225 {

 public final  doubleValArray2 sBuffer;

 public final  Region2 rLocal;

 public final  doubleRefArray2 result;
public T225( final  doubleValArray2 a_sBuffer,  final  Region2 a_rLocal,  final  doubleRefArray2 a_result) { 
 this.sBuffer = (a_sBuffer);
 this.rLocal = (a_rLocal);
 this.result = (a_result);
}
}
 
 value T226 {

 public final  doubleStub RX10_TEMP18;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  doubleStub [ : rank==1 ] RX10_TEMP8;
public T226( final  doubleStub a_RX10_TEMP18,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  doubleStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP18 = (a_RX10_TEMP18);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T227 {

 public final  doubleStub RX10_TEMP39;

 public final  point ( : rank==1 ) RX10_TEMP30;

 public final  doubleStub [ : rank==1 ] RX10_TEMP29;
public T227( final  doubleStub a_RX10_TEMP39,  final  point ( : rank==1 ) a_RX10_TEMP30,  final  doubleStub [ : rank==1 ] a_RX10_TEMP29) { 
 this.RX10_TEMP39 = (a_RX10_TEMP39);
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
}
}
 
 value T228 {

 public final  intStub RX10_TEMP60;

 public final  point ( : rank==1 ) RX10_TEMP51;

 public final  intStub [ : rank==1 ] RX10_TEMP50;
public T228( final  intStub a_RX10_TEMP60,  final  point ( : rank==1 ) a_RX10_TEMP51,  final  intStub [ : rank==1 ] a_RX10_TEMP50) { 
 this.RX10_TEMP60 = (a_RX10_TEMP60);
 this.RX10_TEMP51 = (a_RX10_TEMP51);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
}
}
 
 value T229 {

 public final  intStub RX10_TEMP81;

 public final  point ( : rank==1 ) RX10_TEMP72;

 public final  intStub [ : rank==1 ] RX10_TEMP71;
public T229( final  intStub a_RX10_TEMP81,  final  point ( : rank==1 ) a_RX10_TEMP72,  final  intStub [ : rank==1 ] a_RX10_TEMP71) { 
 this.RX10_TEMP81 = (a_RX10_TEMP81);
 this.RX10_TEMP72 = (a_RX10_TEMP72);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
}
}
 
 value T230 {

 public final  intStub RX10_TEMP102;

 public final  point ( : rank==1 ) RX10_TEMP93;

 public final  intStub [ : rank==1 ] RX10_TEMP92;
public T230( final  intStub a_RX10_TEMP102,  final  point ( : rank==1 ) a_RX10_TEMP93,  final  intStub [ : rank==1 ] a_RX10_TEMP92) { 
 this.RX10_TEMP102 = (a_RX10_TEMP102);
 this.RX10_TEMP93 = (a_RX10_TEMP93);
 this.RX10_TEMP92 = (a_RX10_TEMP92);
}
}
 
 value T231 {

 public final  intStub RX10_TEMP123;

 public final  point ( : rank==1 ) RX10_TEMP114;

 public final  intStub [ : rank==1 ] RX10_TEMP113;
public T231( final  intStub a_RX10_TEMP123,  final  point ( : rank==1 ) a_RX10_TEMP114,  final  intStub [ : rank==1 ] a_RX10_TEMP113) { 
 this.RX10_TEMP123 = (a_RX10_TEMP123);
 this.RX10_TEMP114 = (a_RX10_TEMP114);
 this.RX10_TEMP113 = (a_RX10_TEMP113);
}
}
 
 value T232 {

 public final  intStub RX10_TEMP144;

 public final  point ( : rank==1 ) RX10_TEMP135;

 public final  intStub [ : rank==1 ] RX10_TEMP134;
public T232( final  intStub a_RX10_TEMP144,  final  point ( : rank==1 ) a_RX10_TEMP135,  final  intStub [ : rank==1 ] a_RX10_TEMP134) { 
 this.RX10_TEMP144 = (a_RX10_TEMP144);
 this.RX10_TEMP135 = (a_RX10_TEMP135);
 this.RX10_TEMP134 = (a_RX10_TEMP134);
}
}
 
 value T233 {

 public final  intStub RX10_TEMP165;

 public final  point ( : rank==1 ) RX10_TEMP156;

 public final  intStub [ : rank==1 ] RX10_TEMP155;
public T233( final  intStub a_RX10_TEMP165,  final  point ( : rank==1 ) a_RX10_TEMP156,  final  intStub [ : rank==1 ] a_RX10_TEMP155) { 
 this.RX10_TEMP165 = (a_RX10_TEMP165);
 this.RX10_TEMP156 = (a_RX10_TEMP156);
 this.RX10_TEMP155 = (a_RX10_TEMP155);
}
}
 
 value T234 {

 public final  int j;

 public final  int i;

 public final  int offset;

 public final  int pl;

 public final  doubleRefArray3 srcBuffer;

 public final  doubleRefArray2 data;
public T234( final  int a_j,  final  int a_i,  final  int a_offset,  final  int a_pl,  final  doubleRefArray3 a_srcBuffer,  final  doubleRefArray2 a_data) { 
 this.j = (a_j);
 this.i = (a_i);
 this.offset = (a_offset);
 this.pl = (a_pl);
 this.srcBuffer = (a_srcBuffer);
 this.data = (a_data);
}
}
 
 value T235 {

 public final  intStub RX10_TEMP364;

 public final  point ( : rank==1 ) RX10_TEMP355;

 public final  intStub [ : rank==1 ] RX10_TEMP354;
public T235( final  intStub a_RX10_TEMP364,  final  point ( : rank==1 ) a_RX10_TEMP355,  final  intStub [ : rank==1 ] a_RX10_TEMP354) { 
 this.RX10_TEMP364 = (a_RX10_TEMP364);
 this.RX10_TEMP355 = (a_RX10_TEMP355);
 this.RX10_TEMP354 = (a_RX10_TEMP354);
}
}
 
 value T236 {

 public final  intStub RX10_TEMP385;

 public final  point ( : rank==1 ) RX10_TEMP376;

 public final  intStub [ : rank==1 ] RX10_TEMP375;
public T236( final  intStub a_RX10_TEMP385,  final  point ( : rank==1 ) a_RX10_TEMP376,  final  intStub [ : rank==1 ] a_RX10_TEMP375) { 
 this.RX10_TEMP385 = (a_RX10_TEMP385);
 this.RX10_TEMP376 = (a_RX10_TEMP376);
 this.RX10_TEMP375 = (a_RX10_TEMP375);
}
}
 
 value T237 {

 public final  doubleValArray2 sBuffer;

 public final  Region2 rBuffer;

 public final  int bsize;

 public final  intRefArray1 inLt;

 public final  doubleRefArray3 dstBuffer;
public T237( final  doubleValArray2 a_sBuffer,  final  Region2 a_rBuffer,  final  int a_bsize,  final  intRefArray1 a_inLt,  final  doubleRefArray3 a_dstBuffer) { 
 this.sBuffer = (a_sBuffer);
 this.rBuffer = (a_rBuffer);
 this.bsize = (a_bsize);
 this.inLt = (a_inLt);
 this.dstBuffer = (a_dstBuffer);
}
}
 
 value T238 {

 public final  int j;

 public final  int i;

 public final  int rsize;

 public final  int pl;

 public final  intRefArray1 sizes;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;

 public final  int MAX_ROWS;
public T238( final  int a_j,  final  int a_i,  final  int a_rsize,  final  int a_pl,  final  intRefArray1 a_sizes,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer,  final  int a_MAX_ROWS) { 
 this.j = (a_j);
 this.i = (a_i);
 this.rsize = (a_rsize);
 this.pl = (a_pl);
 this.sizes = (a_sizes);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
 this.MAX_ROWS = (a_MAX_ROWS);
}
}
 
 value T239 {

 public final  int j;

 public final  int i2;

 public final  int pl;

 public final  intRefArray1 inLt;

 public final  doubleRefArray3 srcBuffer;
public T239( final  int a_j,  final  int a_i2,  final  int a_pl,  final  intRefArray1 a_inLt,  final  doubleRefArray3 a_srcBuffer) { 
 this.j = (a_j);
 this.i2 = (a_i2);
 this.pl = (a_pl);
 this.inLt = (a_inLt);
 this.srcBuffer = (a_srcBuffer);
}
}
 
 value T240 {

 public final  Point3 pt;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;
public T240( final  Point3 a_pt,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer) { 
 this.pt = (a_pt);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
}
}
 
 value T241 {

 public final  doubleValArray2 sBuffer;

 public final  Region2 rBuffer;

 public final  int bsize;

 public final  intRefArray1 inRt;

 public final  doubleRefArray3 dstBuffer;
public T241( final  doubleValArray2 a_sBuffer,  final  Region2 a_rBuffer,  final  int a_bsize,  final  intRefArray1 a_inRt,  final  doubleRefArray3 a_dstBuffer) { 
 this.sBuffer = (a_sBuffer);
 this.rBuffer = (a_rBuffer);
 this.bsize = (a_bsize);
 this.inRt = (a_inRt);
 this.dstBuffer = (a_dstBuffer);
}
}
 
 value T242 {

 public final  int j;

 public final  int i;

 public final  int pl;

 public final  intRefArray1 outLt;

 public final  doubleRefArray3 srcBuffer;
public T242( final  int a_j,  final  int a_i,  final  int a_pl,  final  intRefArray1 a_outLt,  final  doubleRefArray3 a_srcBuffer) { 
 this.j = (a_j);
 this.i = (a_i);
 this.pl = (a_pl);
 this.outLt = (a_outLt);
 this.srcBuffer = (a_srcBuffer);
}
}
 
 value T243 {

 public final  int j;

 public final  int i;

 public final  int pl;

 public final  intRefArray1 sizes;

 public final  doubleRefArray3 dstBuffer;

 public final  doubleRefArray3 srcBuffer;
public T243( final  int a_j,  final  int a_i,  final  int a_pl,  final  intRefArray1 a_sizes,  final  doubleRefArray3 a_dstBuffer,  final  doubleRefArray3 a_srcBuffer) { 
 this.j = (a_j);
 this.i = (a_i);
 this.pl = (a_pl);
 this.sizes = (a_sizes);
 this.dstBuffer = (a_dstBuffer);
 this.srcBuffer = (a_srcBuffer);
}
}
 
 value T244 {

 public final  intStub RX10_TEMP1500;

 public final  point ( : rank==1 ) RX10_TEMP1492;

 public final  intStub [ : rank==1 ] RX10_TEMP1491;
public T244( final  intStub a_RX10_TEMP1500,  final  point ( : rank==1 ) a_RX10_TEMP1492,  final  intStub [ : rank==1 ] a_RX10_TEMP1491) { 
 this.RX10_TEMP1500 = (a_RX10_TEMP1500);
 this.RX10_TEMP1492 = (a_RX10_TEMP1492);
 this.RX10_TEMP1491 = (a_RX10_TEMP1491);
}
}
 
 value T245 {

 public final  doubleStub RX10_TEMP1590;

 public final  point ( : rank==1 ) RX10_TEMP1582;

 public final  doubleStub [ : rank==1 ] RX10_TEMP1581;
public T245( final  doubleStub a_RX10_TEMP1590,  final  point ( : rank==1 ) a_RX10_TEMP1582,  final  doubleStub [ : rank==1 ] a_RX10_TEMP1581) { 
 this.RX10_TEMP1590 = (a_RX10_TEMP1590);
 this.RX10_TEMP1582 = (a_RX10_TEMP1582);
 this.RX10_TEMP1581 = (a_RX10_TEMP1581);
}
}
 
 value T246 {

 public final  int j;

 public final  int i;

 public final  int pl;

 public final  doubleRefArray2 result;

 public final  intRefArray1 offsets;

 public final  doubleRefArray3 srcBuffer;
public T246( final  int a_j,  final  int a_i,  final  int a_pl,  final  doubleRefArray2 a_result,  final  intRefArray1 a_offsets,  final  doubleRefArray3 a_srcBuffer) { 
 this.j = (a_j);
 this.i = (a_i);
 this.pl = (a_pl);
 this.result = (a_result);
 this.offsets = (a_offsets);
 this.srcBuffer = (a_srcBuffer);
}
}
 
 value T247 {

 public final  doubleStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T247( final  doubleStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T248 {

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 result;

 public final  Dist2 dResult;
public T248( final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_result,  final  Dist2 a_dResult) { 
 this.sBuffer = (a_sBuffer);
 this.result = (a_result);
 this.dResult = (a_dResult);
}
}
 
 value T249 {

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 result;

 public final  Dist2 dResult;
public T249( final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_result,  final  Dist2 a_dResult) { 
 this.sBuffer = (a_sBuffer);
 this.result = (a_result);
 this.dResult = (a_dResult);
}
}
 
 value T250 {

 public final  doubleValArray2 sBuffer;

 public final  Region2 rGuard;

 public final  doubleRefArray2 guards;
public T250( final  doubleValArray2 a_sBuffer,  final  Region2 a_rGuard,  final  doubleRefArray2 a_guards) { 
 this.sBuffer = (a_sBuffer);
 this.rGuard = (a_rGuard);
 this.guards = (a_guards);
}
}
 
 value T251 {

 public final  doubleValArray2 sBuffer;

 public final  Region2 rGuard;

 public final  doubleRefArray2 guards;
public T251( final  doubleValArray2 a_sBuffer,  final  Region2 a_rGuard,  final  doubleRefArray2 a_guards) { 
 this.sBuffer = (a_sBuffer);
 this.rGuard = (a_rGuard);
 this.guards = (a_guards);
}
}
 
 value T252 {

 public final  intStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;
public T252( final  intStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T253 {

 public final  ParticleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP6;
public T253( final  ParticleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T254 {

 public final  ParticleStub RX10_TEMP35;

 public final  point ( : rank==1 ) RX10_TEMP27;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP26;
public T254( final  ParticleStub a_RX10_TEMP35,  final  point ( : rank==1 ) a_RX10_TEMP27,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP26) { 
 this.RX10_TEMP35 = (a_RX10_TEMP35);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
 this.RX10_TEMP26 = (a_RX10_TEMP26);
}
}
 
 value T255 {

 public final  ParticleStub RX10_TEMP55;

 public final  point ( : rank==1 ) RX10_TEMP47;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP46;
public T255( final  ParticleStub a_RX10_TEMP55,  final  point ( : rank==1 ) a_RX10_TEMP47,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP46) { 
 this.RX10_TEMP55 = (a_RX10_TEMP55);
 this.RX10_TEMP47 = (a_RX10_TEMP47);
 this.RX10_TEMP46 = (a_RX10_TEMP46);
}
}
 
 value T256 {

 public final  ParticleStub RX10_TEMP75;

 public final  point ( : rank==1 ) RX10_TEMP67;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP66;
public T256( final  ParticleStub a_RX10_TEMP75,  final  point ( : rank==1 ) a_RX10_TEMP67,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP66) { 
 this.RX10_TEMP75 = (a_RX10_TEMP75);
 this.RX10_TEMP67 = (a_RX10_TEMP67);
 this.RX10_TEMP66 = (a_RX10_TEMP66);
}
}
 
 value T257 {

 public final  ParticleStub RX10_TEMP95;

 public final  point ( : rank==1 ) RX10_TEMP87;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP86;
public T257( final  ParticleStub a_RX10_TEMP95,  final  point ( : rank==1 ) a_RX10_TEMP87,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP86) { 
 this.RX10_TEMP95 = (a_RX10_TEMP95);
 this.RX10_TEMP87 = (a_RX10_TEMP87);
 this.RX10_TEMP86 = (a_RX10_TEMP86);
}
}
 
 value T258 {

 public final  intStub RX10_TEMP116;

 public final  point ( : rank==1 ) RX10_TEMP107;

 public final  intStub [ : rank==1 ] RX10_TEMP106;
public T258( final  intStub a_RX10_TEMP116,  final  point ( : rank==1 ) a_RX10_TEMP107,  final  intStub [ : rank==1 ] a_RX10_TEMP106) { 
 this.RX10_TEMP116 = (a_RX10_TEMP116);
 this.RX10_TEMP107 = (a_RX10_TEMP107);
 this.RX10_TEMP106 = (a_RX10_TEMP106);
}
}
 
 value T259 {

 public final  intStub RX10_TEMP137;

 public final  point ( : rank==1 ) RX10_TEMP128;

 public final  intStub [ : rank==1 ] RX10_TEMP127;
public T259( final  intStub a_RX10_TEMP137,  final  point ( : rank==1 ) a_RX10_TEMP128,  final  intStub [ : rank==1 ] a_RX10_TEMP127) { 
 this.RX10_TEMP137 = (a_RX10_TEMP137);
 this.RX10_TEMP128 = (a_RX10_TEMP128);
 this.RX10_TEMP127 = (a_RX10_TEMP127);
}
}
 
 value T260 {

 public final  intStub RX10_TEMP158;

 public final  point ( : rank==1 ) RX10_TEMP149;

 public final  intStub [ : rank==1 ] RX10_TEMP148;
public T260( final  intStub a_RX10_TEMP158,  final  point ( : rank==1 ) a_RX10_TEMP149,  final  intStub [ : rank==1 ] a_RX10_TEMP148) { 
 this.RX10_TEMP158 = (a_RX10_TEMP158);
 this.RX10_TEMP149 = (a_RX10_TEMP149);
 this.RX10_TEMP148 = (a_RX10_TEMP148);
}
}
 
 value T261 {

 public final  intStub RX10_TEMP179;

 public final  point ( : rank==1 ) RX10_TEMP170;

 public final  intStub [ : rank==1 ] RX10_TEMP169;
public T261( final  intStub a_RX10_TEMP179,  final  point ( : rank==1 ) a_RX10_TEMP170,  final  intStub [ : rank==1 ] a_RX10_TEMP169) { 
 this.RX10_TEMP179 = (a_RX10_TEMP179);
 this.RX10_TEMP170 = (a_RX10_TEMP170);
 this.RX10_TEMP169 = (a_RX10_TEMP169);
}
}
 
 value T262 {

 public final  intStub RX10_TEMP200;

 public final  point ( : rank==1 ) RX10_TEMP191;

 public final  intStub [ : rank==1 ] RX10_TEMP190;
public T262( final  intStub a_RX10_TEMP200,  final  point ( : rank==1 ) a_RX10_TEMP191,  final  intStub [ : rank==1 ] a_RX10_TEMP190) { 
 this.RX10_TEMP200 = (a_RX10_TEMP200);
 this.RX10_TEMP191 = (a_RX10_TEMP191);
 this.RX10_TEMP190 = (a_RX10_TEMP190);
}
}
 
 value T263 {

 public final  intStub RX10_TEMP221;

 public final  point ( : rank==1 ) RX10_TEMP212;

 public final  intStub [ : rank==1 ] RX10_TEMP211;
public T263( final  intStub a_RX10_TEMP221,  final  point ( : rank==1 ) a_RX10_TEMP212,  final  intStub [ : rank==1 ] a_RX10_TEMP211) { 
 this.RX10_TEMP221 = (a_RX10_TEMP221);
 this.RX10_TEMP212 = (a_RX10_TEMP212);
 this.RX10_TEMP211 = (a_RX10_TEMP211);
}
}
 
 value T264 {

 public final  intStub RX10_TEMP242;

 public final  point ( : rank==1 ) RX10_TEMP233;

 public final  intStub [ : rank==1 ] RX10_TEMP232;
public T264( final  intStub a_RX10_TEMP242,  final  point ( : rank==1 ) a_RX10_TEMP233,  final  intStub [ : rank==1 ] a_RX10_TEMP232) { 
 this.RX10_TEMP242 = (a_RX10_TEMP242);
 this.RX10_TEMP233 = (a_RX10_TEMP233);
 this.RX10_TEMP232 = (a_RX10_TEMP232);
}
}
 
 value T265 {

 public final  intStub RX10_TEMP263;

 public final  point ( : rank==1 ) RX10_TEMP254;

 public final  intStub [ : rank==1 ] RX10_TEMP253;
public T265( final  intStub a_RX10_TEMP263,  final  point ( : rank==1 ) a_RX10_TEMP254,  final  intStub [ : rank==1 ] a_RX10_TEMP253) { 
 this.RX10_TEMP263 = (a_RX10_TEMP263);
 this.RX10_TEMP254 = (a_RX10_TEMP254);
 this.RX10_TEMP253 = (a_RX10_TEMP253);
}
}
 
 value T266 {

 public final  intStub RX10_TEMP284;

 public final  point ( : rank==1 ) RX10_TEMP275;

 public final  intStub [ : rank==1 ] RX10_TEMP274;
public T266( final  intStub a_RX10_TEMP284,  final  point ( : rank==1 ) a_RX10_TEMP275,  final  intStub [ : rank==1 ] a_RX10_TEMP274) { 
 this.RX10_TEMP284 = (a_RX10_TEMP284);
 this.RX10_TEMP275 = (a_RX10_TEMP275);
 this.RX10_TEMP274 = (a_RX10_TEMP274);
}
}
 
 value T267 {

 public final  int i;

 public final  int offset;

 public final  int pl;

 public final  ParticleRefArray2 part;

 public final  ParticleRefArray1 particles;
public T267( final  int a_i,  final  int a_offset,  final  int a_pl,  final  ParticleRefArray2 a_part,  final  ParticleRefArray1 a_particles) { 
 this.i = (a_i);
 this.offset = (a_offset);
 this.pl = (a_pl);
 this.part = (a_part);
 this.particles = (a_particles);
}
}
 
 value T268 {

 public final  intStub RX10_TEMP404;

 public final  point ( : rank==1 ) RX10_TEMP370;

 public final  intStub [ : rank==1 ] RX10_TEMP369;
public T268( final  intStub a_RX10_TEMP404,  final  point ( : rank==1 ) a_RX10_TEMP370,  final  intStub [ : rank==1 ] a_RX10_TEMP369) { 
 this.RX10_TEMP404 = (a_RX10_TEMP404);
 this.RX10_TEMP370 = (a_RX10_TEMP370);
 this.RX10_TEMP369 = (a_RX10_TEMP369);
}
}
 
 value T269 {

 public final  intStub RX10_TEMP425;

 public final  point ( : rank==1 ) RX10_TEMP416;

 public final  intStub [ : rank==1 ] RX10_TEMP415;
public T269( final  intStub a_RX10_TEMP425,  final  point ( : rank==1 ) a_RX10_TEMP416,  final  intStub [ : rank==1 ] a_RX10_TEMP415) { 
 this.RX10_TEMP425 = (a_RX10_TEMP425);
 this.RX10_TEMP416 = (a_RX10_TEMP416);
 this.RX10_TEMP415 = (a_RX10_TEMP415);
}
}
 
 value T270 {

 public final  intStub RX10_TEMP796;

 public final  point ( : rank==1 ) RX10_TEMP788;

 public final  intStub [ : rank==1 ] RX10_TEMP787;
public T270( final  intStub a_RX10_TEMP796,  final  point ( : rank==1 ) a_RX10_TEMP788,  final  intStub [ : rank==1 ] a_RX10_TEMP787) { 
 this.RX10_TEMP796 = (a_RX10_TEMP796);
 this.RX10_TEMP788 = (a_RX10_TEMP788);
 this.RX10_TEMP787 = (a_RX10_TEMP787);
}
}
 
 value T271 {

 public final  intStub RX10_TEMP1579;

 public final  point ( : rank==1 ) RX10_TEMP1545;

 public final  intStub [ : rank==1 ] RX10_TEMP1544;
public T271( final  intStub a_RX10_TEMP1579,  final  point ( : rank==1 ) a_RX10_TEMP1545,  final  intStub [ : rank==1 ] a_RX10_TEMP1544) { 
 this.RX10_TEMP1579 = (a_RX10_TEMP1579);
 this.RX10_TEMP1545 = (a_RX10_TEMP1545);
 this.RX10_TEMP1544 = (a_RX10_TEMP1544);
}
}
 
 value T272 {

 public final  intStub RX10_TEMP1625;

 public final  point ( : rank==1 ) RX10_TEMP1591;

 public final  intStub [ : rank==1 ] RX10_TEMP1590;
public T272( final  intStub a_RX10_TEMP1625,  final  point ( : rank==1 ) a_RX10_TEMP1591,  final  intStub [ : rank==1 ] a_RX10_TEMP1590) { 
 this.RX10_TEMP1625 = (a_RX10_TEMP1625);
 this.RX10_TEMP1591 = (a_RX10_TEMP1591);
 this.RX10_TEMP1590 = (a_RX10_TEMP1590);
}
}
 
 value T273 {

 public final  intStub RX10_TEMP1671;

 public final  point ( : rank==1 ) RX10_TEMP1637;

 public final  intStub [ : rank==1 ] RX10_TEMP1636;
public T273( final  intStub a_RX10_TEMP1671,  final  point ( : rank==1 ) a_RX10_TEMP1637,  final  intStub [ : rank==1 ] a_RX10_TEMP1636) { 
 this.RX10_TEMP1671 = (a_RX10_TEMP1671);
 this.RX10_TEMP1637 = (a_RX10_TEMP1637);
 this.RX10_TEMP1636 = (a_RX10_TEMP1636);
}
}
 
 value T274 {

 public final  intStub RX10_TEMP1692;

 public final  point ( : rank==1 ) RX10_TEMP1683;

 public final  intStub [ : rank==1 ] RX10_TEMP1682;
public T274( final  intStub a_RX10_TEMP1692,  final  point ( : rank==1 ) a_RX10_TEMP1683,  final  intStub [ : rank==1 ] a_RX10_TEMP1682) { 
 this.RX10_TEMP1692 = (a_RX10_TEMP1692);
 this.RX10_TEMP1683 = (a_RX10_TEMP1683);
 this.RX10_TEMP1682 = (a_RX10_TEMP1682);
}
}
 
 value T275 {

 public final  intStub RX10_TEMP1738;

 public final  point ( : rank==1 ) RX10_TEMP1704;

 public final  intStub [ : rank==1 ] RX10_TEMP1703;
public T275( final  intStub a_RX10_TEMP1738,  final  point ( : rank==1 ) a_RX10_TEMP1704,  final  intStub [ : rank==1 ] a_RX10_TEMP1703) { 
 this.RX10_TEMP1738 = (a_RX10_TEMP1738);
 this.RX10_TEMP1704 = (a_RX10_TEMP1704);
 this.RX10_TEMP1703 = (a_RX10_TEMP1703);
}
}
 
 value T276 {

 public final  int i;

 public final  int pl;

 public final  intRefArray2 holes;

 public final  ParticleRefArray2 rBufferL;

 public final  ParticleRefArray2 part;
public T276( final  int a_i,  final  int a_pl,  final  intRefArray2 a_holes,  final  ParticleRefArray2 a_rBufferL,  final  ParticleRefArray2 a_part) { 
 this.i = (a_i);
 this.pl = (a_pl);
 this.holes = (a_holes);
 this.rBufferL = (a_rBufferL);
 this.part = (a_part);
}
}
 
 value T277 {

 public final  ParticleValArray1 lBuffer;

 public final  intRefArray1 inRight;

 public final  ParticleRefArray2 rightInBuffer;
public T277( final  ParticleValArray1 a_lBuffer,  final  intRefArray1 a_inRight,  final  ParticleRefArray2 a_rightInBuffer) { 
 this.lBuffer = (a_lBuffer);
 this.inRight = (a_inRight);
 this.rightInBuffer = (a_rightInBuffer);
}
}
 
 value T278 {

 public final  ParticleValArray1 rBuffer;

 public final  intRefArray1 inLeft;

 public final  ParticleRefArray2 leftInBuffer;
public T278( final  ParticleValArray1 a_rBuffer,  final  intRefArray1 a_inLeft,  final  ParticleRefArray2 a_leftInBuffer) { 
 this.rBuffer = (a_rBuffer);
 this.inLeft = (a_inLeft);
 this.leftInBuffer = (a_leftInBuffer);
}
}
 
 value T279 {

 public final  ParticleStub RX10_TEMP21;

 public final  point ( : rank==1 ) RX10_TEMP13;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP12;
public T279( final  ParticleStub a_RX10_TEMP21,  final  point ( : rank==1 ) a_RX10_TEMP13,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP12) { 
 this.RX10_TEMP21 = (a_RX10_TEMP21);
 this.RX10_TEMP13 = (a_RX10_TEMP13);
 this.RX10_TEMP12 = (a_RX10_TEMP12);
}
}
 
 value T280 {

 public final  int i;

 public final  int offset;

 public final  int pl;

 public final  ParticleRefArray1 result;

 public final  ParticleRefArray2 part;
public T280( final  int a_i,  final  int a_offset,  final  int a_pl,  final  ParticleRefArray1 a_result,  final  ParticleRefArray2 a_part) { 
 this.i = (a_i);
 this.offset = (a_offset);
 this.pl = (a_pl);
 this.result = (a_result);
 this.part = (a_part);
}
}
 
 value T281 {

 public final  doubleStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T281( final  doubleStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T282 {

 public final  Point1 pt;

 public final  doubleRefArray2 fcLocalY;

 public final  doubleRefArray2 fcLocalX;

 public final  doubleRefArray1 energy;

 public final  double quantum;

 public final  double edgery;

 public final  double edgerx;

 public final  double edgely;

 public final  double edgelx;

 public final  ParticleRefArray1 particles;

 public final  LinearESOpenPIC2D X10_TEMP0;
public T282( final  Point1 a_pt,  final  doubleRefArray2 a_fcLocalY,  final  doubleRefArray2 a_fcLocalX,  final  doubleRefArray1 a_energy,  final  double a_quantum,  final  double a_edgery,  final  double a_edgerx,  final  double a_edgely,  final  double a_edgelx,  final  ParticleRefArray1 a_particles,  final  LinearESOpenPIC2D a_X10_TEMP0) { 
 this.pt = (a_pt);
 this.fcLocalY = (a_fcLocalY);
 this.fcLocalX = (a_fcLocalX);
 this.energy = (a_energy);
 this.quantum = (a_quantum);
 this.edgery = (a_edgery);
 this.edgerx = (a_edgerx);
 this.edgely = (a_edgely);
 this.edgelx = (a_edgelx);
 this.particles = (a_particles);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T283 {

 public final  doubleStub RX10_TEMP17;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  doubleStub [ : rank==1 ] RX10_TEMP8;
public T283( final  doubleStub a_RX10_TEMP17,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  doubleStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP17 = (a_RX10_TEMP17);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T284 {

 public final  intStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;
public T284( final  intStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T285 {

 public final  doubleStub RX10_TEMP17;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  doubleStub [ : rank==1 ] RX10_TEMP7;
public T285( final  doubleStub a_RX10_TEMP17,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  doubleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP17 = (a_RX10_TEMP17);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T286 {

 public final  intStub RX10_TEMP38;

 public final  point ( : rank==1 ) RX10_TEMP29;

 public final  intStub [ : rank==1 ] RX10_TEMP28;
public T286( final  intStub a_RX10_TEMP38,  final  point ( : rank==1 ) a_RX10_TEMP29,  final  intStub [ : rank==1 ] a_RX10_TEMP28) { 
 this.RX10_TEMP38 = (a_RX10_TEMP38);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
}
}
 
 value T287 {

 public final  intStub RX10_TEMP59;

 public final  point ( : rank==1 ) RX10_TEMP50;

 public final  intStub [ : rank==1 ] RX10_TEMP49;
public T287( final  intStub a_RX10_TEMP59,  final  point ( : rank==1 ) a_RX10_TEMP50,  final  intStub [ : rank==1 ] a_RX10_TEMP49) { 
 this.RX10_TEMP59 = (a_RX10_TEMP59);
 this.RX10_TEMP50 = (a_RX10_TEMP50);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
}
}
 
 value T288 {

 public final  intStub RX10_TEMP79;

 public final  point ( : rank==1 ) RX10_TEMP71;

 public final  intStub [ : rank==1 ] RX10_TEMP70;
public T288( final  intStub a_RX10_TEMP79,  final  point ( : rank==1 ) a_RX10_TEMP71,  final  intStub [ : rank==1 ] a_RX10_TEMP70) { 
 this.RX10_TEMP79 = (a_RX10_TEMP79);
 this.RX10_TEMP71 = (a_RX10_TEMP71);
 this.RX10_TEMP70 = (a_RX10_TEMP70);
}
}
 
 value T289 {

 public final  intStub RX10_TEMP99;

 public final  point ( : rank==1 ) RX10_TEMP91;

 public final  intStub [ : rank==1 ] RX10_TEMP90;
public T289( final  intStub a_RX10_TEMP99,  final  point ( : rank==1 ) a_RX10_TEMP91,  final  intStub [ : rank==1 ] a_RX10_TEMP90) { 
 this.RX10_TEMP99 = (a_RX10_TEMP99);
 this.RX10_TEMP91 = (a_RX10_TEMP91);
 this.RX10_TEMP90 = (a_RX10_TEMP90);
}
}
 
 value T290 {

 public final  intStub RX10_TEMP119;

 public final  point ( : rank==1 ) RX10_TEMP111;

 public final  intStub [ : rank==1 ] RX10_TEMP110;
public T290( final  intStub a_RX10_TEMP119,  final  point ( : rank==1 ) a_RX10_TEMP111,  final  intStub [ : rank==1 ] a_RX10_TEMP110) { 
 this.RX10_TEMP119 = (a_RX10_TEMP119);
 this.RX10_TEMP111 = (a_RX10_TEMP111);
 this.RX10_TEMP110 = (a_RX10_TEMP110);
}
}
 
 value T291 {

 public final  intStub RX10_TEMP139;

 public final  point ( : rank==1 ) RX10_TEMP131;

 public final  intStub [ : rank==1 ] RX10_TEMP130;
public T291( final  intStub a_RX10_TEMP139,  final  point ( : rank==1 ) a_RX10_TEMP131,  final  intStub [ : rank==1 ] a_RX10_TEMP130) { 
 this.RX10_TEMP139 = (a_RX10_TEMP139);
 this.RX10_TEMP131 = (a_RX10_TEMP131);
 this.RX10_TEMP130 = (a_RX10_TEMP130);
}
}
 
 value T292 {

 public final  intStub RX10_TEMP159;

 public final  point ( : rank==1 ) RX10_TEMP151;

 public final  intStub [ : rank==1 ] RX10_TEMP150;
public T292( final  intStub a_RX10_TEMP159,  final  point ( : rank==1 ) a_RX10_TEMP151,  final  intStub [ : rank==1 ] a_RX10_TEMP150) { 
 this.RX10_TEMP159 = (a_RX10_TEMP159);
 this.RX10_TEMP151 = (a_RX10_TEMP151);
 this.RX10_TEMP150 = (a_RX10_TEMP150);
}
}
 
 value T293 {

 public final  intStub RX10_TEMP179;

 public final  point ( : rank==1 ) RX10_TEMP171;

 public final  intStub [ : rank==1 ] RX10_TEMP170;
public T293( final  intStub a_RX10_TEMP179,  final  point ( : rank==1 ) a_RX10_TEMP171,  final  intStub [ : rank==1 ] a_RX10_TEMP170) { 
 this.RX10_TEMP179 = (a_RX10_TEMP179);
 this.RX10_TEMP171 = (a_RX10_TEMP171);
 this.RX10_TEMP170 = (a_RX10_TEMP170);
}
}
 
 value T294 {

 public final  intStub RX10_TEMP200;

 public final  point ( : rank==1 ) RX10_TEMP191;

 public final  intStub [ : rank==1 ] RX10_TEMP190;
public T294( final  intStub a_RX10_TEMP200,  final  point ( : rank==1 ) a_RX10_TEMP191,  final  intStub [ : rank==1 ] a_RX10_TEMP190) { 
 this.RX10_TEMP200 = (a_RX10_TEMP200);
 this.RX10_TEMP191 = (a_RX10_TEMP191);
 this.RX10_TEMP190 = (a_RX10_TEMP190);
}
}
 
 value T295 {

 public final  int nGrids;

 public final  int nCount;

 public final  intValArray1 sBuffer;

 public final  Region1 dSBuffer;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray2 rCountBuffer;
public T295( final  int a_nGrids,  final  int a_nCount,  final  intValArray1 a_sBuffer,  final  Region1 a_dSBuffer,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray2 a_rCountBuffer) { 
 this.nGrids = (a_nGrids);
 this.nCount = (a_nCount);
 this.sBuffer = (a_sBuffer);
 this.dSBuffer = (a_dSBuffer);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.rCountBuffer = (a_rCountBuffer);
}
}
 
 value T296 {

 public final  Point2 pt;

 public final  intRefArray2 rCountBuffer;

 public final  intRefArray2 sCountBuffer;
public T296( final  Point2 a_pt,  final  intRefArray2 a_rCountBuffer,  final  intRefArray2 a_sCountBuffer) { 
 this.pt = (a_pt);
 this.rCountBuffer = (a_rCountBuffer);
 this.sCountBuffer = (a_sCountBuffer);
}
}
 
 value T297 {

 public final  int nGrids;

 public final  int nCount;

 public final  intValArray1 sBuffer;

 public final  Region1 dSBuffer;

 public final  intRefArray1 recvGrids;

 public final  intRefArray1 recvCount;

 public final  intRefArray2 rCountBuffer;
public T297( final  int a_nGrids,  final  int a_nCount,  final  intValArray1 a_sBuffer,  final  Region1 a_dSBuffer,  final  intRefArray1 a_recvGrids,  final  intRefArray1 a_recvCount,  final  intRefArray2 a_rCountBuffer) { 
 this.nGrids = (a_nGrids);
 this.nCount = (a_nCount);
 this.sBuffer = (a_sBuffer);
 this.dSBuffer = (a_dSBuffer);
 this.recvGrids = (a_recvGrids);
 this.recvCount = (a_recvCount);
 this.rCountBuffer = (a_rCountBuffer);
}
}
 
 value T298 {

 public final  Point2 pt;

 public final  intRefArray2 rCountBuffer;

 public final  intRefArray2 sCountBuffer;
public T298( final  Point2 a_pt,  final  intRefArray2 a_rCountBuffer,  final  intRefArray2 a_sCountBuffer) { 
 this.pt = (a_pt);
 this.rCountBuffer = (a_rCountBuffer);
 this.sCountBuffer = (a_sCountBuffer);
}
}
 
 value T299 {

 public final  intStub RX10_TEMP1573;

 public final  point ( : rank==1 ) RX10_TEMP1565;

 public final  intStub [ : rank==1 ] RX10_TEMP1564;
public T299( final  intStub a_RX10_TEMP1573,  final  point ( : rank==1 ) a_RX10_TEMP1565,  final  intStub [ : rank==1 ] a_RX10_TEMP1564) { 
 this.RX10_TEMP1573 = (a_RX10_TEMP1573);
 this.RX10_TEMP1565 = (a_RX10_TEMP1565);
 this.RX10_TEMP1564 = (a_RX10_TEMP1564);
}
}
 
 value T300 {

 public final  intStub RX10_TEMP1593;

 public final  point ( : rank==1 ) RX10_TEMP1585;

 public final  intStub [ : rank==1 ] RX10_TEMP1584;
public T300( final  intStub a_RX10_TEMP1593,  final  point ( : rank==1 ) a_RX10_TEMP1585,  final  intStub [ : rank==1 ] a_RX10_TEMP1584) { 
 this.RX10_TEMP1593 = (a_RX10_TEMP1593);
 this.RX10_TEMP1585 = (a_RX10_TEMP1585);
 this.RX10_TEMP1584 = (a_RX10_TEMP1584);
}
}
 
 value T301 {

 public final  double edge;

 public final  Point1 pl;

 public final  intRefArray1 lowerbounds;
public T301( final  double a_edge,  final  Point1 a_pl,  final  intRefArray1 a_lowerbounds) { 
 this.edge = (a_edge);
 this.pl = (a_pl);
 this.lowerbounds = (a_lowerbounds);
}
}
 
 value T302 {

 public final  ParticleStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  ParticleStub [ : rank==1 ] RX10_TEMP7;
public T302( final  ParticleStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  ParticleStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T303 {

 public final  intStub RX10_TEMP36;

 public final  point ( : rank==1 ) RX10_TEMP28;

 public final  intStub [ : rank==1 ] RX10_TEMP27;
public T303( final  intStub a_RX10_TEMP36,  final  point ( : rank==1 ) a_RX10_TEMP28,  final  intStub [ : rank==1 ] a_RX10_TEMP27) { 
 this.RX10_TEMP36 = (a_RX10_TEMP36);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
}
}
 
 value T304 {

 public final  intStub RX10_TEMP57;

 public final  point ( : rank==1 ) RX10_TEMP48;

 public final  intStub [ : rank==1 ] RX10_TEMP47;
public T304( final  intStub a_RX10_TEMP57,  final  point ( : rank==1 ) a_RX10_TEMP48,  final  intStub [ : rank==1 ] a_RX10_TEMP47) { 
 this.RX10_TEMP57 = (a_RX10_TEMP57);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
 this.RX10_TEMP47 = (a_RX10_TEMP47);
}
}
 
 value T305 {

 public final  int RX10_TEMP154;

 public final  place RX10_TEMP150;

 public final  point ( : rank==1 ) RX10_TEMP149;

 public final  intStub [ : rank==1 ] RX10_TEMP148;
public T305( final  int a_RX10_TEMP154,  final  place a_RX10_TEMP150,  final  point ( : rank==1 ) a_RX10_TEMP149,  final  intStub [ : rank==1 ] a_RX10_TEMP148) { 
 this.RX10_TEMP154 = (a_RX10_TEMP154);
 this.RX10_TEMP150 = (a_RX10_TEMP150);
 this.RX10_TEMP149 = (a_RX10_TEMP149);
 this.RX10_TEMP148 = (a_RX10_TEMP148);
}
}
 
 value T306 {

 public final  Point1 i;

 public final  intRefArray1 indices;

 public final  ParticleRefArray1 result;

 public final  ParticleRefArray1 particles;
public T306( final  Point1 a_i,  final  intRefArray1 a_indices,  final  ParticleRefArray1 a_result,  final  ParticleRefArray1 a_particles) { 
 this.i = (a_i);
 this.indices = (a_indices);
 this.result = (a_result);
 this.particles = (a_particles);
}
}
 
 value T307 {

 public final  intStub RX10_TEMP31;

 public final  point ( : rank==1 ) RX10_TEMP8;

 public final  intStub [ : rank==1 ] RX10_TEMP7;
public T307( final  intStub a_RX10_TEMP31,  final  point ( : rank==1 ) a_RX10_TEMP8,  final  intStub [ : rank==1 ] a_RX10_TEMP7) { 
 this.RX10_TEMP31 = (a_RX10_TEMP31);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
}
}
 
 value T308 {

 public final  intStub RX10_TEMP66;

 public final  point ( : rank==1 ) RX10_TEMP43;

 public final  intStub [ : rank==1 ] RX10_TEMP42;
public T308( final  intStub a_RX10_TEMP66,  final  point ( : rank==1 ) a_RX10_TEMP43,  final  intStub [ : rank==1 ] a_RX10_TEMP42) { 
 this.RX10_TEMP66 = (a_RX10_TEMP66);
 this.RX10_TEMP43 = (a_RX10_TEMP43);
 this.RX10_TEMP42 = (a_RX10_TEMP42);
}
}
 
 value T309 {

 public final  intStub RX10_TEMP87;

 public final  point ( : rank==1 ) RX10_TEMP78;

 public final  intStub [ : rank==1 ] RX10_TEMP77;
public T309( final  intStub a_RX10_TEMP87,  final  point ( : rank==1 ) a_RX10_TEMP78,  final  intStub [ : rank==1 ] a_RX10_TEMP77) { 
 this.RX10_TEMP87 = (a_RX10_TEMP87);
 this.RX10_TEMP78 = (a_RX10_TEMP78);
 this.RX10_TEMP77 = (a_RX10_TEMP77);
}
}
 
 value T310 {

 public final  int val;

 public final  int dir;

 public final  intRefArray1 tmp2;

 public final  intRefArray1 result;
public T310( final  int a_val,  final  int a_dir,  final  intRefArray1 a_tmp2,  final  intRefArray1 a_result) { 
 this.val = (a_val);
 this.dir = (a_dir);
 this.tmp2 = (a_tmp2);
 this.result = (a_result);
}
}
 
 value T311 {

 public final  ComplexStub RX10_TEMP17;

 public final  point ( : rank==1 ) RX10_TEMP9;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP8;
public T311( final  ComplexStub a_RX10_TEMP17,  final  point ( : rank==1 ) a_RX10_TEMP9,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP8) { 
 this.RX10_TEMP17 = (a_RX10_TEMP17);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
 this.RX10_TEMP8 = (a_RX10_TEMP8);
}
}
 
 value T312 {

 public final  ComplexStub RX10_TEMP38;

 public final  point ( : rank==1 ) RX10_TEMP30;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP29;
public T312( final  ComplexStub a_RX10_TEMP38,  final  point ( : rank==1 ) a_RX10_TEMP30,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP29) { 
 this.RX10_TEMP38 = (a_RX10_TEMP38);
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP29 = (a_RX10_TEMP29);
}
}
 
 value T313 {

 public final  doubleStub RX10_TEMP18;

 public final  point ( : rank==1 ) RX10_TEMP10;

 public final  doubleStub [ : rank==1 ] RX10_TEMP9;
public T313( final  doubleStub a_RX10_TEMP18,  final  point ( : rank==1 ) a_RX10_TEMP10,  final  doubleStub [ : rank==1 ] a_RX10_TEMP9) { 
 this.RX10_TEMP18 = (a_RX10_TEMP18);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
}
}
 
 value T314 {

 public final  ComplexStub RX10_TEMP18;

 public final  point ( : rank==1 ) RX10_TEMP10;

 public final  ComplexStub [ : rank==1 ] RX10_TEMP9;
public T314( final  ComplexStub a_RX10_TEMP18,  final  point ( : rank==1 ) a_RX10_TEMP10,  final  ComplexStub [ : rank==1 ] a_RX10_TEMP9) { 
 this.RX10_TEMP18 = (a_RX10_TEMP18);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
 this.RX10_TEMP9 = (a_RX10_TEMP9);
}
}
 
 value T315 {

 public final  Point1 i;

 public final  ComplexValArray2 sBuffer;

 public final  Region2ValArray1 rSBuffer;

 public final  ComplexRefArray2 result;
public T315( final  Point1 a_i,  final  ComplexValArray2 a_sBuffer,  final  Region2ValArray1 a_rSBuffer,  final  ComplexRefArray2 a_result) { 
 this.i = (a_i);
 this.sBuffer = (a_sBuffer);
 this.rSBuffer = (a_rSBuffer);
 this.result = (a_result);
}
}
 
 value T316 {

 public final  doubleStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T316( final  doubleStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T317 {

 public final  double localSum;

 public final  int index;

 public final  doubleRefArray1 localSumArray;
public T317( final  double a_localSum,  final  int a_index,  final  doubleRefArray1 a_localSumArray) { 
 this.localSum = (a_localSum);
 this.index = (a_index);
 this.localSumArray = (a_localSumArray);
}
}
 
 value T318 {

 public final  intStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;
public T318( final  intStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T319 {

 public final  int localMax;

 public final  int index;

 public final  intRefArray1 localMaxArray;
public T319( final  int a_localMax,  final  int a_index,  final  intRefArray1 a_localMaxArray) { 
 this.localMax = (a_localMax);
 this.index = (a_index);
 this.localMaxArray = (a_localMaxArray);
}
}
 
 value T320 {

 public final  intStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  intStub [ : rank==1 ] RX10_TEMP6;
public T320( final  intStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  intStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T321 {

 public final  int localSum;

 public final  int index;

 public final  intRefArray1 localSumArray;
public T321( final  int a_localSum,  final  int a_index,  final  intRefArray1 a_localSumArray) { 
 this.localSum = (a_localSum);
 this.index = (a_index);
 this.localSumArray = (a_localSumArray);
}
}
 
 value T322 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T322( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T323 {

 public final  doubleStub RX10_TEMP30;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T323( final  doubleStub a_RX10_TEMP30,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T324 {

 public final  doubleStub RX10_TEMP19;

 public final  point ( : rank==1 ) RX10_TEMP11;

 public final  doubleStub [ : rank==1 ] RX10_TEMP10;
public T324( final  doubleStub a_RX10_TEMP19,  final  point ( : rank==1 ) a_RX10_TEMP11,  final  doubleStub [ : rank==1 ] a_RX10_TEMP10) { 
 this.RX10_TEMP19 = (a_RX10_TEMP19);
 this.RX10_TEMP11 = (a_RX10_TEMP11);
 this.RX10_TEMP10 = (a_RX10_TEMP10);
}
}
 
 value T325 {

 public final  double val;

 public final  doubleRefArray1 rcv;
public T325( final  double a_val,  final  doubleRefArray1 a_rcv) { 
 this.val = (a_val);
 this.rcv = (a_rcv);
}
}
 
 value T326 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T326( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T327 {

 public final  Point2 p;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  double affp;

 public final  int y;

 public final  int x;
public T327( final  Point2 a_p,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.p = (a_p);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T328 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T328( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T329 {

 public final  Point2 p;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  double affp;

 public final  int y;

 public final  int x;
public T329( final  Point2 a_p,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.p = (a_p);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T330 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T330( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T331 {

 public final  Point2 p;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  double affp;

 public final  int y;

 public final  int x;
public T331( final  Point2 a_p,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.p = (a_p);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T332 {

 public final  doubleStub RX10_TEMP15;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T332( final  doubleStub a_RX10_TEMP15,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP15 = (a_RX10_TEMP15);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T333 {

 public final  Point2 p;

 public final  double invRadius;

 public final  doubleRefArray2 f;

 public final  double affp;

 public final  int y;

 public final  int x;
public T333( final  Point2 a_p,  final  double a_invRadius,  final  doubleRefArray2 a_f,  final  double a_affp,  final  int a_y,  final  int a_x) { 
 this.p = (a_p);
 this.invRadius = (a_invRadius);
 this.f = (a_f);
 this.affp = (a_affp);
 this.y = (a_y);
 this.x = (a_x);
}
}
 
 value T334 {

 public final  int j;

 public final  int i;

 public final  int N;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T334( final  int a_j,  final  int a_i,  final  int a_N,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.j = (a_j);
 this.i = (a_i);
 this.N = (a_N);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T335 {

 public final  int i;

 public final  int N;

 public final  int y;

 public final  int x;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T335( final  int a_i,  final  int a_N,  final  int a_y,  final  int a_x,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.i = (a_i);
 this.N = (a_N);
 this.y = (a_y);
 this.x = (a_x);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T336 {

 public final  int i;

 public final  Region1 rLocalT2;

 public final  int N;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T336( final  int a_i,  final  Region1 a_rLocalT2,  final  int a_N,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.i = (a_i);
 this.rLocalT2 = (a_rLocalT2);
 this.N = (a_N);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T337 {

 public final  int i1;

 public final  int N;

 public final  int y;

 public final  int x;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T337( final  int a_i1,  final  int a_N,  final  int a_y,  final  int a_x,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.i1 = (a_i1);
 this.N = (a_N);
 this.y = (a_y);
 this.x = (a_x);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T338 {

 public final  int i;

 public final  int N;

 public final  int y;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T338( final  int a_i,  final  int a_N,  final  int a_y,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.i = (a_i);
 this.N = (a_N);
 this.y = (a_y);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T339 {

 public final  int i1;

 public final  int N;

 public final  int y;

 public final  int x;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T339( final  int a_i1,  final  int a_N,  final  int a_y,  final  int a_x,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.i1 = (a_i1);
 this.N = (a_N);
 this.y = (a_y);
 this.x = (a_x);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T340 {

 public final  doubleStub RX10_TEMP16;

 public final  point ( : rank==1 ) RX10_TEMP7;

 public final  doubleStub [ : rank==1 ] RX10_TEMP6;
public T340( final  doubleStub a_RX10_TEMP16,  final  point ( : rank==1 ) a_RX10_TEMP7,  final  doubleStub [ : rank==1 ] a_RX10_TEMP6) { 
 this.RX10_TEMP16 = (a_RX10_TEMP16);
 this.RX10_TEMP7 = (a_RX10_TEMP7);
 this.RX10_TEMP6 = (a_RX10_TEMP6);
}
}
 
 value T341 {

 public final  doubleStub RX10_TEMP37;

 public final  point ( : rank==1 ) RX10_TEMP28;

 public final  doubleStub [ : rank==1 ] RX10_TEMP27;
public T341( final  doubleStub a_RX10_TEMP37,  final  point ( : rank==1 ) a_RX10_TEMP28,  final  doubleStub [ : rank==1 ] a_RX10_TEMP27) { 
 this.RX10_TEMP37 = (a_RX10_TEMP37);
 this.RX10_TEMP28 = (a_RX10_TEMP28);
 this.RX10_TEMP27 = (a_RX10_TEMP27);
}
}
 
 value T342 {

 public final  doubleStub RX10_TEMP58;

 public final  point ( : rank==1 ) RX10_TEMP49;

 public final  doubleStub [ : rank==1 ] RX10_TEMP48;
public T342( final  doubleStub a_RX10_TEMP58,  final  point ( : rank==1 ) a_RX10_TEMP49,  final  doubleStub [ : rank==1 ] a_RX10_TEMP48) { 
 this.RX10_TEMP58 = (a_RX10_TEMP58);
 this.RX10_TEMP49 = (a_RX10_TEMP49);
 this.RX10_TEMP48 = (a_RX10_TEMP48);
}
}
 
 value T343 {

 public final  int i;

 public final  int j2;

 public final  int j1;

 public final  ComplexRefArray2 f;
public T343( final  int a_i,  final  int a_j2,  final  int a_j1,  final  ComplexRefArray2 a_f) { 
 this.i = (a_i);
 this.j2 = (a_j2);
 this.j1 = (a_j1);
 this.f = (a_f);
}
}
 
 value T344 {

 public final  int i;

 public final  Complex t1;

 public final  int j2;

 public final  int j1;

 public final  ComplexRefArray2 f;

 public final  FourierTransform2D X10_TEMP0;
public T344( final  int a_i,  final  Complex a_t1,  final  int a_j2,  final  int a_j1,  final  ComplexRefArray2 a_f,  final  FourierTransform2D a_X10_TEMP0) { 
 this.i = (a_i);
 this.t1 = (a_t1);
 this.j2 = (a_j2);
 this.j1 = (a_j1);
 this.f = (a_f);
 this.X10_TEMP0 = (a_X10_TEMP0);
}
}
 
 value T345 {

 public final  int i;

 public final  Complex s;

 public final  int j2;

 public final  int j1;

 public final  ComplexRefArray2 f;
public T345( final  int a_i,  final  Complex a_s,  final  int a_j2,  final  int a_j1,  final  ComplexRefArray2 a_f) { 
 this.i = (a_i);
 this.s = (a_s);
 this.j2 = (a_j2);
 this.j1 = (a_j1);
 this.f = (a_f);
}
}
 
 value T346 {

 public final  doubleStub RX10_TEMP30;

 public final  point ( : rank==1 ) RX10_TEMP21;

 public final  doubleStub [ : rank==1 ] RX10_TEMP20;
public T346( final  doubleStub a_RX10_TEMP30,  final  point ( : rank==1 ) a_RX10_TEMP21,  final  doubleStub [ : rank==1 ] a_RX10_TEMP20) { 
 this.RX10_TEMP30 = (a_RX10_TEMP30);
 this.RX10_TEMP21 = (a_RX10_TEMP21);
 this.RX10_TEMP20 = (a_RX10_TEMP20);
}
}
 
 value T347 {

 public final  Point2 pt;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 data;
public T347( final  Point2 a_pt,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_data) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.data = (a_data);
}
}
 
 value T348 {

 public final  Point2 pt;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 result;
public T348( final  Point2 a_pt,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_result) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.result = (a_result);
}
}
 
 value T349 {

 public final  int j;

 public final  int i;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray3 dstBuffer;
public T349( final  int a_j,  final  int a_i,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray3 a_dstBuffer) { 
 this.j = (a_j);
 this.i = (a_i);
 this.sBuffer = (a_sBuffer);
 this.dstBuffer = (a_dstBuffer);
}
}
 
 value T350 {

 public final  int j;

 public final  int i;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray3 dstBuffer;
public T350( final  int a_j,  final  int a_i,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray3 a_dstBuffer) { 
 this.j = (a_j);
 this.i = (a_i);
 this.sBuffer = (a_sBuffer);
 this.dstBuffer = (a_dstBuffer);
}
}
 
 value T351 {

 public final  Point2 pt;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 result;
public T351( final  Point2 a_pt,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_result) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.result = (a_result);
}
}
 
 value T352 {

 public final  Point2 pt;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 result;
public T352( final  Point2 a_pt,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_result) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.result = (a_result);
}
}
 
 value T353 {

 public final  Point2 pt;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 guards;
public T353( final  Point2 a_pt,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_guards) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.guards = (a_guards);
}
}
 
 value T354 {

 public final  Point2 pt;

 public final  doubleValArray2 sBuffer;

 public final  doubleRefArray2 guards;
public T354( final  Point2 a_pt,  final  doubleValArray2 a_sBuffer,  final  doubleRefArray2 a_guards) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.guards = (a_guards);
}
}
 
 value T355 {

 public final  int i;

 public final  int pid;

 public final  ParticleValArray1 lBuffer;

 public final  ParticleRefArray2 rightInBuffer;
public T355( final  int a_i,  final  int a_pid,  final  ParticleValArray1 a_lBuffer,  final  ParticleRefArray2 a_rightInBuffer) { 
 this.i = (a_i);
 this.pid = (a_pid);
 this.lBuffer = (a_lBuffer);
 this.rightInBuffer = (a_rightInBuffer);
}
}
 
 value T356 {

 public final  int i;

 public final  int pid;

 public final  ParticleValArray1 rBuffer;

 public final  ParticleRefArray2 leftInBuffer;
public T356( final  int a_i,  final  int a_pid,  final  ParticleValArray1 a_rBuffer,  final  ParticleRefArray2 a_leftInBuffer) { 
 this.i = (a_i);
 this.pid = (a_pid);
 this.rBuffer = (a_rBuffer);
 this.leftInBuffer = (a_leftInBuffer);
}
}
 
 value T357 {

 public final  int i;

 public final  intValArray1 sBuffer;

 public final  intRefArray2 rCountBuffer;
public T357( final  int a_i,  final  intValArray1 a_sBuffer,  final  intRefArray2 a_rCountBuffer) { 
 this.i = (a_i);
 this.sBuffer = (a_sBuffer);
 this.rCountBuffer = (a_rCountBuffer);
}
}
 
 value T358 {

 public final  int i;

 public final  intValArray1 sBuffer;

 public final  intRefArray2 rCountBuffer;
public T358( final  int a_i,  final  intValArray1 a_sBuffer,  final  intRefArray2 a_rCountBuffer) { 
 this.i = (a_i);
 this.sBuffer = (a_sBuffer);
 this.rCountBuffer = (a_rCountBuffer);
}
}
 
 value T359 {

 public final  intStub RX10_TEMP157;

 public final  point ( : rank==1 ) RX10_TEMP149;

 public final  intStub [ : rank==1 ] RX10_TEMP148;
public T359( final  intStub a_RX10_TEMP157,  final  point ( : rank==1 ) a_RX10_TEMP149,  final  intStub [ : rank==1 ] a_RX10_TEMP148) { 
 this.RX10_TEMP157 = (a_RX10_TEMP157);
 this.RX10_TEMP149 = (a_RX10_TEMP149);
 this.RX10_TEMP148 = (a_RX10_TEMP148);
}
}
 
 value T360 {

 public final  Point2 pt;

 public final  ComplexValArray2 sBuffer;

 public final  ComplexRefArray2 result;
public T360( final  Point2 a_pt,  final  ComplexValArray2 a_sBuffer,  final  ComplexRefArray2 a_result) { 
 this.pt = (a_pt);
 this.sBuffer = (a_sBuffer);
 this.result = (a_result);
}
}
 
 value T361 {

 public final  int j;

 public final  int i;

 public final  int N;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T361( final  int a_j,  final  int a_i,  final  int a_N,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.j = (a_j);
 this.i = (a_i);
 this.N = (a_N);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}
 
 value T362 {

 public final  int j;

 public final  int i;

 public final  int N;

 public final  int index;

 public final  ComplexRefArray2 ft;

 public final  doubleRefArray3 table;
public T362( final  int a_j,  final  int a_i,  final  int a_N,  final  int a_index,  final  ComplexRefArray2 a_ft,  final  doubleRefArray3 a_table) { 
 this.j = (a_j);
 this.i = (a_i);
 this.N = (a_N);
 this.index = (a_index);
 this.ft = (a_ft);
 this.table = (a_table);
}
}

 value doubleValArray2 { public final Region2 regionValue ; public final double value [ : rank==1 ] contents ; public doubleValArray2 ( final Region2 regionValue_ , final double value [ : rank==1 ] contents_ ) { this . regionValue = ( regionValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value booleanStub { public final boolean [ : rank==1 ] localArray ; public booleanStub ( final boolean [ : rank==1 ] localArray_ ) { this . localArray = ( localArray_ ) ; }

} 

 value Particle { public final double x ; public final double y ; public final double xVel ; public final double yVel ; public final int pid ; public Particle ( ) { final double X10_TEMP2 = ( 0.0 ) ; this . x = ( X10_TEMP2 ) ; final double X10_TEMP4 = ( 0.0 ) ; this . y = ( X10_TEMP4 ) ; final double X10_TEMP6 = ( 0.0 ) ; this . xVel = ( X10_TEMP6 ) ; final double X10_TEMP8 = ( 0.0 ) ; this . yVel = ( X10_TEMP8 ) ; final int X10_TEMP9 = ( 1 ) ; final int X10_TEMP10 = 0 ; final int X10_TEMP12 = ( X10_TEMP10 - X10_TEMP9 ) ; this . pid = ( X10_TEMP12 ) ; }
 public Particle ( final double x , final double y , final double xVel , final double yVel ) { final double X10_TEMP2 = ( x ) ; this . x = ( X10_TEMP2 ) ; final double X10_TEMP4 = ( y ) ; this . y = ( X10_TEMP4 ) ; final double X10_TEMP6 = ( xVel ) ; this . xVel = ( X10_TEMP6 ) ; final double X10_TEMP8 = ( yVel ) ; this . yVel = ( X10_TEMP8 ) ; final int X10_TEMP9 = ( 1 ) ; final int X10_TEMP10 = 0 ; final int X10_TEMP12 = ( X10_TEMP10 - X10_TEMP9 ) ; this . pid = ( X10_TEMP12 ) ; }
 public Particle ( final double x , final double y , final double xVel , final double yVel , final int pid ) { final double X10_TEMP2 = ( x ) ; this . x = ( X10_TEMP2 ) ; final double X10_TEMP4 = ( y ) ; this . y = ( X10_TEMP4 ) ; final double X10_TEMP6 = ( xVel ) ; this . xVel = ( X10_TEMP6 ) ; final double X10_TEMP8 = ( yVel ) ; this . yVel = ( X10_TEMP8 ) ; final int X10_TEMP10 = ( pid ) ; this . pid = ( X10_TEMP10 ) ; }

} 

 value ComplexValArray2 { public final Region2 regionValue ; public final Complex value [ : rank==1 ] contents ; public ComplexValArray2 ( final Region2 regionValue_ , final Complex value [ : rank==1 ] contents_ ) { this . regionValue = ( regionValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value ComplexValArray1 { public final Region1 regionValue ; public final Complex value [ : rank==1 ] contents ; public ComplexValArray1 ( final Region1 regionValue_ , final Complex value [ : rank==1 ] contents_ ) { this . regionValue = ( regionValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value Complex { public final double real ; public final double imag ; public Complex ( final double real , final double imag ) { final double X10_TEMP2 = ( real ) ; this . real = ( X10_TEMP2 ) ; final double X10_TEMP4 = ( imag ) ; this . imag = ( X10_TEMP4 ) ; }

} 

 value doubleStub { public final double [ : rank==1 ] localArray ; public doubleStub ( final double [ : rank==1 ] localArray_ ) { this . localArray = ( localArray_ ) ; }

} 

 value Region1Stub { public final Region1 [ : rank==1 ] localArray ; public Region1Stub ( final Region1 [ : rank==1 ] localArray_ ) { this . localArray = ( localArray_ ) ; }

} 

 value intValArray1 { public final Region1 regionValue ; public final int value [ : rank==1 ] contents ; public intValArray1 ( final Region1 regionValue_ , final int value [ : rank==1 ] contents_ ) { this . regionValue = ( regionValue_ ) ; this . contents = ( contents_ ) ; }

} 

 class X10Util {
} 

 value Region1RefArray1 { public final Dist1 distValue ; public final Region1Stub value [ : rank==1 ] contents ; public Region1RefArray1 ( final Dist1 distValue_ , final Region1Stub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value ParticleValArray1 { public final Region1 regionValue ; public final Particle value [ : rank==1 ] contents ; public ParticleValArray1 ( final Region1 regionValue_ , final Particle value [ : rank==1 ] contents_ ) { this . regionValue = ( regionValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value intRefArray2 { public final Dist2 distValue ; public final intStub value [ : rank==1 ] contents ; public intRefArray2 ( final Dist2 distValue_ , final intStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value intRefArray1 { public final Dist1 distValue ; public final intStub value [ : rank==1 ] contents ; public intRefArray1 ( final Dist1 distValue_ , final intStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value ParticleRefArray2 { public final Dist2 distValue ; public final ParticleStub value [ : rank==1 ] contents ; public ParticleRefArray2 ( final Dist2 distValue_ , final ParticleStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 class ArrayUtil {
} 

 value ParticleRefArray1 { public final Dist1 distValue ; public final ParticleStub value [ : rank==1 ] contents ; public ParticleRefArray1 ( final Dist1 distValue_ , final ParticleStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value doubleRefArray2 { public final Dist2 distValue ; public final doubleStub value [ : rank==1 ] contents ; public doubleRefArray2 ( final Dist2 distValue_ , final doubleStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value doubleRefArray1 { public final Dist1 distValue ; public final doubleStub value [ : rank==1 ] contents ; public doubleRefArray1 ( final Dist1 distValue_ , final doubleStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value Dist1 { public final Region1 dReg ; public final Dist dDist ; public Dist1 ( final Region1 dReg_ , final Dist dDist_ ) { this . dReg = ( dReg_ ) ; this . dDist = ( dDist_ ) ; }

} 

 value Dist2 { public final Region2 dReg ; public final Dist dDist ; public Dist2 ( final Region2 dReg_ , final Dist dDist_ ) { this . dReg = ( dReg_ ) ; this . dDist = ( dDist_ ) ; }

} 

 value Dist3 { public final Region3 dReg ; public final Dist dDist ; public Dist3 ( final Region3 dReg_ , final Dist dDist_ ) { this . dReg = ( dReg_ ) ; this . dDist = ( dDist_ ) ; }

} 

 value Region2ValArray1 { public final Region1 regionValue ; public final Region2 value [ : rank==1 ] contents ; public Region2ValArray1 ( final Region1 regionValue_ , final Region2 value [ : rank==1 ] contents_ ) { this . regionValue = ( regionValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value doubleRefArray3 { public final Dist3 distValue ; public final doubleStub value [ : rank==1 ] contents ; public doubleRefArray3 ( final Dist3 distValue_ , final doubleStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 class LinearESOpenPIC2D { public final Random r ; public final PoissonSolver solver ; public ParticleRefArray1 particles ; public doubleRefArray2 backgroundCharge ; public long totalTime ; public long initTime ; public long depositTime ; public long redistTime ; public long solverTime ; public long pushTime ; public long moveTime ; public LinearESOpenPIC2D ( ) { final Random X10_TEMP2 = ( new Random ( ) ) ; this . r = ( X10_TEMP2 ) ; final double X10_TEMP3 = ( Program . _LinearESOpenPIC2D_XLENGTH ) ; final double X10_TEMP4 = ( 2.0 ) ; final double X10_TEMP6 = ( X10_TEMP3 - X10_TEMP4 ) ; final double X10_TEMP7 = ( Program . _LinearESOpenPIC2D_YLENGTH ) ; final double X10_TEMP8 = ( 2.0 ) ; final double X10_TEMP10 = ( X10_TEMP7 - X10_TEMP8 ) ; final double X10_TEMP12 = ( X10_TEMP6 * X10_TEMP10 ) ; final int X10_TEMP13 = ( Program . _LinearESOpenPIC2D_NPARTICLES ) ; double affp = ( X10_TEMP12 / X10_TEMP13 ) ; int X10_TEMP18 = ( Program . _LinearESOpenPIC2D_NUMBER_OF_XBITS ) ; int X10_TEMP19 = ( Program . _LinearESOpenPIC2D_NUMBER_OF_YBITS ) ; final PoissonSolver X10_TEMP21 = ( new PoissonSolver ( X10_TEMP18 , X10_TEMP19 , affp ) ) ; this . solver = ( X10_TEMP21 ) ; final long X10_TEMP23 = ( 0 ) ; this . totalTime = ( X10_TEMP23 ) ; final long X10_TEMP25 = ( 0 ) ; this . initTime = ( X10_TEMP25 ) ; final long X10_TEMP27 = ( 0 ) ; this . depositTime = ( X10_TEMP27 ) ; final long X10_TEMP29 = ( 0 ) ; this . redistTime = ( X10_TEMP29 ) ; final long X10_TEMP31 = ( 0 ) ; this . pushTime = ( X10_TEMP31 ) ; final long X10_TEMP33 = ( 0 ) ; this . moveTime = ( X10_TEMP33 ) ; }

} 

 class Timer { public doubleRefArray1 start_time ; public doubleRefArray1 elapsed_time ; public doubleRefArray1 total_time ; public Timer ( ) { final int X10_TEMP3 = ( 0 ) ; final int X10_TEMP4 = ( Program . _Timer_max_counters ) ; final Region1 X10_TEMP5 = Program . createNewRegion1R ( X10_TEMP3 , X10_TEMP4 ) ; final place X10_TEMP6 = ( place.FIRST_PLACE ) ; final Dist1 d = Program . getPlaceDist1 ( X10_TEMP5 , X10_TEMP6 ) ; final Region1 RX10_TEMP0 = d . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount1 ( d , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T174 utmp174 = new T174(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {this.thread174(utmp174); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP17 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP19 ) { final doubleStub RX10_TEMP18 = RX10_TEMP6 [ RX10_TEMP19 ] ; return RX10_TEMP18 ; }
 ) ; final doubleRefArray1 RX10_TEMP20 = new doubleRefArray1 ( d , RX10_TEMP17 ) ; final doubleRefArray1 X10_TEMP11 = RX10_TEMP20 ; this . start_time = ( X10_TEMP11 ) ; final Region1 RX10_TEMP21 = d . dReg ; final int RX10_TEMP22 = 0 ; final int RX10_TEMP23 = 1 ; int RX10_TEMP24 = place.MAX_PLACES ; RX10_TEMP24 = RX10_TEMP24 - RX10_TEMP23 ; final region ( : rank==1 ) RX10_TEMP25 = [ 0 : RX10_TEMP24 ] ; final dist ( : rank==1 ) RX10_TEMP26 = [ 0 : RX10_TEMP24 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP27 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP26 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP28 : RX10_TEMP25 ) { final place RX10_TEMP29 = here ; final int RX10_TEMP30 = RX10_TEMP28 [0] ; final place RX10_TEMP31 = place.places ( RX10_TEMP30 ) ; final int RX10_TEMP32 = Program . getDistLocalCount1 ( d , RX10_TEMP30 ) ; final int RX10_TEMP33 = RX10_TEMP32 - RX10_TEMP23 ; 
 final T175 utmp175 = new T175(RX10_TEMP33, RX10_TEMP29, RX10_TEMP28, RX10_TEMP27);
 async (RX10_TEMP31) {this.thread175(utmp175); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP38 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP25 ] ( point ( : rank==1 ) RX10_TEMP40 ) { final doubleStub RX10_TEMP39 = RX10_TEMP27 [ RX10_TEMP40 ] ; return RX10_TEMP39 ; }
 ) ; final doubleRefArray1 RX10_TEMP41 = new doubleRefArray1 ( d , RX10_TEMP38 ) ; final doubleRefArray1 X10_TEMP15 = RX10_TEMP41 ; this . elapsed_time = ( X10_TEMP15 ) ; final Region1 RX10_TEMP42 = d . dReg ; final int RX10_TEMP43 = 0 ; final int RX10_TEMP44 = 1 ; int RX10_TEMP45 = place.MAX_PLACES ; RX10_TEMP45 = RX10_TEMP45 - RX10_TEMP44 ; final region ( : rank==1 ) RX10_TEMP46 = [ 0 : RX10_TEMP45 ] ; final dist ( : rank==1 ) RX10_TEMP47 = [ 0 : RX10_TEMP45 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP48 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP47 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP49 : RX10_TEMP46 ) { final place RX10_TEMP50 = here ; final int RX10_TEMP51 = RX10_TEMP49 [0] ; final place RX10_TEMP52 = place.places ( RX10_TEMP51 ) ; final int RX10_TEMP53 = Program . getDistLocalCount1 ( d , RX10_TEMP51 ) ; final int RX10_TEMP54 = RX10_TEMP53 - RX10_TEMP44 ; 
 final T176 utmp176 = new T176(RX10_TEMP54, RX10_TEMP50, RX10_TEMP49, RX10_TEMP48);
 async (RX10_TEMP52) {this.thread176(utmp176); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP59 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP46 ] ( point ( : rank==1 ) RX10_TEMP61 ) { final doubleStub RX10_TEMP60 = RX10_TEMP48 [ RX10_TEMP61 ] ; return RX10_TEMP60 ; }
 ) ; final doubleRefArray1 RX10_TEMP62 = new doubleRefArray1 ( d , RX10_TEMP59 ) ; final doubleRefArray1 X10_TEMP19 = RX10_TEMP62 ; this . total_time = ( X10_TEMP19 ) ; }
 public void thread174(final T174 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP14 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP15 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP14 ] ( point ( : rank==1 ) RX10_TEMP13 ) { final double X10_TEMP9 = ( 0 ) ; return X10_TEMP9 ; }
 ) ; final doubleStub RX10_TEMP16 = new doubleStub ( RX10_TEMP15 ) ; 
 final T340 utmp340 = new T340(RX10_TEMP16, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread340(utmp340); }
 }
 }
 public void thread175(final T175 utmpz) {final  int RX10_TEMP33 = utmpz.RX10_TEMP33;
final  place RX10_TEMP29 = utmpz.RX10_TEMP29;
final  point ( : rank==1 ) RX10_TEMP28 = utmpz.RX10_TEMP28;
final  doubleStub [ : rank==1 ] RX10_TEMP27 = utmpz.RX10_TEMP27;
 { final dist ( : rank==1 ) RX10_TEMP35 = [ 0 : RX10_TEMP33 ] -> here ; final double [ : rank==1 ] RX10_TEMP36 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP35 ] ( point ( : rank==1 ) RX10_TEMP34 ) { final double X10_TEMP13 = ( 0 ) ; return X10_TEMP13 ; }
 ) ; final doubleStub RX10_TEMP37 = new doubleStub ( RX10_TEMP36 ) ; 
 final T341 utmp341 = new T341(RX10_TEMP37, RX10_TEMP28, RX10_TEMP27);
 async (RX10_TEMP29) {this.thread341(utmp341); }
 }
 }
 public void thread176(final T176 utmpz) {final  int RX10_TEMP54 = utmpz.RX10_TEMP54;
final  place RX10_TEMP50 = utmpz.RX10_TEMP50;
final  point ( : rank==1 ) RX10_TEMP49 = utmpz.RX10_TEMP49;
final  doubleStub [ : rank==1 ] RX10_TEMP48 = utmpz.RX10_TEMP48;
 { final dist ( : rank==1 ) RX10_TEMP56 = [ 0 : RX10_TEMP54 ] -> here ; final double [ : rank==1 ] RX10_TEMP57 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP56 ] ( point ( : rank==1 ) RX10_TEMP55 ) { final double X10_TEMP17 = ( 0 ) ; return X10_TEMP17 ; }
 ) ; final doubleStub RX10_TEMP58 = new doubleStub ( RX10_TEMP57 ) ; 
 final T342 utmp342 = new T342(RX10_TEMP58, RX10_TEMP49, RX10_TEMP48);
 async (RX10_TEMP50) {this.thread342(utmp342); }
 }
 }
 public void thread340(final T340 utmpz) {final  doubleStub RX10_TEMP16 = utmpz.RX10_TEMP16;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP16 ) ; }
 }
 public void thread341(final T341 utmpz) {final  doubleStub RX10_TEMP37 = utmpz.RX10_TEMP37;
final  point ( : rank==1 ) RX10_TEMP28 = utmpz.RX10_TEMP28;
final  doubleStub [ : rank==1 ] RX10_TEMP27 = utmpz.RX10_TEMP27;
 { RX10_TEMP27 [ RX10_TEMP28 ] = ( RX10_TEMP37 ) ; }
 }
 public void thread342(final T342 utmpz) {final  doubleStub RX10_TEMP58 = utmpz.RX10_TEMP58;
final  point ( : rank==1 ) RX10_TEMP49 = utmpz.RX10_TEMP49;
final  doubleStub [ : rank==1 ] RX10_TEMP48 = utmpz.RX10_TEMP48;
 { RX10_TEMP48 [ RX10_TEMP49 ] = ( RX10_TEMP58 ) ; }
 }

} 

 value ComplexRefArray2 { public final Dist2 distValue ; public final ComplexStub value [ : rank==1 ] contents ; public ComplexRefArray2 ( final Dist2 distValue_ , final ComplexStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value ComplexStub { public final Complex [ : rank==1 ] localArray ; public ComplexStub ( final Complex [ : rank==1 ] localArray_ ) { this . localArray = ( localArray_ ) ; }

} 

 value booleanRefArray1 { public final Dist1 distValue ; public final booleanStub value [ : rank==1 ] contents ; public booleanRefArray1 ( final Dist1 distValue_ , final booleanStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value Region1 { public final int regRank ; public final int regSize ; public final boolean regType ; public final int low0 ; public final int dim0 ; public final Point1 value [ : rank==1 ] pointArray ; public Region1 ( final Point1 value [ : rank==1 ] pointArray_ , final int regSize_ ) { final int zero = 0 ; final int one = 1 ; final int minusOne = zero - one ; final boolean f = false ; final int regR = 1 ; this . regRank = ( regR ) ; this . regSize = ( regSize_ ) ; this . pointArray = ( pointArray_ ) ; this . regType = ( f ) ; this . low0 = ( minusOne ) ; this . dim0 = ( zero ) ; }
 public Region1 ( final Point1 value [ : rank==1 ] pointArray_ , final int regSize_ , final int low0_ , final int dim0_ ) { final boolean t = true ; final int regR = 1 ; this . regRank = ( regR ) ; this . regSize = ( regSize_ ) ; this . pointArray = ( pointArray_ ) ; this . regType = ( t ) ; this . low0 = ( low0_ ) ; this . dim0 = ( dim0_ ) ; }

} 

 value ComplexRefArray1 { public final Dist1 distValue ; public final ComplexStub value [ : rank==1 ] contents ; public ComplexRefArray1 ( final Dist1 distValue_ , final ComplexStub value [ : rank==1 ] contents_ ) { this . distValue = ( distValue_ ) ; this . contents = ( contents_ ) ; }

} 

 value ParticleStub { public final Particle [ : rank==1 ] localArray ; public ParticleStub ( final Particle [ : rank==1 ] localArray_ ) { this . localArray = ( localArray_ ) ; }

} 

 value Region3 { public final int regRank ; public final int regSize ; public final boolean regType ; public final int low0 ; public final int dim0 ; public final int low1 ; public final int dim1 ; public final int low2 ; public final int dim2 ; public final Point3 value [ : rank==1 ] pointArray ; public Region3 ( final Point3 value [ : rank==1 ] pointArray_ , final int regSize_ ) { final int zero = 0 ; final int one = 1 ; final int minusOne = zero - one ; final boolean f = false ; final int regR = 3 ; this . regRank = ( regR ) ; this . regSize = ( regSize_ ) ; this . pointArray = ( pointArray_ ) ; this . regType = ( f ) ; this . low0 = ( minusOne ) ; this . dim0 = ( zero ) ; this . low1 = ( minusOne ) ; this . dim1 = ( zero ) ; this . low2 = ( minusOne ) ; this . dim2 = ( zero ) ; }
 public Region3 ( final Point3 value [ : rank==1 ] pointArray_ , final int regSize_ , final int low0_ , final int dim0_ , final int low1_ , final int dim1_ , final int low2_ , final int dim2_ ) { final boolean t = true ; final int regR = 3 ; this . regRank = ( regR ) ; this . regSize = ( regSize_ ) ; this . pointArray = ( pointArray_ ) ; this . regType = ( t ) ; this . low0 = ( low0_ ) ; this . dim0 = ( dim0_ ) ; this . low1 = ( low1_ ) ; this . dim1 = ( dim1_ ) ; this . low2 = ( low2_ ) ; this . dim2 = ( dim2_ ) ; }

} 

 value PoissonSolver { public final int x ; public final int y ; public final int xBits ; public final int yBits ; public final double ari ; public final double affp ; public final FourierTransform2D fft ; public final doubleRefArray3 ffg ; public final doubleValArray2 ffg2 ; public PoissonSolver ( final int xBits , final int yBits , final double affp ) { final int X10_TEMP2 = ( xBits ) ; this . xBits = ( X10_TEMP2 ) ; final int X10_TEMP4 = ( yBits ) ; this . yBits = ( X10_TEMP4 ) ; final double X10_TEMP6 = ( affp ) ; this . affp = ( X10_TEMP6 ) ; final int X10_TEMP7 = ( 1 ) ; final int x0 = ( X10_TEMP7 << xBits ) ; final int X10_TEMP9 = ( 1 ) ; final int y0 = ( X10_TEMP9 << yBits ) ; this . x = ( x0 ) ; this . y = ( y0 ) ; final double X10_TEMP14 = ( 0 ) ; this . ari = ( X10_TEMP14 ) ; final int X10_TEMP15 = ( 1 ) ; int X10_TEMP19 = ( yBits + X10_TEMP15 ) ; final int X10_TEMP17 = ( 1 ) ; int X10_TEMP20 = ( xBits + X10_TEMP17 ) ; final FourierTransform2D fft0 = ( new FourierTransform2D ( X10_TEMP19 , X10_TEMP20 ) ) ; this . fft = ( fft0 ) ; final doubleRefArray3 tables = this . PoissonSolver_initTables ( fft0 , x0 , y0 , affp ) ; final doubleRefArray3 X10_TEMP34 = this . PoissonSolver_makeFFG ( tables , x0 , y0 ) ; this . ffg = ( X10_TEMP34 ) ; final doubleValArray2 X10_TEMP40 = this . PoissonSolver_makeFFG2 ( tables , x0 , y0 ) ; this . ffg2 = ( X10_TEMP40 ) ; final String X10_TEMP42 = ( "Poisson Solver initialized" ) ; System.out.println ( X10_TEMP42 ) ; }
 public doubleRefArray3 PoissonSolver_initTables ( final FourierTransform2D fft , final int x , final int y , final double affp ) { final int X10_TEMP4 = ( 0 ) ; final int X10_TEMP2 = ( 1 ) ; final int X10_TEMP5 = ( x - X10_TEMP2 ) ; final Region1 r1 = Program . createNewRegion1R ( X10_TEMP4 , X10_TEMP5 ) ; final int X10_TEMP9 = ( 0 ) ; final Region1 r2 = Program . createNewRegion1R ( X10_TEMP9 , y ) ; final int X10_TEMP13 = ( 0 ) ; final int X10_TEMP14 = ( 3 ) ; final Region1 r3 = Program . createNewRegion1R ( X10_TEMP13 , X10_TEMP14 ) ; final Dist2 X10_TEMP20 = Program . X10Util_distBlockStar2 ( r1 , r2 ) ; final Dist3 dTable1 = Program . X10Util_extendDistRank3D ( X10_TEMP20 , r3 ) ; final place first = ( place.FIRST_PLACE ) ; final int X10_TEMP27 = ( 0 ) ; final int X10_TEMP30 = ( 0 ) ; final int X10_TEMP31 = ( 3 ) ; final Region3 X10_TEMP32 = Program . createNewRegion3RRR ( x , x , X10_TEMP27 , y , X10_TEMP30 , X10_TEMP31 ) ; final Dist3 X10_TEMP34 = Program . getPlaceDist3 ( X10_TEMP32 , first ) ; final Dist3 dTable2 = X10_TEMP34 ; final Dist3 dTable = Program . unionDist3 ( dTable1 , dTable2 ) ; final Region3 RX10_TEMP0 = dTable . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount3 ( dTable , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T159 utmp159 = new T159(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {this.thread159(utmp159); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray3 RX10_TEMP19 = new doubleRefArray3 ( dTable , RX10_TEMP16 ) ; final doubleRefArray3 table = RX10_TEMP19 ; final String X10_TEMP39 = ( "Init: Green's function" ) ; System.out.println ( X10_TEMP39 ) ; this . PoissonSolver_initGreensFnTable ( table , fft , x , y , affp ) ; final String X10_TEMP47 = ( "Init: Shape factor" ) ; System.out.println ( X10_TEMP47 ) ; this . PoissonSolver_initShapeFactorTable ( table , fft , x , y , affp ) ; final String X10_TEMP55 = ( "Init: X Electric field" ) ; System.out.println ( X10_TEMP55 ) ; this . PoissonSolver_initElectricFieldXTable ( table , fft , x , y , affp ) ; final String X10_TEMP63 = ( "Init: Y Electric field" ) ; System.out.println ( X10_TEMP63 ) ; this . PoissonSolver_initElectricFieldYTable ( table , fft , x , y , affp ) ; return table ; }
 public doubleRefArray3 PoissonSolver_makeFFG ( final doubleRefArray3 table , final int x , final int y ) { final int X10_TEMP4 = ( 0 ) ; final int X10_TEMP2 = ( 1 ) ; final int X10_TEMP5 = ( x - X10_TEMP2 ) ; final Region1 r1 = Program . createNewRegion1R ( X10_TEMP4 , X10_TEMP5 ) ; final int X10_TEMP9 = ( 0 ) ; final Region1 r2 = Program . createNewRegion1R ( X10_TEMP9 , y ) ; final int X10_TEMP13 = ( 0 ) ; final int X10_TEMP14 = ( 3 ) ; final Region1 r3 = Program . createNewRegion1R ( X10_TEMP13 , X10_TEMP14 ) ; final Dist2 X10_TEMP20 = Program . X10Util_distBlockStar2 ( r1 , r2 ) ; final Dist3 dResult = Program . X10Util_extendDistRank3D ( X10_TEMP20 , r3 ) ; final Region3 RX10_TEMP0 = dResult . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount3 ( dResult , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; final Dist3 RX10_TEMP13 = Program . restrictDist3 ( dResult , RX10_TEMP10 ) ; final Region3 RX10_TEMP14 = RX10_TEMP13 . dReg ; 
 final T160 utmp160 = new T160(RX10_TEMP14, RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6, table);
 async (RX10_TEMP10) {this.thread160(utmp160); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP31 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP33 ) { final doubleStub RX10_TEMP32 = RX10_TEMP6 [ RX10_TEMP33 ] ; return RX10_TEMP32 ; }
 ) ; final doubleRefArray3 RX10_TEMP34 = new doubleRefArray3 ( dResult , RX10_TEMP31 ) ; final doubleRefArray3 X10_TEMP26 = RX10_TEMP34 ; return X10_TEMP26 ; }
 public doubleValArray2 PoissonSolver_makeFFG2 ( final doubleRefArray3 table , final int x , final int y ) { final int X10_TEMP3 = ( 0 ) ; final int X10_TEMP6 = ( 0 ) ; final int X10_TEMP7 = ( 3 ) ; final Region2 rResult = Program . createNewRegion2RR ( X10_TEMP3 , y , X10_TEMP6 , X10_TEMP7 ) ; final Region2 RX10_TEMP0 = rResult ; final int RX10_TEMP60 = rResult . regSize ; final int RX10_TEMP61 = 1 ; final int RX10_TEMP62 = RX10_TEMP60 - RX10_TEMP61 ; final region ( : rank==1 ) RX10_TEMP59 = [ 0 : RX10_TEMP62 ] ; final double value [ : rank==1 ] RX10_TEMP63 = ( double value [ : rank==1 ] ) ( new double value [ RX10_TEMP59 ] ( point ( : rank==1 ) RX10_TEMP1 ) { final int RX10_TEMP3 = RX10_TEMP1 [0] ; final Point2 RX10_TEMP2 = Program . regionOrdinalPoint2 ( RX10_TEMP0 , RX10_TEMP3 ) ; final int i = RX10_TEMP2 . f0 ; final int j = RX10_TEMP2 . f1 ; final place pHere = ( here ) ; final int X10_TEMP12 = ( 0 ) ; final int X10_TEMP13 = ( 0 ) ; final Region1 X10_TEMP14 = Program . createNewRegion1R ( X10_TEMP12 , X10_TEMP13 ) ; final place X10_TEMP15 = ( here ) ; final Dist1 dDst = Program . getPlaceDist1 ( X10_TEMP14 , X10_TEMP15 ) ; final Region1 RX10_TEMP4 = dDst . dReg ; final int RX10_TEMP5 = 0 ; final int RX10_TEMP6 = 1 ; int RX10_TEMP7 = place.MAX_PLACES ; RX10_TEMP7 = RX10_TEMP7 - RX10_TEMP6 ; final region ( : rank==1 ) RX10_TEMP8 = [ 0 : RX10_TEMP7 ] ; final dist ( : rank==1 ) RX10_TEMP9 = [ 0 : RX10_TEMP7 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP10 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP9 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP11 : RX10_TEMP8 ) { final place RX10_TEMP12 = here ; final int RX10_TEMP13 = RX10_TEMP11 [0] ; final place RX10_TEMP14 = place.places ( RX10_TEMP13 ) ; final int RX10_TEMP15 = Program . getDistLocalCount1 ( dDst , RX10_TEMP13 ) ; final int RX10_TEMP16 = RX10_TEMP15 - RX10_TEMP6 ; 
 final T161 utmp161 = new T161(RX10_TEMP16, RX10_TEMP12, RX10_TEMP11, RX10_TEMP10);
 async (RX10_TEMP14) {this.thread161(utmp161); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP20 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP8 ] ( point ( : rank==1 ) RX10_TEMP22 ) { final doubleStub RX10_TEMP21 = RX10_TEMP10 [ RX10_TEMP22 ] ; return RX10_TEMP21 ; }
 ) ; final doubleRefArray1 RX10_TEMP23 = new doubleRefArray1 ( dDst , RX10_TEMP20 ) ; final doubleRefArray1 rcv = RX10_TEMP23 ; finish { final place X10_TEMP19 = place.FIRST_PLACE ; 
 final T162 utmp162 = new T162(rcv, pHere, j, i, x, table);
 async (X10_TEMP19) {this.thread162(utmp162); }
 }
 final int X10_TEMP30 = ( 0 ) ; final Point1 RX10_TEMP47 = new Point1 ( X10_TEMP30 ) ; final Dist1 RX10_TEMP48 = rcv . distValue ; final Region1 RX10_TEMP49 = RX10_TEMP48 . dReg ; final int RX10_TEMP50 = Program . searchPointInRegion1 ( RX10_TEMP49 , RX10_TEMP47 ) ; final int RX10_TEMP51 = 0 ; final boolean RX10_TEMP52 = RX10_TEMP50 < RX10_TEMP51 ; if ( RX10_TEMP52 ) { String RX10_TEMP53 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP53 ) ; }
 final place RX10_TEMP54 = Program . getPlaceFromDist1 ( RX10_TEMP48 , RX10_TEMP50 ) ; final place RX10_TEMP56 = here ; final boolean RX10_TEMP57 = RX10_TEMP54 != RX10_TEMP56 ; if ( RX10_TEMP57 ) { String RX10_TEMP55 = "Bad place access for array rcv" ; throw new RuntimeException ( RX10_TEMP55 ) ; }
 final double RX10_TEMP58 = Program . getRefArrayValue1double ( rcv , RX10_TEMP50 ) ; final double X10_TEMP32 = ( RX10_TEMP58 ) ; return X10_TEMP32 ; }
 ) ; final doubleValArray2 RX10_TEMP64 = new doubleValArray2 ( rResult , RX10_TEMP63 ) ; final doubleValArray2 X10_TEMP33 = RX10_TEMP64 ; return X10_TEMP33 ; }
 public void PoissonSolver_initGreensFnTable ( final doubleRefArray3 table , final FourierTransform2D fft , final int x , final int y , final double affp ) { final int X10_TEMP6 = ( 0 ) ; final int X10_TEMP2 = ( 2 ) ; final int X10_TEMP3 = ( X10_TEMP2 * y ) ; final int X10_TEMP4 = ( 1 ) ; final int X10_TEMP7 = ( X10_TEMP3 - X10_TEMP4 ) ; final Region1 r1 = Program . createNewRegion1R ( X10_TEMP6 , X10_TEMP7 ) ; final int X10_TEMP14 = ( 0 ) ; final int X10_TEMP10 = ( 2 ) ; final int X10_TEMP11 = ( X10_TEMP10 * x ) ; final int X10_TEMP12 = ( 1 ) ; final int X10_TEMP15 = ( X10_TEMP11 - X10_TEMP12 ) ; final Region1 r2 = Program . createNewRegion1R ( X10_TEMP14 , X10_TEMP15 ) ; final Dist2 dGreen = Program . X10Util_distBlockStar2 ( r1 , r2 ) ; final Region2 RX10_TEMP0 = dGreen . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dGreen , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T163 utmp163 = new T163(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {this.thread163(utmp163); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dGreen , RX10_TEMP16 ) ; final doubleRefArray2 f = RX10_TEMP19 ; final double X10_TEMP21 = ( Program . _PoissonSolver_AR ) ; final double X10_TEMP22 = ( 0.0 ) ; final boolean X10_TEMP24 = ( X10_TEMP21 > X10_TEMP22 ) ; final boolean X10_TEMP25 = X10_TEMP24 ; final double X10_TEMP26 = ( 1.0 ) ; final double X10_TEMP27 = ( Program . _PoissonSolver_AR ) ; double X10_TEMP30 = 0.0 ; if ( X10_TEMP25 ) { X10_TEMP30 = X10_TEMP26 / X10_TEMP27 ; }
 final double X10_TEMP31 = X10_TEMP30 ; final double invRadius = ( X10_TEMP31 ) ; final int X10_TEMP32 = ( 4 ) ; final int X10_TEMP33 = ( X10_TEMP32 * x ) ; final double N = ( X10_TEMP33 * y ) ; finish { final Dist1 X10_TEMP36 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP21 = X10_TEMP36 . dReg ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = RX10_TEMP21 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP21 , RX10_TEMP25 ) ; final Region1 RX10_TEMP26 = X10_TEMP36 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , pl ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { final String RX10_TEMP30 = "Point pl not found in the distribution X10_TEMP36." ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( X10_TEMP36 , RX10_TEMP27 ) ; final place X10_TEMP37 = RX10_TEMP31 ; 
 final T164 utmp164 = new T164(pl, invRadius, f, dGreen, affp, y, x);
 async (X10_TEMP37) {this.thread164(utmp164); }
 }
 }
 final ComplexRefArray2 ft = Program . FourierTransform2D_inverseTransformD ( fft , f ) ; final int X10_TEMP103 = ( Program . _PoissonSolver_GREENS_IDX ) ; this . PoissonSolver_genTable1 ( table , ft , X10_TEMP103 , x , y ) ; }
 public void PoissonSolver_initShapeFactorTable ( final doubleRefArray3 table , final FourierTransform2D fft , final int x , final int y , final double affp ) { final int X10_TEMP6 = ( 0 ) ; final int X10_TEMP2 = ( 2 ) ; final int X10_TEMP3 = ( X10_TEMP2 * y ) ; final int X10_TEMP4 = ( 1 ) ; final int X10_TEMP7 = ( X10_TEMP3 - X10_TEMP4 ) ; final Region1 r1 = Program . createNewRegion1R ( X10_TEMP6 , X10_TEMP7 ) ; final int X10_TEMP14 = ( 0 ) ; final int X10_TEMP10 = ( 2 ) ; final int X10_TEMP11 = ( X10_TEMP10 * x ) ; final int X10_TEMP12 = ( 1 ) ; final int X10_TEMP15 = ( X10_TEMP11 - X10_TEMP12 ) ; final Region1 r2 = Program . createNewRegion1R ( X10_TEMP14 , X10_TEMP15 ) ; final Dist2 dShape = Program . X10Util_distBlockStar2 ( r1 , r2 ) ; final Region2 RX10_TEMP0 = dShape . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dShape , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T165 utmp165 = new T165(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {this.thread165(utmp165); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dShape , RX10_TEMP16 ) ; final doubleRefArray2 f = RX10_TEMP19 ; final double X10_TEMP21 = ( Program . _PoissonSolver_AR ) ; final double X10_TEMP22 = ( 0.0 ) ; final boolean X10_TEMP24 = ( X10_TEMP21 > X10_TEMP22 ) ; final boolean X10_TEMP25 = X10_TEMP24 ; final double X10_TEMP26 = ( 1.0 ) ; final double X10_TEMP27 = ( Program . _PoissonSolver_AR ) ; double X10_TEMP30 = 0.0 ; if ( X10_TEMP25 ) { X10_TEMP30 = X10_TEMP26 / X10_TEMP27 ; }
 final double X10_TEMP31 = X10_TEMP30 ; final double invRadius = ( X10_TEMP31 ) ; final int X10_TEMP32 = ( 4 ) ; final int X10_TEMP33 = ( X10_TEMP32 * x ) ; final double N = ( X10_TEMP33 * y ) ; finish { final Dist1 X10_TEMP36 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP21 = X10_TEMP36 . dReg ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = RX10_TEMP21 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP21 , RX10_TEMP25 ) ; final Region1 RX10_TEMP26 = X10_TEMP36 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , pl ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { final String RX10_TEMP30 = "Point pl not found in the distribution X10_TEMP36." ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( X10_TEMP36 , RX10_TEMP27 ) ; final place X10_TEMP37 = RX10_TEMP31 ; 
 final T166 utmp166 = new T166(pl, invRadius, f, dShape, affp, y, x);
 async (X10_TEMP37) {this.thread166(utmp166); }
 }
 }
 final ComplexRefArray2 ft = Program . FourierTransform2D_inverseTransformD ( fft , f ) ; final int X10_TEMP103 = ( Program . _PoissonSolver_SHAPE_IDX ) ; this . PoissonSolver_genTable1 ( table , ft , X10_TEMP103 , x , y ) ; }
 public void PoissonSolver_initElectricFieldXTable ( final doubleRefArray3 table , final FourierTransform2D fft , final int x , final int y , final double affp ) { final int X10_TEMP6 = ( 0 ) ; final int X10_TEMP2 = ( 2 ) ; final int X10_TEMP3 = ( X10_TEMP2 * y ) ; final int X10_TEMP4 = ( 1 ) ; final int X10_TEMP7 = ( X10_TEMP3 - X10_TEMP4 ) ; final Region1 r1 = Program . createNewRegion1R ( X10_TEMP6 , X10_TEMP7 ) ; final int X10_TEMP14 = ( 0 ) ; final int X10_TEMP10 = ( 2 ) ; final int X10_TEMP11 = ( X10_TEMP10 * x ) ; final int X10_TEMP12 = ( 1 ) ; final int X10_TEMP15 = ( X10_TEMP11 - X10_TEMP12 ) ; final Region1 r2 = Program . createNewRegion1R ( X10_TEMP14 , X10_TEMP15 ) ; final Dist2 dElecX = Program . X10Util_distBlockStar2 ( r1 , r2 ) ; final Region2 RX10_TEMP0 = dElecX . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dElecX , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T167 utmp167 = new T167(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {this.thread167(utmp167); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dElecX , RX10_TEMP16 ) ; final doubleRefArray2 f = RX10_TEMP19 ; final double X10_TEMP21 = ( Program . _PoissonSolver_AR ) ; final double X10_TEMP22 = ( 0.0 ) ; final boolean X10_TEMP24 = ( X10_TEMP21 > X10_TEMP22 ) ; final boolean X10_TEMP25 = X10_TEMP24 ; final double X10_TEMP26 = ( 1.0 ) ; final double X10_TEMP27 = ( Program . _PoissonSolver_AR ) ; double X10_TEMP30 = 0.0 ; if ( X10_TEMP25 ) { X10_TEMP30 = X10_TEMP26 / X10_TEMP27 ; }
 final double X10_TEMP31 = X10_TEMP30 ; final double invRadius = ( X10_TEMP31 ) ; final int X10_TEMP32 = ( 4 ) ; final int X10_TEMP33 = ( X10_TEMP32 * x ) ; final double N = ( X10_TEMP33 * y ) ; finish { final Dist1 X10_TEMP36 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP21 = X10_TEMP36 . dReg ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = RX10_TEMP21 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP21 , RX10_TEMP25 ) ; final Region1 RX10_TEMP26 = X10_TEMP36 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , pl ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { final String RX10_TEMP30 = "Point pl not found in the distribution X10_TEMP36." ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( X10_TEMP36 , RX10_TEMP27 ) ; final place X10_TEMP37 = RX10_TEMP31 ; 
 final T168 utmp168 = new T168(pl, invRadius, f, dElecX, affp, y, x);
 async (X10_TEMP37) {this.thread168(utmp168); }
 }
 }
 final ComplexRefArray2 ft = Program . FourierTransform2D_inverseTransformD ( fft , f ) ; final int X10_TEMP114 = ( Program . _PoissonSolver_ELECX_IDX ) ; this . PoissonSolver_genTable2 ( table , ft , X10_TEMP114 , x , y ) ; }
 public void PoissonSolver_initElectricFieldYTable ( final doubleRefArray3 table , final FourierTransform2D fft , final int x , final int y , final double affp ) { final int X10_TEMP6 = ( 0 ) ; final int X10_TEMP2 = ( 2 ) ; final int X10_TEMP3 = ( X10_TEMP2 * y ) ; final int X10_TEMP4 = ( 1 ) ; final int X10_TEMP7 = ( X10_TEMP3 - X10_TEMP4 ) ; final Region1 r1 = Program . createNewRegion1R ( X10_TEMP6 , X10_TEMP7 ) ; final int X10_TEMP14 = ( 0 ) ; final int X10_TEMP10 = ( 2 ) ; final int X10_TEMP11 = ( X10_TEMP10 * x ) ; final int X10_TEMP12 = ( 1 ) ; final int X10_TEMP15 = ( X10_TEMP11 - X10_TEMP12 ) ; final Region1 r2 = Program . createNewRegion1R ( X10_TEMP14 , X10_TEMP15 ) ; final Dist2 dElecX = Program . X10Util_distBlockStar2 ( r1 , r2 ) ; final Region2 RX10_TEMP0 = dElecX . dReg ; final int RX10_TEMP1 = 0 ; final int RX10_TEMP2 = 1 ; int RX10_TEMP3 = place.MAX_PLACES ; RX10_TEMP3 = RX10_TEMP3 - RX10_TEMP2 ; final region ( : rank==1 ) RX10_TEMP4 = [ 0 : RX10_TEMP3 ] ; final dist ( : rank==1 ) RX10_TEMP5 = [ 0 : RX10_TEMP3 ] -> here ; final doubleStub [ : rank==1 ] RX10_TEMP6 = ( doubleStub [ : rank==1 ] ) ( new doubleStub [ RX10_TEMP5 ] ) ; finish { for ( point ( : rank==1 ) RX10_TEMP7 : RX10_TEMP4 ) { final place RX10_TEMP8 = here ; final int RX10_TEMP9 = RX10_TEMP7 [0] ; final place RX10_TEMP10 = place.places ( RX10_TEMP9 ) ; final int RX10_TEMP11 = Program . getDistLocalCount2 ( dElecX , RX10_TEMP9 ) ; final int RX10_TEMP12 = RX10_TEMP11 - RX10_TEMP2 ; 
 final T169 utmp169 = new T169(RX10_TEMP12, RX10_TEMP8, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP10) {this.thread169(utmp169); }
 }
 }
 final doubleStub value [ : rank==1 ] RX10_TEMP16 = ( doubleStub value [ : rank==1 ] ) ( new doubleStub value [ RX10_TEMP4 ] ( point ( : rank==1 ) RX10_TEMP18 ) { final doubleStub RX10_TEMP17 = RX10_TEMP6 [ RX10_TEMP18 ] ; return RX10_TEMP17 ; }
 ) ; final doubleRefArray2 RX10_TEMP19 = new doubleRefArray2 ( dElecX , RX10_TEMP16 ) ; final doubleRefArray2 f = RX10_TEMP19 ; final double X10_TEMP21 = ( Program . _PoissonSolver_AR ) ; final double X10_TEMP22 = ( 0.0 ) ; final boolean X10_TEMP24 = ( X10_TEMP21 > X10_TEMP22 ) ; final boolean X10_TEMP25 = X10_TEMP24 ; final double X10_TEMP26 = ( 1.0 ) ; final double X10_TEMP27 = ( Program . _PoissonSolver_AR ) ; double X10_TEMP30 = 0.0 ; if ( X10_TEMP25 ) { X10_TEMP30 = X10_TEMP26 / X10_TEMP27 ; }
 final double X10_TEMP31 = X10_TEMP30 ; final double invRadius = ( X10_TEMP31 ) ; final int X10_TEMP32 = ( 4 ) ; final int X10_TEMP33 = ( X10_TEMP32 * x ) ; final double N = ( X10_TEMP33 * y ) ; finish { final Dist1 X10_TEMP36 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP21 = X10_TEMP36 . dReg ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = RX10_TEMP21 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP21 , RX10_TEMP25 ) ; final Region1 RX10_TEMP26 = X10_TEMP36 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion1 ( RX10_TEMP26 , pl ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { final String RX10_TEMP30 = "Point pl not found in the distribution X10_TEMP36." ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist1 ( X10_TEMP36 , RX10_TEMP27 ) ; final place X10_TEMP37 = RX10_TEMP31 ; 
 final T170 utmp170 = new T170(pl, invRadius, f, dElecX, affp, y, x);
 async (X10_TEMP37) {this.thread170(utmp170); }
 }
 }
 final ComplexRefArray2 ft = Program . FourierTransform2D_inverseTransformD ( fft , f ) ; final int X10_TEMP114 = ( Program . _PoissonSolver_ELECY_IDX ) ; this . PoissonSolver_genTable3 ( table , ft , X10_TEMP114 , x , y ) ; }
 public void PoissonSolver_genTable1 ( final doubleRefArray3 table , final ComplexRefArray2 ft , final int index , final int x , final int y ) { final int X10_TEMP1 = ( 4 ) ; final int X10_TEMP2 = ( X10_TEMP1 * x ) ; final int N = ( X10_TEMP2 * y ) ; finish { final Dist1 X10_TEMP5 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP5 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP5 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP5." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP5 , RX10_TEMP7 ) ; final place X10_TEMP6 = RX10_TEMP11 ; 
 final T171 utmp171 = new T171(pl, N, y, x, index, ft, table);
 async (X10_TEMP6) {this.thread171(utmp171); }
 }
 }
 }
 public void PoissonSolver_genTable2 ( final doubleRefArray3 table , final ComplexRefArray2 ft , final int index , final int x , final int y ) { final int X10_TEMP1 = ( 4 ) ; final int X10_TEMP2 = ( X10_TEMP1 * x ) ; final int N = ( X10_TEMP2 * y ) ; finish { final Dist1 X10_TEMP5 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP5 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP5 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP5." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP5 , RX10_TEMP7 ) ; final place X10_TEMP6 = RX10_TEMP11 ; 
 final T172 utmp172 = new T172(pl, N, y, x, index, ft, table);
 async (X10_TEMP6) {this.thread172(utmp172); }
 }
 }
 }
 public void PoissonSolver_genTable3 ( final doubleRefArray3 table , final ComplexRefArray2 ft , final int index , final int x , final int y ) { final int X10_TEMP1 = ( 4 ) ; final int X10_TEMP2 = ( X10_TEMP1 * x ) ; final int N = ( X10_TEMP2 * y ) ; finish { final Dist1 X10_TEMP5 = Program . getUniqueDist ( ) ; final Region1 RX10_TEMP1 = X10_TEMP5 . dReg ; final int RX10_TEMP4 = 1 ; int RX10_TEMP2 = RX10_TEMP1 . regSize ; RX10_TEMP2 = RX10_TEMP2 - RX10_TEMP4 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP2 ] ; for ( point ( : rank==1 ) RX10_TEMP0 : RX10_TEMP3 ) { final int RX10_TEMP5 = RX10_TEMP0 [0] ; final Point1 pl = Program . regionOrdinalPoint1 ( RX10_TEMP1 , RX10_TEMP5 ) ; final Region1 RX10_TEMP6 = X10_TEMP5 . dReg ; final int RX10_TEMP7 = Program . searchPointInRegion1 ( RX10_TEMP6 , pl ) ; final int RX10_TEMP8 = 0 ; final boolean RX10_TEMP9 = RX10_TEMP7 < RX10_TEMP8 ; if ( RX10_TEMP9 ) { final String RX10_TEMP10 = "Point pl not found in the distribution X10_TEMP5." ; throw new RuntimeException ( RX10_TEMP10 ) ; }
 final place RX10_TEMP11 = Program . getPlaceFromDist1 ( X10_TEMP5 , RX10_TEMP7 ) ; final place X10_TEMP6 = RX10_TEMP11 ; 
 final T173 utmp173 = new T173(pl, N, y, x, index, ft, table);
 async (X10_TEMP6) {this.thread173(utmp173); }
 }
 }
 }
 public double PoissonSolver_potentialField ( final double r , final double ari , final double affp ) { final double X10_TEMP1 = ( Program . _PoissonSolver_PI4I ) ; final double anorm = ( affp * X10_TEMP1 ) ; final int X10_TEMP3 = ( 0 ) ; final boolean X10_TEMP5 = ari > X10_TEMP3 ; if ( X10_TEMP5 ) { final double X10_TEMP6 = ( 0.0 ) ; final boolean X10_TEMP8 = r == X10_TEMP6 ; if ( X10_TEMP8 ) { final double X10_TEMP9 = ( Program . _PoissonSolver_SQT2PI ) ; final double X10_TEMP10 = ( anorm * X10_TEMP9 ) ; final double X10_TEMP12 = ( X10_TEMP10 * ari ) ; return X10_TEMP12 ; }
 else { final double X10_TEMP14 = ( Program . _PoissonSolver_SQT2I ) ; final double X10_TEMP15 = ( r * X10_TEMP14 ) ; final double X10_TEMP17 = ( X10_TEMP15 * ari ) ; final double X10_TEMP18 = ( this . PoissonSolver_errorFn ( X10_TEMP17 ) ) ; final double X10_TEMP19 = ( anorm * X10_TEMP18 ) ; final double X10_TEMP21 = ( X10_TEMP19 / r ) ; return X10_TEMP21 ; }
 }
 else { final double X10_TEMP22 = ( 0.0 ) ; final boolean X10_TEMP24 = r == X10_TEMP22 ; if ( X10_TEMP24 ) { final double X10_TEMP26 = ( 0.0 ) ; return X10_TEMP26 ; }
 else { final double X10_TEMP28 = ( anorm / r ) ; return X10_TEMP28 ; }
 }
 }
 public double PoissonSolver_particleShape ( final double r , final double ari , final double affp ) { final double X10_TEMP1 = ( 0.5 ) ; final double X10_TEMP2 = ( Program . _PoissonSolver_SQT2PI ) ; final double X10_TEMP3 = ( X10_TEMP1 * X10_TEMP2 ) ; final double X10_TEMP6 = ( X10_TEMP3 * ari ) ; final int X10_TEMP7 = ( 2 ) ; final double X10_TEMP8 = ( Math . pow ( X10_TEMP6 , X10_TEMP7 ) ) ; final double anorm = ( affp * X10_TEMP8 ) ; final double X10_TEMP10 = ( 0.0 ) ; final boolean X10_TEMP12 = ari > X10_TEMP10 ; if ( X10_TEMP12 ) { final double X10_TEMP13 = ( 0.0 ) ; final boolean X10_TEMP15 = r == X10_TEMP13 ; if ( X10_TEMP15 ) { return anorm ; }
 else { final double X10_TEMP17 = ( Program . _PoissonSolver_SQT2I ) ; final double X10_TEMP18 = ( r * X10_TEMP17 ) ; final double X10_TEMP21 = ( X10_TEMP18 * ari ) ; final double X10_TEMP22 = ( 8.0 ) ; final double at1 = ( Program . X10Util_minDouble ( X10_TEMP21 , X10_TEMP22 ) ) ; final double X10_TEMP25 = ( at1 * at1 ) ; final int X10_TEMP26 = 0 ; final double X10_TEMP28 = ( X10_TEMP26 - X10_TEMP25 ) ; final double X10_TEMP29 = ( Math . exp ( X10_TEMP28 ) ) ; final double X10_TEMP31 = ( anorm * X10_TEMP29 ) ; return X10_TEMP31 ; }
 }
 else { final double X10_TEMP32 = ( 0.0 ) ; final boolean X10_TEMP34 = r == X10_TEMP32 ; if ( X10_TEMP34 ) { return affp ; }
 else { final double X10_TEMP37 = ( 0.0 ) ; return X10_TEMP37 ; }
 }
 }
 public double PoissonSolver_radialElectricField ( final double r , final double ari , final double affp ) { final double X10_TEMP1 = ( Program . _PoissonSolver_PI4I ) ; final double anorm = ( affp * X10_TEMP1 ) ; final double X10_TEMP3 = ( 0.0 ) ; final boolean X10_TEMP5 = ari > X10_TEMP3 ; if ( X10_TEMP5 ) { final double X10_TEMP6 = ( 0.0 ) ; final boolean X10_TEMP8 = r == X10_TEMP6 ; if ( X10_TEMP8 ) { final double X10_TEMP10 = ( 0.0 ) ; return X10_TEMP10 ; }
 else { final double X10_TEMP11 = ( 1.0 ) ; final double ri = ( X10_TEMP11 / r ) ; final double X10_TEMP13 = ( Program . _PoissonSolver_SQT2I ) ; final double X10_TEMP14 = ( r * X10_TEMP13 ) ; final double X10_TEMP17 = ( X10_TEMP14 * ari ) ; final double X10_TEMP18 = ( 8.0 ) ; final double at1 = ( Program . X10Util_minDouble ( X10_TEMP17 , X10_TEMP18 ) ) ; final double X10_TEMP35 = ( anorm * ri ) ; final double X10_TEMP22 = ( this . PoissonSolver_errorFn ( at1 ) ) ; final double X10_TEMP31 = ( X10_TEMP22 * ri ) ; final double X10_TEMP23 = ( Program . _PoissonSolver_SQT2PI ) ; final double X10_TEMP29 = ( X10_TEMP23 * ari ) ; final double X10_TEMP25 = ( at1 * at1 ) ; final int X10_TEMP26 = 0 ; final double X10_TEMP28 = ( X10_TEMP26 - X10_TEMP25 ) ; final double X10_TEMP30 = ( Math . exp ( X10_TEMP28 ) ) ; final double X10_TEMP32 = ( X10_TEMP29 * X10_TEMP30 ) ; final double X10_TEMP34 = ( X10_TEMP31 - X10_TEMP32 ) ; final double X10_TEMP37 = ( X10_TEMP35 * X10_TEMP34 ) ; return X10_TEMP37 ; }
 }
 else { final double X10_TEMP38 = ( 0.0 ) ; final boolean X10_TEMP40 = r == X10_TEMP38 ; if ( X10_TEMP40 ) { final double X10_TEMP42 = ( 0.0 ) ; return X10_TEMP42 ; }
 else { final double X10_TEMP44 = ( r * r ) ; final double X10_TEMP46 = ( anorm / X10_TEMP44 ) ; return X10_TEMP46 ; }
 }
 }
 public double PoissonSolver_errorFn ( final double x ) { final double p = ( 0.3275911 ) ; final double a1 = ( 0.254829592 ) ; final double X10_TEMP3 = ( 0.284496736 ) ; final int X10_TEMP4 = 0 ; final double a2 = ( X10_TEMP4 - X10_TEMP3 ) ; final double a3 = ( 1.421413741 ) ; final double X10_TEMP7 = ( 1.453152027 ) ; final int X10_TEMP8 = 0 ; final double a4 = ( X10_TEMP8 - X10_TEMP7 ) ; final double a5 = ( 1.061405429 ) ; final double f = ( Math . abs ( x ) ) ; final double X10_TEMP17 = ( 1.0 ) ; final double X10_TEMP13 = ( 1.0 ) ; final double X10_TEMP14 = ( p * f ) ; final double X10_TEMP16 = ( X10_TEMP13 + X10_TEMP14 ) ; final double t = ( X10_TEMP17 / X10_TEMP16 ) ; double ret = ( 0.0 ) ; final double X10_TEMP20 = ( 8.0 ) ; final boolean X10_TEMP22 = f <= X10_TEMP20 ; if ( X10_TEMP22 ) { final double X10_TEMP41 = ( 1.0 ) ; final double X10_TEMP23 = ( t * a5 ) ; final double X10_TEMP25 = ( a4 + X10_TEMP23 ) ; final double X10_TEMP26 = ( t * X10_TEMP25 ) ; final double X10_TEMP28 = ( a3 + X10_TEMP26 ) ; final double X10_TEMP29 = ( t * X10_TEMP28 ) ; final double X10_TEMP31 = ( a2 + X10_TEMP29 ) ; final double X10_TEMP32 = ( t * X10_TEMP31 ) ; final double X10_TEMP34 = ( a1 + X10_TEMP32 ) ; final double X10_TEMP39 = ( t * X10_TEMP34 ) ; final int X10_TEMP35 = 0 ; final double X10_TEMP36 = ( X10_TEMP35 - x ) ; final double X10_TEMP38 = ( X10_TEMP36 * x ) ; final double X10_TEMP40 = ( Math . exp ( X10_TEMP38 ) ) ; final double X10_TEMP42 = ( X10_TEMP39 * X10_TEMP40 ) ; final double X10_TEMP44 = ( X10_TEMP41 - X10_TEMP42 ) ; ret = ( X10_TEMP44 ) ; }
 else { final double X10_TEMP46 = ( 1.0 ) ; ret = ( X10_TEMP46 ) ; }
 final int X10_TEMP47 = ( 0 ) ; final boolean X10_TEMP49 = x < X10_TEMP47 ; if ( X10_TEMP49 ) { final int X10_TEMP50 = 0 ; final double X10_TEMP52 = ( X10_TEMP50 - ret ) ; ret = ( X10_TEMP52 ) ; }
 return ret ; }
 public void thread159(final T159 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T322 utmp322 = new T322(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread322(utmp322); }
 }
 }
 public void thread160(final T160 utmpz) {final  Region3 RX10_TEMP14 = utmpz.RX10_TEMP14;
final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
final  doubleRefArray3 table = utmpz.table;
 { final dist ( : rank==1 ) RX10_TEMP28 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP29 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP28 ] ( point ( : rank==1 ) RX10_TEMP15 ) { final int RX10_TEMP16 = RX10_TEMP15 [0] ; final Point3 pt = Program . regionOrdinalPoint3 ( RX10_TEMP14 , RX10_TEMP16 ) ; final Dist3 RX10_TEMP17 = table . distValue ; final Region3 RX10_TEMP18 = RX10_TEMP17 . dReg ; final int RX10_TEMP19 = Program . searchPointInRegion3 ( RX10_TEMP18 , pt ) ; final int RX10_TEMP20 = 0 ; final boolean RX10_TEMP21 = RX10_TEMP19 < RX10_TEMP20 ; if ( RX10_TEMP21 ) { String RX10_TEMP22 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP22 ) ; }
 final place RX10_TEMP23 = Program . getPlaceFromDist3 ( RX10_TEMP17 , RX10_TEMP19 ) ; final place RX10_TEMP25 = here ; final boolean RX10_TEMP26 = RX10_TEMP23 != RX10_TEMP25 ; if ( RX10_TEMP26 ) { String RX10_TEMP24 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP24 ) ; }
 final double RX10_TEMP27 = Program . getRefArrayValue3double ( table , RX10_TEMP19 ) ; final double X10_TEMP24 = ( RX10_TEMP27 ) ; return X10_TEMP24 ; }
 ) ; final doubleStub RX10_TEMP30 = new doubleStub ( RX10_TEMP29 ) ; 
 final T323 utmp323 = new T323(RX10_TEMP30, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread323(utmp323); }
 }
 }
 public void thread161(final T161 utmpz) {final  int RX10_TEMP16 = utmpz.RX10_TEMP16;
final  place RX10_TEMP12 = utmpz.RX10_TEMP12;
final  point ( : rank==1 ) RX10_TEMP11 = utmpz.RX10_TEMP11;
final  doubleStub [ : rank==1 ] RX10_TEMP10 = utmpz.RX10_TEMP10;
 { final dist ( : rank==1 ) RX10_TEMP17 = [ 0 : RX10_TEMP16 ] -> here ; final double [ : rank==1 ] RX10_TEMP18 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP17 ] ) ; final doubleStub RX10_TEMP19 = new doubleStub ( RX10_TEMP18 ) ; 
 final T324 utmp324 = new T324(RX10_TEMP19, RX10_TEMP11, RX10_TEMP10);
 async (RX10_TEMP12) {this.thread324(utmp324); }
 }
 }
 public void thread162(final T162 utmpz) {final  doubleRefArray1 rcv = utmpz.rcv;
final  place pHere = utmpz.pHere;
final  int j = utmpz.j;
final  int i = utmpz.i;
final  int x = utmpz.x;
final  doubleRefArray3 table = utmpz.table;
 { final Point3 RX10_TEMP24 = new Point3 ( x , i , j ) ; final Dist3 RX10_TEMP25 = table . distValue ; final Region3 RX10_TEMP26 = RX10_TEMP25 . dReg ; final int RX10_TEMP27 = Program . searchPointInRegion3 ( RX10_TEMP26 , RX10_TEMP24 ) ; final int RX10_TEMP28 = 0 ; final boolean RX10_TEMP29 = RX10_TEMP27 < RX10_TEMP28 ; if ( RX10_TEMP29 ) { String RX10_TEMP30 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP30 ) ; }
 final place RX10_TEMP31 = Program . getPlaceFromDist3 ( RX10_TEMP25 , RX10_TEMP27 ) ; final place RX10_TEMP33 = here ; final boolean RX10_TEMP34 = RX10_TEMP31 != RX10_TEMP33 ; if ( RX10_TEMP34 ) { String RX10_TEMP32 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP32 ) ; }
 final double RX10_TEMP35 = Program . getRefArrayValue3double ( table , RX10_TEMP27 ) ; final double val = ( RX10_TEMP35 ) ; finish { 
 final T325 utmp325 = new T325(val, rcv);
 async (pHere) {this.thread325(utmp325); }
 }
 }
 }
 public void thread163(final T163 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T326 utmp326 = new T326(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread326(utmp326); }
 }
 }
 public void thread164(final T164 utmpz) {final  Point1 pl = utmpz.pl;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  Dist2 dGreen = utmpz.dGreen;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP40 = ( pl . f0 ) ; final int X10_TEMP39 = ( 2 ) ; final int X10_TEMP41 = ( X10_TEMP39 * y ) ; final boolean X10_TEMP43 = X10_TEMP40 <= X10_TEMP41 ; if ( X10_TEMP43 ) { final Region2 rLocal = Program . X10Util_get2DLRegion ( dGreen ) ; final place X10_TEMP47 = here ; final int RX10_TEMP35 = 1 ; int RX10_TEMP33 = rLocal . regSize ; RX10_TEMP33 = RX10_TEMP33 - RX10_TEMP35 ; final region ( : rank==1 ) RX10_TEMP34 = [ 0 : RX10_TEMP33 ] ; for ( point ( : rank==1 ) RX10_TEMP32 : RX10_TEMP34 ) { final int RX10_TEMP36 = RX10_TEMP32 [0] ; final Point2 p = Program . regionOrdinalPoint2 ( rLocal , RX10_TEMP36 ) ; 
 final T327 utmp327 = new T327(p, invRadius, f, affp, y, x);
 async (X10_TEMP47) {this.thread327(utmp327); }
 }
 }
 }
 }
 public void thread165(final T165 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T328 utmp328 = new T328(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread328(utmp328); }
 }
 }
 public void thread166(final T166 utmpz) {final  Point1 pl = utmpz.pl;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  Dist2 dShape = utmpz.dShape;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP40 = ( pl . f0 ) ; final int X10_TEMP39 = ( 2 ) ; final int X10_TEMP41 = ( X10_TEMP39 * y ) ; final boolean X10_TEMP43 = X10_TEMP40 <= X10_TEMP41 ; if ( X10_TEMP43 ) { final Region2 rLocal = Program . X10Util_get2DLRegion ( dShape ) ; final place X10_TEMP47 = here ; final int RX10_TEMP35 = 1 ; int RX10_TEMP33 = rLocal . regSize ; RX10_TEMP33 = RX10_TEMP33 - RX10_TEMP35 ; final region ( : rank==1 ) RX10_TEMP34 = [ 0 : RX10_TEMP33 ] ; for ( point ( : rank==1 ) RX10_TEMP32 : RX10_TEMP34 ) { final int RX10_TEMP36 = RX10_TEMP32 [0] ; final Point2 p = Program . regionOrdinalPoint2 ( rLocal , RX10_TEMP36 ) ; 
 final T329 utmp329 = new T329(p, invRadius, f, affp, y, x);
 async (X10_TEMP47) {this.thread329(utmp329); }
 }
 }
 }
 }
 public void thread167(final T167 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T330 utmp330 = new T330(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread330(utmp330); }
 }
 }
 public void thread168(final T168 utmpz) {final  Point1 pl = utmpz.pl;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  Dist2 dElecX = utmpz.dElecX;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP40 = ( pl . f0 ) ; final int X10_TEMP39 = ( 2 ) ; final int X10_TEMP41 = ( X10_TEMP39 * y ) ; final boolean X10_TEMP43 = X10_TEMP40 <= X10_TEMP41 ; if ( X10_TEMP43 ) { final Region2 rLocal = Program . X10Util_get2DLRegion ( dElecX ) ; final place X10_TEMP47 = here ; final int RX10_TEMP35 = 1 ; int RX10_TEMP33 = rLocal . regSize ; RX10_TEMP33 = RX10_TEMP33 - RX10_TEMP35 ; final region ( : rank==1 ) RX10_TEMP34 = [ 0 : RX10_TEMP33 ] ; for ( point ( : rank==1 ) RX10_TEMP32 : RX10_TEMP34 ) { final int RX10_TEMP36 = RX10_TEMP32 [0] ; final Point2 p = Program . regionOrdinalPoint2 ( rLocal , RX10_TEMP36 ) ; 
 final T331 utmp331 = new T331(p, invRadius, f, affp, y, x);
 async (X10_TEMP47) {this.thread331(utmp331); }
 }
 }
 }
 }
 public void thread169(final T169 utmpz) {final  int RX10_TEMP12 = utmpz.RX10_TEMP12;
final  place RX10_TEMP8 = utmpz.RX10_TEMP8;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { final dist ( : rank==1 ) RX10_TEMP13 = [ 0 : RX10_TEMP12 ] -> here ; final double [ : rank==1 ] RX10_TEMP14 = ( double [ : rank==1 ] ) ( new double [ RX10_TEMP13 ] ) ; final doubleStub RX10_TEMP15 = new doubleStub ( RX10_TEMP14 ) ; 
 final T332 utmp332 = new T332(RX10_TEMP15, RX10_TEMP7, RX10_TEMP6);
 async (RX10_TEMP8) {this.thread332(utmp332); }
 }
 }
 public void thread170(final T170 utmpz) {final  Point1 pl = utmpz.pl;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  Dist2 dElecX = utmpz.dElecX;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP40 = ( pl . f0 ) ; final int X10_TEMP39 = ( 2 ) ; final int X10_TEMP41 = ( X10_TEMP39 * y ) ; final boolean X10_TEMP43 = X10_TEMP40 <= X10_TEMP41 ; if ( X10_TEMP43 ) { final Region2 rLocal = Program . X10Util_get2DLRegion ( dElecX ) ; final place X10_TEMP47 = here ; final int RX10_TEMP35 = 1 ; int RX10_TEMP33 = rLocal . regSize ; RX10_TEMP33 = RX10_TEMP33 - RX10_TEMP35 ; final region ( : rank==1 ) RX10_TEMP34 = [ 0 : RX10_TEMP33 ] ; for ( point ( : rank==1 ) RX10_TEMP32 : RX10_TEMP34 ) { final int RX10_TEMP36 = RX10_TEMP32 [0] ; final Point2 p = Program . regionOrdinalPoint2 ( rLocal , RX10_TEMP36 ) ; 
 final T333 utmp333 = new T333(p, invRadius, f, affp, y, x);
 async (X10_TEMP47) {this.thread333(utmp333); }
 }
 }
 }
 }
 public void thread171(final T171 utmpz) {final  Point1 pl = utmpz.pl;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int x = utmpz.x;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP8 = ( pl . f0 ) ; final boolean X10_TEMP10 = X10_TEMP8 <= x ; if ( X10_TEMP10 ) { final Dist2 RX10_TEMP12 = ft . distValue ; final Dist2 dFT = RX10_TEMP12 ; final Dist3 RX10_TEMP13 = table . distValue ; final Dist3 dTable = RX10_TEMP13 ; final int X10_TEMP15 = ( 0 ) ; final Region1 rLocalFT1 = Program . X10Util_getLRank2D ( dFT , X10_TEMP15 ) ; final int X10_TEMP19 = ( 1 ) ; final Region1 rLocalT2 = Program . X10Util_getLRank3D ( dTable , X10_TEMP19 ) ; final Region2 X10_TEMP24 = Program . createNewRegion2AA ( rLocalFT1 , rLocalT2 ) ; final place X10_TEMP25 = here ; final int RX10_TEMP18 = 1 ; int RX10_TEMP16 = X10_TEMP24 . regSize ; RX10_TEMP16 = RX10_TEMP16 - RX10_TEMP18 ; final region ( : rank==1 ) RX10_TEMP17 = [ 0 : RX10_TEMP16 ] ; for ( point ( : rank==1 ) RX10_TEMP14 : RX10_TEMP17 ) { final int RX10_TEMP19 = RX10_TEMP14 [0] ; final Point2 RX10_TEMP15 = Program . regionOrdinalPoint2 ( X10_TEMP24 , RX10_TEMP19 ) ; final int i = RX10_TEMP15 . f0 ; final int j = RX10_TEMP15 . f1 ; 
 final T334 utmp334 = new T334(j, i, N, index, ft, table);
 async (X10_TEMP25) {this.thread334(utmp334); }
 }
 final place X10_TEMP36 = ( here ) ; final boolean X10_TEMP38 = X10_TEMP36 . isFirst ( ) ; if ( X10_TEMP38 ) { final int X10_TEMP42 = ( 1 ) ; final int X10_TEMP40 = ( 1 ) ; final int X10_TEMP43 = ( y - X10_TEMP40 ) ; final Region1 X10_TEMP45 = Program . createNewRegion1R ( X10_TEMP42 , X10_TEMP43 ) ; final place X10_TEMP46 = here ; final int RX10_TEMP47 = 1 ; int RX10_TEMP45 = X10_TEMP45 . regSize ; RX10_TEMP45 = RX10_TEMP45 - RX10_TEMP47 ; final region ( : rank==1 ) RX10_TEMP46 = [ 0 : RX10_TEMP45 ] ; for ( point ( : rank==1 ) RX10_TEMP43 : RX10_TEMP46 ) { final int RX10_TEMP48 = RX10_TEMP43 [0] ; final Point1 RX10_TEMP44 = Program . regionOrdinalPoint1 ( X10_TEMP45 , RX10_TEMP48 ) ; final int i = RX10_TEMP44 . f0 ; 
 final T335 utmp335 = new T335(i, N, y, x, index, ft, table);
 async (X10_TEMP46) {this.thread335(utmp335); }
 }
 final int X10_TEMP64 = ( 0 ) ; final int X10_TEMP67 = ( 0 ) ; final int X10_TEMP68 = ( 0 ) ; final Point2 RX10_TEMP72 = new Point2 ( X10_TEMP67 , X10_TEMP68 ) ; final Dist2 RX10_TEMP73 = ft . distValue ; final Region2 RX10_TEMP74 = RX10_TEMP73 . dReg ; final int RX10_TEMP75 = Program . searchPointInRegion2 ( RX10_TEMP74 , RX10_TEMP72 ) ; final int RX10_TEMP76 = 0 ; final boolean RX10_TEMP77 = RX10_TEMP75 < RX10_TEMP76 ; if ( RX10_TEMP77 ) { String RX10_TEMP78 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP78 ) ; }
 final place RX10_TEMP79 = Program . getPlaceFromDist2 ( RX10_TEMP73 , RX10_TEMP75 ) ; final place RX10_TEMP81 = here ; final boolean RX10_TEMP82 = RX10_TEMP79 != RX10_TEMP81 ; if ( RX10_TEMP82 ) { String RX10_TEMP80 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP80 ) ; }
 final Complex RX10_TEMP83 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP75 ) ; final Complex X10_TEMP69 = ( RX10_TEMP83 ) ; final double X10_TEMP70 = ( Program . Complex_getImag ( X10_TEMP69 ) ) ; final double X10_TEMP72 = ( N * X10_TEMP70 ) ; final double X10_TEMP73 = ( X10_TEMP72 ) ; final Point3 RX10_TEMP84 = new Point3 ( x , X10_TEMP64 , index ) ; final Dist3 RX10_TEMP85 = table . distValue ; final Region3 RX10_TEMP86 = RX10_TEMP85 . dReg ; final int RX10_TEMP87 = Program . searchPointInRegion3 ( RX10_TEMP86 , RX10_TEMP84 ) ; final int RX10_TEMP88 = 0 ; final boolean RX10_TEMP89 = RX10_TEMP87 < RX10_TEMP88 ; if ( RX10_TEMP89 ) { String RX10_TEMP90 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP90 ) ; }
 final place RX10_TEMP91 = Program . getPlaceFromDist3 ( RX10_TEMP85 , RX10_TEMP87 ) ; final place RX10_TEMP93 = here ; final boolean RX10_TEMP94 = RX10_TEMP91 != RX10_TEMP93 ; if ( RX10_TEMP94 ) { String RX10_TEMP92 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP92 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP87 , X10_TEMP73 ) ; final int X10_TEMP79 = ( 0 ) ; final Point2 RX10_TEMP95 = new Point2 ( X10_TEMP79 , y ) ; final Dist2 RX10_TEMP96 = ft . distValue ; final Region2 RX10_TEMP97 = RX10_TEMP96 . dReg ; final int RX10_TEMP98 = Program . searchPointInRegion2 ( RX10_TEMP97 , RX10_TEMP95 ) ; final int RX10_TEMP99 = 0 ; final boolean RX10_TEMP100 = RX10_TEMP98 < RX10_TEMP99 ; if ( RX10_TEMP100 ) { String RX10_TEMP101 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP101 ) ; }
 final place RX10_TEMP102 = Program . getPlaceFromDist2 ( RX10_TEMP96 , RX10_TEMP98 ) ; final place RX10_TEMP104 = here ; final boolean RX10_TEMP105 = RX10_TEMP102 != RX10_TEMP104 ; if ( RX10_TEMP105 ) { String RX10_TEMP103 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP103 ) ; }
 final Complex RX10_TEMP106 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP98 ) ; final Complex X10_TEMP80 = ( RX10_TEMP106 ) ; final double X10_TEMP81 = ( Program . Complex_getImag ( X10_TEMP80 ) ) ; final double X10_TEMP83 = ( N * X10_TEMP81 ) ; final double X10_TEMP84 = ( X10_TEMP83 ) ; final Point3 RX10_TEMP107 = new Point3 ( x , y , index ) ; final Dist3 RX10_TEMP108 = table . distValue ; final Region3 RX10_TEMP109 = RX10_TEMP108 . dReg ; final int RX10_TEMP110 = Program . searchPointInRegion3 ( RX10_TEMP109 , RX10_TEMP107 ) ; final int RX10_TEMP111 = 0 ; final boolean RX10_TEMP112 = RX10_TEMP110 < RX10_TEMP111 ; if ( RX10_TEMP112 ) { String RX10_TEMP113 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP113 ) ; }
 final place RX10_TEMP114 = Program . getPlaceFromDist3 ( RX10_TEMP108 , RX10_TEMP110 ) ; final place RX10_TEMP116 = here ; final boolean RX10_TEMP117 = RX10_TEMP114 != RX10_TEMP116 ; if ( RX10_TEMP117 ) { String RX10_TEMP115 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP115 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP110 , X10_TEMP84 ) ; }
 }
 }
 }
 public void thread172(final T172 utmpz) {final  Point1 pl = utmpz.pl;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int x = utmpz.x;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP8 = ( pl . f0 ) ; final boolean X10_TEMP10 = X10_TEMP8 <= x ; if ( X10_TEMP10 ) { final Dist2 RX10_TEMP12 = ft . distValue ; final Dist2 dFT = RX10_TEMP12 ; final Dist3 RX10_TEMP13 = table . distValue ; final Dist3 dTable = RX10_TEMP13 ; final int X10_TEMP15 = ( 0 ) ; final Region1 rLocalFT1 = Program . X10Util_getLRank2D ( dFT , X10_TEMP15 ) ; final int X10_TEMP19 = ( 1 ) ; final Region1 rLocalT2 = Program . X10Util_getLRank3D ( dTable , X10_TEMP19 ) ; final place X10_TEMP22 = here ; final int RX10_TEMP18 = 1 ; int RX10_TEMP16 = rLocalFT1 . regSize ; RX10_TEMP16 = RX10_TEMP16 - RX10_TEMP18 ; final region ( : rank==1 ) RX10_TEMP17 = [ 0 : RX10_TEMP16 ] ; for ( point ( : rank==1 ) RX10_TEMP14 : RX10_TEMP17 ) { final int RX10_TEMP19 = RX10_TEMP14 [0] ; final Point1 RX10_TEMP15 = Program . regionOrdinalPoint1 ( rLocalFT1 , RX10_TEMP19 ) ; final int i = RX10_TEMP15 . f0 ; 
 final T336 utmp336 = new T336(i, rLocalT2, N, index, ft, table);
 async (X10_TEMP22) {this.thread336(utmp336); }
 }
 final place X10_TEMP38 = ( here ) ; final boolean X10_TEMP40 = X10_TEMP38 . isFirst ( ) ; if ( X10_TEMP40 ) { final int X10_TEMP44 = ( 1 ) ; final int X10_TEMP42 = ( 1 ) ; final int X10_TEMP45 = ( y - X10_TEMP42 ) ; final Region1 X10_TEMP47 = Program . createNewRegion1R ( X10_TEMP44 , X10_TEMP45 ) ; final place X10_TEMP48 = here ; final int RX10_TEMP53 = 1 ; int RX10_TEMP51 = X10_TEMP47 . regSize ; RX10_TEMP51 = RX10_TEMP51 - RX10_TEMP53 ; final region ( : rank==1 ) RX10_TEMP52 = [ 0 : RX10_TEMP51 ] ; for ( point ( : rank==1 ) RX10_TEMP49 : RX10_TEMP52 ) { final int RX10_TEMP54 = RX10_TEMP49 [0] ; final Point1 RX10_TEMP50 = Program . regionOrdinalPoint1 ( X10_TEMP47 , RX10_TEMP54 ) ; final int i1 = RX10_TEMP50 . f0 ; 
 final T337 utmp337 = new T337(i1, N, y, x, index, ft, table);
 async (X10_TEMP48) {this.thread337(utmp337); }
 }
 final int X10_TEMP78 = ( 0 ) ; final int X10_TEMP79 = ( 0 ) ; final int X10_TEMP82 = ( 0 ) ; final int X10_TEMP83 = ( 0 ) ; final Point2 RX10_TEMP101 = new Point2 ( X10_TEMP82 , X10_TEMP83 ) ; final Dist2 RX10_TEMP102 = ft . distValue ; final Region2 RX10_TEMP103 = RX10_TEMP102 . dReg ; final int RX10_TEMP104 = Program . searchPointInRegion2 ( RX10_TEMP103 , RX10_TEMP101 ) ; final int RX10_TEMP105 = 0 ; final boolean RX10_TEMP106 = RX10_TEMP104 < RX10_TEMP105 ; if ( RX10_TEMP106 ) { String RX10_TEMP107 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP107 ) ; }
 final place RX10_TEMP108 = Program . getPlaceFromDist2 ( RX10_TEMP102 , RX10_TEMP104 ) ; final place RX10_TEMP110 = here ; final boolean RX10_TEMP111 = RX10_TEMP108 != RX10_TEMP110 ; if ( RX10_TEMP111 ) { String RX10_TEMP109 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP109 ) ; }
 final Complex RX10_TEMP112 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP104 ) ; final Complex X10_TEMP84 = ( RX10_TEMP112 ) ; final double X10_TEMP85 = ( Program . Complex_getReal ( X10_TEMP84 ) ) ; final double X10_TEMP87 = ( N * X10_TEMP85 ) ; final double X10_TEMP88 = ( X10_TEMP87 ) ; final Point3 RX10_TEMP113 = new Point3 ( X10_TEMP78 , X10_TEMP79 , index ) ; final Dist3 RX10_TEMP114 = table . distValue ; final Region3 RX10_TEMP115 = RX10_TEMP114 . dReg ; final int RX10_TEMP116 = Program . searchPointInRegion3 ( RX10_TEMP115 , RX10_TEMP113 ) ; final int RX10_TEMP117 = 0 ; final boolean RX10_TEMP118 = RX10_TEMP116 < RX10_TEMP117 ; if ( RX10_TEMP118 ) { String RX10_TEMP119 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP119 ) ; }
 final place RX10_TEMP120 = Program . getPlaceFromDist3 ( RX10_TEMP114 , RX10_TEMP116 ) ; final place RX10_TEMP122 = here ; final boolean RX10_TEMP123 = RX10_TEMP120 != RX10_TEMP122 ; if ( RX10_TEMP123 ) { String RX10_TEMP121 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP121 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP116 , X10_TEMP88 ) ; final int X10_TEMP92 = ( 0 ) ; final int X10_TEMP95 = ( 0 ) ; final int X10_TEMP96 = ( 0 ) ; final Point2 RX10_TEMP124 = new Point2 ( X10_TEMP95 , X10_TEMP96 ) ; final Dist2 RX10_TEMP125 = ft . distValue ; final Region2 RX10_TEMP126 = RX10_TEMP125 . dReg ; final int RX10_TEMP127 = Program . searchPointInRegion2 ( RX10_TEMP126 , RX10_TEMP124 ) ; final int RX10_TEMP128 = 0 ; final boolean RX10_TEMP129 = RX10_TEMP127 < RX10_TEMP128 ; if ( RX10_TEMP129 ) { String RX10_TEMP130 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP130 ) ; }
 final place RX10_TEMP131 = Program . getPlaceFromDist2 ( RX10_TEMP125 , RX10_TEMP127 ) ; final place RX10_TEMP133 = here ; final boolean RX10_TEMP134 = RX10_TEMP131 != RX10_TEMP133 ; if ( RX10_TEMP134 ) { String RX10_TEMP132 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP132 ) ; }
 final Complex RX10_TEMP135 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP127 ) ; final Complex X10_TEMP97 = ( RX10_TEMP135 ) ; final double X10_TEMP98 = ( Program . Complex_getImag ( X10_TEMP97 ) ) ; final double X10_TEMP100 = ( N * X10_TEMP98 ) ; final double X10_TEMP101 = ( X10_TEMP100 ) ; final Point3 RX10_TEMP136 = new Point3 ( x , X10_TEMP92 , index ) ; final Dist3 RX10_TEMP137 = table . distValue ; final Region3 RX10_TEMP138 = RX10_TEMP137 . dReg ; final int RX10_TEMP139 = Program . searchPointInRegion3 ( RX10_TEMP138 , RX10_TEMP136 ) ; final int RX10_TEMP140 = 0 ; final boolean RX10_TEMP141 = RX10_TEMP139 < RX10_TEMP140 ; if ( RX10_TEMP141 ) { String RX10_TEMP142 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP142 ) ; }
 final place RX10_TEMP143 = Program . getPlaceFromDist3 ( RX10_TEMP137 , RX10_TEMP139 ) ; final place RX10_TEMP145 = here ; final boolean RX10_TEMP146 = RX10_TEMP143 != RX10_TEMP145 ; if ( RX10_TEMP146 ) { String RX10_TEMP144 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP144 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP139 , X10_TEMP101 ) ; final int X10_TEMP105 = ( 0 ) ; final int X10_TEMP108 = ( 0 ) ; final Point2 RX10_TEMP147 = new Point2 ( X10_TEMP108 , y ) ; final Dist2 RX10_TEMP148 = ft . distValue ; final Region2 RX10_TEMP149 = RX10_TEMP148 . dReg ; final int RX10_TEMP150 = Program . searchPointInRegion2 ( RX10_TEMP149 , RX10_TEMP147 ) ; final int RX10_TEMP151 = 0 ; final boolean RX10_TEMP152 = RX10_TEMP150 < RX10_TEMP151 ; if ( RX10_TEMP152 ) { String RX10_TEMP153 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP153 ) ; }
 final place RX10_TEMP154 = Program . getPlaceFromDist2 ( RX10_TEMP148 , RX10_TEMP150 ) ; final place RX10_TEMP156 = here ; final boolean RX10_TEMP157 = RX10_TEMP154 != RX10_TEMP156 ; if ( RX10_TEMP157 ) { String RX10_TEMP155 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP155 ) ; }
 final Complex RX10_TEMP158 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP150 ) ; final Complex X10_TEMP109 = ( RX10_TEMP158 ) ; final double X10_TEMP110 = ( Program . Complex_getReal ( X10_TEMP109 ) ) ; final double X10_TEMP112 = ( N * X10_TEMP110 ) ; final double X10_TEMP113 = ( X10_TEMP112 ) ; final Point3 RX10_TEMP159 = new Point3 ( X10_TEMP105 , y , index ) ; final Dist3 RX10_TEMP160 = table . distValue ; final Region3 RX10_TEMP161 = RX10_TEMP160 . dReg ; final int RX10_TEMP162 = Program . searchPointInRegion3 ( RX10_TEMP161 , RX10_TEMP159 ) ; final int RX10_TEMP163 = 0 ; final boolean RX10_TEMP164 = RX10_TEMP162 < RX10_TEMP163 ; if ( RX10_TEMP164 ) { String RX10_TEMP165 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP165 ) ; }
 final place RX10_TEMP166 = Program . getPlaceFromDist3 ( RX10_TEMP160 , RX10_TEMP162 ) ; final place RX10_TEMP168 = here ; final boolean RX10_TEMP169 = RX10_TEMP166 != RX10_TEMP168 ; if ( RX10_TEMP169 ) { String RX10_TEMP167 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP167 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP162 , X10_TEMP113 ) ; final int X10_TEMP119 = ( 0 ) ; final Point2 RX10_TEMP170 = new Point2 ( X10_TEMP119 , y ) ; final Dist2 RX10_TEMP171 = ft . distValue ; final Region2 RX10_TEMP172 = RX10_TEMP171 . dReg ; final int RX10_TEMP173 = Program . searchPointInRegion2 ( RX10_TEMP172 , RX10_TEMP170 ) ; final int RX10_TEMP174 = 0 ; final boolean RX10_TEMP175 = RX10_TEMP173 < RX10_TEMP174 ; if ( RX10_TEMP175 ) { String RX10_TEMP176 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP176 ) ; }
 final place RX10_TEMP177 = Program . getPlaceFromDist2 ( RX10_TEMP171 , RX10_TEMP173 ) ; final place RX10_TEMP179 = here ; final boolean RX10_TEMP180 = RX10_TEMP177 != RX10_TEMP179 ; if ( RX10_TEMP180 ) { String RX10_TEMP178 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP178 ) ; }
 final Complex RX10_TEMP181 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP173 ) ; final Complex X10_TEMP120 = ( RX10_TEMP181 ) ; final double X10_TEMP121 = ( Program . Complex_getImag ( X10_TEMP120 ) ) ; final double X10_TEMP123 = ( N * X10_TEMP121 ) ; final double X10_TEMP124 = ( X10_TEMP123 ) ; final Point3 RX10_TEMP182 = new Point3 ( x , y , index ) ; final Dist3 RX10_TEMP183 = table . distValue ; final Region3 RX10_TEMP184 = RX10_TEMP183 . dReg ; final int RX10_TEMP185 = Program . searchPointInRegion3 ( RX10_TEMP184 , RX10_TEMP182 ) ; final int RX10_TEMP186 = 0 ; final boolean RX10_TEMP187 = RX10_TEMP185 < RX10_TEMP186 ; if ( RX10_TEMP187 ) { String RX10_TEMP188 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP188 ) ; }
 final place RX10_TEMP189 = Program . getPlaceFromDist3 ( RX10_TEMP183 , RX10_TEMP185 ) ; final place RX10_TEMP191 = here ; final boolean RX10_TEMP192 = RX10_TEMP189 != RX10_TEMP191 ; if ( RX10_TEMP192 ) { String RX10_TEMP190 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP190 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP185 , X10_TEMP124 ) ; }
 }
 }
 }
 public void thread173(final T173 utmpz) {final  Point1 pl = utmpz.pl;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int x = utmpz.x;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP8 = ( pl . f0 ) ; final boolean X10_TEMP10 = X10_TEMP8 <= x ; if ( X10_TEMP10 ) { final Dist2 RX10_TEMP12 = ft . distValue ; final Dist2 dFT = RX10_TEMP12 ; final Dist3 RX10_TEMP13 = table . distValue ; final Dist3 dTable = RX10_TEMP13 ; final int X10_TEMP15 = ( 0 ) ; final Region1 rLocalFT1 = Program . X10Util_getLRank2D ( dFT , X10_TEMP15 ) ; final int X10_TEMP19 = ( 1 ) ; final Region1 rLocalT2 = Program . X10Util_getLRank3D ( dTable , X10_TEMP19 ) ; final place X10_TEMP22 = here ; final int RX10_TEMP18 = 1 ; int RX10_TEMP16 = rLocalFT1 . regSize ; RX10_TEMP16 = RX10_TEMP16 - RX10_TEMP18 ; final region ( : rank==1 ) RX10_TEMP17 = [ 0 : RX10_TEMP16 ] ; for ( point ( : rank==1 ) RX10_TEMP14 : RX10_TEMP17 ) { final int RX10_TEMP19 = RX10_TEMP14 [0] ; final Point1 RX10_TEMP15 = Program . regionOrdinalPoint1 ( rLocalFT1 , RX10_TEMP19 ) ; final int i = RX10_TEMP15 . f0 ; 
 final T338 utmp338 = new T338(i, N, y, index, ft, table);
 async (X10_TEMP22) {this.thread338(utmp338); }
 }
 final place X10_TEMP66 = ( here ) ; final boolean X10_TEMP68 = X10_TEMP66 . isFirst ( ) ; if ( X10_TEMP68 ) { final int X10_TEMP72 = ( 1 ) ; final int X10_TEMP70 = ( 1 ) ; final int X10_TEMP73 = ( y - X10_TEMP70 ) ; final Region1 X10_TEMP75 = Program . createNewRegion1R ( X10_TEMP72 , X10_TEMP73 ) ; final place X10_TEMP76 = here ; final int RX10_TEMP99 = 1 ; int RX10_TEMP97 = X10_TEMP75 . regSize ; RX10_TEMP97 = RX10_TEMP97 - RX10_TEMP99 ; final region ( : rank==1 ) RX10_TEMP98 = [ 0 : RX10_TEMP97 ] ; for ( point ( : rank==1 ) RX10_TEMP95 : RX10_TEMP98 ) { final int RX10_TEMP100 = RX10_TEMP95 [0] ; final Point1 RX10_TEMP96 = Program . regionOrdinalPoint1 ( X10_TEMP75 , RX10_TEMP100 ) ; final int i1 = RX10_TEMP96 . f0 ; 
 final T339 utmp339 = new T339(i1, N, y, x, index, ft, table);
 async (X10_TEMP76) {this.thread339(utmp339); }
 }
 final int X10_TEMP106 = ( 0 ) ; final int X10_TEMP107 = ( 0 ) ; final int X10_TEMP110 = ( 0 ) ; final int X10_TEMP111 = ( 0 ) ; final Point2 RX10_TEMP147 = new Point2 ( X10_TEMP110 , X10_TEMP111 ) ; final Dist2 RX10_TEMP148 = ft . distValue ; final Region2 RX10_TEMP149 = RX10_TEMP148 . dReg ; final int RX10_TEMP150 = Program . searchPointInRegion2 ( RX10_TEMP149 , RX10_TEMP147 ) ; final int RX10_TEMP151 = 0 ; final boolean RX10_TEMP152 = RX10_TEMP150 < RX10_TEMP151 ; if ( RX10_TEMP152 ) { String RX10_TEMP153 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP153 ) ; }
 final place RX10_TEMP154 = Program . getPlaceFromDist2 ( RX10_TEMP148 , RX10_TEMP150 ) ; final place RX10_TEMP156 = here ; final boolean RX10_TEMP157 = RX10_TEMP154 != RX10_TEMP156 ; if ( RX10_TEMP157 ) { String RX10_TEMP155 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP155 ) ; }
 final Complex RX10_TEMP158 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP150 ) ; final Complex X10_TEMP112 = ( RX10_TEMP158 ) ; final double X10_TEMP113 = ( Program . Complex_getReal ( X10_TEMP112 ) ) ; final double X10_TEMP115 = ( N * X10_TEMP113 ) ; final double X10_TEMP116 = ( X10_TEMP115 ) ; final Point3 RX10_TEMP159 = new Point3 ( X10_TEMP106 , X10_TEMP107 , index ) ; final Dist3 RX10_TEMP160 = table . distValue ; final Region3 RX10_TEMP161 = RX10_TEMP160 . dReg ; final int RX10_TEMP162 = Program . searchPointInRegion3 ( RX10_TEMP161 , RX10_TEMP159 ) ; final int RX10_TEMP163 = 0 ; final boolean RX10_TEMP164 = RX10_TEMP162 < RX10_TEMP163 ; if ( RX10_TEMP164 ) { String RX10_TEMP165 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP165 ) ; }
 final place RX10_TEMP166 = Program . getPlaceFromDist3 ( RX10_TEMP160 , RX10_TEMP162 ) ; final place RX10_TEMP168 = here ; final boolean RX10_TEMP169 = RX10_TEMP166 != RX10_TEMP168 ; if ( RX10_TEMP169 ) { String RX10_TEMP167 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP167 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP162 , X10_TEMP116 ) ; final int X10_TEMP120 = ( 0 ) ; final int X10_TEMP123 = ( 0 ) ; final int X10_TEMP124 = ( 0 ) ; final Point2 RX10_TEMP170 = new Point2 ( X10_TEMP123 , X10_TEMP124 ) ; final Dist2 RX10_TEMP171 = ft . distValue ; final Region2 RX10_TEMP172 = RX10_TEMP171 . dReg ; final int RX10_TEMP173 = Program . searchPointInRegion2 ( RX10_TEMP172 , RX10_TEMP170 ) ; final int RX10_TEMP174 = 0 ; final boolean RX10_TEMP175 = RX10_TEMP173 < RX10_TEMP174 ; if ( RX10_TEMP175 ) { String RX10_TEMP176 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP176 ) ; }
 final place RX10_TEMP177 = Program . getPlaceFromDist2 ( RX10_TEMP171 , RX10_TEMP173 ) ; final place RX10_TEMP179 = here ; final boolean RX10_TEMP180 = RX10_TEMP177 != RX10_TEMP179 ; if ( RX10_TEMP180 ) { String RX10_TEMP178 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP178 ) ; }
 final Complex RX10_TEMP181 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP173 ) ; final Complex X10_TEMP125 = ( RX10_TEMP181 ) ; final double X10_TEMP126 = ( Program . Complex_getImag ( X10_TEMP125 ) ) ; final double X10_TEMP128 = ( N * X10_TEMP126 ) ; final double X10_TEMP129 = ( X10_TEMP128 ) ; final Point3 RX10_TEMP182 = new Point3 ( x , X10_TEMP120 , index ) ; final Dist3 RX10_TEMP183 = table . distValue ; final Region3 RX10_TEMP184 = RX10_TEMP183 . dReg ; final int RX10_TEMP185 = Program . searchPointInRegion3 ( RX10_TEMP184 , RX10_TEMP182 ) ; final int RX10_TEMP186 = 0 ; final boolean RX10_TEMP187 = RX10_TEMP185 < RX10_TEMP186 ; if ( RX10_TEMP187 ) { String RX10_TEMP188 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP188 ) ; }
 final place RX10_TEMP189 = Program . getPlaceFromDist3 ( RX10_TEMP183 , RX10_TEMP185 ) ; final place RX10_TEMP191 = here ; final boolean RX10_TEMP192 = RX10_TEMP189 != RX10_TEMP191 ; if ( RX10_TEMP192 ) { String RX10_TEMP190 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP190 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP185 , X10_TEMP129 ) ; final int X10_TEMP133 = ( 0 ) ; final int X10_TEMP136 = ( 0 ) ; final Point2 RX10_TEMP193 = new Point2 ( X10_TEMP136 , y ) ; final Dist2 RX10_TEMP194 = ft . distValue ; final Region2 RX10_TEMP195 = RX10_TEMP194 . dReg ; final int RX10_TEMP196 = Program . searchPointInRegion2 ( RX10_TEMP195 , RX10_TEMP193 ) ; final int RX10_TEMP197 = 0 ; final boolean RX10_TEMP198 = RX10_TEMP196 < RX10_TEMP197 ; if ( RX10_TEMP198 ) { String RX10_TEMP199 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP199 ) ; }
 final place RX10_TEMP200 = Program . getPlaceFromDist2 ( RX10_TEMP194 , RX10_TEMP196 ) ; final place RX10_TEMP202 = here ; final boolean RX10_TEMP203 = RX10_TEMP200 != RX10_TEMP202 ; if ( RX10_TEMP203 ) { String RX10_TEMP201 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP201 ) ; }
 final Complex RX10_TEMP204 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP196 ) ; final Complex X10_TEMP137 = ( RX10_TEMP204 ) ; final double X10_TEMP138 = ( Program . Complex_getReal ( X10_TEMP137 ) ) ; final double X10_TEMP140 = ( N * X10_TEMP138 ) ; final double X10_TEMP141 = ( X10_TEMP140 ) ; final Point3 RX10_TEMP205 = new Point3 ( X10_TEMP133 , y , index ) ; final Dist3 RX10_TEMP206 = table . distValue ; final Region3 RX10_TEMP207 = RX10_TEMP206 . dReg ; final int RX10_TEMP208 = Program . searchPointInRegion3 ( RX10_TEMP207 , RX10_TEMP205 ) ; final int RX10_TEMP209 = 0 ; final boolean RX10_TEMP210 = RX10_TEMP208 < RX10_TEMP209 ; if ( RX10_TEMP210 ) { String RX10_TEMP211 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP211 ) ; }
 final place RX10_TEMP212 = Program . getPlaceFromDist3 ( RX10_TEMP206 , RX10_TEMP208 ) ; final place RX10_TEMP214 = here ; final boolean RX10_TEMP215 = RX10_TEMP212 != RX10_TEMP214 ; if ( RX10_TEMP215 ) { String RX10_TEMP213 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP213 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP208 , X10_TEMP141 ) ; final int X10_TEMP147 = ( 0 ) ; final Point2 RX10_TEMP216 = new Point2 ( X10_TEMP147 , y ) ; final Dist2 RX10_TEMP217 = ft . distValue ; final Region2 RX10_TEMP218 = RX10_TEMP217 . dReg ; final int RX10_TEMP219 = Program . searchPointInRegion2 ( RX10_TEMP218 , RX10_TEMP216 ) ; final int RX10_TEMP220 = 0 ; final boolean RX10_TEMP221 = RX10_TEMP219 < RX10_TEMP220 ; if ( RX10_TEMP221 ) { String RX10_TEMP222 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP222 ) ; }
 final place RX10_TEMP223 = Program . getPlaceFromDist2 ( RX10_TEMP217 , RX10_TEMP219 ) ; final place RX10_TEMP225 = here ; final boolean RX10_TEMP226 = RX10_TEMP223 != RX10_TEMP225 ; if ( RX10_TEMP226 ) { String RX10_TEMP224 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP224 ) ; }
 final Complex RX10_TEMP227 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP219 ) ; final Complex X10_TEMP148 = ( RX10_TEMP227 ) ; final double X10_TEMP149 = ( Program . Complex_getImag ( X10_TEMP148 ) ) ; final double X10_TEMP151 = ( N * X10_TEMP149 ) ; final double X10_TEMP152 = ( X10_TEMP151 ) ; final Point3 RX10_TEMP228 = new Point3 ( x , y , index ) ; final Dist3 RX10_TEMP229 = table . distValue ; final Region3 RX10_TEMP230 = RX10_TEMP229 . dReg ; final int RX10_TEMP231 = Program . searchPointInRegion3 ( RX10_TEMP230 , RX10_TEMP228 ) ; final int RX10_TEMP232 = 0 ; final boolean RX10_TEMP233 = RX10_TEMP231 < RX10_TEMP232 ; if ( RX10_TEMP233 ) { String RX10_TEMP234 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP234 ) ; }
 final place RX10_TEMP235 = Program . getPlaceFromDist3 ( RX10_TEMP229 , RX10_TEMP231 ) ; final place RX10_TEMP237 = here ; final boolean RX10_TEMP238 = RX10_TEMP235 != RX10_TEMP237 ; if ( RX10_TEMP238 ) { String RX10_TEMP236 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP236 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP231 , X10_TEMP152 ) ; }
 }
 }
 }
 public void thread322(final T322 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public void thread323(final T323 utmpz) {final  doubleStub RX10_TEMP30 = utmpz.RX10_TEMP30;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP30 ) ; }
 }
 public void thread324(final T324 utmpz) {final  doubleStub RX10_TEMP19 = utmpz.RX10_TEMP19;
final  point ( : rank==1 ) RX10_TEMP11 = utmpz.RX10_TEMP11;
final  doubleStub [ : rank==1 ] RX10_TEMP10 = utmpz.RX10_TEMP10;
 { RX10_TEMP10 [ RX10_TEMP11 ] = ( RX10_TEMP19 ) ; }
 }
 public void thread325(final T325 utmpz) {final  double val = utmpz.val;
final  doubleRefArray1 rcv = utmpz.rcv;
 { final int X10_TEMP26 = ( 0 ) ; final double X10_TEMP28 = ( val ) ; final Point1 RX10_TEMP36 = new Point1 ( X10_TEMP26 ) ; final Dist1 RX10_TEMP37 = rcv . distValue ; final Region1 RX10_TEMP38 = RX10_TEMP37 . dReg ; final int RX10_TEMP39 = Program . searchPointInRegion1 ( RX10_TEMP38 , RX10_TEMP36 ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final place RX10_TEMP43 = Program . getPlaceFromDist1 ( RX10_TEMP37 , RX10_TEMP39 ) ; final place RX10_TEMP45 = here ; final boolean RX10_TEMP46 = RX10_TEMP43 != RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP44 = "Bad place access for array rcv" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 Program . setRefArrayValue1double ( rcv , RX10_TEMP39 , X10_TEMP28 ) ; }
 }
 public void thread326(final T326 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public void thread327(final T327 utmpz) {final  Point2 p = utmpz.p;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP49 = ( p . f0 ) ; final boolean X10_TEMP51 = ( X10_TEMP49 > y ) ; final boolean X10_TEMP52 = X10_TEMP51 ; final int X10_TEMP57 = ( p . f0 ) ; final int X10_TEMP54 = ( 2 ) ; final int X10_TEMP56 = ( X10_TEMP54 * y ) ; int X10_TEMP61 = p . f0 ; if ( X10_TEMP52 ) { X10_TEMP61 = X10_TEMP57 - X10_TEMP56 ; }
 final int X10_TEMP62 = X10_TEMP61 ; final int X10_TEMP64 = ( 2 ) ; final double x1 = ( Math . pow ( X10_TEMP62 , X10_TEMP64 ) ) ; final int X10_TEMP67 = ( p . f1 ) ; final boolean X10_TEMP69 = ( X10_TEMP67 > x ) ; final boolean X10_TEMP70 = X10_TEMP69 ; final int X10_TEMP75 = ( p . f1 ) ; final int X10_TEMP72 = ( 2 ) ; final int X10_TEMP74 = ( X10_TEMP72 * x ) ; int X10_TEMP79 = p . f1 ; if ( X10_TEMP70 ) { X10_TEMP79 = X10_TEMP75 - X10_TEMP74 ; }
 final int X10_TEMP80 = X10_TEMP79 ; final int X10_TEMP82 = ( 2 ) ; final double x2 = ( Math . pow ( X10_TEMP80 , X10_TEMP82 ) ) ; final double X10_TEMP85 = ( x1 + x2 ) ; final double r = ( Math . sqrt ( X10_TEMP85 ) ) ; final double X10_TEMP93 = ( this . PoissonSolver_potentialField ( r , invRadius , affp ) ) ; final double X10_TEMP94 = ( X10_TEMP93 ) ; final Dist2 RX10_TEMP37 = f . distValue ; final Region2 RX10_TEMP38 = RX10_TEMP37 . dReg ; final int RX10_TEMP39 = Program . searchPointInRegion2 ( RX10_TEMP38 , p ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final place RX10_TEMP43 = Program . getPlaceFromDist2 ( RX10_TEMP37 , RX10_TEMP39 ) ; final place RX10_TEMP45 = here ; final boolean RX10_TEMP46 = RX10_TEMP43 != RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP44 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 Program . setRefArrayValue2double ( f , RX10_TEMP39 , X10_TEMP94 ) ; }
 }
 public void thread328(final T328 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public void thread329(final T329 utmpz) {final  Point2 p = utmpz.p;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP49 = ( p . f0 ) ; final boolean X10_TEMP51 = ( X10_TEMP49 > y ) ; final boolean X10_TEMP52 = X10_TEMP51 ; final int X10_TEMP57 = ( p . f0 ) ; final int X10_TEMP54 = ( 2 ) ; final int X10_TEMP56 = ( X10_TEMP54 * y ) ; int X10_TEMP61 = p . f0 ; if ( X10_TEMP52 ) { X10_TEMP61 = X10_TEMP57 - X10_TEMP56 ; }
 final int X10_TEMP62 = X10_TEMP61 ; final int X10_TEMP64 = ( 2 ) ; final double x1 = ( Math . pow ( X10_TEMP62 , X10_TEMP64 ) ) ; final int X10_TEMP67 = ( p . f1 ) ; final boolean X10_TEMP69 = ( X10_TEMP67 > x ) ; final boolean X10_TEMP70 = X10_TEMP69 ; final int X10_TEMP75 = ( p . f1 ) ; final int X10_TEMP72 = ( 2 ) ; final int X10_TEMP74 = ( X10_TEMP72 * x ) ; int X10_TEMP79 = p . f1 ; if ( X10_TEMP70 ) { X10_TEMP79 = X10_TEMP75 - X10_TEMP74 ; }
 final int X10_TEMP80 = X10_TEMP79 ; final int X10_TEMP82 = ( 2 ) ; final double x2 = ( Math . pow ( X10_TEMP80 , X10_TEMP82 ) ) ; final double X10_TEMP85 = ( x1 + x2 ) ; final double r = ( Math . sqrt ( X10_TEMP85 ) ) ; final double X10_TEMP93 = ( this . PoissonSolver_particleShape ( r , invRadius , affp ) ) ; final double X10_TEMP94 = ( X10_TEMP93 ) ; final Dist2 RX10_TEMP37 = f . distValue ; final Region2 RX10_TEMP38 = RX10_TEMP37 . dReg ; final int RX10_TEMP39 = Program . searchPointInRegion2 ( RX10_TEMP38 , p ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final place RX10_TEMP43 = Program . getPlaceFromDist2 ( RX10_TEMP37 , RX10_TEMP39 ) ; final place RX10_TEMP45 = here ; final boolean RX10_TEMP46 = RX10_TEMP43 != RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP44 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 Program . setRefArrayValue2double ( f , RX10_TEMP39 , X10_TEMP94 ) ; }
 }
 public void thread330(final T330 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public void thread331(final T331 utmpz) {final  Point2 p = utmpz.p;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP49 = ( p . f0 ) ; final boolean X10_TEMP51 = ( X10_TEMP49 > y ) ; final boolean X10_TEMP52 = X10_TEMP51 ; final int X10_TEMP57 = ( p . f0 ) ; final int X10_TEMP54 = ( 2 ) ; final int X10_TEMP56 = ( X10_TEMP54 * y ) ; int X10_TEMP61 = p . f0 ; if ( X10_TEMP52 ) { X10_TEMP61 = X10_TEMP57 - X10_TEMP56 ; }
 final int X10_TEMP62 = X10_TEMP61 ; final double x1 = ( X10_TEMP62 ) ; final int X10_TEMP65 = ( 2 ) ; final double xs1 = ( Math . pow ( x1 , X10_TEMP65 ) ) ; final int X10_TEMP68 = ( p . f1 ) ; final boolean X10_TEMP70 = ( X10_TEMP68 > x ) ; final boolean X10_TEMP71 = X10_TEMP70 ; final int X10_TEMP76 = ( p . f1 ) ; final int X10_TEMP73 = ( 2 ) ; final int X10_TEMP75 = ( X10_TEMP73 * x ) ; int X10_TEMP80 = p . f1 ; if ( X10_TEMP71 ) { X10_TEMP80 = X10_TEMP76 - X10_TEMP75 ; }
 final int X10_TEMP81 = X10_TEMP80 ; final double x2 = ( X10_TEMP81 ) ; final int X10_TEMP84 = ( 2 ) ; final double xs2 = ( Math . pow ( x2 , X10_TEMP84 ) ) ; final double X10_TEMP87 = ( xs1 + xs2 ) ; final double r = ( Math . sqrt ( X10_TEMP87 ) ) ; final double val = ( this . PoissonSolver_radialElectricField ( r , invRadius , affp ) ) ; final double X10_TEMP95 = ( 0.0 ) ; final boolean X10_TEMP97 = ( r > X10_TEMP95 ) ; final boolean X10_TEMP98 = X10_TEMP97 ; final double X10_TEMP100 = ( x2 / r ) ; double X10_TEMP103 = val ; if ( X10_TEMP98 ) { X10_TEMP103 = val * X10_TEMP100 ; }
 final double X10_TEMP104 = X10_TEMP103 ; final double X10_TEMP105 = ( X10_TEMP104 ) ; final Dist2 RX10_TEMP37 = f . distValue ; final Region2 RX10_TEMP38 = RX10_TEMP37 . dReg ; final int RX10_TEMP39 = Program . searchPointInRegion2 ( RX10_TEMP38 , p ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final place RX10_TEMP43 = Program . getPlaceFromDist2 ( RX10_TEMP37 , RX10_TEMP39 ) ; final place RX10_TEMP45 = here ; final boolean RX10_TEMP46 = RX10_TEMP43 != RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP44 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 Program . setRefArrayValue2double ( f , RX10_TEMP39 , X10_TEMP105 ) ; }
 }
 public void thread332(final T332 utmpz) {final  doubleStub RX10_TEMP15 = utmpz.RX10_TEMP15;
final  point ( : rank==1 ) RX10_TEMP7 = utmpz.RX10_TEMP7;
final  doubleStub [ : rank==1 ] RX10_TEMP6 = utmpz.RX10_TEMP6;
 { RX10_TEMP6 [ RX10_TEMP7 ] = ( RX10_TEMP15 ) ; }
 }
 public void thread333(final T333 utmpz) {final  Point2 p = utmpz.p;
final  double invRadius = utmpz.invRadius;
final  doubleRefArray2 f = utmpz.f;
final  double affp = utmpz.affp;
final  int y = utmpz.y;
final  int x = utmpz.x;
 { final int X10_TEMP49 = ( p . f0 ) ; final boolean X10_TEMP51 = ( X10_TEMP49 > y ) ; final boolean X10_TEMP52 = X10_TEMP51 ; final int X10_TEMP57 = ( p . f0 ) ; final int X10_TEMP54 = ( 2 ) ; final int X10_TEMP56 = ( X10_TEMP54 * y ) ; int X10_TEMP61 = p . f0 ; if ( X10_TEMP52 ) { X10_TEMP61 = X10_TEMP57 - X10_TEMP56 ; }
 final int X10_TEMP62 = X10_TEMP61 ; final double y1 = ( X10_TEMP62 ) ; final int X10_TEMP65 = ( 2 ) ; final double ys1 = ( Math . pow ( y1 , X10_TEMP65 ) ) ; final int X10_TEMP68 = ( p . f1 ) ; final boolean X10_TEMP70 = ( X10_TEMP68 > x ) ; final boolean X10_TEMP71 = X10_TEMP70 ; final int X10_TEMP76 = ( p . f1 ) ; final int X10_TEMP73 = ( 2 ) ; final int X10_TEMP75 = ( X10_TEMP73 * x ) ; int X10_TEMP80 = p . f1 ; if ( X10_TEMP71 ) { X10_TEMP80 = X10_TEMP76 - X10_TEMP75 ; }
 final int X10_TEMP81 = X10_TEMP80 ; final double y2 = ( X10_TEMP81 ) ; final int X10_TEMP84 = ( 2 ) ; final double ys2 = ( Math . pow ( y2 , X10_TEMP84 ) ) ; final double X10_TEMP87 = ( ys1 + ys2 ) ; final double r = ( Math . sqrt ( X10_TEMP87 ) ) ; final double val = ( this . PoissonSolver_radialElectricField ( r , invRadius , affp ) ) ; final double X10_TEMP95 = ( 0.0 ) ; final boolean X10_TEMP97 = ( r > X10_TEMP95 ) ; final boolean X10_TEMP98 = X10_TEMP97 ; final double X10_TEMP100 = ( y1 / r ) ; double X10_TEMP103 = val ; if ( X10_TEMP98 ) { X10_TEMP103 = val * X10_TEMP100 ; }
 final double X10_TEMP104 = X10_TEMP103 ; final double X10_TEMP105 = ( X10_TEMP104 ) ; final Dist2 RX10_TEMP37 = f . distValue ; final Region2 RX10_TEMP38 = RX10_TEMP37 . dReg ; final int RX10_TEMP39 = Program . searchPointInRegion2 ( RX10_TEMP38 , p ) ; final int RX10_TEMP40 = 0 ; final boolean RX10_TEMP41 = RX10_TEMP39 < RX10_TEMP40 ; if ( RX10_TEMP41 ) { String RX10_TEMP42 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP42 ) ; }
 final place RX10_TEMP43 = Program . getPlaceFromDist2 ( RX10_TEMP37 , RX10_TEMP39 ) ; final place RX10_TEMP45 = here ; final boolean RX10_TEMP46 = RX10_TEMP43 != RX10_TEMP45 ; if ( RX10_TEMP46 ) { String RX10_TEMP44 = "Bad place access for array f" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 Program . setRefArrayValue2double ( f , RX10_TEMP39 , X10_TEMP105 ) ; }
 }
 public void thread334(final T334 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int N = utmpz.N;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final Point2 RX10_TEMP20 = new Point2 ( i , j ) ; final Dist2 RX10_TEMP21 = ft . distValue ; final Region2 RX10_TEMP22 = RX10_TEMP21 . dReg ; final int RX10_TEMP23 = Program . searchPointInRegion2 ( RX10_TEMP22 , RX10_TEMP20 ) ; final int RX10_TEMP24 = 0 ; final boolean RX10_TEMP25 = RX10_TEMP23 < RX10_TEMP24 ; if ( RX10_TEMP25 ) { String RX10_TEMP26 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP26 ) ; }
 final place RX10_TEMP27 = Program . getPlaceFromDist2 ( RX10_TEMP21 , RX10_TEMP23 ) ; final place RX10_TEMP29 = here ; final boolean RX10_TEMP30 = RX10_TEMP27 != RX10_TEMP29 ; if ( RX10_TEMP30 ) { String RX10_TEMP28 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP28 ) ; }
 final Complex RX10_TEMP31 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP23 ) ; final Complex X10_TEMP31 = ( RX10_TEMP31 ) ; final double X10_TEMP32 = ( Program . Complex_getReal ( X10_TEMP31 ) ) ; final double X10_TEMP34 = ( N * X10_TEMP32 ) ; final double X10_TEMP35 = ( X10_TEMP34 ) ; final Point3 RX10_TEMP32 = new Point3 ( i , j , index ) ; final Dist3 RX10_TEMP33 = table . distValue ; final Region3 RX10_TEMP34 = RX10_TEMP33 . dReg ; final int RX10_TEMP35 = Program . searchPointInRegion3 ( RX10_TEMP34 , RX10_TEMP32 ) ; final int RX10_TEMP36 = 0 ; final boolean RX10_TEMP37 = RX10_TEMP35 < RX10_TEMP36 ; if ( RX10_TEMP37 ) { String RX10_TEMP38 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP38 ) ; }
 final place RX10_TEMP39 = Program . getPlaceFromDist3 ( RX10_TEMP33 , RX10_TEMP35 ) ; final place RX10_TEMP41 = here ; final boolean RX10_TEMP42 = RX10_TEMP39 != RX10_TEMP41 ; if ( RX10_TEMP42 ) { String RX10_TEMP40 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP40 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP35 , X10_TEMP35 ) ; }
 }
 public void thread335(final T335 utmpz) {final  int i = utmpz.i;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int x = utmpz.x;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP54 = ( 0 ) ; final int X10_TEMP51 = ( 2 ) ; final int X10_TEMP52 = ( X10_TEMP51 * y ) ; final int X10_TEMP55 = ( X10_TEMP52 - i ) ; final Point2 RX10_TEMP49 = new Point2 ( X10_TEMP54 , X10_TEMP55 ) ; final Dist2 RX10_TEMP50 = ft . distValue ; final Region2 RX10_TEMP51 = RX10_TEMP50 . dReg ; final int RX10_TEMP52 = Program . searchPointInRegion2 ( RX10_TEMP51 , RX10_TEMP49 ) ; final int RX10_TEMP53 = 0 ; final boolean RX10_TEMP54 = RX10_TEMP52 < RX10_TEMP53 ; if ( RX10_TEMP54 ) { String RX10_TEMP55 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP55 ) ; }
 final place RX10_TEMP56 = Program . getPlaceFromDist2 ( RX10_TEMP50 , RX10_TEMP52 ) ; final place RX10_TEMP58 = here ; final boolean RX10_TEMP59 = RX10_TEMP56 != RX10_TEMP58 ; if ( RX10_TEMP59 ) { String RX10_TEMP57 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final Complex RX10_TEMP60 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP52 ) ; final Complex X10_TEMP56 = ( RX10_TEMP60 ) ; final double X10_TEMP57 = ( Program . Complex_getReal ( X10_TEMP56 ) ) ; final double X10_TEMP59 = ( N * X10_TEMP57 ) ; final double X10_TEMP60 = ( X10_TEMP59 ) ; final Point3 RX10_TEMP61 = new Point3 ( x , i , index ) ; final Dist3 RX10_TEMP62 = table . distValue ; final Region3 RX10_TEMP63 = RX10_TEMP62 . dReg ; final int RX10_TEMP64 = Program . searchPointInRegion3 ( RX10_TEMP63 , RX10_TEMP61 ) ; final int RX10_TEMP65 = 0 ; final boolean RX10_TEMP66 = RX10_TEMP64 < RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP67 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP67 ) ; }
 final place RX10_TEMP68 = Program . getPlaceFromDist3 ( RX10_TEMP62 , RX10_TEMP64 ) ; final place RX10_TEMP70 = here ; final boolean RX10_TEMP71 = RX10_TEMP68 != RX10_TEMP70 ; if ( RX10_TEMP71 ) { String RX10_TEMP69 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP69 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP64 , X10_TEMP60 ) ; }
 }
 public void thread336(final T336 utmpz) {final  int i = utmpz.i;
final  Region1 rLocalT2 = utmpz.rLocalT2;
final  int N = utmpz.N;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP23 = ( 0 ) ; final boolean X10_TEMP25 = i > X10_TEMP23 ; if ( X10_TEMP25 ) { final place X10_TEMP27 = here ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = rLocalT2 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 RX10_TEMP21 = Program . regionOrdinalPoint1 ( rLocalT2 , RX10_TEMP25 ) ; final int j = RX10_TEMP21 . f0 ; 
 final T361 utmp361 = new T361(j, i, N, index, ft, table);
 async (X10_TEMP27) {this.thread361(utmp361); }
 }
 }
 }
 }
 public void thread337(final T337 utmpz) {final  int i1 = utmpz.i1;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int x = utmpz.x;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP49 = ( 2 ) ; final int X10_TEMP50 = ( X10_TEMP49 * y ) ; final int i2 = ( X10_TEMP50 - i1 ) ; final int X10_TEMP55 = ( 0 ) ; final int X10_TEMP58 = ( 0 ) ; final Point2 RX10_TEMP55 = new Point2 ( X10_TEMP58 , i1 ) ; final Dist2 RX10_TEMP56 = ft . distValue ; final Region2 RX10_TEMP57 = RX10_TEMP56 . dReg ; final int RX10_TEMP58 = Program . searchPointInRegion2 ( RX10_TEMP57 , RX10_TEMP55 ) ; final int RX10_TEMP59 = 0 ; final boolean RX10_TEMP60 = RX10_TEMP58 < RX10_TEMP59 ; if ( RX10_TEMP60 ) { String RX10_TEMP61 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP61 ) ; }
 final place RX10_TEMP62 = Program . getPlaceFromDist2 ( RX10_TEMP56 , RX10_TEMP58 ) ; final place RX10_TEMP64 = here ; final boolean RX10_TEMP65 = RX10_TEMP62 != RX10_TEMP64 ; if ( RX10_TEMP65 ) { String RX10_TEMP63 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP63 ) ; }
 final Complex RX10_TEMP66 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP58 ) ; final Complex X10_TEMP59 = ( RX10_TEMP66 ) ; final double X10_TEMP60 = ( Program . Complex_getReal ( X10_TEMP59 ) ) ; final double X10_TEMP62 = ( N * X10_TEMP60 ) ; final double X10_TEMP63 = ( X10_TEMP62 ) ; final Point3 RX10_TEMP67 = new Point3 ( X10_TEMP55 , i1 , index ) ; final Dist3 RX10_TEMP68 = table . distValue ; final Region3 RX10_TEMP69 = RX10_TEMP68 . dReg ; final int RX10_TEMP70 = Program . searchPointInRegion3 ( RX10_TEMP69 , RX10_TEMP67 ) ; final int RX10_TEMP71 = 0 ; final boolean RX10_TEMP72 = RX10_TEMP70 < RX10_TEMP71 ; if ( RX10_TEMP72 ) { String RX10_TEMP73 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP73 ) ; }
 final place RX10_TEMP74 = Program . getPlaceFromDist3 ( RX10_TEMP68 , RX10_TEMP70 ) ; final place RX10_TEMP76 = here ; final boolean RX10_TEMP77 = RX10_TEMP74 != RX10_TEMP76 ; if ( RX10_TEMP77 ) { String RX10_TEMP75 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP75 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP70 , X10_TEMP63 ) ; final int X10_TEMP69 = ( 0 ) ; final Point2 RX10_TEMP78 = new Point2 ( X10_TEMP69 , i2 ) ; final Dist2 RX10_TEMP79 = ft . distValue ; final Region2 RX10_TEMP80 = RX10_TEMP79 . dReg ; final int RX10_TEMP81 = Program . searchPointInRegion2 ( RX10_TEMP80 , RX10_TEMP78 ) ; final int RX10_TEMP82 = 0 ; final boolean RX10_TEMP83 = RX10_TEMP81 < RX10_TEMP82 ; if ( RX10_TEMP83 ) { String RX10_TEMP84 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP84 ) ; }
 final place RX10_TEMP85 = Program . getPlaceFromDist2 ( RX10_TEMP79 , RX10_TEMP81 ) ; final place RX10_TEMP87 = here ; final boolean RX10_TEMP88 = RX10_TEMP85 != RX10_TEMP87 ; if ( RX10_TEMP88 ) { String RX10_TEMP86 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP86 ) ; }
 final Complex RX10_TEMP89 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP81 ) ; final Complex X10_TEMP70 = ( RX10_TEMP89 ) ; final double X10_TEMP71 = ( Program . Complex_getReal ( X10_TEMP70 ) ) ; final double X10_TEMP73 = ( N * X10_TEMP71 ) ; final double X10_TEMP74 = ( X10_TEMP73 ) ; final Point3 RX10_TEMP90 = new Point3 ( x , i1 , index ) ; final Dist3 RX10_TEMP91 = table . distValue ; final Region3 RX10_TEMP92 = RX10_TEMP91 . dReg ; final int RX10_TEMP93 = Program . searchPointInRegion3 ( RX10_TEMP92 , RX10_TEMP90 ) ; final int RX10_TEMP94 = 0 ; final boolean RX10_TEMP95 = RX10_TEMP93 < RX10_TEMP94 ; if ( RX10_TEMP95 ) { String RX10_TEMP96 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP96 ) ; }
 final place RX10_TEMP97 = Program . getPlaceFromDist3 ( RX10_TEMP91 , RX10_TEMP93 ) ; final place RX10_TEMP99 = here ; final boolean RX10_TEMP100 = RX10_TEMP97 != RX10_TEMP99 ; if ( RX10_TEMP100 ) { String RX10_TEMP98 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP98 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP93 , X10_TEMP74 ) ; }
 }
 public void thread338(final T338 utmpz) {final  int i = utmpz.i;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP23 = ( 0 ) ; final boolean X10_TEMP25 = i > X10_TEMP23 ; if ( X10_TEMP25 ) { final int X10_TEMP29 = ( 1 ) ; final int X10_TEMP27 = ( 1 ) ; final int X10_TEMP30 = ( y - X10_TEMP27 ) ; final Region1 X10_TEMP32 = Program . createNewRegion1R ( X10_TEMP29 , X10_TEMP30 ) ; final place X10_TEMP33 = here ; final int RX10_TEMP24 = 1 ; int RX10_TEMP22 = X10_TEMP32 . regSize ; RX10_TEMP22 = RX10_TEMP22 - RX10_TEMP24 ; final region ( : rank==1 ) RX10_TEMP23 = [ 0 : RX10_TEMP22 ] ; for ( point ( : rank==1 ) RX10_TEMP20 : RX10_TEMP23 ) { final int RX10_TEMP25 = RX10_TEMP20 [0] ; final Point1 RX10_TEMP21 = Program . regionOrdinalPoint1 ( X10_TEMP32 , RX10_TEMP25 ) ; final int j = RX10_TEMP21 . f0 ; 
 final T362 utmp362 = new T362(j, i, N, index, ft, table);
 async (X10_TEMP33) {this.thread362(utmp362); }
 }
 final int X10_TEMP47 = ( 0 ) ; final int X10_TEMP50 = ( 0 ) ; final Point2 RX10_TEMP49 = new Point2 ( i , X10_TEMP50 ) ; final Dist2 RX10_TEMP50 = ft . distValue ; final Region2 RX10_TEMP51 = RX10_TEMP50 . dReg ; final int RX10_TEMP52 = Program . searchPointInRegion2 ( RX10_TEMP51 , RX10_TEMP49 ) ; final int RX10_TEMP53 = 0 ; final boolean RX10_TEMP54 = RX10_TEMP52 < RX10_TEMP53 ; if ( RX10_TEMP54 ) { String RX10_TEMP55 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP55 ) ; }
 final place RX10_TEMP56 = Program . getPlaceFromDist2 ( RX10_TEMP50 , RX10_TEMP52 ) ; final place RX10_TEMP58 = here ; final boolean RX10_TEMP59 = RX10_TEMP56 != RX10_TEMP58 ; if ( RX10_TEMP59 ) { String RX10_TEMP57 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP57 ) ; }
 final Complex RX10_TEMP60 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP52 ) ; final Complex X10_TEMP51 = ( RX10_TEMP60 ) ; final double X10_TEMP52 = ( Program . Complex_getReal ( X10_TEMP51 ) ) ; final double X10_TEMP54 = ( N * X10_TEMP52 ) ; final double X10_TEMP55 = ( X10_TEMP54 ) ; final Point3 RX10_TEMP61 = new Point3 ( i , X10_TEMP47 , index ) ; final Dist3 RX10_TEMP62 = table . distValue ; final Region3 RX10_TEMP63 = RX10_TEMP62 . dReg ; final int RX10_TEMP64 = Program . searchPointInRegion3 ( RX10_TEMP63 , RX10_TEMP61 ) ; final int RX10_TEMP65 = 0 ; final boolean RX10_TEMP66 = RX10_TEMP64 < RX10_TEMP65 ; if ( RX10_TEMP66 ) { String RX10_TEMP67 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP67 ) ; }
 final place RX10_TEMP68 = Program . getPlaceFromDist3 ( RX10_TEMP62 , RX10_TEMP64 ) ; final place RX10_TEMP70 = here ; final boolean RX10_TEMP71 = RX10_TEMP68 != RX10_TEMP70 ; if ( RX10_TEMP71 ) { String RX10_TEMP69 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP69 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP64 , X10_TEMP55 ) ; final Point2 RX10_TEMP72 = new Point2 ( i , y ) ; final Dist2 RX10_TEMP73 = ft . distValue ; final Region2 RX10_TEMP74 = RX10_TEMP73 . dReg ; final int RX10_TEMP75 = Program . searchPointInRegion2 ( RX10_TEMP74 , RX10_TEMP72 ) ; final int RX10_TEMP76 = 0 ; final boolean RX10_TEMP77 = RX10_TEMP75 < RX10_TEMP76 ; if ( RX10_TEMP77 ) { String RX10_TEMP78 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP78 ) ; }
 final place RX10_TEMP79 = Program . getPlaceFromDist2 ( RX10_TEMP73 , RX10_TEMP75 ) ; final place RX10_TEMP81 = here ; final boolean RX10_TEMP82 = RX10_TEMP79 != RX10_TEMP81 ; if ( RX10_TEMP82 ) { String RX10_TEMP80 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP80 ) ; }
 final Complex RX10_TEMP83 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP75 ) ; final Complex X10_TEMP61 = ( RX10_TEMP83 ) ; final double X10_TEMP62 = ( Program . Complex_getReal ( X10_TEMP61 ) ) ; final double X10_TEMP64 = ( N * X10_TEMP62 ) ; final double X10_TEMP65 = ( X10_TEMP64 ) ; final Point3 RX10_TEMP84 = new Point3 ( i , y , index ) ; final Dist3 RX10_TEMP85 = table . distValue ; final Region3 RX10_TEMP86 = RX10_TEMP85 . dReg ; final int RX10_TEMP87 = Program . searchPointInRegion3 ( RX10_TEMP86 , RX10_TEMP84 ) ; final int RX10_TEMP88 = 0 ; final boolean RX10_TEMP89 = RX10_TEMP87 < RX10_TEMP88 ; if ( RX10_TEMP89 ) { String RX10_TEMP90 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP90 ) ; }
 final place RX10_TEMP91 = Program . getPlaceFromDist3 ( RX10_TEMP85 , RX10_TEMP87 ) ; final place RX10_TEMP93 = here ; final boolean RX10_TEMP94 = RX10_TEMP91 != RX10_TEMP93 ; if ( RX10_TEMP94 ) { String RX10_TEMP92 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP92 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP87 , X10_TEMP65 ) ; }
 }
 }
 public void thread339(final T339 utmpz) {final  int i1 = utmpz.i1;
final  int N = utmpz.N;
final  int y = utmpz.y;
final  int x = utmpz.x;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final int X10_TEMP77 = ( 2 ) ; final int X10_TEMP78 = ( X10_TEMP77 * y ) ; final int i2 = ( X10_TEMP78 - i1 ) ; final int X10_TEMP83 = ( 0 ) ; final int X10_TEMP86 = ( 0 ) ; final Point2 RX10_TEMP101 = new Point2 ( X10_TEMP86 , i1 ) ; final Dist2 RX10_TEMP102 = ft . distValue ; final Region2 RX10_TEMP103 = RX10_TEMP102 . dReg ; final int RX10_TEMP104 = Program . searchPointInRegion2 ( RX10_TEMP103 , RX10_TEMP101 ) ; final int RX10_TEMP105 = 0 ; final boolean RX10_TEMP106 = RX10_TEMP104 < RX10_TEMP105 ; if ( RX10_TEMP106 ) { String RX10_TEMP107 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP107 ) ; }
 final place RX10_TEMP108 = Program . getPlaceFromDist2 ( RX10_TEMP102 , RX10_TEMP104 ) ; final place RX10_TEMP110 = here ; final boolean RX10_TEMP111 = RX10_TEMP108 != RX10_TEMP110 ; if ( RX10_TEMP111 ) { String RX10_TEMP109 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP109 ) ; }
 final Complex RX10_TEMP112 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP104 ) ; final Complex X10_TEMP87 = ( RX10_TEMP112 ) ; final double X10_TEMP88 = ( Program . Complex_getImag ( X10_TEMP87 ) ) ; final double X10_TEMP90 = ( N * X10_TEMP88 ) ; final double X10_TEMP91 = ( X10_TEMP90 ) ; final Point3 RX10_TEMP113 = new Point3 ( X10_TEMP83 , i1 , index ) ; final Dist3 RX10_TEMP114 = table . distValue ; final Region3 RX10_TEMP115 = RX10_TEMP114 . dReg ; final int RX10_TEMP116 = Program . searchPointInRegion3 ( RX10_TEMP115 , RX10_TEMP113 ) ; final int RX10_TEMP117 = 0 ; final boolean RX10_TEMP118 = RX10_TEMP116 < RX10_TEMP117 ; if ( RX10_TEMP118 ) { String RX10_TEMP119 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP119 ) ; }
 final place RX10_TEMP120 = Program . getPlaceFromDist3 ( RX10_TEMP114 , RX10_TEMP116 ) ; final place RX10_TEMP122 = here ; final boolean RX10_TEMP123 = RX10_TEMP120 != RX10_TEMP122 ; if ( RX10_TEMP123 ) { String RX10_TEMP121 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP121 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP116 , X10_TEMP91 ) ; final int X10_TEMP97 = ( 0 ) ; final Point2 RX10_TEMP124 = new Point2 ( X10_TEMP97 , i2 ) ; final Dist2 RX10_TEMP125 = ft . distValue ; final Region2 RX10_TEMP126 = RX10_TEMP125 . dReg ; final int RX10_TEMP127 = Program . searchPointInRegion2 ( RX10_TEMP126 , RX10_TEMP124 ) ; final int RX10_TEMP128 = 0 ; final boolean RX10_TEMP129 = RX10_TEMP127 < RX10_TEMP128 ; if ( RX10_TEMP129 ) { String RX10_TEMP130 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP130 ) ; }
 final place RX10_TEMP131 = Program . getPlaceFromDist2 ( RX10_TEMP125 , RX10_TEMP127 ) ; final place RX10_TEMP133 = here ; final boolean RX10_TEMP134 = RX10_TEMP131 != RX10_TEMP133 ; if ( RX10_TEMP134 ) { String RX10_TEMP132 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP132 ) ; }
 final Complex RX10_TEMP135 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP127 ) ; final Complex X10_TEMP98 = ( RX10_TEMP135 ) ; final double X10_TEMP99 = ( Program . Complex_getImag ( X10_TEMP98 ) ) ; final double X10_TEMP101 = ( N * X10_TEMP99 ) ; final double X10_TEMP102 = ( X10_TEMP101 ) ; final Point3 RX10_TEMP136 = new Point3 ( x , i1 , index ) ; final Dist3 RX10_TEMP137 = table . distValue ; final Region3 RX10_TEMP138 = RX10_TEMP137 . dReg ; final int RX10_TEMP139 = Program . searchPointInRegion3 ( RX10_TEMP138 , RX10_TEMP136 ) ; final int RX10_TEMP140 = 0 ; final boolean RX10_TEMP141 = RX10_TEMP139 < RX10_TEMP140 ; if ( RX10_TEMP141 ) { String RX10_TEMP142 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP142 ) ; }
 final place RX10_TEMP143 = Program . getPlaceFromDist3 ( RX10_TEMP137 , RX10_TEMP139 ) ; final place RX10_TEMP145 = here ; final boolean RX10_TEMP146 = RX10_TEMP143 != RX10_TEMP145 ; if ( RX10_TEMP146 ) { String RX10_TEMP144 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP144 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP139 , X10_TEMP102 ) ; }
 }
 public void thread361(final T361 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int N = utmpz.N;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final Point2 RX10_TEMP26 = new Point2 ( i , j ) ; final Dist2 RX10_TEMP27 = ft . distValue ; final Region2 RX10_TEMP28 = RX10_TEMP27 . dReg ; final int RX10_TEMP29 = Program . searchPointInRegion2 ( RX10_TEMP28 , RX10_TEMP26 ) ; final int RX10_TEMP30 = 0 ; final boolean RX10_TEMP31 = RX10_TEMP29 < RX10_TEMP30 ; if ( RX10_TEMP31 ) { String RX10_TEMP32 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP32 ) ; }
 final place RX10_TEMP33 = Program . getPlaceFromDist2 ( RX10_TEMP27 , RX10_TEMP29 ) ; final place RX10_TEMP35 = here ; final boolean RX10_TEMP36 = RX10_TEMP33 != RX10_TEMP35 ; if ( RX10_TEMP36 ) { String RX10_TEMP34 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP34 ) ; }
 final Complex RX10_TEMP37 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP29 ) ; final Complex X10_TEMP33 = ( RX10_TEMP37 ) ; final double X10_TEMP34 = ( Program . Complex_getImag ( X10_TEMP33 ) ) ; final double X10_TEMP36 = ( N * X10_TEMP34 ) ; final double X10_TEMP37 = ( X10_TEMP36 ) ; final Point3 RX10_TEMP38 = new Point3 ( i , j , index ) ; final Dist3 RX10_TEMP39 = table . distValue ; final Region3 RX10_TEMP40 = RX10_TEMP39 . dReg ; final int RX10_TEMP41 = Program . searchPointInRegion3 ( RX10_TEMP40 , RX10_TEMP38 ) ; final int RX10_TEMP42 = 0 ; final boolean RX10_TEMP43 = RX10_TEMP41 < RX10_TEMP42 ; if ( RX10_TEMP43 ) { String RX10_TEMP44 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 final place RX10_TEMP45 = Program . getPlaceFromDist3 ( RX10_TEMP39 , RX10_TEMP41 ) ; final place RX10_TEMP47 = here ; final boolean RX10_TEMP48 = RX10_TEMP45 != RX10_TEMP47 ; if ( RX10_TEMP48 ) { String RX10_TEMP46 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP41 , X10_TEMP37 ) ; }
 }
 public void thread362(final T362 utmpz) {final  int j = utmpz.j;
final  int i = utmpz.i;
final  int N = utmpz.N;
final  int index = utmpz.index;
final  ComplexRefArray2 ft = utmpz.ft;
final  doubleRefArray3 table = utmpz.table;
 { final Point2 RX10_TEMP26 = new Point2 ( i , j ) ; final Dist2 RX10_TEMP27 = ft . distValue ; final Region2 RX10_TEMP28 = RX10_TEMP27 . dReg ; final int RX10_TEMP29 = Program . searchPointInRegion2 ( RX10_TEMP28 , RX10_TEMP26 ) ; final int RX10_TEMP30 = 0 ; final boolean RX10_TEMP31 = RX10_TEMP29 < RX10_TEMP30 ; if ( RX10_TEMP31 ) { String RX10_TEMP32 = "Array access index out of bounds" ; throw new RuntimeException ( RX10_TEMP32 ) ; }
 final place RX10_TEMP33 = Program . getPlaceFromDist2 ( RX10_TEMP27 , RX10_TEMP29 ) ; final place RX10_TEMP35 = here ; final boolean RX10_TEMP36 = RX10_TEMP33 != RX10_TEMP35 ; if ( RX10_TEMP36 ) { String RX10_TEMP34 = "Bad place access for array ft" ; throw new RuntimeException ( RX10_TEMP34 ) ; }
 final Complex RX10_TEMP37 = Program . getRefArrayValue2Complex ( ft , RX10_TEMP29 ) ; final Complex X10_TEMP39 = ( RX10_TEMP37 ) ; final double X10_TEMP40 = ( Program . Complex_getImag ( X10_TEMP39 ) ) ; final double X10_TEMP42 = ( N * X10_TEMP40 ) ; final double X10_TEMP43 = ( X10_TEMP42 ) ; final Point3 RX10_TEMP38 = new Point3 ( i , j , index ) ; final Dist3 RX10_TEMP39 = table . distValue ; final Region3 RX10_TEMP40 = RX10_TEMP39 . dReg ; final int RX10_TEMP41 = Program . searchPointInRegion3 ( RX10_TEMP40 , RX10_TEMP38 ) ; final int RX10_TEMP42 = 0 ; final boolean RX10_TEMP43 = RX10_TEMP41 < RX10_TEMP42 ; if ( RX10_TEMP43 ) { String RX10_TEMP44 = "Array index out of bounds" ; throw new RuntimeException ( RX10_TEMP44 ) ; }
 final place RX10_TEMP45 = Program . getPlaceFromDist3 ( RX10_TEMP39 , RX10_TEMP41 ) ; final place RX10_TEMP47 = here ; final boolean RX10_TEMP48 = RX10_TEMP45 != RX10_TEMP47 ; if ( RX10_TEMP48 ) { String RX10_TEMP46 = "Bad place access for array table" ; throw new RuntimeException ( RX10_TEMP46 ) ; }
 Program . setRefArrayValue3double ( table , RX10_TEMP41 , X10_TEMP43 ) ; }
 }

} 

 value Region2 { public final int regRank ; public final int regSize ; public final boolean regType ; public final int low0 ; public final int dim0 ; public final int low1 ; public final int dim1 ; public final Point2 value [ : rank==1 ] pointArray ; public Region2 ( final Point2 value [ : rank==1 ] pointArray_ , final int regSize_ ) { final int zero = 0 ; final int one = 1 ; final int minusOne = zero - one ; final boolean f = false ; final int regR = 2 ; this . regRank = ( regR ) ; this . regSize = ( regSize_ ) ; this . pointArray = ( pointArray_ ) ; this . regType = ( f ) ; this . low0 = ( minusOne ) ; this . dim0 = ( zero ) ; this . low1 = ( minusOne ) ; this . dim1 = ( zero ) ; }
 public Region2 ( final Point2 value [ : rank==1 ] pointArray_ , final int regSize_ , final int low0_ , final int dim0_ , final int low1_ , final int dim1_ ) { final boolean t = true ; final int regR = 2 ; this . regRank = ( regR ) ; this . regSize = ( regSize_ ) ; this . pointArray = ( pointArray_ ) ; this . regType = ( t ) ; this . low0 = ( low0_ ) ; this . dim0 = ( dim0_ ) ; this . low1 = ( low1_ ) ; this . dim1 = ( dim1_ ) ; }

} 

 value Point1 { public final int f0 ; public Point1 ( final int f0_ ) { this . f0 = ( f0_ ) ; }

} 

 value Point2 { public final int f0 ; public final int f1 ; public Point2 ( final int f0_ , final int f1_ ) { this . f0 = ( f0_ ) ; this . f1 = ( f1_ ) ; }

} 

 value Point3 { public final int f0 ; public final int f1 ; public final int f2 ; public Point3 ( final int f0_ , final int f1_ , final int f2_ ) { this . f0 = ( f0_ ) ; this . f1 = ( f1_ ) ; this . f2 = ( f2_ ) ; }

} 

 value intStub { public final int [ : rank==1 ] localArray ; public intStub ( final int [ : rank==1 ] localArray_ ) { this . localArray = ( localArray_ ) ; }

} 

 value Dist { public final place value [ : rank==1 ] placeArray ; public final int value [ : rank==1 ] counts ; public final int value [ : rank==1 ] runningSum ; public Dist ( final place value [ : rank==1 ] vPlaceArray , final int arraySize ) { final int one = 1 ; final int zero = 0 ; final int maxPlaces = place.MAX_PLACES ; final int ub = maxPlaces - one ; final region ( : rank==1 ) countReg = [ 0 : ub ] ; final dist ( : rank==1 ) countDist = [ 0 : ub ] -> here ; final int rSize = arraySize - one ; final region ( : rank==1 ) arrayReg = [ 0 : rSize ] ; final dist ( : rank==1 ) runSumDist = [ 0 : rSize ] -> here ; final int [ : rank==1 ] tempCounts = ( int [ : rank==1 ] ) ( new int [ countDist ] ) ; final int [ : rank==1 ] tempRunSum = ( int [ : rank==1 ] ) ( new int [ runSumDist ] ) ; for ( point ( : rank==1 ) p : countReg ) { tempCounts [ p ] = ( zero ) ; }
 for ( point ( : rank==1 ) p : arrayReg ) { final place pl = vPlaceArray [ p ] ; final int index = pl . id ; final int oldVal = tempCounts [ index ] ; tempRunSum [ p ] = ( oldVal ) ; final int oldValPlusOne = oldVal + one ; tempCounts [ index ] = ( oldValPlusOne ) ; }
 this . placeArray = ( vPlaceArray ) ; final int value [ : rank==1 ] tempCountsV = Program . initDist ( tempCounts , countReg ) ; this . counts = ( tempCountsV ) ; final int value [ : rank==1 ] tempRunSumV = Program . initDist ( tempRunSum , arrayReg ) ; this . runningSum = ( tempRunSumV ) ; }

} 

 class Random { public int flag ; public double r0 ; public int r1 ; public int r2 ; public int r4 ; public int r5 ; public double h1l ; public double h1u ; public double h2l ; public Random ( ) { final int X10_TEMP2 = ( 0 ) ; this . flag = ( X10_TEMP2 ) ; final double X10_TEMP4 = ( 0.0 ) ; this . r0 = ( X10_TEMP4 ) ; final int X10_TEMP6 = ( 885098780 ) ; this . r1 = ( X10_TEMP6 ) ; final int X10_TEMP8 = ( 1824280461 ) ; this . r2 = ( X10_TEMP8 ) ; final int X10_TEMP10 = ( 1396483093 ) ; this . r4 = ( X10_TEMP10 ) ; final int X10_TEMP12 = ( 55318673 ) ; this . r5 = ( X10_TEMP12 ) ; final double X10_TEMP14 = ( 65531.0 ) ; this . h1l = ( X10_TEMP14 ) ; final double X10_TEMP16 = ( 32767.0 ) ; this . h1u = ( X10_TEMP16 ) ; final double X10_TEMP18 = ( 65525.0 ) ; this . h2l = ( X10_TEMP18 ) ; }

} 

 value FourierTransform2D { public final int maxBits ; public final int nBits1 ; public final int nBits2 ; public final int length1 ; public final int length2 ; public final double invN ; public final intValArray1 tableBitReverse ; public final ComplexValArray1 tableSineCosine ; public FourierTransform2D ( final int nBits1 , final int nBits2 ) { final int X10_TEMP2 = ( nBits1 ) ; this . nBits1 = ( X10_TEMP2 ) ; final int X10_TEMP4 = ( nBits2 ) ; this . nBits2 = ( X10_TEMP4 ) ; final int X10_TEMP6 = ( 1 ) ; final int X10_TEMP8 = ( nBits2 - X10_TEMP6 ) ; final int X10_TEMP10 = ( Program . X10Util_maxInt ( nBits1 , X10_TEMP8 ) ) ; this . maxBits = ( X10_TEMP10 ) ; final int X10_TEMP11 = ( 1 ) ; final int len1 = ( X10_TEMP11 << nBits1 ) ; final int X10_TEMP13 = ( 1 ) ; final int len2 = ( X10_TEMP13 << nBits2 ) ; this . length1 = ( len1 ) ; this . length2 = ( len2 ) ; final double X10_TEMP21 = ( 1.0 ) ; final int X10_TEMP17 = ( 2 ) ; final int X10_TEMP18 = ( X10_TEMP17 * len1 ) ; final int X10_TEMP20 = ( X10_TEMP18 * len2 ) ; final double X10_TEMP23 = ( X10_TEMP21 / X10_TEMP20 ) ; this . invN = ( X10_TEMP23 ) ; final intValArray1 X10_TEMP28 = this . FourierTransform2D_initBitReverse ( nBits1 , nBits2 ) ; this . tableBitReverse = ( X10_TEMP28 ) ; final ComplexValArray1 X10_TEMP33 = this . FourierTransform2D_initSineCosine ( len1 , len2 ) ; this . tableSineCosine = ( X10_TEMP33 ) ; }
 public intValArray1 FourierTransform2D_initBitReverse ( final int nBits1 , final int nBits2 ) { final int X10_TEMP1 = ( 1 ) ; final int X10_TEMP4 = ( nBits2 - X10_TEMP1 ) ; final int maxBits = ( Program . X10Util_maxInt ( X10_TEMP4 , nBits1 ) ) ; final int X10_TEMP12 = ( 0 ) ; final int X10_TEMP7 = ( 1 ) ; final int X10_TEMP9 = ( X10_TEMP7 << maxBits ) ; final int X10_TEMP10 = ( 1 ) ; final int X10_TEMP13 = ( X10_TEMP9 - X10_TEMP10 ) ; final Region1 r = Program . createNewRegion1R ( X10_TEMP12 , X10_TEMP13 ) ; final Region1 RX10_TEMP0 = r ; final int RX10_TEMP4 = r . regSize ; final int RX10_TEMP5 = 1 ; final int RX10_TEMP6 = RX10_TEMP4 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP6 ] ; final int value [ : rank==1 ] RX10_TEMP7 = ( int value [ : rank==1 ] ) ( new int value [ RX10_TEMP3 ] ( point ( : rank==1 ) RX10_TEMP1 ) { final int RX10_TEMP2 = RX10_TEMP1 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( RX10_TEMP0 , RX10_TEMP2 ) ; final int i0 = ( i . f0 ) ; final int X10_TEMP17 = ( 0x0000FFFF ) ; final int X10_TEMP19 = ( i0 & X10_TEMP17 ) ; final int X10_TEMP20 = ( 16 ) ; final int X10_TEMP22 = ( X10_TEMP19 << X10_TEMP20 ) ; final int X10_TEMP23 = ( 16 ) ; final int X10_TEMP25 = ( i0 >> X10_TEMP23 ) ; final int X10_TEMP26 = ( 0x0000FFFF ) ; final int X10_TEMP28 = ( X10_TEMP25 & X10_TEMP26 ) ; final int X10_TEMP30 = ( X10_TEMP22 | X10_TEMP28 ) ; final int i1 = ( X10_TEMP30 ) ; final int X10_TEMP32 = ( 0x00FF00FF ) ; final int X10_TEMP34 = ( i1 & X10_TEMP32 ) ; final int X10_TEMP35 = ( 8 ) ; final int X10_TEMP37 = ( X10_TEMP34 << X10_TEMP35 ) ; final int X10_TEMP38 = ( 8 ) ; final int X10_TEMP40 = ( i1 >> X10_TEMP38 ) ; final int X10_TEMP41 = ( 0x00FF00FF ) ; final int X10_TEMP43 = ( X10_TEMP40 & X10_TEMP41 ) ; final int X10_TEMP45 = ( X10_TEMP37 | X10_TEMP43 ) ; final int i2 = ( X10_TEMP45 ) ; final int X10_TEMP47 = ( 0x0F0F0F0F ) ; final int X10_TEMP49 = ( i2 & X10_TEMP47 ) ; final int X10_TEMP50 = ( 4 ) ; final int X10_TEMP52 = ( X10_TEMP49 << X10_TEMP50 ) ; final int X10_TEMP53 = ( 4 ) ; final int X10_TEMP55 = ( i2 >> X10_TEMP53 ) ; final int X10_TEMP56 = ( 0x0F0F0F0F ) ; final int X10_TEMP58 = ( X10_TEMP55 & X10_TEMP56 ) ; final int X10_TEMP60 = ( X10_TEMP52 | X10_TEMP58 ) ; final int i3 = ( X10_TEMP60 ) ; final int X10_TEMP62 = ( 0x33333333 ) ; final int X10_TEMP64 = ( i3 & X10_TEMP62 ) ; final int X10_TEMP65 = ( 2 ) ; final int X10_TEMP67 = ( X10_TEMP64 << X10_TEMP65 ) ; final int X10_TEMP68 = ( 2 ) ; final int X10_TEMP70 = ( i3 >> X10_TEMP68 ) ; final int X10_TEMP71 = ( 0x33333333 ) ; final int X10_TEMP73 = ( X10_TEMP70 & X10_TEMP71 ) ; final int X10_TEMP75 = ( X10_TEMP67 | X10_TEMP73 ) ; final int i4 = ( X10_TEMP75 ) ; final int X10_TEMP77 = ( 0x55555555 ) ; final int X10_TEMP79 = ( i4 & X10_TEMP77 ) ; final int X10_TEMP80 = ( 1 ) ; final int X10_TEMP82 = ( X10_TEMP79 << X10_TEMP80 ) ; final int X10_TEMP83 = ( 1 ) ; final int X10_TEMP85 = ( i4 >> X10_TEMP83 ) ; final int X10_TEMP86 = ( 0x55555555 ) ; final int X10_TEMP88 = ( X10_TEMP85 & X10_TEMP86 ) ; final int X10_TEMP90 = ( X10_TEMP82 | X10_TEMP88 ) ; final int i5 = ( X10_TEMP90 ) ; final int X10_TEMP92 = ( java.lang.Integer.SIZE ) ; final int X10_TEMP94 = ( X10_TEMP92 - maxBits ) ; final int X10_TEMP96 = ( i5 >>> X10_TEMP94 ) ; return X10_TEMP96 ; }
 ) ; final intValArray1 RX10_TEMP8 = new intValArray1 ( r , RX10_TEMP7 ) ; final intValArray1 X10_TEMP97 = RX10_TEMP8 ; return X10_TEMP97 ; }
 public ComplexValArray1 FourierTransform2D_initSineCosine ( final int length1 , final int length2 ) { final int maxLength = ( Program . X10Util_maxInt ( length1 , length2 ) ) ; final double PI2 = ( 6.28318530717959 ) ; final double k = ( PI2 / maxLength ) ; final int X10_TEMP12 = ( 0 ) ; final int X10_TEMP7 = ( 2 ) ; final int X10_TEMP9 = ( maxLength / X10_TEMP7 ) ; final int X10_TEMP10 = ( 1 ) ; final int X10_TEMP13 = ( X10_TEMP9 - X10_TEMP10 ) ; final Region1 r = Program . createNewRegion1R ( X10_TEMP12 , X10_TEMP13 ) ; final Region1 RX10_TEMP0 = r ; final int RX10_TEMP4 = r . regSize ; final int RX10_TEMP5 = 1 ; final int RX10_TEMP6 = RX10_TEMP4 - RX10_TEMP5 ; final region ( : rank==1 ) RX10_TEMP3 = [ 0 : RX10_TEMP6 ] ; final Complex value [ : rank==1 ] RX10_TEMP7 = ( Complex value [ : rank==1 ] ) ( new Complex value [ RX10_TEMP3 ] ( point ( : rank==1 ) RX10_TEMP1 ) { final int RX10_TEMP2 = RX10_TEMP1 [0] ; final Point1 i = Program . regionOrdinalPoint1 ( RX10_TEMP0 , RX10_TEMP2 ) ; final int X10_TEMP16 = ( i . f0 ) ; final double theta = ( k * X10_TEMP16 ) ; double X10_TEMP24 = ( Math . cos ( theta ) ) ; final double X10_TEMP21 = ( Math . sin ( theta ) ) ; final int X10_TEMP22 = 0 ; double X10_TEMP25 = ( X10_TEMP22 - X10_TEMP21 ) ; final Complex X10_TEMP27 = ( new Complex ( X10_TEMP24 , X10_TEMP25 ) ) ; return X10_TEMP27 ; }
 ) ; final ComplexValArray1 RX10_TEMP8 = new ComplexValArray1 ( r , RX10_TEMP7 ) ; final ComplexValArray1 X10_TEMP28 = RX10_TEMP8 ; return X10_TEMP28 ; }

} 

