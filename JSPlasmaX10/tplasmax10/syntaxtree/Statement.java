//
// Generated by JTB 1.3.2
//

package tplasmax10.syntaxtree;

/**
 * Grammar production:
 * f0 -> AddLocalOpsStatement()
 *       | Assignment()
 *       | ArrayAssignment()
 *       | FieldAssignment()
 *       | ThisFieldAssignment()
 *       | AsyncStatement()
 *       | Block()
 *       | BreakStatement()
 *       | ContinueStatement()
 *       | DoStatement()
 *       | FinishStatement()
 *       | IfStatement()
 *       | LoopStatement()
 *       | MethodCallStatement()
 *       | MethodCallStatementInConstructor()
 *       | PrintlnStatement()
 *       | PrintStatement()
 *       | PrintErrorStatement()
 *       | ReturnStatement()
 *       | SwitchStatement()
 *       | ThrowStatement()
 *       | WhileStatement()
 *       | FinalVariableDeclaration()
 *       | UpdatableVariableDeclaration()
 */
public class Statement implements Node {
   public NodeChoice f0;

   public Statement(NodeChoice n0) {
      f0 = n0;
   }

   public void accept(tplasmax10.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(tplasmax10.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(tplasmax10.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(tplasmax10.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

