 struct Timer  * tmr = (struct Timer  *) ((((_task*)_thread_getspecific()) -> total_memory) +=  sizeof(struct Timer ),malloc(sizeof(struct Timer )));  
struct MR * X10_TEMP4 = (struct MR  *)  ((((_task*)_thread_getspecific()) -> total_memory) +=  sizeof(struct MR ),malloc(sizeof(struct MR )));  
 char * tempC1 = (char *)malloc(1000 * sizeof(char));
 char * tempC2 = (char *)malloc(1000 * sizeof(char));
 char * tempC3 = (char *)malloc(1000 * sizeof(char));
/*Updatable ARRAY*/ struct intStub * const RX10_TEMP8 = (/*Updatable ARRAY*/ struct intStub * ) ( TEMPCALLOCPOINTER1 = malloc(sizeof(int32_t)+(RX10_TEMP7*sizeof( intStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP7*sizeof( intStub )),((int32_t * )TEMPCALLOCPOINTER1)[0] = RX10_TEMP7, TEMPCALLOCPOINTER1 = ((int32_t * )TEMPCALLOCPOINTER1)+1, memset(TEMPCALLOCPOINTER1,0,RX10_TEMP7*sizeof(intStub ) ) ); 
/*VALUE ARRAY*/ struct intStub * const RX10_TEMP18 = (/*VALUE ARRAY*/ struct intStub * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER2 = malloc(sizeof(int32_t)+(RX10_TEMP6*sizeof( intStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP6*sizeof( intStub )),((int32_t * )TEMPCALLOCPOINTER2)[0] = RX10_TEMP6, TEMPCALLOCPOINTER2 = ((int32_t * )TEMPCALLOCPOINTER2)+1, memset(TEMPCALLOCPOINTER2,0,RX10_TEMP6*sizeof(intStub )) ); 
/*VALUE ARRAY*/ place_t * const rPlace = (/*VALUE ARRAY*/ place_t * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER8 = malloc(sizeof(int32_t)+(tempReg*sizeof( place_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempReg*sizeof( place_t )),((int32_t * )TEMPCALLOCPOINTER8)[0] = tempReg, TEMPCALLOCPOINTER8 = ((int32_t * )TEMPCALLOCPOINTER8)+1, memset(TEMPCALLOCPOINTER8,0,tempReg*sizeof(place_t )) ); 
/*Updatable ARRAY*/ int32_t * const tempArray = (/*Updatable ARRAY*/ int32_t * ) ( TEMPCALLOCPOINTER9 = malloc(sizeof(int32_t)+(tempDist*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempDist*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER9)[0] = tempDist, TEMPCALLOCPOINTER9 = ((int32_t * )TEMPCALLOCPOINTER9)+1, memset(TEMPCALLOCPOINTER9,0,tempDist*sizeof(int32_t ) ) ); 
/*VALUE ARRAY*/ struct Point1 * const pointArray = (/*VALUE ARRAY*/ struct Point1 * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER10 = malloc(sizeof(int32_t)+(tempReg*sizeof( Point1 ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempReg*sizeof( Point1 )),((int32_t * )TEMPCALLOCPOINTER10)[0] = tempReg, TEMPCALLOCPOINTER10 = ((int32_t * )TEMPCALLOCPOINTER10)+1, memset(TEMPCALLOCPOINTER10,0,tempReg*sizeof(Point1 )) ); 
/*VALUE ARRAY*/ place_t * const rPlace = (/*VALUE ARRAY*/ place_t * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER14 = malloc(sizeof(int32_t)+(tempReg*sizeof( place_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempReg*sizeof( place_t )),((int32_t * )TEMPCALLOCPOINTER14)[0] = tempReg, TEMPCALLOCPOINTER14 = ((int32_t * )TEMPCALLOCPOINTER14)+1, memset(TEMPCALLOCPOINTER14,0,tempReg*sizeof(place_t )) ); 
/*Updatable ARRAY*/ int32_t * const tempArray = (/*Updatable ARRAY*/ int32_t * ) ( TEMPCALLOCPOINTER15 = malloc(sizeof(int32_t)+(tempDist*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempDist*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER15)[0] = tempDist, TEMPCALLOCPOINTER15 = ((int32_t * )TEMPCALLOCPOINTER15)+1, memset(TEMPCALLOCPOINTER15,0,tempDist*sizeof(int32_t ) ) ); 
/*VALUE ARRAY*/ struct Point1 * const pointArray = (/*VALUE ARRAY*/ struct Point1 * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER16 = malloc(sizeof(int32_t)+(tempReg*sizeof( Point1 ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempReg*sizeof( Point1 )),((int32_t * )TEMPCALLOCPOINTER16)[0] = tempReg, TEMPCALLOCPOINTER16 = ((int32_t * )TEMPCALLOCPOINTER16)+1, memset(TEMPCALLOCPOINTER16,0,tempReg*sizeof(Point1 )) ); 
/*Updatable ARRAY*/ place_t * const placeArray = (/*Updatable ARRAY*/ place_t * ) ( TEMPCALLOCPOINTER18 = malloc(sizeof(int32_t)+(dDist*sizeof( place_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(dDist*sizeof( place_t )),((int32_t * )TEMPCALLOCPOINTER18)[0] = dDist, TEMPCALLOCPOINTER18 = ((int32_t * )TEMPCALLOCPOINTER18)+1, memset(TEMPCALLOCPOINTER18,0,dDist*sizeof(place_t ) ) ); 
/*VALUE ARRAY*/ place_t * const vPlaceArray = (/*VALUE ARRAY*/ place_t * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER19 = malloc(sizeof(int32_t)+(dReg*sizeof( place_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(dReg*sizeof( place_t )),((int32_t * )TEMPCALLOCPOINTER19)[0] = dReg, TEMPCALLOCPOINTER19 = ((int32_t * )TEMPCALLOCPOINTER19)+1, memset(TEMPCALLOCPOINTER19,0,dReg*sizeof(place_t )) ); 
/*VALUE ARRAY*/ place_t * const vPlaceArray = (/*VALUE ARRAY*/ place_t * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER20 = malloc(sizeof(int32_t)+(dReg*sizeof( place_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(dReg*sizeof( place_t )),((int32_t * )TEMPCALLOCPOINTER20)[0] = dReg, TEMPCALLOCPOINTER20 = ((int32_t * )TEMPCALLOCPOINTER20)+1, memset(TEMPCALLOCPOINTER20,0,dReg*sizeof(place_t )) ); 
/*VALUE ARRAY*/ place_t * const vPlaceArray = (/*VALUE ARRAY*/ place_t * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER30 = malloc(sizeof(int32_t)+(dReg*sizeof( place_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(dReg*sizeof( place_t )),((int32_t * )TEMPCALLOCPOINTER30)[0] = dReg, TEMPCALLOCPOINTER30 = ((int32_t * )TEMPCALLOCPOINTER30)+1, memset(TEMPCALLOCPOINTER30,0,dReg*sizeof(place_t )) ); 
/*VALUE ARRAY*/ int32_t * const vTemp = (/*VALUE ARRAY*/ int32_t * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER31 = malloc(sizeof(int32_t)+(tempReg*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(tempReg*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER31)[0] = tempReg, TEMPCALLOCPOINTER31 = ((int32_t * )TEMPCALLOCPOINTER31)+1, memset(TEMPCALLOCPOINTER31,0,tempReg*sizeof(int32_t )) ); 
/*VALUE ARRAY*/ struct Point1 * const ptArray = (/*VALUE ARRAY*/ struct Point1 * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER35 = malloc(sizeof(int32_t)+(regArr*sizeof( Point1 ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(regArr*sizeof( Point1 )),((int32_t * )TEMPCALLOCPOINTER35)[0] = regArr, TEMPCALLOCPOINTER35 = ((int32_t * )TEMPCALLOCPOINTER35)+1, memset(TEMPCALLOCPOINTER35,0,regArr*sizeof(Point1 )) ); 
/*VALUE ARRAY*/ struct Point1 * const ptArray = (/*VALUE ARRAY*/ struct Point1 * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER36 = malloc(sizeof(int32_t)+(regArr*sizeof( Point1 ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(regArr*sizeof( Point1 )),((int32_t * )TEMPCALLOCPOINTER36)[0] = regArr, TEMPCALLOCPOINTER36 = ((int32_t * )TEMPCALLOCPOINTER36)+1, memset(TEMPCALLOCPOINTER36,0,regArr*sizeof(Point1 )) ); 
/*VALUE ARRAY*/ struct Point1 * const ptArray = (/*VALUE ARRAY*/ struct Point1 * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER37 = malloc(sizeof(int32_t)+(regArr*sizeof( Point1 ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(regArr*sizeof( Point1 )),((int32_t * )TEMPCALLOCPOINTER37)[0] = regArr, TEMPCALLOCPOINTER37 = ((int32_t * )TEMPCALLOCPOINTER37)+1, memset(TEMPCALLOCPOINTER37,0,regArr*sizeof(Point1 )) ); 
/*Updatable ARRAY*/ int32_t * const RX10_TEMP16 = (/*Updatable ARRAY*/ int32_t * ) ( TEMPCALLOCPOINTER39 = malloc(sizeof(int32_t)+(RX10_TEMP15*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP15*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER39)[0] = RX10_TEMP15, TEMPCALLOCPOINTER39 = ((int32_t * )TEMPCALLOCPOINTER39)+1, memset(TEMPCALLOCPOINTER39,0,RX10_TEMP15*sizeof(int32_t ) ) ); 
/*Updatable ARRAY*/ int32_t * const tempCounts = (/*Updatable ARRAY*/ int32_t * ) ( TEMPCALLOCPOINTER41 = malloc(sizeof(int32_t)+(countDist*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(countDist*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER41)[0] = countDist, TEMPCALLOCPOINTER41 = ((int32_t * )TEMPCALLOCPOINTER41)+1, memset(TEMPCALLOCPOINTER41,0,countDist*sizeof(int32_t ) ) ); 
/*Updatable ARRAY*/ int32_t * const tempRunSum = (/*Updatable ARRAY*/ int32_t * ) ( TEMPCALLOCPOINTER42 = malloc(sizeof(int32_t)+(runSumDist*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(runSumDist*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER42)[0] = runSumDist, TEMPCALLOCPOINTER42 = ((int32_t * )TEMPCALLOCPOINTER42)+1, memset(TEMPCALLOCPOINTER42,0,runSumDist*sizeof(int32_t ) ) ); 
/*Updatable ARRAY*/ struct doubleStub * const RX10_TEMP6 = (/*Updatable ARRAY*/ struct doubleStub * ) ( TEMPCALLOCPOINTER45 = malloc(sizeof(int32_t)+(RX10_TEMP5*sizeof( doubleStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP5*sizeof( doubleStub )),((int32_t * )TEMPCALLOCPOINTER45)[0] = RX10_TEMP5, TEMPCALLOCPOINTER45 = ((int32_t * )TEMPCALLOCPOINTER45)+1, memset(TEMPCALLOCPOINTER45,0,RX10_TEMP5*sizeof(doubleStub ) ) ); 
/*VALUE ARRAY*/ struct doubleStub * const RX10_TEMP17 = (/*VALUE ARRAY*/ struct doubleStub * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER46 = malloc(sizeof(int32_t)+(RX10_TEMP4*sizeof( doubleStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP4*sizeof( doubleStub )),((int32_t * )TEMPCALLOCPOINTER46)[0] = RX10_TEMP4, TEMPCALLOCPOINTER46 = ((int32_t * )TEMPCALLOCPOINTER46)+1, memset(TEMPCALLOCPOINTER46,0,RX10_TEMP4*sizeof(doubleStub )) ); 
/*Updatable ARRAY*/ struct doubleStub * const RX10_TEMP27 = (/*Updatable ARRAY*/ struct doubleStub * ) ( TEMPCALLOCPOINTER47 = malloc(sizeof(int32_t)+(RX10_TEMP26*sizeof( doubleStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP26*sizeof( doubleStub )),((int32_t * )TEMPCALLOCPOINTER47)[0] = RX10_TEMP26, TEMPCALLOCPOINTER47 = ((int32_t * )TEMPCALLOCPOINTER47)+1, memset(TEMPCALLOCPOINTER47,0,RX10_TEMP26*sizeof(doubleStub ) ) ); 
/*VALUE ARRAY*/ struct doubleStub * const RX10_TEMP38 = (/*VALUE ARRAY*/ struct doubleStub * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER48 = malloc(sizeof(int32_t)+(RX10_TEMP25*sizeof( doubleStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP25*sizeof( doubleStub )),((int32_t * )TEMPCALLOCPOINTER48)[0] = RX10_TEMP25, TEMPCALLOCPOINTER48 = ((int32_t * )TEMPCALLOCPOINTER48)+1, memset(TEMPCALLOCPOINTER48,0,RX10_TEMP25*sizeof(doubleStub )) ); 
/*Updatable ARRAY*/ struct doubleStub * const RX10_TEMP48 = (/*Updatable ARRAY*/ struct doubleStub * ) ( TEMPCALLOCPOINTER49 = malloc(sizeof(int32_t)+(RX10_TEMP47*sizeof( doubleStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP47*sizeof( doubleStub )),((int32_t * )TEMPCALLOCPOINTER49)[0] = RX10_TEMP47, TEMPCALLOCPOINTER49 = ((int32_t * )TEMPCALLOCPOINTER49)+1, memset(TEMPCALLOCPOINTER49,0,RX10_TEMP47*sizeof(doubleStub ) ) ); 
/*VALUE ARRAY*/ struct doubleStub * const RX10_TEMP59 = (/*VALUE ARRAY*/ struct doubleStub * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER50 = malloc(sizeof(int32_t)+(RX10_TEMP46*sizeof( doubleStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP46*sizeof( doubleStub )),((int32_t * )TEMPCALLOCPOINTER50)[0] = RX10_TEMP46, TEMPCALLOCPOINTER50 = ((int32_t * )TEMPCALLOCPOINTER50)+1, memset(TEMPCALLOCPOINTER50,0,RX10_TEMP46*sizeof(doubleStub )) ); 
/*Updatable ARRAY*/ double * const RX10_TEMP15 = (/*Updatable ARRAY*/ double * ) ( TEMPCALLOCPOINTER52 = malloc(sizeof(int32_t)+(RX10_TEMP14*sizeof( double ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP14*sizeof( double )),((int32_t * )TEMPCALLOCPOINTER52)[0] = RX10_TEMP14, TEMPCALLOCPOINTER52 = ((int32_t * )TEMPCALLOCPOINTER52)+1, memset(TEMPCALLOCPOINTER52,0,RX10_TEMP14*sizeof(double ) ) ); 
/*Updatable ARRAY*/ double * const RX10_TEMP36 = (/*Updatable ARRAY*/ double * ) ( TEMPCALLOCPOINTER54 = malloc(sizeof(int32_t)+(RX10_TEMP35*sizeof( double ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP35*sizeof( double )),((int32_t * )TEMPCALLOCPOINTER54)[0] = RX10_TEMP35, TEMPCALLOCPOINTER54 = ((int32_t * )TEMPCALLOCPOINTER54)+1, memset(TEMPCALLOCPOINTER54,0,RX10_TEMP35*sizeof(double ) ) ); 
/*Updatable ARRAY*/ double * const RX10_TEMP57 = (/*Updatable ARRAY*/ double * ) ( TEMPCALLOCPOINTER56 = malloc(sizeof(int32_t)+(RX10_TEMP56*sizeof( double ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP56*sizeof( double )),((int32_t * )TEMPCALLOCPOINTER56)[0] = RX10_TEMP56, TEMPCALLOCPOINTER56 = ((int32_t * )TEMPCALLOCPOINTER56)+1, memset(TEMPCALLOCPOINTER56,0,RX10_TEMP56*sizeof(double ) ) ); 
/*Updatable ARRAY*/ struct intStub * const RX10_TEMP6 = (/*Updatable ARRAY*/ struct intStub * ) ( TEMPCALLOCPOINTER60 = malloc(sizeof(int32_t)+(RX10_TEMP5*sizeof( intStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP5*sizeof( intStub )),((int32_t * )TEMPCALLOCPOINTER60)[0] = RX10_TEMP5, TEMPCALLOCPOINTER60 = ((int32_t * )TEMPCALLOCPOINTER60)+1, memset(TEMPCALLOCPOINTER60,0,RX10_TEMP5*sizeof(intStub ) ) ); 
/*VALUE ARRAY*/ struct intStub * const RX10_TEMP20 = (/*VALUE ARRAY*/ struct intStub * ) /*New VALUE ARRAY*/( TEMPCALLOCPOINTER61 = malloc(sizeof(int32_t)+(RX10_TEMP4*sizeof( intStub ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP4*sizeof( intStub )),((int32_t * )TEMPCALLOCPOINTER61)[0] = RX10_TEMP4, TEMPCALLOCPOINTER61 = ((int32_t * )TEMPCALLOCPOINTER61)+1, memset(TEMPCALLOCPOINTER61,0,RX10_TEMP4*sizeof(intStub )) ); 
/*Updatable ARRAY*/ int32_t * const RX10_TEMP18 = (/*Updatable ARRAY*/ int32_t * ) ( TEMPCALLOCPOINTER63 = malloc(sizeof(int32_t)+(RX10_TEMP17*sizeof( int32_t ))),   (((_task*)_thread_getspecific()) -> total_memory) += sizeof(int32_t)+(RX10_TEMP17*sizeof( int32_t )),((int32_t * )TEMPCALLOCPOINTER63)[0] = RX10_TEMP17, TEMPCALLOCPOINTER63 = ((int32_t * )TEMPCALLOCPOINTER63)+1, memset(TEMPCALLOCPOINTER63,0,RX10_TEMP17*sizeof(int32_t ) ) ); 
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
		buf = (void*) malloc(sizeToMalloc+headerSize);
